23985b3a327c4dc89c4c3e59b5800a36
"use strict";

/* istanbul ignore next */
function cov_1liqedlifh() {
  var path = "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\controllers\\chatController.ts";
  var hash = "69732abb9dfa3ecfc7ec3f5593a3466e11d09c0c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\controllers\\chatController.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 16
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 28
        },
        end: {
          line: 3,
          column: 110
        }
      },
      "2": {
        start: {
          line: 3,
          column: 91
        },
        end: {
          line: 3,
          column: 106
        }
      },
      "3": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "4": {
        start: {
          line: 5,
          column: 36
        },
        end: {
          line: 5,
          column: 97
        }
      },
      "5": {
        start: {
          line: 5,
          column: 42
        },
        end: {
          line: 5,
          column: 70
        }
      },
      "6": {
        start: {
          line: 5,
          column: 85
        },
        end: {
          line: 5,
          column: 95
        }
      },
      "7": {
        start: {
          line: 6,
          column: 35
        },
        end: {
          line: 6,
          column: 100
        }
      },
      "8": {
        start: {
          line: 6,
          column: 41
        },
        end: {
          line: 6,
          column: 73
        }
      },
      "9": {
        start: {
          line: 6,
          column: 88
        },
        end: {
          line: 6,
          column: 98
        }
      },
      "10": {
        start: {
          line: 7,
          column: 32
        },
        end: {
          line: 7,
          column: 116
        }
      },
      "11": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 78
        }
      },
      "12": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 62
        }
      },
      "13": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 298
        }
      },
      "14": {
        start: {
          line: 13,
          column: 24
        },
        end: {
          line: 13,
          column: 60
        }
      },
      "15": {
        start: {
          line: 14,
          column: 20
        },
        end: {
          line: 14,
          column: 50
        }
      },
      "16": {
        start: {
          line: 16,
          column: 25
        },
        end: {
          line: 40,
          column: 2
        }
      },
      "17": {
        start: {
          line: 16,
          column: 39
        },
        end: {
          line: 40,
          column: 2
        }
      },
      "18": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 39,
          column: 5
        }
      },
      "19": {
        start: {
          line: 19,
          column: 26
        },
        end: {
          line: 19,
          column: 91
        }
      },
      "20": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 26,
          column: 9
        }
      },
      "21": {
        start: {
          line: 21,
          column: 12
        },
        end: {
          line: 24,
          column: 15
        }
      },
      "22": {
        start: {
          line: 25,
          column: 12
        },
        end: {
          line: 25,
          column: 19
        }
      },
      "23": {
        start: {
          line: 27,
          column: 30
        },
        end: {
          line: 27,
          column: 91
        }
      },
      "24": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 31,
          column: 11
        }
      },
      "25": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 80
        }
      },
      "26": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 38,
          column: 11
        }
      },
      "27": {
        start: {
          line: 41,
          column: 0
        },
        end: {
          line: 41,
          column: 44
        }
      },
      "28": {
        start: {
          line: 43,
          column: 20
        },
        end: {
          line: 86,
          column: 2
        }
      },
      "29": {
        start: {
          line: 43,
          column: 34
        },
        end: {
          line: 86,
          column: 2
        }
      },
      "30": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 85,
          column: 5
        }
      },
      "31": {
        start: {
          line: 46,
          column: 35
        },
        end: {
          line: 46,
          column: 45
        }
      },
      "32": {
        start: {
          line: 47,
          column: 26
        },
        end: {
          line: 47,
          column: 91
        }
      },
      "33": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 54,
          column: 9
        }
      },
      "34": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 52,
          column: 15
        }
      },
      "35": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 53,
          column: 19
        }
      },
      "36": {
        start: {
          line: 56,
          column: 29
        },
        end: {
          line: 56,
          column: 92
        }
      },
      "37": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 63,
          column: 9
        }
      },
      "38": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 61,
          column: 15
        }
      },
      "39": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 62,
          column: 19
        }
      },
      "40": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 70,
          column: 9
        }
      },
      "41": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 68,
          column: 15
        }
      },
      "42": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 69,
          column: 19
        }
      },
      "43": {
        start: {
          line: 71,
          column: 25
        },
        end: {
          line: 71,
          column: 94
        }
      },
      "44": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 73,
          column: 86
        }
      },
      "45": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 77,
          column: 11
        }
      },
      "46": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 80,
          column: 74
        }
      },
      "47": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 84,
          column: 11
        }
      },
      "48": {
        start: {
          line: 87,
          column: 0
        },
        end: {
          line: 87,
          column: 34
        }
      },
      "49": {
        start: {
          line: 89,
          column: 20
        },
        end: {
          line: 147,
          column: 2
        }
      },
      "50": {
        start: {
          line: 89,
          column: 34
        },
        end: {
          line: 147,
          column: 2
        }
      },
      "51": {
        start: {
          line: 91,
          column: 4
        },
        end: {
          line: 146,
          column: 5
        }
      },
      "52": {
        start: {
          line: 92,
          column: 35
        },
        end: {
          line: 92,
          column: 45
        }
      },
      "53": {
        start: {
          line: 93,
          column: 43
        },
        end: {
          line: 93,
          column: 51
        }
      },
      "54": {
        start: {
          line: 94,
          column: 26
        },
        end: {
          line: 94,
          column: 91
        }
      },
      "55": {
        start: {
          line: 95,
          column: 25
        },
        end: {
          line: 95,
          column: 85
        }
      },
      "56": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 102,
          column: 9
        }
      },
      "57": {
        start: {
          line: 97,
          column: 12
        },
        end: {
          line: 100,
          column: 15
        }
      },
      "58": {
        start: {
          line: 101,
          column: 12
        },
        end: {
          line: 101,
          column: 19
        }
      },
      "59": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 109,
          column: 9
        }
      },
      "60": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 107,
          column: 15
        }
      },
      "61": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 108,
          column: 19
        }
      },
      "62": {
        start: {
          line: 111,
          column: 29
        },
        end: {
          line: 111,
          column: 92
        }
      },
      "63": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 118,
          column: 9
        }
      },
      "64": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 116,
          column: 15
        }
      },
      "65": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 117,
          column: 19
        }
      },
      "66": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 125,
          column: 9
        }
      },
      "67": {
        start: {
          line: 120,
          column: 12
        },
        end: {
          line: 123,
          column: 15
        }
      },
      "68": {
        start: {
          line: 124,
          column: 12
        },
        end: {
          line: 124,
          column: 19
        }
      },
      "69": {
        start: {
          line: 126,
          column: 28
        },
        end: {
          line: 133,
          column: 9
        }
      },
      "70": {
        start: {
          line: 134,
          column: 24
        },
        end: {
          line: 134,
          column: 78
        }
      },
      "71": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 138,
          column: 11
        }
      },
      "72": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 141,
          column: 72
        }
      },
      "73": {
        start: {
          line: 142,
          column: 8
        },
        end: {
          line: 145,
          column: 11
        }
      },
      "74": {
        start: {
          line: 148,
          column: 0
        },
        end: {
          line: 148,
          column: 34
        }
      },
      "75": {
        start: {
          line: 150,
          column: 19
        },
        end: {
          line: 175,
          column: 2
        }
      },
      "76": {
        start: {
          line: 150,
          column: 33
        },
        end: {
          line: 175,
          column: 2
        }
      },
      "77": {
        start: {
          line: 152,
          column: 4
        },
        end: {
          line: 174,
          column: 5
        }
      },
      "78": {
        start: {
          line: 153,
          column: 30
        },
        end: {
          line: 153,
          column: 40
        }
      },
      "79": {
        start: {
          line: 154,
          column: 26
        },
        end: {
          line: 154,
          column: 91
        }
      },
      "80": {
        start: {
          line: 155,
          column: 8
        },
        end: {
          line: 161,
          column: 9
        }
      },
      "81": {
        start: {
          line: 156,
          column: 12
        },
        end: {
          line: 159,
          column: 15
        }
      },
      "82": {
        start: {
          line: 160,
          column: 12
        },
        end: {
          line: 160,
          column: 19
        }
      },
      "83": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 162,
          column: 65
        }
      },
      "84": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 166,
          column: 11
        }
      },
      "85": {
        start: {
          line: 169,
          column: 8
        },
        end: {
          line: 169,
          column: 83
        }
      },
      "86": {
        start: {
          line: 170,
          column: 8
        },
        end: {
          line: 173,
          column: 11
        }
      },
      "87": {
        start: {
          line: 176,
          column: 0
        },
        end: {
          line: 176,
          column: 32
        }
      },
      "88": {
        start: {
          line: 178,
          column: 27
        },
        end: {
          line: 223,
          column: 2
        }
      },
      "89": {
        start: {
          line: 178,
          column: 41
        },
        end: {
          line: 223,
          column: 2
        }
      },
      "90": {
        start: {
          line: 180,
          column: 4
        },
        end: {
          line: 222,
          column: 5
        }
      },
      "91": {
        start: {
          line: 181,
          column: 33
        },
        end: {
          line: 181,
          column: 41
        }
      },
      "92": {
        start: {
          line: 182,
          column: 26
        },
        end: {
          line: 182,
          column: 91
        }
      },
      "93": {
        start: {
          line: 183,
          column: 8
        },
        end: {
          line: 189,
          column: 9
        }
      },
      "94": {
        start: {
          line: 184,
          column: 12
        },
        end: {
          line: 187,
          column: 15
        }
      },
      "95": {
        start: {
          line: 188,
          column: 12
        },
        end: {
          line: 188,
          column: 19
        }
      },
      "96": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 198,
          column: 9
        }
      },
      "97": {
        start: {
          line: 193,
          column: 12
        },
        end: {
          line: 196,
          column: 15
        }
      },
      "98": {
        start: {
          line: 197,
          column: 12
        },
        end: {
          line: 197,
          column: 19
        }
      },
      "99": {
        start: {
          line: 200,
          column: 32
        },
        end: {
          line: 200,
          column: 74
        }
      },
      "100": {
        start: {
          line: 202,
          column: 37
        },
        end: {
          line: 202,
          column: 120
        }
      },
      "101": {
        start: {
          line: 203,
          column: 8
        },
        end: {
          line: 209,
          column: 9
        }
      },
      "102": {
        start: {
          line: 204,
          column: 12
        },
        end: {
          line: 207,
          column: 15
        }
      },
      "103": {
        start: {
          line: 208,
          column: 12
        },
        end: {
          line: 208,
          column: 19
        }
      },
      "104": {
        start: {
          line: 210,
          column: 29
        },
        end: {
          line: 210,
          column: 92
        }
      },
      "105": {
        start: {
          line: 211,
          column: 8
        },
        end: {
          line: 214,
          column: 11
        }
      },
      "106": {
        start: {
          line: 217,
          column: 8
        },
        end: {
          line: 217,
          column: 76
        }
      },
      "107": {
        start: {
          line: 218,
          column: 8
        },
        end: {
          line: 221,
          column: 11
        }
      },
      "108": {
        start: {
          line: 224,
          column: 0
        },
        end: {
          line: 224,
          column: 48
        }
      },
      "109": {
        start: {
          line: 226,
          column: 28
        },
        end: {
          line: 257,
          column: 2
        }
      },
      "110": {
        start: {
          line: 226,
          column: 42
        },
        end: {
          line: 257,
          column: 2
        }
      },
      "111": {
        start: {
          line: 228,
          column: 4
        },
        end: {
          line: 256,
          column: 5
        }
      },
      "112": {
        start: {
          line: 229,
          column: 26
        },
        end: {
          line: 229,
          column: 91
        }
      },
      "113": {
        start: {
          line: 230,
          column: 57
        },
        end: {
          line: 230,
          column: 66
        }
      },
      "114": {
        start: {
          line: 231,
          column: 8
        },
        end: {
          line: 237,
          column: 9
        }
      },
      "115": {
        start: {
          line: 232,
          column: 12
        },
        end: {
          line: 235,
          column: 15
        }
      },
      "116": {
        start: {
          line: 236,
          column: 12
        },
        end: {
          line: 236,
          column: 19
        }
      },
      "117": {
        start: {
          line: 238,
          column: 24
        },
        end: {
          line: 243,
          column: 9
        }
      },
      "118": {
        start: {
          line: 244,
          column: 30
        },
        end: {
          line: 244,
          column: 97
        }
      },
      "119": {
        start: {
          line: 245,
          column: 8
        },
        end: {
          line: 248,
          column: 11
        }
      },
      "120": {
        start: {
          line: 251,
          column: 8
        },
        end: {
          line: 251,
          column: 79
        }
      },
      "121": {
        start: {
          line: 252,
          column: 8
        },
        end: {
          line: 255,
          column: 11
        }
      },
      "122": {
        start: {
          line: 258,
          column: 0
        },
        end: {
          line: 258,
          column: 50
        }
      },
      "123": {
        start: {
          line: 260,
          column: 27
        },
        end: {
          line: 285,
          column: 2
        }
      },
      "124": {
        start: {
          line: 260,
          column: 41
        },
        end: {
          line: 285,
          column: 2
        }
      },
      "125": {
        start: {
          line: 262,
          column: 4
        },
        end: {
          line: 284,
          column: 5
        }
      },
      "126": {
        start: {
          line: 263,
          column: 35
        },
        end: {
          line: 263,
          column: 45
        }
      },
      "127": {
        start: {
          line: 264,
          column: 26
        },
        end: {
          line: 264,
          column: 91
        }
      },
      "128": {
        start: {
          line: 265,
          column: 8
        },
        end: {
          line: 271,
          column: 9
        }
      },
      "129": {
        start: {
          line: 266,
          column: 12
        },
        end: {
          line: 269,
          column: 15
        }
      },
      "130": {
        start: {
          line: 270,
          column: 12
        },
        end: {
          line: 270,
          column: 19
        }
      },
      "131": {
        start: {
          line: 272,
          column: 8
        },
        end: {
          line: 272,
          column: 82
        }
      },
      "132": {
        start: {
          line: 273,
          column: 8
        },
        end: {
          line: 276,
          column: 11
        }
      },
      "133": {
        start: {
          line: 279,
          column: 8
        },
        end: {
          line: 279,
          column: 79
        }
      },
      "134": {
        start: {
          line: 280,
          column: 8
        },
        end: {
          line: 283,
          column: 11
        }
      },
      "135": {
        start: {
          line: 286,
          column: 0
        },
        end: {
          line: 286,
          column: 48
        }
      },
      "136": {
        start: {
          line: 288,
          column: 28
        },
        end: {
          line: 313,
          column: 2
        }
      },
      "137": {
        start: {
          line: 288,
          column: 42
        },
        end: {
          line: 313,
          column: 2
        }
      },
      "138": {
        start: {
          line: 290,
          column: 4
        },
        end: {
          line: 312,
          column: 5
        }
      },
      "139": {
        start: {
          line: 291,
          column: 35
        },
        end: {
          line: 291,
          column: 45
        }
      },
      "140": {
        start: {
          line: 292,
          column: 26
        },
        end: {
          line: 292,
          column: 91
        }
      },
      "141": {
        start: {
          line: 293,
          column: 8
        },
        end: {
          line: 299,
          column: 9
        }
      },
      "142": {
        start: {
          line: 294,
          column: 12
        },
        end: {
          line: 297,
          column: 15
        }
      },
      "143": {
        start: {
          line: 298,
          column: 12
        },
        end: {
          line: 298,
          column: 19
        }
      },
      "144": {
        start: {
          line: 300,
          column: 8
        },
        end: {
          line: 300,
          column: 83
        }
      },
      "145": {
        start: {
          line: 301,
          column: 8
        },
        end: {
          line: 304,
          column: 11
        }
      },
      "146": {
        start: {
          line: 307,
          column: 8
        },
        end: {
          line: 307,
          column: 79
        }
      },
      "147": {
        start: {
          line: 308,
          column: 8
        },
        end: {
          line: 311,
          column: 11
        }
      },
      "148": {
        start: {
          line: 314,
          column: 0
        },
        end: {
          line: 314,
          column: 50
        }
      },
      "149": {
        start: {
          line: 316,
          column: 28
        },
        end: {
          line: 355,
          column: 2
        }
      },
      "150": {
        start: {
          line: 316,
          column: 42
        },
        end: {
          line: 355,
          column: 2
        }
      },
      "151": {
        start: {
          line: 318,
          column: 4
        },
        end: {
          line: 354,
          column: 5
        }
      },
      "152": {
        start: {
          line: 319,
          column: 35
        },
        end: {
          line: 319,
          column: 45
        }
      },
      "153": {
        start: {
          line: 320,
          column: 26
        },
        end: {
          line: 320,
          column: 91
        }
      },
      "154": {
        start: {
          line: 321,
          column: 8
        },
        end: {
          line: 327,
          column: 9
        }
      },
      "155": {
        start: {
          line: 322,
          column: 12
        },
        end: {
          line: 325,
          column: 15
        }
      },
      "156": {
        start: {
          line: 326,
          column: 12
        },
        end: {
          line: 326,
          column: 19
        }
      },
      "157": {
        start: {
          line: 328,
          column: 29
        },
        end: {
          line: 328,
          column: 92
        }
      },
      "158": {
        start: {
          line: 329,
          column: 8
        },
        end: {
          line: 335,
          column: 9
        }
      },
      "159": {
        start: {
          line: 330,
          column: 12
        },
        end: {
          line: 333,
          column: 15
        }
      },
      "160": {
        start: {
          line: 334,
          column: 12
        },
        end: {
          line: 334,
          column: 19
        }
      },
      "161": {
        start: {
          line: 336,
          column: 8
        },
        end: {
          line: 342,
          column: 9
        }
      },
      "162": {
        start: {
          line: 337,
          column: 12
        },
        end: {
          line: 340,
          column: 15
        }
      },
      "163": {
        start: {
          line: 341,
          column: 12
        },
        end: {
          line: 341,
          column: 19
        }
      },
      "164": {
        start: {
          line: 343,
          column: 8
        },
        end: {
          line: 346,
          column: 11
        }
      },
      "165": {
        start: {
          line: 349,
          column: 8
        },
        end: {
          line: 349,
          column: 78
        }
      },
      "166": {
        start: {
          line: 350,
          column: 8
        },
        end: {
          line: 353,
          column: 11
        }
      },
      "167": {
        start: {
          line: 356,
          column: 0
        },
        end: {
          line: 356,
          column: 50
        }
      },
      "168": {
        start: {
          line: 358,
          column: 21
        },
        end: {
          line: 382,
          column: 2
        }
      },
      "169": {
        start: {
          line: 358,
          column: 35
        },
        end: {
          line: 382,
          column: 2
        }
      },
      "170": {
        start: {
          line: 360,
          column: 4
        },
        end: {
          line: 381,
          column: 5
        }
      },
      "171": {
        start: {
          line: 361,
          column: 26
        },
        end: {
          line: 361,
          column: 91
        }
      },
      "172": {
        start: {
          line: 362,
          column: 8
        },
        end: {
          line: 368,
          column: 9
        }
      },
      "173": {
        start: {
          line: 363,
          column: 12
        },
        end: {
          line: 366,
          column: 15
        }
      },
      "174": {
        start: {
          line: 367,
          column: 12
        },
        end: {
          line: 367,
          column: 19
        }
      },
      "175": {
        start: {
          line: 369,
          column: 22
        },
        end: {
          line: 369,
          column: 73
        }
      },
      "176": {
        start: {
          line: 370,
          column: 8
        },
        end: {
          line: 373,
          column: 11
        }
      },
      "177": {
        start: {
          line: 376,
          column: 8
        },
        end: {
          line: 376,
          column: 86
        }
      },
      "178": {
        start: {
          line: 377,
          column: 8
        },
        end: {
          line: 380,
          column: 11
        }
      },
      "179": {
        start: {
          line: 383,
          column: 0
        },
        end: {
          line: 383,
          column: 36
        }
      },
      "180": {
        start: {
          line: 385,
          column: 26
        },
        end: {
          line: 434,
          column: 2
        }
      },
      "181": {
        start: {
          line: 385,
          column: 40
        },
        end: {
          line: 434,
          column: 2
        }
      },
      "182": {
        start: {
          line: 387,
          column: 4
        },
        end: {
          line: 433,
          column: 5
        }
      },
      "183": {
        start: {
          line: 388,
          column: 26
        },
        end: {
          line: 388,
          column: 91
        }
      },
      "184": {
        start: {
          line: 389,
          column: 27
        },
        end: {
          line: 389,
          column: 36
        }
      },
      "185": {
        start: {
          line: 390,
          column: 8
        },
        end: {
          line: 396,
          column: 9
        }
      },
      "186": {
        start: {
          line: 391,
          column: 12
        },
        end: {
          line: 394,
          column: 15
        }
      },
      "187": {
        start: {
          line: 395,
          column: 12
        },
        end: {
          line: 395,
          column: 19
        }
      },
      "188": {
        start: {
          line: 398,
          column: 23
        },
        end: {
          line: 398,
          column: 51
        }
      },
      "189": {
        start: {
          line: 400,
          column: 30
        },
        end: {
          line: 400,
          column: 64
        }
      },
      "190": {
        start: {
          line: 401,
          column: 20
        },
        end: {
          line: 401,
          column: 22
        }
      },
      "191": {
        start: {
          line: 402,
          column: 8
        },
        end: {
          line: 414,
          column: 11
        }
      },
      "192": {
        start: {
          line: 403,
          column: 29
        },
        end: {
          line: 403,
          column: 39
        }
      },
      "193": {
        start: {
          line: 405,
          column: 12
        },
        end: {
          line: 413,
          column: 13
        }
      },
      "194": {
        start: {
          line: 406,
          column: 16
        },
        end: {
          line: 412,
          column: 19
        }
      },
      "195": {
        start: {
          line: 416,
          column: 8
        },
        end: {
          line: 421,
          column: 9
        }
      },
      "196": {
        start: {
          line: 417,
          column: 31
        },
        end: {
          line: 417,
          column: 62
        }
      },
      "197": {
        start: {
          line: 418,
          column: 12
        },
        end: {
          line: 420,
          column: 63
        }
      },
      "198": {
        start: {
          line: 418,
          column: 41
        },
        end: {
          line: 420,
          column: 61
        }
      },
      "199": {
        start: {
          line: 422,
          column: 8
        },
        end: {
          line: 425,
          column: 11
        }
      },
      "200": {
        start: {
          line: 428,
          column: 8
        },
        end: {
          line: 428,
          column: 86
        }
      },
      "201": {
        start: {
          line: 429,
          column: 8
        },
        end: {
          line: 432,
          column: 11
        }
      },
      "202": {
        start: {
          line: 435,
          column: 0
        },
        end: {
          line: 435,
          column: 46
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 2,
            column: 45
          }
        },
        loc: {
          start: {
            line: 2,
            column: 89
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "adopt",
        decl: {
          start: {
            line: 3,
            column: 13
          },
          end: {
            line: 3,
            column: 18
          }
        },
        loc: {
          start: {
            line: 3,
            column: 26
          },
          end: {
            line: 3,
            column: 112
          }
        },
        line: 3
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 3,
            column: 70
          },
          end: {
            line: 3,
            column: 71
          }
        },
        loc: {
          start: {
            line: 3,
            column: 89
          },
          end: {
            line: 3,
            column: 108
          }
        },
        line: 3
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 4,
            column: 36
          },
          end: {
            line: 4,
            column: 37
          }
        },
        loc: {
          start: {
            line: 4,
            column: 63
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 4
      },
      "4": {
        name: "fulfilled",
        decl: {
          start: {
            line: 5,
            column: 17
          },
          end: {
            line: 5,
            column: 26
          }
        },
        loc: {
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 99
          }
        },
        line: 5
      },
      "5": {
        name: "rejected",
        decl: {
          start: {
            line: 6,
            column: 17
          },
          end: {
            line: 6,
            column: 25
          }
        },
        loc: {
          start: {
            line: 6,
            column: 33
          },
          end: {
            line: 6,
            column: 102
          }
        },
        line: 6
      },
      "6": {
        name: "step",
        decl: {
          start: {
            line: 7,
            column: 17
          },
          end: {
            line: 7,
            column: 21
          }
        },
        loc: {
          start: {
            line: 7,
            column: 30
          },
          end: {
            line: 7,
            column: 118
          }
        },
        line: 7
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 16,
            column: 25
          },
          end: {
            line: 16,
            column: 26
          }
        },
        loc: {
          start: {
            line: 16,
            column: 39
          },
          end: {
            line: 40,
            column: 2
          }
        },
        line: 16
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 16,
            column: 73
          },
          end: {
            line: 16,
            column: 74
          }
        },
        loc: {
          start: {
            line: 16,
            column: 86
          },
          end: {
            line: 40,
            column: 1
          }
        },
        line: 16
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 43,
            column: 20
          },
          end: {
            line: 43,
            column: 21
          }
        },
        loc: {
          start: {
            line: 43,
            column: 34
          },
          end: {
            line: 86,
            column: 2
          }
        },
        line: 43
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 43,
            column: 68
          },
          end: {
            line: 43,
            column: 69
          }
        },
        loc: {
          start: {
            line: 43,
            column: 81
          },
          end: {
            line: 86,
            column: 1
          }
        },
        line: 43
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 89,
            column: 20
          },
          end: {
            line: 89,
            column: 21
          }
        },
        loc: {
          start: {
            line: 89,
            column: 34
          },
          end: {
            line: 147,
            column: 2
          }
        },
        line: 89
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 89,
            column: 68
          },
          end: {
            line: 89,
            column: 69
          }
        },
        loc: {
          start: {
            line: 89,
            column: 81
          },
          end: {
            line: 147,
            column: 1
          }
        },
        line: 89
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 150,
            column: 19
          },
          end: {
            line: 150,
            column: 20
          }
        },
        loc: {
          start: {
            line: 150,
            column: 33
          },
          end: {
            line: 175,
            column: 2
          }
        },
        line: 150
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 150,
            column: 67
          },
          end: {
            line: 150,
            column: 68
          }
        },
        loc: {
          start: {
            line: 150,
            column: 80
          },
          end: {
            line: 175,
            column: 1
          }
        },
        line: 150
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 178,
            column: 27
          },
          end: {
            line: 178,
            column: 28
          }
        },
        loc: {
          start: {
            line: 178,
            column: 41
          },
          end: {
            line: 223,
            column: 2
          }
        },
        line: 178
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 178,
            column: 75
          },
          end: {
            line: 178,
            column: 76
          }
        },
        loc: {
          start: {
            line: 178,
            column: 88
          },
          end: {
            line: 223,
            column: 1
          }
        },
        line: 178
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 226,
            column: 28
          },
          end: {
            line: 226,
            column: 29
          }
        },
        loc: {
          start: {
            line: 226,
            column: 42
          },
          end: {
            line: 257,
            column: 2
          }
        },
        line: 226
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 226,
            column: 76
          },
          end: {
            line: 226,
            column: 77
          }
        },
        loc: {
          start: {
            line: 226,
            column: 89
          },
          end: {
            line: 257,
            column: 1
          }
        },
        line: 226
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 260,
            column: 27
          },
          end: {
            line: 260,
            column: 28
          }
        },
        loc: {
          start: {
            line: 260,
            column: 41
          },
          end: {
            line: 285,
            column: 2
          }
        },
        line: 260
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 260,
            column: 75
          },
          end: {
            line: 260,
            column: 76
          }
        },
        loc: {
          start: {
            line: 260,
            column: 88
          },
          end: {
            line: 285,
            column: 1
          }
        },
        line: 260
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 288,
            column: 28
          },
          end: {
            line: 288,
            column: 29
          }
        },
        loc: {
          start: {
            line: 288,
            column: 42
          },
          end: {
            line: 313,
            column: 2
          }
        },
        line: 288
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 288,
            column: 76
          },
          end: {
            line: 288,
            column: 77
          }
        },
        loc: {
          start: {
            line: 288,
            column: 89
          },
          end: {
            line: 313,
            column: 1
          }
        },
        line: 288
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 316,
            column: 28
          },
          end: {
            line: 316,
            column: 29
          }
        },
        loc: {
          start: {
            line: 316,
            column: 42
          },
          end: {
            line: 355,
            column: 2
          }
        },
        line: 316
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 316,
            column: 76
          },
          end: {
            line: 316,
            column: 77
          }
        },
        loc: {
          start: {
            line: 316,
            column: 89
          },
          end: {
            line: 355,
            column: 1
          }
        },
        line: 316
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 358,
            column: 21
          },
          end: {
            line: 358,
            column: 22
          }
        },
        loc: {
          start: {
            line: 358,
            column: 35
          },
          end: {
            line: 382,
            column: 2
          }
        },
        line: 358
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 358,
            column: 69
          },
          end: {
            line: 358,
            column: 70
          }
        },
        loc: {
          start: {
            line: 358,
            column: 82
          },
          end: {
            line: 382,
            column: 1
          }
        },
        line: 358
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 385,
            column: 26
          },
          end: {
            line: 385,
            column: 27
          }
        },
        loc: {
          start: {
            line: 385,
            column: 40
          },
          end: {
            line: 434,
            column: 2
          }
        },
        line: 385
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 385,
            column: 74
          },
          end: {
            line: 385,
            column: 75
          }
        },
        loc: {
          start: {
            line: 385,
            column: 87
          },
          end: {
            line: 434,
            column: 1
          }
        },
        line: 385
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 402,
            column: 30
          },
          end: {
            line: 402,
            column: 31
          }
        },
        loc: {
          start: {
            line: 402,
            column: 39
          },
          end: {
            line: 414,
            column: 9
          }
        },
        line: 402
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 418,
            column: 33
          },
          end: {
            line: 418,
            column: 34
          }
        },
        loc: {
          start: {
            line: 418,
            column: 41
          },
          end: {
            line: 420,
            column: 61
          }
        },
        line: 418
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 16
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 17
          },
          end: {
            line: 2,
            column: 21
          }
        }, {
          start: {
            line: 2,
            column: 25
          },
          end: {
            line: 2,
            column: 39
          }
        }, {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 35
          },
          end: {
            line: 3,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 56
          },
          end: {
            line: 3,
            column: 61
          }
        }, {
          start: {
            line: 3,
            column: 64
          },
          end: {
            line: 3,
            column: 109
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 17
          }
        }, {
          start: {
            line: 4,
            column: 22
          },
          end: {
            line: 4,
            column: 33
          }
        }],
        line: 4
      },
      "3": {
        loc: {
          start: {
            line: 7,
            column: 32
          },
          end: {
            line: 7,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 7,
            column: 46
          },
          end: {
            line: 7,
            column: 67
          }
        }, {
          start: {
            line: 7,
            column: 70
          },
          end: {
            line: 7,
            column: 115
          }
        }],
        line: 7
      },
      "4": {
        loc: {
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 61
          }
        }, {
          start: {
            line: 8,
            column: 65
          },
          end: {
            line: 8,
            column: 67
          }
        }],
        line: 8
      },
      "5": {
        loc: {
          start: {
            line: 19,
            column: 26
          },
          end: {
            line: 19,
            column: 91
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 19,
            column: 70
          },
          end: {
            line: 19,
            column: 76
          }
        }, {
          start: {
            line: 19,
            column: 79
          },
          end: {
            line: 19,
            column: 91
          }
        }],
        line: 19
      },
      "6": {
        loc: {
          start: {
            line: 19,
            column: 26
          },
          end: {
            line: 19,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 19,
            column: 26
          },
          end: {
            line: 19,
            column: 50
          }
        }, {
          start: {
            line: 19,
            column: 54
          },
          end: {
            line: 19,
            column: 67
          }
        }],
        line: 19
      },
      "7": {
        loc: {
          start: {
            line: 20,
            column: 8
          },
          end: {
            line: 26,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 20,
            column: 8
          },
          end: {
            line: 26,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 20
      },
      "8": {
        loc: {
          start: {
            line: 37,
            column: 19
          },
          end: {
            line: 37,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 37,
            column: 19
          },
          end: {
            line: 37,
            column: 32
          }
        }, {
          start: {
            line: 37,
            column: 36
          },
          end: {
            line: 37,
            column: 64
          }
        }],
        line: 37
      },
      "9": {
        loc: {
          start: {
            line: 47,
            column: 26
          },
          end: {
            line: 47,
            column: 91
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 47,
            column: 70
          },
          end: {
            line: 47,
            column: 76
          }
        }, {
          start: {
            line: 47,
            column: 79
          },
          end: {
            line: 47,
            column: 91
          }
        }],
        line: 47
      },
      "10": {
        loc: {
          start: {
            line: 47,
            column: 26
          },
          end: {
            line: 47,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 26
          },
          end: {
            line: 47,
            column: 50
          }
        }, {
          start: {
            line: 47,
            column: 54
          },
          end: {
            line: 47,
            column: 67
          }
        }],
        line: 47
      },
      "11": {
        loc: {
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 54,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 54,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "12": {
        loc: {
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 63,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 63,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 57
      },
      "13": {
        loc: {
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 70,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 70,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 64
      },
      "14": {
        loc: {
          start: {
            line: 83,
            column: 19
          },
          end: {
            line: 83,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 83,
            column: 19
          },
          end: {
            line: 83,
            column: 32
          }
        }, {
          start: {
            line: 83,
            column: 36
          },
          end: {
            line: 83,
            column: 64
          }
        }],
        line: 83
      },
      "15": {
        loc: {
          start: {
            line: 93,
            column: 25
          },
          end: {
            line: 93,
            column: 38
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 93,
            column: 32
          },
          end: {
            line: 93,
            column: 38
          }
        }],
        line: 93
      },
      "16": {
        loc: {
          start: {
            line: 94,
            column: 26
          },
          end: {
            line: 94,
            column: 91
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 94,
            column: 70
          },
          end: {
            line: 94,
            column: 76
          }
        }, {
          start: {
            line: 94,
            column: 79
          },
          end: {
            line: 94,
            column: 91
          }
        }],
        line: 94
      },
      "17": {
        loc: {
          start: {
            line: 94,
            column: 26
          },
          end: {
            line: 94,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 94,
            column: 26
          },
          end: {
            line: 94,
            column: 50
          }
        }, {
          start: {
            line: 94,
            column: 54
          },
          end: {
            line: 94,
            column: 67
          }
        }],
        line: 94
      },
      "18": {
        loc: {
          start: {
            line: 95,
            column: 25
          },
          end: {
            line: 95,
            column: 85
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 95,
            column: 69
          },
          end: {
            line: 95,
            column: 75
          }
        }, {
          start: {
            line: 95,
            column: 78
          },
          end: {
            line: 95,
            column: 85
          }
        }],
        line: 95
      },
      "19": {
        loc: {
          start: {
            line: 95,
            column: 25
          },
          end: {
            line: 95,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 95,
            column: 25
          },
          end: {
            line: 95,
            column: 49
          }
        }, {
          start: {
            line: 95,
            column: 53
          },
          end: {
            line: 95,
            column: 66
          }
        }],
        line: 95
      },
      "20": {
        loc: {
          start: {
            line: 96,
            column: 8
          },
          end: {
            line: 102,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 96,
            column: 8
          },
          end: {
            line: 102,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 96
      },
      "21": {
        loc: {
          start: {
            line: 103,
            column: 8
          },
          end: {
            line: 109,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 103,
            column: 8
          },
          end: {
            line: 109,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 103
      },
      "22": {
        loc: {
          start: {
            line: 103,
            column: 12
          },
          end: {
            line: 103,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 103,
            column: 12
          },
          end: {
            line: 103,
            column: 20
          }
        }, {
          start: {
            line: 103,
            column: 24
          },
          end: {
            line: 103,
            column: 51
          }
        }],
        line: 103
      },
      "23": {
        loc: {
          start: {
            line: 112,
            column: 8
          },
          end: {
            line: 118,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 112,
            column: 8
          },
          end: {
            line: 118,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 112
      },
      "24": {
        loc: {
          start: {
            line: 119,
            column: 8
          },
          end: {
            line: 125,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 119,
            column: 8
          },
          end: {
            line: 125,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 119
      },
      "25": {
        loc: {
          start: {
            line: 129,
            column: 24
          },
          end: {
            line: 129,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 129,
            column: 24
          },
          end: {
            line: 129,
            column: 32
          }
        }, {
          start: {
            line: 129,
            column: 36
          },
          end: {
            line: 129,
            column: 45
          }
        }],
        line: 129
      },
      "26": {
        loc: {
          start: {
            line: 144,
            column: 19
          },
          end: {
            line: 144,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 144,
            column: 19
          },
          end: {
            line: 144,
            column: 32
          }
        }, {
          start: {
            line: 144,
            column: 36
          },
          end: {
            line: 144,
            column: 64
          }
        }],
        line: 144
      },
      "27": {
        loc: {
          start: {
            line: 154,
            column: 26
          },
          end: {
            line: 154,
            column: 91
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 154,
            column: 70
          },
          end: {
            line: 154,
            column: 76
          }
        }, {
          start: {
            line: 154,
            column: 79
          },
          end: {
            line: 154,
            column: 91
          }
        }],
        line: 154
      },
      "28": {
        loc: {
          start: {
            line: 154,
            column: 26
          },
          end: {
            line: 154,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 154,
            column: 26
          },
          end: {
            line: 154,
            column: 50
          }
        }, {
          start: {
            line: 154,
            column: 54
          },
          end: {
            line: 154,
            column: 67
          }
        }],
        line: 154
      },
      "29": {
        loc: {
          start: {
            line: 155,
            column: 8
          },
          end: {
            line: 161,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 155,
            column: 8
          },
          end: {
            line: 161,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 155
      },
      "30": {
        loc: {
          start: {
            line: 172,
            column: 19
          },
          end: {
            line: 172,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 172,
            column: 19
          },
          end: {
            line: 172,
            column: 32
          }
        }, {
          start: {
            line: 172,
            column: 36
          },
          end: {
            line: 172,
            column: 64
          }
        }],
        line: 172
      },
      "31": {
        loc: {
          start: {
            line: 182,
            column: 26
          },
          end: {
            line: 182,
            column: 91
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 182,
            column: 70
          },
          end: {
            line: 182,
            column: 76
          }
        }, {
          start: {
            line: 182,
            column: 79
          },
          end: {
            line: 182,
            column: 91
          }
        }],
        line: 182
      },
      "32": {
        loc: {
          start: {
            line: 182,
            column: 26
          },
          end: {
            line: 182,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 182,
            column: 26
          },
          end: {
            line: 182,
            column: 50
          }
        }, {
          start: {
            line: 182,
            column: 54
          },
          end: {
            line: 182,
            column: 67
          }
        }],
        line: 182
      },
      "33": {
        loc: {
          start: {
            line: 183,
            column: 8
          },
          end: {
            line: 189,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 183,
            column: 8
          },
          end: {
            line: 189,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 183
      },
      "34": {
        loc: {
          start: {
            line: 190,
            column: 8
          },
          end: {
            line: 198,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 190,
            column: 8
          },
          end: {
            line: 198,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 190
      },
      "35": {
        loc: {
          start: {
            line: 190,
            column: 12
          },
          end: {
            line: 192,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 190,
            column: 12
          },
          end: {
            line: 190,
            column: 25
          }
        }, {
          start: {
            line: 191,
            column: 12
          },
          end: {
            line: 191,
            column: 40
          }
        }, {
          start: {
            line: 192,
            column: 12
          },
          end: {
            line: 192,
            column: 37
          }
        }],
        line: 190
      },
      "36": {
        loc: {
          start: {
            line: 203,
            column: 8
          },
          end: {
            line: 209,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 203,
            column: 8
          },
          end: {
            line: 209,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 203
      },
      "37": {
        loc: {
          start: {
            line: 220,
            column: 19
          },
          end: {
            line: 220,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 220,
            column: 19
          },
          end: {
            line: 220,
            column: 32
          }
        }, {
          start: {
            line: 220,
            column: 36
          },
          end: {
            line: 220,
            column: 64
          }
        }],
        line: 220
      },
      "38": {
        loc: {
          start: {
            line: 229,
            column: 26
          },
          end: {
            line: 229,
            column: 91
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 229,
            column: 70
          },
          end: {
            line: 229,
            column: 76
          }
        }, {
          start: {
            line: 229,
            column: 79
          },
          end: {
            line: 229,
            column: 91
          }
        }],
        line: 229
      },
      "39": {
        loc: {
          start: {
            line: 229,
            column: 26
          },
          end: {
            line: 229,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 229,
            column: 26
          },
          end: {
            line: 229,
            column: 50
          }
        }, {
          start: {
            line: 229,
            column: 54
          },
          end: {
            line: 229,
            column: 67
          }
        }],
        line: 229
      },
      "40": {
        loc: {
          start: {
            line: 231,
            column: 8
          },
          end: {
            line: 237,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 231,
            column: 8
          },
          end: {
            line: 237,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 231
      },
      "41": {
        loc: {
          start: {
            line: 254,
            column: 19
          },
          end: {
            line: 254,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 254,
            column: 19
          },
          end: {
            line: 254,
            column: 32
          }
        }, {
          start: {
            line: 254,
            column: 36
          },
          end: {
            line: 254,
            column: 64
          }
        }],
        line: 254
      },
      "42": {
        loc: {
          start: {
            line: 264,
            column: 26
          },
          end: {
            line: 264,
            column: 91
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 264,
            column: 70
          },
          end: {
            line: 264,
            column: 76
          }
        }, {
          start: {
            line: 264,
            column: 79
          },
          end: {
            line: 264,
            column: 91
          }
        }],
        line: 264
      },
      "43": {
        loc: {
          start: {
            line: 264,
            column: 26
          },
          end: {
            line: 264,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 264,
            column: 26
          },
          end: {
            line: 264,
            column: 50
          }
        }, {
          start: {
            line: 264,
            column: 54
          },
          end: {
            line: 264,
            column: 67
          }
        }],
        line: 264
      },
      "44": {
        loc: {
          start: {
            line: 265,
            column: 8
          },
          end: {
            line: 271,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 265,
            column: 8
          },
          end: {
            line: 271,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 265
      },
      "45": {
        loc: {
          start: {
            line: 282,
            column: 19
          },
          end: {
            line: 282,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 282,
            column: 19
          },
          end: {
            line: 282,
            column: 32
          }
        }, {
          start: {
            line: 282,
            column: 36
          },
          end: {
            line: 282,
            column: 64
          }
        }],
        line: 282
      },
      "46": {
        loc: {
          start: {
            line: 292,
            column: 26
          },
          end: {
            line: 292,
            column: 91
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 292,
            column: 70
          },
          end: {
            line: 292,
            column: 76
          }
        }, {
          start: {
            line: 292,
            column: 79
          },
          end: {
            line: 292,
            column: 91
          }
        }],
        line: 292
      },
      "47": {
        loc: {
          start: {
            line: 292,
            column: 26
          },
          end: {
            line: 292,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 292,
            column: 26
          },
          end: {
            line: 292,
            column: 50
          }
        }, {
          start: {
            line: 292,
            column: 54
          },
          end: {
            line: 292,
            column: 67
          }
        }],
        line: 292
      },
      "48": {
        loc: {
          start: {
            line: 293,
            column: 8
          },
          end: {
            line: 299,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 293,
            column: 8
          },
          end: {
            line: 299,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 293
      },
      "49": {
        loc: {
          start: {
            line: 310,
            column: 19
          },
          end: {
            line: 310,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 310,
            column: 19
          },
          end: {
            line: 310,
            column: 32
          }
        }, {
          start: {
            line: 310,
            column: 36
          },
          end: {
            line: 310,
            column: 64
          }
        }],
        line: 310
      },
      "50": {
        loc: {
          start: {
            line: 320,
            column: 26
          },
          end: {
            line: 320,
            column: 91
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 320,
            column: 70
          },
          end: {
            line: 320,
            column: 76
          }
        }, {
          start: {
            line: 320,
            column: 79
          },
          end: {
            line: 320,
            column: 91
          }
        }],
        line: 320
      },
      "51": {
        loc: {
          start: {
            line: 320,
            column: 26
          },
          end: {
            line: 320,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 320,
            column: 26
          },
          end: {
            line: 320,
            column: 50
          }
        }, {
          start: {
            line: 320,
            column: 54
          },
          end: {
            line: 320,
            column: 67
          }
        }],
        line: 320
      },
      "52": {
        loc: {
          start: {
            line: 321,
            column: 8
          },
          end: {
            line: 327,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 321,
            column: 8
          },
          end: {
            line: 327,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 321
      },
      "53": {
        loc: {
          start: {
            line: 329,
            column: 8
          },
          end: {
            line: 335,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 329,
            column: 8
          },
          end: {
            line: 335,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 329
      },
      "54": {
        loc: {
          start: {
            line: 336,
            column: 8
          },
          end: {
            line: 342,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 336,
            column: 8
          },
          end: {
            line: 342,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 336
      },
      "55": {
        loc: {
          start: {
            line: 352,
            column: 19
          },
          end: {
            line: 352,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 352,
            column: 19
          },
          end: {
            line: 352,
            column: 32
          }
        }, {
          start: {
            line: 352,
            column: 36
          },
          end: {
            line: 352,
            column: 64
          }
        }],
        line: 352
      },
      "56": {
        loc: {
          start: {
            line: 361,
            column: 26
          },
          end: {
            line: 361,
            column: 91
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 361,
            column: 70
          },
          end: {
            line: 361,
            column: 76
          }
        }, {
          start: {
            line: 361,
            column: 79
          },
          end: {
            line: 361,
            column: 91
          }
        }],
        line: 361
      },
      "57": {
        loc: {
          start: {
            line: 361,
            column: 26
          },
          end: {
            line: 361,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 361,
            column: 26
          },
          end: {
            line: 361,
            column: 50
          }
        }, {
          start: {
            line: 361,
            column: 54
          },
          end: {
            line: 361,
            column: 67
          }
        }],
        line: 361
      },
      "58": {
        loc: {
          start: {
            line: 362,
            column: 8
          },
          end: {
            line: 368,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 362,
            column: 8
          },
          end: {
            line: 368,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 362
      },
      "59": {
        loc: {
          start: {
            line: 379,
            column: 19
          },
          end: {
            line: 379,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 379,
            column: 19
          },
          end: {
            line: 379,
            column: 32
          }
        }, {
          start: {
            line: 379,
            column: 36
          },
          end: {
            line: 379,
            column: 64
          }
        }],
        line: 379
      },
      "60": {
        loc: {
          start: {
            line: 388,
            column: 26
          },
          end: {
            line: 388,
            column: 91
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 388,
            column: 70
          },
          end: {
            line: 388,
            column: 76
          }
        }, {
          start: {
            line: 388,
            column: 79
          },
          end: {
            line: 388,
            column: 91
          }
        }],
        line: 388
      },
      "61": {
        loc: {
          start: {
            line: 388,
            column: 26
          },
          end: {
            line: 388,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 388,
            column: 26
          },
          end: {
            line: 388,
            column: 50
          }
        }, {
          start: {
            line: 388,
            column: 54
          },
          end: {
            line: 388,
            column: 67
          }
        }],
        line: 388
      },
      "62": {
        loc: {
          start: {
            line: 390,
            column: 8
          },
          end: {
            line: 396,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 390,
            column: 8
          },
          end: {
            line: 396,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 390
      },
      "63": {
        loc: {
          start: {
            line: 405,
            column: 12
          },
          end: {
            line: 413,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 405,
            column: 12
          },
          end: {
            line: 413,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 405
      },
      "64": {
        loc: {
          start: {
            line: 408,
            column: 26
          },
          end: {
            line: 408,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 408,
            column: 26
          },
          end: {
            line: 408,
            column: 39
          }
        }, {
          start: {
            line: 408,
            column: 43
          },
          end: {
            line: 408,
            column: 52
          }
        }],
        line: 408
      },
      "65": {
        loc: {
          start: {
            line: 409,
            column: 30
          },
          end: {
            line: 409,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 409,
            column: 30
          },
          end: {
            line: 409,
            column: 47
          }
        }, {
          start: {
            line: 409,
            column: 51
          },
          end: {
            line: 409,
            column: 53
          }
        }],
        line: 409
      },
      "66": {
        loc: {
          start: {
            line: 410,
            column: 28
          },
          end: {
            line: 410,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 410,
            column: 28
          },
          end: {
            line: 410,
            column: 43
          }
        }, {
          start: {
            line: 410,
            column: 47
          },
          end: {
            line: 410,
            column: 52
          }
        }],
        line: 410
      },
      "67": {
        loc: {
          start: {
            line: 411,
            column: 30
          },
          end: {
            line: 411,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 411,
            column: 30
          },
          end: {
            line: 411,
            column: 47
          }
        }, {
          start: {
            line: 411,
            column: 51
          },
          end: {
            line: 411,
            column: 55
          }
        }],
        line: 411
      },
      "68": {
        loc: {
          start: {
            line: 416,
            column: 8
          },
          end: {
            line: 421,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 416,
            column: 8
          },
          end: {
            line: 421,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 416
      },
      "69": {
        loc: {
          start: {
            line: 418,
            column: 41
          },
          end: {
            line: 420,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 418,
            column: 41
          },
          end: {
            line: 418,
            column: 85
          }
        }, {
          start: {
            line: 419,
            column: 16
          },
          end: {
            line: 419,
            column: 64
          }
        }, {
          start: {
            line: 420,
            column: 16
          },
          end: {
            line: 420,
            column: 61
          }
        }],
        line: 418
      },
      "70": {
        loc: {
          start: {
            line: 431,
            column: 19
          },
          end: {
            line: 431,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 431,
            column: 19
          },
          end: {
            line: 431,
            column: 32
          }
        }, {
          start: {
            line: 431,
            column: 36
          },
          end: {
            line: 431,
            column: 64
          }
        }],
        line: 431
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0],
      "69": [0, 0, 0],
      "70": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\controllers\\chatController.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\controllers\\chatController.ts"],
      sourcesContent: ["import { Request, Response } from 'express';\r\nimport { logger } from '../services/loggerService';\r\nimport {\r\n  createConversationModel,\r\n  getConversationsByUserModel,\r\n  getConversationByIdModel,\r\n  getMessagesByConversationModel,\r\n  createMessageModel,\r\n  markMessageAsReadModel,\r\n  markConversationAsReadModel,\r\n  searchConversationsModel,\r\n  deleteConversationModel,\r\n  archiveConversationModel,\r\n  getConversationBetweenUsersModel,\r\n  getChatStatsModel,\r\n} from '../models/chatModel';\r\nimport { ChatFilters } from '../utils/DataTypes';\r\n\r\n// Usar la interfaz global extendida de Express\r\n\r\n// Tipo para las funciones del controlador\r\ntype ChatControllerFunction = (req: any, res: Response) => Promise<void>;\r\n\r\n// Obtener todas las conversaciones del usuario\r\nexport const getConversations = async (req: any, res: Response) => {\r\n  try {\r\n    const userEmail = req.user?.userEmail;\r\n    if (!userEmail) {\r\n      res.status(401).json({\r\n        success: false,\r\n        error: 'Usuario no autenticado',\r\n      });\r\n      return;\r\n    }\r\n\r\n    const conversations = await getConversationsByUserModel(userEmail);\r\n\r\n    res.json({\r\n      success: true,\r\n      data: conversations,\r\n    });\r\n  } catch (error: any) {\r\n    logger.error('Error al obtener conversaciones:', error as Error);\r\n    res.status(500).json({\r\n      success: false,\r\n      error: error.message || 'Error interno del servidor',\r\n    });\r\n  }\r\n};\r\n\r\n// Obtener mensajes de una conversaci\xF3n espec\xEDfica\r\nexport const getMessages = async (req: any, res: Response) => {\r\n  try {\r\n    const { conversationId } = req.params;\r\n    const userEmail = req.user?.userEmail;\r\n\r\n    if (!userEmail) {\r\n      res.status(401).json({\r\n        success: false,\r\n        error: 'Usuario no autenticado',\r\n      });\r\n      return;\r\n    }\r\n\r\n    // Verificar que el usuario es participante de la conversaci\xF3n\r\n    const conversation = await getConversationByIdModel(conversationId);\r\n    if (!conversation) {\r\n      res.status(404).json({\r\n        success: false,\r\n        error: 'Conversaci\xF3n no encontrada',\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (!conversation.participants.includes(userEmail)) {\r\n      res.status(403).json({\r\n        success: false,\r\n        error: 'No tienes permisos para acceder a esta conversaci\xF3n',\r\n      });\r\n      return;\r\n    }\r\n\r\n    const messages = await getMessagesByConversationModel(conversationId);\r\n\r\n    // Marcar conversaci\xF3n como le\xEDda\r\n    await markConversationAsReadModel(conversationId, userEmail);\r\n\r\n    res.json({\r\n      success: true,\r\n      data: messages,\r\n    });\r\n  } catch (error: any) {\r\n    logger.error('Error al obtener mensajes:', error as Error);\r\n    res.status(500).json({\r\n      success: false,\r\n      error: error.message || 'Error interno del servidor',\r\n    });\r\n  }\r\n};\r\n\r\n// Enviar un mensaje\r\nexport const sendMessage = async (req: any, res: Response) => {\r\n  try {\r\n    const { conversationId } = req.params;\r\n    const { content, type = 'text' } = req.body;\r\n    const userEmail = req.user?.userEmail;\r\n    const userName = req.user?.name;\r\n\r\n    if (!userEmail) {\r\n      res.status(401).json({\r\n        success: false,\r\n        error: 'Usuario no autenticado',\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (!content || content.trim().length === 0) {\r\n      res.status(400).json({\r\n        success: false,\r\n        error: 'El contenido del mensaje es requerido',\r\n      });\r\n      return;\r\n    }\r\n\r\n    // Verificar que el usuario es participante de la conversaci\xF3n\r\n    const conversation = await getConversationByIdModel(conversationId);\r\n    if (!conversation) {\r\n      res.status(404).json({\r\n        success: false,\r\n        error: 'Conversaci\xF3n no encontrada',\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (!conversation.participants.includes(userEmail)) {\r\n      res.status(403).json({\r\n        success: false,\r\n        error: 'No tienes permisos para enviar mensajes a esta conversaci\xF3n',\r\n      });\r\n      return;\r\n    }\r\n\r\n    const messageData = {\r\n      conversationId,\r\n      senderId: userEmail,\r\n      senderName: userName || userEmail,\r\n      content: content.trim(),\r\n      status: 'sent' as const,\r\n      type: type as 'text' | 'image' | 'audio' | 'file',\r\n    };\r\n\r\n    const message = await createMessageModel(messageData);\r\n\r\n    res.json({\r\n      success: true,\r\n      data: message,\r\n    });\r\n  } catch (error: any) {\r\n    logger.error('Error al enviar mensaje:', error as Error);\r\n    res.status(500).json({\r\n      success: false,\r\n      error: error.message || 'Error interno del servidor',\r\n    });\r\n  }\r\n};\r\n\r\n// Marcar mensaje como le\xEDdo\r\nexport const markAsRead = async (req: any, res: Response) => {\r\n  try {\r\n    const { messageId } = req.params;\r\n    const userEmail = req.user?.userEmail;\r\n\r\n    if (!userEmail) {\r\n      res.status(401).json({\r\n        success: false,\r\n        error: 'Usuario no autenticado',\r\n      });\r\n      return;\r\n    }\r\n\r\n    await markMessageAsReadModel(messageId);\r\n\r\n    res.json({\r\n      success: true,\r\n      data: null,\r\n    });\r\n  } catch (error: any) {\r\n    logger.error('Error al marcar mensaje como le\xEDdo:', error as Error);\r\n    res.status(500).json({\r\n      success: false,\r\n      error: error.message || 'Error interno del servidor',\r\n    });\r\n  }\r\n};\r\n\r\n// Crear una nueva conversaci\xF3n\r\nexport const createConversation = async (req: any, res: Response) => {\r\n  try {\r\n    const { participants } = req.body;\r\n    const userEmail = req.user?.userEmail;\r\n\r\n    if (!userEmail) {\r\n      res.status(401).json({\r\n        success: false,\r\n        error: 'Usuario no autenticado',\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (\r\n      !participants ||\r\n      !Array.isArray(participants) ||\r\n      participants.length === 0\r\n    ) {\r\n      res.status(400).json({\r\n        success: false,\r\n        error: 'Se requiere al menos un participante',\r\n      });\r\n      return;\r\n    }\r\n\r\n    // Asegurar que el usuario actual est\xE9 en los participantes\r\n    const allParticipants = [...new Set([userEmail, ...participants])];\r\n\r\n    // Verificar si ya existe una conversaci\xF3n entre estos usuarios\r\n    const existingConversation = await getConversationBetweenUsersModel(\r\n      userEmail,\r\n      participants[0]\r\n    );\r\n    if (existingConversation) {\r\n      res.json({\r\n        success: true,\r\n        data: existingConversation,\r\n      });\r\n      return;\r\n    }\r\n\r\n    const conversation = await createConversationModel(allParticipants);\r\n\r\n    res.json({\r\n      success: true,\r\n      data: conversation,\r\n    });\r\n  } catch (error: any) {\r\n    logger.error('Error al crear conversaci\xF3n:', error as Error);\r\n    res.status(500).json({\r\n      success: false,\r\n      error: error.message || 'Error interno del servidor',\r\n    });\r\n  }\r\n};\r\n\r\n// Buscar conversaciones con filtros\r\nexport const searchConversations = async (req: any, res: Response) => {\r\n  try {\r\n    const userEmail = req.user?.userEmail;\r\n    const { search, unreadOnly, dateFrom, dateTo } = req.query;\r\n\r\n    if (!userEmail) {\r\n      res.status(401).json({\r\n        success: false,\r\n        error: 'Usuario no autenticado',\r\n      });\r\n      return;\r\n    }\r\n\r\n    const filters: ChatFilters = {\r\n      search: search as string,\r\n      unreadOnly: unreadOnly === 'true',\r\n      dateFrom: dateFrom as string,\r\n      dateTo: dateTo as string,\r\n    };\r\n\r\n    const conversations = await searchConversationsModel(userEmail, filters);\r\n\r\n    res.json({\r\n      success: true,\r\n      data: conversations,\r\n    });\r\n  } catch (error: any) {\r\n    logger.error('Error al buscar conversaciones:', error as Error);\r\n    res.status(500).json({\r\n      success: false,\r\n      error: error.message || 'Error interno del servidor',\r\n    });\r\n  }\r\n};\r\n\r\n// Eliminar conversaci\xF3n\r\nexport const deleteConversation = async (req: any, res: Response) => {\r\n  try {\r\n    const { conversationId } = req.params;\r\n    const userEmail = req.user?.userEmail;\r\n\r\n    if (!userEmail) {\r\n      res.status(401).json({\r\n        success: false,\r\n        error: 'Usuario no autenticado',\r\n      });\r\n      return;\r\n    }\r\n\r\n    await deleteConversationModel(conversationId, userEmail);\r\n\r\n    res.json({\r\n      success: true,\r\n      data: null,\r\n    });\r\n  } catch (error: any) {\r\n    logger.error('Error al eliminar conversaci\xF3n:', error as Error);\r\n    res.status(500).json({\r\n      success: false,\r\n      error: error.message || 'Error interno del servidor',\r\n    });\r\n  }\r\n};\r\n\r\n// Archivar conversaci\xF3n\r\nexport const archiveConversation = async (req: any, res: Response) => {\r\n  try {\r\n    const { conversationId } = req.params;\r\n    const userEmail = req.user?.userEmail;\r\n\r\n    if (!userEmail) {\r\n      res.status(401).json({\r\n        success: false,\r\n        error: 'Usuario no autenticado',\r\n      });\r\n      return;\r\n    }\r\n\r\n    await archiveConversationModel(conversationId, userEmail);\r\n\r\n    res.json({\r\n      success: true,\r\n      data: null,\r\n    });\r\n  } catch (error: any) {\r\n    logger.error('Error al archivar conversaci\xF3n:', error as Error);\r\n    res.status(500).json({\r\n      success: false,\r\n      error: error.message || 'Error interno del servidor',\r\n    });\r\n  }\r\n};\r\n\r\n// Obtener conversaci\xF3n por ID\r\nexport const getConversationById = async (req: any, res: Response) => {\r\n  try {\r\n    const { conversationId } = req.params;\r\n    const userEmail = req.user?.userEmail;\r\n\r\n    if (!userEmail) {\r\n      res.status(401).json({\r\n        success: false,\r\n        error: 'Usuario no autenticado',\r\n      });\r\n      return;\r\n    }\r\n\r\n    const conversation = await getConversationByIdModel(conversationId);\r\n    if (!conversation) {\r\n      res.status(404).json({\r\n        success: false,\r\n        error: 'Conversaci\xF3n no encontrada',\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (!conversation.participants.includes(userEmail)) {\r\n      res.status(403).json({\r\n        success: false,\r\n        error: 'No tienes permisos para acceder a esta conversaci\xF3n',\r\n      });\r\n      return;\r\n    }\r\n\r\n    res.json({\r\n      success: true,\r\n      data: conversation,\r\n    });\r\n  } catch (error: any) {\r\n    logger.error('Error al obtener conversaci\xF3n:', error as Error);\r\n    res.status(500).json({\r\n      success: false,\r\n      error: error.message || 'Error interno del servidor',\r\n    });\r\n  }\r\n};\r\n\r\n// Obtener estad\xEDsticas de chat\r\nexport const getChatStats = async (req: any, res: Response) => {\r\n  try {\r\n    const userEmail = req.user?.userEmail;\r\n\r\n    if (!userEmail) {\r\n      res.status(401).json({\r\n        success: false,\r\n        error: 'Usuario no autenticado',\r\n      });\r\n      return;\r\n    }\r\n\r\n    const stats = await getChatStatsModel(userEmail);\r\n\r\n    res.json({\r\n      success: true,\r\n      data: stats,\r\n    });\r\n  } catch (error: any) {\r\n    logger.error('Error al obtener estad\xEDsticas de chat:', error as Error);\r\n    res.status(500).json({\r\n      success: false,\r\n      error: error.message || 'Error interno del servidor',\r\n    });\r\n  }\r\n};\r\n\r\n// Obtener usuarios disponibles para chat\r\nexport const getAvailableUsers = async (req: any, res: Response) => {\r\n  try {\r\n    const userEmail = req.user?.userEmail;\r\n    const { search } = req.query;\r\n\r\n    if (!userEmail) {\r\n      res.status(401).json({\r\n        success: false,\r\n        error: 'Usuario no autenticado',\r\n      });\r\n      return;\r\n    }\r\n\r\n    // Importar db aqu\xED para evitar dependencias circulares\r\n    const { db } = require('../utils/firebase');\r\n    \r\n    // Obtener todos los usuarios\r\n    const usersSnapshot = await db.collection('users').get();\r\n    let users: any[] = [];\r\n    \r\n    usersSnapshot.forEach((doc: any) => {\r\n      const userData = doc.data();\r\n      // Excluir al usuario actual\r\n      if (userData.userEmail !== userEmail) {\r\n        users.push({\r\n          email: userData.userEmail,\r\n          name: userData.name || 'Usuario',\r\n          lastName: userData.lastName || '',\r\n          online: userData.online || false,\r\n          lastSeen: userData.lastSeen || null\r\n        });\r\n      }\r\n    });\r\n\r\n    // Aplicar filtro de b\xFAsqueda si se proporciona\r\n    if (search) {\r\n      const searchTerm = search.toString().toLowerCase();\r\n      users = users.filter(user => \r\n        user.name.toLowerCase().includes(searchTerm) ||\r\n        user.lastName.toLowerCase().includes(searchTerm) ||\r\n        user.email.toLowerCase().includes(searchTerm)\r\n      );\r\n    }\r\n\r\n    res.json({\r\n      success: true,\r\n      data: users,\r\n    });\r\n  } catch (error: any) {\r\n    logger.error('Error al obtener usuarios disponibles:', error as Error);\r\n    res.status(500).json({\r\n      success: false,\r\n      error: error.message || 'Error interno del servidor',\r\n    });\r\n  }\r\n};\r\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "69732abb9dfa3ecfc7ec3f5593a3466e11d09c0c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1liqedlifh = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1liqedlifh();
var __awaiter =
/* istanbul ignore next */
(cov_1liqedlifh().s[0]++,
/* istanbul ignore next */
(cov_1liqedlifh().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1liqedlifh().b[0][1]++, this.__awaiter) ||
/* istanbul ignore next */
(cov_1liqedlifh().b[0][2]++, function (thisArg, _arguments, P, generator) {
  /* istanbul ignore next */
  cov_1liqedlifh().f[0]++;
  function adopt(value) {
    /* istanbul ignore next */
    cov_1liqedlifh().f[1]++;
    cov_1liqedlifh().s[1]++;
    return value instanceof P ?
    /* istanbul ignore next */
    (cov_1liqedlifh().b[1][0]++, value) :
    /* istanbul ignore next */
    (cov_1liqedlifh().b[1][1]++, new P(function (resolve) {
      /* istanbul ignore next */
      cov_1liqedlifh().f[2]++;
      cov_1liqedlifh().s[2]++;
      resolve(value);
    }));
  }
  /* istanbul ignore next */
  cov_1liqedlifh().s[3]++;
  return new (
  /* istanbul ignore next */
  (cov_1liqedlifh().b[2][0]++, P) ||
  /* istanbul ignore next */
  (cov_1liqedlifh().b[2][1]++, P = Promise))(function (resolve, reject) {
    /* istanbul ignore next */
    cov_1liqedlifh().f[3]++;
    function fulfilled(value) {
      /* istanbul ignore next */
      cov_1liqedlifh().f[4]++;
      cov_1liqedlifh().s[4]++;
      try {
        /* istanbul ignore next */
        cov_1liqedlifh().s[5]++;
        step(generator.next(value));
      } catch (e) {
        /* istanbul ignore next */
        cov_1liqedlifh().s[6]++;
        reject(e);
      }
    }
    function rejected(value) {
      /* istanbul ignore next */
      cov_1liqedlifh().f[5]++;
      cov_1liqedlifh().s[7]++;
      try {
        /* istanbul ignore next */
        cov_1liqedlifh().s[8]++;
        step(generator["throw"](value));
      } catch (e) {
        /* istanbul ignore next */
        cov_1liqedlifh().s[9]++;
        reject(e);
      }
    }
    function step(result) {
      /* istanbul ignore next */
      cov_1liqedlifh().f[6]++;
      cov_1liqedlifh().s[10]++;
      result.done ?
      /* istanbul ignore next */
      (cov_1liqedlifh().b[3][0]++, resolve(result.value)) :
      /* istanbul ignore next */
      (cov_1liqedlifh().b[3][1]++, adopt(result.value).then(fulfilled, rejected));
    }
    /* istanbul ignore next */
    cov_1liqedlifh().s[11]++;
    step((generator = generator.apply(thisArg,
    /* istanbul ignore next */
    (cov_1liqedlifh().b[4][0]++, _arguments) ||
    /* istanbul ignore next */
    (cov_1liqedlifh().b[4][1]++, []))).next());
  });
}));
/* istanbul ignore next */
cov_1liqedlifh().s[12]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1liqedlifh().s[13]++;
exports.getAvailableUsers = exports.getChatStats = exports.getConversationById = exports.archiveConversation = exports.deleteConversation = exports.searchConversations = exports.createConversation = exports.markAsRead = exports.sendMessage = exports.getMessages = exports.getConversations = void 0;
const loggerService_1 =
/* istanbul ignore next */
(cov_1liqedlifh().s[14]++, require("../services/loggerService"));
const chatModel_1 =
/* istanbul ignore next */
(cov_1liqedlifh().s[15]++, require("../models/chatModel"));
// Obtener todas las conversaciones del usuario
/* istanbul ignore next */
cov_1liqedlifh().s[16]++;
const getConversations = (req, res) => {
  /* istanbul ignore next */
  cov_1liqedlifh().f[7]++;
  cov_1liqedlifh().s[17]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1liqedlifh().f[8]++;
    var _a;
    /* istanbul ignore next */
    cov_1liqedlifh().s[18]++;
    try {
      const userEmail =
      /* istanbul ignore next */
      (cov_1liqedlifh().s[19]++,
      /* istanbul ignore next */
      (cov_1liqedlifh().b[6][0]++, (_a = req.user) === null) ||
      /* istanbul ignore next */
      (cov_1liqedlifh().b[6][1]++, _a === void 0) ?
      /* istanbul ignore next */
      (cov_1liqedlifh().b[5][0]++, void 0) :
      /* istanbul ignore next */
      (cov_1liqedlifh().b[5][1]++, _a.userEmail));
      /* istanbul ignore next */
      cov_1liqedlifh().s[20]++;
      if (!userEmail) {
        /* istanbul ignore next */
        cov_1liqedlifh().b[7][0]++;
        cov_1liqedlifh().s[21]++;
        res.status(401).json({
          success: false,
          error: 'Usuario no autenticado'
        });
        /* istanbul ignore next */
        cov_1liqedlifh().s[22]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1liqedlifh().b[7][1]++;
      }
      const conversations =
      /* istanbul ignore next */
      (cov_1liqedlifh().s[23]++, yield (0, chatModel_1.getConversationsByUserModel)(userEmail));
      /* istanbul ignore next */
      cov_1liqedlifh().s[24]++;
      res.json({
        success: true,
        data: conversations
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1liqedlifh().s[25]++;
      loggerService_1.logger.error('Error al obtener conversaciones:', error);
      /* istanbul ignore next */
      cov_1liqedlifh().s[26]++;
      res.status(500).json({
        success: false,
        error:
        /* istanbul ignore next */
        (cov_1liqedlifh().b[8][0]++, error.message) ||
        /* istanbul ignore next */
        (cov_1liqedlifh().b[8][1]++, 'Error interno del servidor')
      });
    }
  });
};
/* istanbul ignore next */
cov_1liqedlifh().s[27]++;
exports.getConversations = getConversations;
// Obtener mensajes de una conversación específica
/* istanbul ignore next */
cov_1liqedlifh().s[28]++;
const getMessages = (req, res) => {
  /* istanbul ignore next */
  cov_1liqedlifh().f[9]++;
  cov_1liqedlifh().s[29]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1liqedlifh().f[10]++;
    var _a;
    /* istanbul ignore next */
    cov_1liqedlifh().s[30]++;
    try {
      const {
        conversationId
      } =
      /* istanbul ignore next */
      (cov_1liqedlifh().s[31]++, req.params);
      const userEmail =
      /* istanbul ignore next */
      (cov_1liqedlifh().s[32]++,
      /* istanbul ignore next */
      (cov_1liqedlifh().b[10][0]++, (_a = req.user) === null) ||
      /* istanbul ignore next */
      (cov_1liqedlifh().b[10][1]++, _a === void 0) ?
      /* istanbul ignore next */
      (cov_1liqedlifh().b[9][0]++, void 0) :
      /* istanbul ignore next */
      (cov_1liqedlifh().b[9][1]++, _a.userEmail));
      /* istanbul ignore next */
      cov_1liqedlifh().s[33]++;
      if (!userEmail) {
        /* istanbul ignore next */
        cov_1liqedlifh().b[11][0]++;
        cov_1liqedlifh().s[34]++;
        res.status(401).json({
          success: false,
          error: 'Usuario no autenticado'
        });
        /* istanbul ignore next */
        cov_1liqedlifh().s[35]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1liqedlifh().b[11][1]++;
      }
      // Verificar que el usuario es participante de la conversación
      const conversation =
      /* istanbul ignore next */
      (cov_1liqedlifh().s[36]++, yield (0, chatModel_1.getConversationByIdModel)(conversationId));
      /* istanbul ignore next */
      cov_1liqedlifh().s[37]++;
      if (!conversation) {
        /* istanbul ignore next */
        cov_1liqedlifh().b[12][0]++;
        cov_1liqedlifh().s[38]++;
        res.status(404).json({
          success: false,
          error: 'Conversación no encontrada'
        });
        /* istanbul ignore next */
        cov_1liqedlifh().s[39]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1liqedlifh().b[12][1]++;
      }
      cov_1liqedlifh().s[40]++;
      if (!conversation.participants.includes(userEmail)) {
        /* istanbul ignore next */
        cov_1liqedlifh().b[13][0]++;
        cov_1liqedlifh().s[41]++;
        res.status(403).json({
          success: false,
          error: 'No tienes permisos para acceder a esta conversación'
        });
        /* istanbul ignore next */
        cov_1liqedlifh().s[42]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1liqedlifh().b[13][1]++;
      }
      const messages =
      /* istanbul ignore next */
      (cov_1liqedlifh().s[43]++, yield (0, chatModel_1.getMessagesByConversationModel)(conversationId));
      // Marcar conversación como leída
      /* istanbul ignore next */
      cov_1liqedlifh().s[44]++;
      yield (0, chatModel_1.markConversationAsReadModel)(conversationId, userEmail);
      /* istanbul ignore next */
      cov_1liqedlifh().s[45]++;
      res.json({
        success: true,
        data: messages
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1liqedlifh().s[46]++;
      loggerService_1.logger.error('Error al obtener mensajes:', error);
      /* istanbul ignore next */
      cov_1liqedlifh().s[47]++;
      res.status(500).json({
        success: false,
        error:
        /* istanbul ignore next */
        (cov_1liqedlifh().b[14][0]++, error.message) ||
        /* istanbul ignore next */
        (cov_1liqedlifh().b[14][1]++, 'Error interno del servidor')
      });
    }
  });
};
/* istanbul ignore next */
cov_1liqedlifh().s[48]++;
exports.getMessages = getMessages;
// Enviar un mensaje
/* istanbul ignore next */
cov_1liqedlifh().s[49]++;
const sendMessage = (req, res) => {
  /* istanbul ignore next */
  cov_1liqedlifh().f[11]++;
  cov_1liqedlifh().s[50]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1liqedlifh().f[12]++;
    var _a, _b;
    /* istanbul ignore next */
    cov_1liqedlifh().s[51]++;
    try {
      const {
        conversationId
      } =
      /* istanbul ignore next */
      (cov_1liqedlifh().s[52]++, req.params);
      const {
        content,
        type =
        /* istanbul ignore next */
        (cov_1liqedlifh().b[15][0]++, 'text')
      } =
      /* istanbul ignore next */
      (cov_1liqedlifh().s[53]++, req.body);
      const userEmail =
      /* istanbul ignore next */
      (cov_1liqedlifh().s[54]++,
      /* istanbul ignore next */
      (cov_1liqedlifh().b[17][0]++, (_a = req.user) === null) ||
      /* istanbul ignore next */
      (cov_1liqedlifh().b[17][1]++, _a === void 0) ?
      /* istanbul ignore next */
      (cov_1liqedlifh().b[16][0]++, void 0) :
      /* istanbul ignore next */
      (cov_1liqedlifh().b[16][1]++, _a.userEmail));
      const userName =
      /* istanbul ignore next */
      (cov_1liqedlifh().s[55]++,
      /* istanbul ignore next */
      (cov_1liqedlifh().b[19][0]++, (_b = req.user) === null) ||
      /* istanbul ignore next */
      (cov_1liqedlifh().b[19][1]++, _b === void 0) ?
      /* istanbul ignore next */
      (cov_1liqedlifh().b[18][0]++, void 0) :
      /* istanbul ignore next */
      (cov_1liqedlifh().b[18][1]++, _b.name));
      /* istanbul ignore next */
      cov_1liqedlifh().s[56]++;
      if (!userEmail) {
        /* istanbul ignore next */
        cov_1liqedlifh().b[20][0]++;
        cov_1liqedlifh().s[57]++;
        res.status(401).json({
          success: false,
          error: 'Usuario no autenticado'
        });
        /* istanbul ignore next */
        cov_1liqedlifh().s[58]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1liqedlifh().b[20][1]++;
      }
      cov_1liqedlifh().s[59]++;
      if (
      /* istanbul ignore next */
      (cov_1liqedlifh().b[22][0]++, !content) ||
      /* istanbul ignore next */
      (cov_1liqedlifh().b[22][1]++, content.trim().length === 0)) {
        /* istanbul ignore next */
        cov_1liqedlifh().b[21][0]++;
        cov_1liqedlifh().s[60]++;
        res.status(400).json({
          success: false,
          error: 'El contenido del mensaje es requerido'
        });
        /* istanbul ignore next */
        cov_1liqedlifh().s[61]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1liqedlifh().b[21][1]++;
      }
      // Verificar que el usuario es participante de la conversación
      const conversation =
      /* istanbul ignore next */
      (cov_1liqedlifh().s[62]++, yield (0, chatModel_1.getConversationByIdModel)(conversationId));
      /* istanbul ignore next */
      cov_1liqedlifh().s[63]++;
      if (!conversation) {
        /* istanbul ignore next */
        cov_1liqedlifh().b[23][0]++;
        cov_1liqedlifh().s[64]++;
        res.status(404).json({
          success: false,
          error: 'Conversación no encontrada'
        });
        /* istanbul ignore next */
        cov_1liqedlifh().s[65]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1liqedlifh().b[23][1]++;
      }
      cov_1liqedlifh().s[66]++;
      if (!conversation.participants.includes(userEmail)) {
        /* istanbul ignore next */
        cov_1liqedlifh().b[24][0]++;
        cov_1liqedlifh().s[67]++;
        res.status(403).json({
          success: false,
          error: 'No tienes permisos para enviar mensajes a esta conversación'
        });
        /* istanbul ignore next */
        cov_1liqedlifh().s[68]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1liqedlifh().b[24][1]++;
      }
      const messageData =
      /* istanbul ignore next */
      (cov_1liqedlifh().s[69]++, {
        conversationId,
        senderId: userEmail,
        senderName:
        /* istanbul ignore next */
        (cov_1liqedlifh().b[25][0]++, userName) ||
        /* istanbul ignore next */
        (cov_1liqedlifh().b[25][1]++, userEmail),
        content: content.trim(),
        status: 'sent',
        type: type
      });
      const message =
      /* istanbul ignore next */
      (cov_1liqedlifh().s[70]++, yield (0, chatModel_1.createMessageModel)(messageData));
      /* istanbul ignore next */
      cov_1liqedlifh().s[71]++;
      res.json({
        success: true,
        data: message
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1liqedlifh().s[72]++;
      loggerService_1.logger.error('Error al enviar mensaje:', error);
      /* istanbul ignore next */
      cov_1liqedlifh().s[73]++;
      res.status(500).json({
        success: false,
        error:
        /* istanbul ignore next */
        (cov_1liqedlifh().b[26][0]++, error.message) ||
        /* istanbul ignore next */
        (cov_1liqedlifh().b[26][1]++, 'Error interno del servidor')
      });
    }
  });
};
/* istanbul ignore next */
cov_1liqedlifh().s[74]++;
exports.sendMessage = sendMessage;
// Marcar mensaje como leído
/* istanbul ignore next */
cov_1liqedlifh().s[75]++;
const markAsRead = (req, res) => {
  /* istanbul ignore next */
  cov_1liqedlifh().f[13]++;
  cov_1liqedlifh().s[76]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1liqedlifh().f[14]++;
    var _a;
    /* istanbul ignore next */
    cov_1liqedlifh().s[77]++;
    try {
      const {
        messageId
      } =
      /* istanbul ignore next */
      (cov_1liqedlifh().s[78]++, req.params);
      const userEmail =
      /* istanbul ignore next */
      (cov_1liqedlifh().s[79]++,
      /* istanbul ignore next */
      (cov_1liqedlifh().b[28][0]++, (_a = req.user) === null) ||
      /* istanbul ignore next */
      (cov_1liqedlifh().b[28][1]++, _a === void 0) ?
      /* istanbul ignore next */
      (cov_1liqedlifh().b[27][0]++, void 0) :
      /* istanbul ignore next */
      (cov_1liqedlifh().b[27][1]++, _a.userEmail));
      /* istanbul ignore next */
      cov_1liqedlifh().s[80]++;
      if (!userEmail) {
        /* istanbul ignore next */
        cov_1liqedlifh().b[29][0]++;
        cov_1liqedlifh().s[81]++;
        res.status(401).json({
          success: false,
          error: 'Usuario no autenticado'
        });
        /* istanbul ignore next */
        cov_1liqedlifh().s[82]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1liqedlifh().b[29][1]++;
      }
      cov_1liqedlifh().s[83]++;
      yield (0, chatModel_1.markMessageAsReadModel)(messageId);
      /* istanbul ignore next */
      cov_1liqedlifh().s[84]++;
      res.json({
        success: true,
        data: null
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1liqedlifh().s[85]++;
      loggerService_1.logger.error('Error al marcar mensaje como leído:', error);
      /* istanbul ignore next */
      cov_1liqedlifh().s[86]++;
      res.status(500).json({
        success: false,
        error:
        /* istanbul ignore next */
        (cov_1liqedlifh().b[30][0]++, error.message) ||
        /* istanbul ignore next */
        (cov_1liqedlifh().b[30][1]++, 'Error interno del servidor')
      });
    }
  });
};
/* istanbul ignore next */
cov_1liqedlifh().s[87]++;
exports.markAsRead = markAsRead;
// Crear una nueva conversación
/* istanbul ignore next */
cov_1liqedlifh().s[88]++;
const createConversation = (req, res) => {
  /* istanbul ignore next */
  cov_1liqedlifh().f[15]++;
  cov_1liqedlifh().s[89]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1liqedlifh().f[16]++;
    var _a;
    /* istanbul ignore next */
    cov_1liqedlifh().s[90]++;
    try {
      const {
        participants
      } =
      /* istanbul ignore next */
      (cov_1liqedlifh().s[91]++, req.body);
      const userEmail =
      /* istanbul ignore next */
      (cov_1liqedlifh().s[92]++,
      /* istanbul ignore next */
      (cov_1liqedlifh().b[32][0]++, (_a = req.user) === null) ||
      /* istanbul ignore next */
      (cov_1liqedlifh().b[32][1]++, _a === void 0) ?
      /* istanbul ignore next */
      (cov_1liqedlifh().b[31][0]++, void 0) :
      /* istanbul ignore next */
      (cov_1liqedlifh().b[31][1]++, _a.userEmail));
      /* istanbul ignore next */
      cov_1liqedlifh().s[93]++;
      if (!userEmail) {
        /* istanbul ignore next */
        cov_1liqedlifh().b[33][0]++;
        cov_1liqedlifh().s[94]++;
        res.status(401).json({
          success: false,
          error: 'Usuario no autenticado'
        });
        /* istanbul ignore next */
        cov_1liqedlifh().s[95]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1liqedlifh().b[33][1]++;
      }
      cov_1liqedlifh().s[96]++;
      if (
      /* istanbul ignore next */
      (cov_1liqedlifh().b[35][0]++, !participants) ||
      /* istanbul ignore next */
      (cov_1liqedlifh().b[35][1]++, !Array.isArray(participants)) ||
      /* istanbul ignore next */
      (cov_1liqedlifh().b[35][2]++, participants.length === 0)) {
        /* istanbul ignore next */
        cov_1liqedlifh().b[34][0]++;
        cov_1liqedlifh().s[97]++;
        res.status(400).json({
          success: false,
          error: 'Se requiere al menos un participante'
        });
        /* istanbul ignore next */
        cov_1liqedlifh().s[98]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1liqedlifh().b[34][1]++;
      }
      // Asegurar que el usuario actual esté en los participantes
      const allParticipants =
      /* istanbul ignore next */
      (cov_1liqedlifh().s[99]++, [...new Set([userEmail, ...participants])]);
      // Verificar si ya existe una conversación entre estos usuarios
      const existingConversation =
      /* istanbul ignore next */
      (cov_1liqedlifh().s[100]++, yield (0, chatModel_1.getConversationBetweenUsersModel)(userEmail, participants[0]));
      /* istanbul ignore next */
      cov_1liqedlifh().s[101]++;
      if (existingConversation) {
        /* istanbul ignore next */
        cov_1liqedlifh().b[36][0]++;
        cov_1liqedlifh().s[102]++;
        res.json({
          success: true,
          data: existingConversation
        });
        /* istanbul ignore next */
        cov_1liqedlifh().s[103]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1liqedlifh().b[36][1]++;
      }
      const conversation =
      /* istanbul ignore next */
      (cov_1liqedlifh().s[104]++, yield (0, chatModel_1.createConversationModel)(allParticipants));
      /* istanbul ignore next */
      cov_1liqedlifh().s[105]++;
      res.json({
        success: true,
        data: conversation
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1liqedlifh().s[106]++;
      loggerService_1.logger.error('Error al crear conversación:', error);
      /* istanbul ignore next */
      cov_1liqedlifh().s[107]++;
      res.status(500).json({
        success: false,
        error:
        /* istanbul ignore next */
        (cov_1liqedlifh().b[37][0]++, error.message) ||
        /* istanbul ignore next */
        (cov_1liqedlifh().b[37][1]++, 'Error interno del servidor')
      });
    }
  });
};
/* istanbul ignore next */
cov_1liqedlifh().s[108]++;
exports.createConversation = createConversation;
// Buscar conversaciones con filtros
/* istanbul ignore next */
cov_1liqedlifh().s[109]++;
const searchConversations = (req, res) => {
  /* istanbul ignore next */
  cov_1liqedlifh().f[17]++;
  cov_1liqedlifh().s[110]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1liqedlifh().f[18]++;
    var _a;
    /* istanbul ignore next */
    cov_1liqedlifh().s[111]++;
    try {
      const userEmail =
      /* istanbul ignore next */
      (cov_1liqedlifh().s[112]++,
      /* istanbul ignore next */
      (cov_1liqedlifh().b[39][0]++, (_a = req.user) === null) ||
      /* istanbul ignore next */
      (cov_1liqedlifh().b[39][1]++, _a === void 0) ?
      /* istanbul ignore next */
      (cov_1liqedlifh().b[38][0]++, void 0) :
      /* istanbul ignore next */
      (cov_1liqedlifh().b[38][1]++, _a.userEmail));
      const {
        search,
        unreadOnly,
        dateFrom,
        dateTo
      } =
      /* istanbul ignore next */
      (cov_1liqedlifh().s[113]++, req.query);
      /* istanbul ignore next */
      cov_1liqedlifh().s[114]++;
      if (!userEmail) {
        /* istanbul ignore next */
        cov_1liqedlifh().b[40][0]++;
        cov_1liqedlifh().s[115]++;
        res.status(401).json({
          success: false,
          error: 'Usuario no autenticado'
        });
        /* istanbul ignore next */
        cov_1liqedlifh().s[116]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1liqedlifh().b[40][1]++;
      }
      const filters =
      /* istanbul ignore next */
      (cov_1liqedlifh().s[117]++, {
        search: search,
        unreadOnly: unreadOnly === 'true',
        dateFrom: dateFrom,
        dateTo: dateTo
      });
      const conversations =
      /* istanbul ignore next */
      (cov_1liqedlifh().s[118]++, yield (0, chatModel_1.searchConversationsModel)(userEmail, filters));
      /* istanbul ignore next */
      cov_1liqedlifh().s[119]++;
      res.json({
        success: true,
        data: conversations
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1liqedlifh().s[120]++;
      loggerService_1.logger.error('Error al buscar conversaciones:', error);
      /* istanbul ignore next */
      cov_1liqedlifh().s[121]++;
      res.status(500).json({
        success: false,
        error:
        /* istanbul ignore next */
        (cov_1liqedlifh().b[41][0]++, error.message) ||
        /* istanbul ignore next */
        (cov_1liqedlifh().b[41][1]++, 'Error interno del servidor')
      });
    }
  });
};
/* istanbul ignore next */
cov_1liqedlifh().s[122]++;
exports.searchConversations = searchConversations;
// Eliminar conversación
/* istanbul ignore next */
cov_1liqedlifh().s[123]++;
const deleteConversation = (req, res) => {
  /* istanbul ignore next */
  cov_1liqedlifh().f[19]++;
  cov_1liqedlifh().s[124]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1liqedlifh().f[20]++;
    var _a;
    /* istanbul ignore next */
    cov_1liqedlifh().s[125]++;
    try {
      const {
        conversationId
      } =
      /* istanbul ignore next */
      (cov_1liqedlifh().s[126]++, req.params);
      const userEmail =
      /* istanbul ignore next */
      (cov_1liqedlifh().s[127]++,
      /* istanbul ignore next */
      (cov_1liqedlifh().b[43][0]++, (_a = req.user) === null) ||
      /* istanbul ignore next */
      (cov_1liqedlifh().b[43][1]++, _a === void 0) ?
      /* istanbul ignore next */
      (cov_1liqedlifh().b[42][0]++, void 0) :
      /* istanbul ignore next */
      (cov_1liqedlifh().b[42][1]++, _a.userEmail));
      /* istanbul ignore next */
      cov_1liqedlifh().s[128]++;
      if (!userEmail) {
        /* istanbul ignore next */
        cov_1liqedlifh().b[44][0]++;
        cov_1liqedlifh().s[129]++;
        res.status(401).json({
          success: false,
          error: 'Usuario no autenticado'
        });
        /* istanbul ignore next */
        cov_1liqedlifh().s[130]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1liqedlifh().b[44][1]++;
      }
      cov_1liqedlifh().s[131]++;
      yield (0, chatModel_1.deleteConversationModel)(conversationId, userEmail);
      /* istanbul ignore next */
      cov_1liqedlifh().s[132]++;
      res.json({
        success: true,
        data: null
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1liqedlifh().s[133]++;
      loggerService_1.logger.error('Error al eliminar conversación:', error);
      /* istanbul ignore next */
      cov_1liqedlifh().s[134]++;
      res.status(500).json({
        success: false,
        error:
        /* istanbul ignore next */
        (cov_1liqedlifh().b[45][0]++, error.message) ||
        /* istanbul ignore next */
        (cov_1liqedlifh().b[45][1]++, 'Error interno del servidor')
      });
    }
  });
};
/* istanbul ignore next */
cov_1liqedlifh().s[135]++;
exports.deleteConversation = deleteConversation;
// Archivar conversación
/* istanbul ignore next */
cov_1liqedlifh().s[136]++;
const archiveConversation = (req, res) => {
  /* istanbul ignore next */
  cov_1liqedlifh().f[21]++;
  cov_1liqedlifh().s[137]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1liqedlifh().f[22]++;
    var _a;
    /* istanbul ignore next */
    cov_1liqedlifh().s[138]++;
    try {
      const {
        conversationId
      } =
      /* istanbul ignore next */
      (cov_1liqedlifh().s[139]++, req.params);
      const userEmail =
      /* istanbul ignore next */
      (cov_1liqedlifh().s[140]++,
      /* istanbul ignore next */
      (cov_1liqedlifh().b[47][0]++, (_a = req.user) === null) ||
      /* istanbul ignore next */
      (cov_1liqedlifh().b[47][1]++, _a === void 0) ?
      /* istanbul ignore next */
      (cov_1liqedlifh().b[46][0]++, void 0) :
      /* istanbul ignore next */
      (cov_1liqedlifh().b[46][1]++, _a.userEmail));
      /* istanbul ignore next */
      cov_1liqedlifh().s[141]++;
      if (!userEmail) {
        /* istanbul ignore next */
        cov_1liqedlifh().b[48][0]++;
        cov_1liqedlifh().s[142]++;
        res.status(401).json({
          success: false,
          error: 'Usuario no autenticado'
        });
        /* istanbul ignore next */
        cov_1liqedlifh().s[143]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1liqedlifh().b[48][1]++;
      }
      cov_1liqedlifh().s[144]++;
      yield (0, chatModel_1.archiveConversationModel)(conversationId, userEmail);
      /* istanbul ignore next */
      cov_1liqedlifh().s[145]++;
      res.json({
        success: true,
        data: null
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1liqedlifh().s[146]++;
      loggerService_1.logger.error('Error al archivar conversación:', error);
      /* istanbul ignore next */
      cov_1liqedlifh().s[147]++;
      res.status(500).json({
        success: false,
        error:
        /* istanbul ignore next */
        (cov_1liqedlifh().b[49][0]++, error.message) ||
        /* istanbul ignore next */
        (cov_1liqedlifh().b[49][1]++, 'Error interno del servidor')
      });
    }
  });
};
/* istanbul ignore next */
cov_1liqedlifh().s[148]++;
exports.archiveConversation = archiveConversation;
// Obtener conversación por ID
/* istanbul ignore next */
cov_1liqedlifh().s[149]++;
const getConversationById = (req, res) => {
  /* istanbul ignore next */
  cov_1liqedlifh().f[23]++;
  cov_1liqedlifh().s[150]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1liqedlifh().f[24]++;
    var _a;
    /* istanbul ignore next */
    cov_1liqedlifh().s[151]++;
    try {
      const {
        conversationId
      } =
      /* istanbul ignore next */
      (cov_1liqedlifh().s[152]++, req.params);
      const userEmail =
      /* istanbul ignore next */
      (cov_1liqedlifh().s[153]++,
      /* istanbul ignore next */
      (cov_1liqedlifh().b[51][0]++, (_a = req.user) === null) ||
      /* istanbul ignore next */
      (cov_1liqedlifh().b[51][1]++, _a === void 0) ?
      /* istanbul ignore next */
      (cov_1liqedlifh().b[50][0]++, void 0) :
      /* istanbul ignore next */
      (cov_1liqedlifh().b[50][1]++, _a.userEmail));
      /* istanbul ignore next */
      cov_1liqedlifh().s[154]++;
      if (!userEmail) {
        /* istanbul ignore next */
        cov_1liqedlifh().b[52][0]++;
        cov_1liqedlifh().s[155]++;
        res.status(401).json({
          success: false,
          error: 'Usuario no autenticado'
        });
        /* istanbul ignore next */
        cov_1liqedlifh().s[156]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1liqedlifh().b[52][1]++;
      }
      const conversation =
      /* istanbul ignore next */
      (cov_1liqedlifh().s[157]++, yield (0, chatModel_1.getConversationByIdModel)(conversationId));
      /* istanbul ignore next */
      cov_1liqedlifh().s[158]++;
      if (!conversation) {
        /* istanbul ignore next */
        cov_1liqedlifh().b[53][0]++;
        cov_1liqedlifh().s[159]++;
        res.status(404).json({
          success: false,
          error: 'Conversación no encontrada'
        });
        /* istanbul ignore next */
        cov_1liqedlifh().s[160]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1liqedlifh().b[53][1]++;
      }
      cov_1liqedlifh().s[161]++;
      if (!conversation.participants.includes(userEmail)) {
        /* istanbul ignore next */
        cov_1liqedlifh().b[54][0]++;
        cov_1liqedlifh().s[162]++;
        res.status(403).json({
          success: false,
          error: 'No tienes permisos para acceder a esta conversación'
        });
        /* istanbul ignore next */
        cov_1liqedlifh().s[163]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1liqedlifh().b[54][1]++;
      }
      cov_1liqedlifh().s[164]++;
      res.json({
        success: true,
        data: conversation
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1liqedlifh().s[165]++;
      loggerService_1.logger.error('Error al obtener conversación:', error);
      /* istanbul ignore next */
      cov_1liqedlifh().s[166]++;
      res.status(500).json({
        success: false,
        error:
        /* istanbul ignore next */
        (cov_1liqedlifh().b[55][0]++, error.message) ||
        /* istanbul ignore next */
        (cov_1liqedlifh().b[55][1]++, 'Error interno del servidor')
      });
    }
  });
};
/* istanbul ignore next */
cov_1liqedlifh().s[167]++;
exports.getConversationById = getConversationById;
// Obtener estadísticas de chat
/* istanbul ignore next */
cov_1liqedlifh().s[168]++;
const getChatStats = (req, res) => {
  /* istanbul ignore next */
  cov_1liqedlifh().f[25]++;
  cov_1liqedlifh().s[169]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1liqedlifh().f[26]++;
    var _a;
    /* istanbul ignore next */
    cov_1liqedlifh().s[170]++;
    try {
      const userEmail =
      /* istanbul ignore next */
      (cov_1liqedlifh().s[171]++,
      /* istanbul ignore next */
      (cov_1liqedlifh().b[57][0]++, (_a = req.user) === null) ||
      /* istanbul ignore next */
      (cov_1liqedlifh().b[57][1]++, _a === void 0) ?
      /* istanbul ignore next */
      (cov_1liqedlifh().b[56][0]++, void 0) :
      /* istanbul ignore next */
      (cov_1liqedlifh().b[56][1]++, _a.userEmail));
      /* istanbul ignore next */
      cov_1liqedlifh().s[172]++;
      if (!userEmail) {
        /* istanbul ignore next */
        cov_1liqedlifh().b[58][0]++;
        cov_1liqedlifh().s[173]++;
        res.status(401).json({
          success: false,
          error: 'Usuario no autenticado'
        });
        /* istanbul ignore next */
        cov_1liqedlifh().s[174]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1liqedlifh().b[58][1]++;
      }
      const stats =
      /* istanbul ignore next */
      (cov_1liqedlifh().s[175]++, yield (0, chatModel_1.getChatStatsModel)(userEmail));
      /* istanbul ignore next */
      cov_1liqedlifh().s[176]++;
      res.json({
        success: true,
        data: stats
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1liqedlifh().s[177]++;
      loggerService_1.logger.error('Error al obtener estadísticas de chat:', error);
      /* istanbul ignore next */
      cov_1liqedlifh().s[178]++;
      res.status(500).json({
        success: false,
        error:
        /* istanbul ignore next */
        (cov_1liqedlifh().b[59][0]++, error.message) ||
        /* istanbul ignore next */
        (cov_1liqedlifh().b[59][1]++, 'Error interno del servidor')
      });
    }
  });
};
/* istanbul ignore next */
cov_1liqedlifh().s[179]++;
exports.getChatStats = getChatStats;
// Obtener usuarios disponibles para chat
/* istanbul ignore next */
cov_1liqedlifh().s[180]++;
const getAvailableUsers = (req, res) => {
  /* istanbul ignore next */
  cov_1liqedlifh().f[27]++;
  cov_1liqedlifh().s[181]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1liqedlifh().f[28]++;
    var _a;
    /* istanbul ignore next */
    cov_1liqedlifh().s[182]++;
    try {
      const userEmail =
      /* istanbul ignore next */
      (cov_1liqedlifh().s[183]++,
      /* istanbul ignore next */
      (cov_1liqedlifh().b[61][0]++, (_a = req.user) === null) ||
      /* istanbul ignore next */
      (cov_1liqedlifh().b[61][1]++, _a === void 0) ?
      /* istanbul ignore next */
      (cov_1liqedlifh().b[60][0]++, void 0) :
      /* istanbul ignore next */
      (cov_1liqedlifh().b[60][1]++, _a.userEmail));
      const {
        search
      } =
      /* istanbul ignore next */
      (cov_1liqedlifh().s[184]++, req.query);
      /* istanbul ignore next */
      cov_1liqedlifh().s[185]++;
      if (!userEmail) {
        /* istanbul ignore next */
        cov_1liqedlifh().b[62][0]++;
        cov_1liqedlifh().s[186]++;
        res.status(401).json({
          success: false,
          error: 'Usuario no autenticado'
        });
        /* istanbul ignore next */
        cov_1liqedlifh().s[187]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1liqedlifh().b[62][1]++;
      }
      // Importar db aquí para evitar dependencias circulares
      const {
        db
      } =
      /* istanbul ignore next */
      (cov_1liqedlifh().s[188]++, require('../utils/firebase'));
      // Obtener todos los usuarios
      const usersSnapshot =
      /* istanbul ignore next */
      (cov_1liqedlifh().s[189]++, yield db.collection('users').get());
      let users =
      /* istanbul ignore next */
      (cov_1liqedlifh().s[190]++, []);
      /* istanbul ignore next */
      cov_1liqedlifh().s[191]++;
      usersSnapshot.forEach(doc => {
        /* istanbul ignore next */
        cov_1liqedlifh().f[29]++;
        const userData =
        /* istanbul ignore next */
        (cov_1liqedlifh().s[192]++, doc.data());
        // Excluir al usuario actual
        /* istanbul ignore next */
        cov_1liqedlifh().s[193]++;
        if (userData.userEmail !== userEmail) {
          /* istanbul ignore next */
          cov_1liqedlifh().b[63][0]++;
          cov_1liqedlifh().s[194]++;
          users.push({
            email: userData.userEmail,
            name:
            /* istanbul ignore next */
            (cov_1liqedlifh().b[64][0]++, userData.name) ||
            /* istanbul ignore next */
            (cov_1liqedlifh().b[64][1]++, 'Usuario'),
            lastName:
            /* istanbul ignore next */
            (cov_1liqedlifh().b[65][0]++, userData.lastName) ||
            /* istanbul ignore next */
            (cov_1liqedlifh().b[65][1]++, ''),
            online:
            /* istanbul ignore next */
            (cov_1liqedlifh().b[66][0]++, userData.online) ||
            /* istanbul ignore next */
            (cov_1liqedlifh().b[66][1]++, false),
            lastSeen:
            /* istanbul ignore next */
            (cov_1liqedlifh().b[67][0]++, userData.lastSeen) ||
            /* istanbul ignore next */
            (cov_1liqedlifh().b[67][1]++, null)
          });
        } else
        /* istanbul ignore next */
        {
          cov_1liqedlifh().b[63][1]++;
        }
      });
      // Aplicar filtro de búsqueda si se proporciona
      /* istanbul ignore next */
      cov_1liqedlifh().s[195]++;
      if (search) {
        /* istanbul ignore next */
        cov_1liqedlifh().b[68][0]++;
        const searchTerm =
        /* istanbul ignore next */
        (cov_1liqedlifh().s[196]++, search.toString().toLowerCase());
        /* istanbul ignore next */
        cov_1liqedlifh().s[197]++;
        users = users.filter(user => {
          /* istanbul ignore next */
          cov_1liqedlifh().f[30]++;
          cov_1liqedlifh().s[198]++;
          return /* istanbul ignore next */(cov_1liqedlifh().b[69][0]++, user.name.toLowerCase().includes(searchTerm)) ||
          /* istanbul ignore next */
          (cov_1liqedlifh().b[69][1]++, user.lastName.toLowerCase().includes(searchTerm)) ||
          /* istanbul ignore next */
          (cov_1liqedlifh().b[69][2]++, user.email.toLowerCase().includes(searchTerm));
        });
      } else
      /* istanbul ignore next */
      {
        cov_1liqedlifh().b[68][1]++;
      }
      cov_1liqedlifh().s[199]++;
      res.json({
        success: true,
        data: users
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1liqedlifh().s[200]++;
      loggerService_1.logger.error('Error al obtener usuarios disponibles:', error);
      /* istanbul ignore next */
      cov_1liqedlifh().s[201]++;
      res.status(500).json({
        success: false,
        error:
        /* istanbul ignore next */
        (cov_1liqedlifh().b[70][0]++, error.message) ||
        /* istanbul ignore next */
        (cov_1liqedlifh().b[70][1]++, 'Error interno del servidor')
      });
    }
  });
};
/* istanbul ignore next */
cov_1liqedlifh().s[202]++;
exports.getAvailableUsers = getAvailableUsers;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,