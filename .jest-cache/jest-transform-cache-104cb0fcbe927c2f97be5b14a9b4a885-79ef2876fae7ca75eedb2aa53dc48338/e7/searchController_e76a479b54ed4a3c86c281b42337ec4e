3b43096a597b261da027aa014952e64d
"use strict";

/* istanbul ignore next */
function cov_4uflomp0l() {
  var path = "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\controllers\\searchController.ts";
  var hash = "00ab09ede7bf04b4a4be82ab3287fa2c93ec0840";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\controllers\\searchController.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 16
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 28
        },
        end: {
          line: 3,
          column: 110
        }
      },
      "2": {
        start: {
          line: 3,
          column: 91
        },
        end: {
          line: 3,
          column: 106
        }
      },
      "3": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "4": {
        start: {
          line: 5,
          column: 36
        },
        end: {
          line: 5,
          column: 97
        }
      },
      "5": {
        start: {
          line: 5,
          column: 42
        },
        end: {
          line: 5,
          column: 70
        }
      },
      "6": {
        start: {
          line: 5,
          column: 85
        },
        end: {
          line: 5,
          column: 95
        }
      },
      "7": {
        start: {
          line: 6,
          column: 35
        },
        end: {
          line: 6,
          column: 100
        }
      },
      "8": {
        start: {
          line: 6,
          column: 41
        },
        end: {
          line: 6,
          column: 73
        }
      },
      "9": {
        start: {
          line: 6,
          column: 88
        },
        end: {
          line: 6,
          column: 98
        }
      },
      "10": {
        start: {
          line: 7,
          column: 32
        },
        end: {
          line: 7,
          column: 116
        }
      },
      "11": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 78
        }
      },
      "12": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 62
        }
      },
      "13": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 291
        }
      },
      "14": {
        start: {
          line: 13,
          column: 24
        },
        end: {
          line: 13,
          column: 60
        }
      },
      "15": {
        start: {
          line: 14,
          column: 24
        },
        end: {
          line: 14,
          column: 60
        }
      },
      "16": {
        start: {
          line: 15,
          column: 23
        },
        end: {
          line: 15,
          column: 60
        }
      },
      "17": {
        start: {
          line: 19,
          column: 0
        },
        end: {
          line: 60,
          column: 4
        }
      },
      "18": {
        start: {
          line: 19,
          column: 80
        },
        end: {
          line: 60,
          column: 2
        }
      },
      "19": {
        start: {
          line: 21,
          column: 20
        },
        end: {
          line: 39,
          column: 5
        }
      },
      "20": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 42,
          column: 7
        }
      },
      "21": {
        start: {
          line: 43,
          column: 19
        },
        end: {
          line: 43,
          column: 76
        }
      },
      "22": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 49,
          column: 7
        }
      },
      "23": {
        start: {
          line: 50,
          column: 4
        },
        end: {
          line: 59,
          column: 7
        }
      },
      "24": {
        start: {
          line: 64,
          column: 0
        },
        end: {
          line: 105,
          column: 4
        }
      },
      "25": {
        start: {
          line: 64,
          column: 90
        },
        end: {
          line: 105,
          column: 2
        }
      },
      "26": {
        start: {
          line: 66,
          column: 20
        },
        end: {
          line: 84,
          column: 5
        }
      },
      "27": {
        start: {
          line: 85,
          column: 4
        },
        end: {
          line: 87,
          column: 7
        }
      },
      "28": {
        start: {
          line: 88,
          column: 19
        },
        end: {
          line: 88,
          column: 86
        }
      },
      "29": {
        start: {
          line: 89,
          column: 4
        },
        end: {
          line: 94,
          column: 7
        }
      },
      "30": {
        start: {
          line: 95,
          column: 4
        },
        end: {
          line: 104,
          column: 7
        }
      },
      "31": {
        start: {
          line: 109,
          column: 0
        },
        end: {
          line: 139,
          column: 4
        }
      },
      "32": {
        start: {
          line: 109,
          column: 79
        },
        end: {
          line: 139,
          column: 2
        }
      },
      "33": {
        start: {
          line: 111,
          column: 20
        },
        end: {
          line: 118,
          column: 5
        }
      },
      "34": {
        start: {
          line: 119,
          column: 4
        },
        end: {
          line: 121,
          column: 7
        }
      },
      "35": {
        start: {
          line: 122,
          column: 19
        },
        end: {
          line: 122,
          column: 75
        }
      },
      "36": {
        start: {
          line: 123,
          column: 4
        },
        end: {
          line: 128,
          column: 7
        }
      },
      "37": {
        start: {
          line: 129,
          column: 4
        },
        end: {
          line: 138,
          column: 7
        }
      },
      "38": {
        start: {
          line: 143,
          column: 0
        },
        end: {
          line: 184,
          column: 4
        }
      },
      "39": {
        start: {
          line: 143,
          column: 80
        },
        end: {
          line: 184,
          column: 2
        }
      },
      "40": {
        start: {
          line: 145,
          column: 20
        },
        end: {
          line: 158,
          column: 5
        }
      },
      "41": {
        start: {
          line: 159,
          column: 4
        },
        end: {
          line: 161,
          column: 7
        }
      },
      "42": {
        start: {
          line: 162,
          column: 19
        },
        end: {
          line: 162,
          column: 76
        }
      },
      "43": {
        start: {
          line: 163,
          column: 4
        },
        end: {
          line: 170,
          column: 7
        }
      },
      "44": {
        start: {
          line: 171,
          column: 4
        },
        end: {
          line: 183,
          column: 7
        }
      },
      "45": {
        start: {
          line: 188,
          column: 0
        },
        end: {
          line: 218,
          column: 4
        }
      },
      "46": {
        start: {
          line: 188,
          column: 84
        },
        end: {
          line: 218,
          column: 2
        }
      },
      "47": {
        start: {
          line: 190,
          column: 33
        },
        end: {
          line: 190,
          column: 42
        }
      },
      "48": {
        start: {
          line: 191,
          column: 25
        },
        end: {
          line: 191,
          column: 47
        }
      },
      "49": {
        start: {
          line: 192,
          column: 4
        },
        end: {
          line: 198,
          column: 7
        }
      },
      "50": {
        start: {
          line: 199,
          column: 19
        },
        end: {
          line: 199,
          column: 95
        }
      },
      "51": {
        start: {
          line: 200,
          column: 4
        },
        end: {
          line: 206,
          column: 7
        }
      },
      "52": {
        start: {
          line: 207,
          column: 4
        },
        end: {
          line: 217,
          column: 7
        }
      },
      "53": {
        start: {
          line: 222,
          column: 0
        },
        end: {
          line: 263,
          column: 4
        }
      },
      "54": {
        start: {
          line: 222,
          column: 100
        },
        end: {
          line: 263,
          column: 2
        }
      },
      "55": {
        start: {
          line: 224,
          column: 23
        },
        end: {
          line: 224,
          column: 88
        }
      },
      "56": {
        start: {
          line: 225,
          column: 20
        },
        end: {
          line: 242,
          column: 5
        }
      },
      "57": {
        start: {
          line: 243,
          column: 4
        },
        end: {
          line: 245,
          column: 7
        }
      },
      "58": {
        start: {
          line: 246,
          column: 19
        },
        end: {
          line: 246,
          column: 108
        }
      },
      "59": {
        start: {
          line: 247,
          column: 4
        },
        end: {
          line: 252,
          column: 7
        }
      },
      "60": {
        start: {
          line: 253,
          column: 4
        },
        end: {
          line: 262,
          column: 7
        }
      },
      "61": {
        start: {
          line: 267,
          column: 0
        },
        end: {
          line: 298,
          column: 4
        }
      },
      "62": {
        start: {
          line: 267,
          column: 100
        },
        end: {
          line: 298,
          column: 2
        }
      },
      "63": {
        start: {
          line: 269,
          column: 24
        },
        end: {
          line: 269,
          column: 34
        }
      },
      "64": {
        start: {
          line: 270,
          column: 20
        },
        end: {
          line: 276,
          column: 5
        }
      },
      "65": {
        start: {
          line: 277,
          column: 4
        },
        end: {
          line: 279,
          column: 7
        }
      },
      "66": {
        start: {
          line: 280,
          column: 19
        },
        end: {
          line: 280,
          column: 105
        }
      },
      "67": {
        start: {
          line: 281,
          column: 4
        },
        end: {
          line: 287,
          column: 7
        }
      },
      "68": {
        start: {
          line: 288,
          column: 4
        },
        end: {
          line: 297,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 2,
            column: 45
          }
        },
        loc: {
          start: {
            line: 2,
            column: 89
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "adopt",
        decl: {
          start: {
            line: 3,
            column: 13
          },
          end: {
            line: 3,
            column: 18
          }
        },
        loc: {
          start: {
            line: 3,
            column: 26
          },
          end: {
            line: 3,
            column: 112
          }
        },
        line: 3
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 3,
            column: 70
          },
          end: {
            line: 3,
            column: 71
          }
        },
        loc: {
          start: {
            line: 3,
            column: 89
          },
          end: {
            line: 3,
            column: 108
          }
        },
        line: 3
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 4,
            column: 36
          },
          end: {
            line: 4,
            column: 37
          }
        },
        loc: {
          start: {
            line: 4,
            column: 63
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 4
      },
      "4": {
        name: "fulfilled",
        decl: {
          start: {
            line: 5,
            column: 17
          },
          end: {
            line: 5,
            column: 26
          }
        },
        loc: {
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 99
          }
        },
        line: 5
      },
      "5": {
        name: "rejected",
        decl: {
          start: {
            line: 6,
            column: 17
          },
          end: {
            line: 6,
            column: 25
          }
        },
        loc: {
          start: {
            line: 6,
            column: 33
          },
          end: {
            line: 6,
            column: 102
          }
        },
        line: 6
      },
      "6": {
        name: "step",
        decl: {
          start: {
            line: 7,
            column: 17
          },
          end: {
            line: 7,
            column: 21
          }
        },
        loc: {
          start: {
            line: 7,
            column: 30
          },
          end: {
            line: 7,
            column: 118
          }
        },
        line: 7
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 19,
            column: 66
          },
          end: {
            line: 19,
            column: 67
          }
        },
        loc: {
          start: {
            line: 19,
            column: 80
          },
          end: {
            line: 60,
            column: 2
          }
        },
        line: 19
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 19,
            column: 114
          },
          end: {
            line: 19,
            column: 115
          }
        },
        loc: {
          start: {
            line: 19,
            column: 127
          },
          end: {
            line: 60,
            column: 1
          }
        },
        line: 19
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 64,
            column: 76
          },
          end: {
            line: 64,
            column: 77
          }
        },
        loc: {
          start: {
            line: 64,
            column: 90
          },
          end: {
            line: 105,
            column: 2
          }
        },
        line: 64
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 64,
            column: 124
          },
          end: {
            line: 64,
            column: 125
          }
        },
        loc: {
          start: {
            line: 64,
            column: 137
          },
          end: {
            line: 105,
            column: 1
          }
        },
        line: 64
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 109,
            column: 65
          },
          end: {
            line: 109,
            column: 66
          }
        },
        loc: {
          start: {
            line: 109,
            column: 79
          },
          end: {
            line: 139,
            column: 2
          }
        },
        line: 109
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 109,
            column: 113
          },
          end: {
            line: 109,
            column: 114
          }
        },
        loc: {
          start: {
            line: 109,
            column: 126
          },
          end: {
            line: 139,
            column: 1
          }
        },
        line: 109
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 143,
            column: 66
          },
          end: {
            line: 143,
            column: 67
          }
        },
        loc: {
          start: {
            line: 143,
            column: 80
          },
          end: {
            line: 184,
            column: 2
          }
        },
        line: 143
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 143,
            column: 114
          },
          end: {
            line: 143,
            column: 115
          }
        },
        loc: {
          start: {
            line: 143,
            column: 127
          },
          end: {
            line: 184,
            column: 1
          }
        },
        line: 143
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 188,
            column: 70
          },
          end: {
            line: 188,
            column: 71
          }
        },
        loc: {
          start: {
            line: 188,
            column: 84
          },
          end: {
            line: 218,
            column: 2
          }
        },
        line: 188
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 188,
            column: 118
          },
          end: {
            line: 188,
            column: 119
          }
        },
        loc: {
          start: {
            line: 188,
            column: 131
          },
          end: {
            line: 218,
            column: 1
          }
        },
        line: 188
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 222,
            column: 86
          },
          end: {
            line: 222,
            column: 87
          }
        },
        loc: {
          start: {
            line: 222,
            column: 100
          },
          end: {
            line: 263,
            column: 2
          }
        },
        line: 222
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 222,
            column: 134
          },
          end: {
            line: 222,
            column: 135
          }
        },
        loc: {
          start: {
            line: 222,
            column: 147
          },
          end: {
            line: 263,
            column: 1
          }
        },
        line: 222
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 267,
            column: 86
          },
          end: {
            line: 267,
            column: 87
          }
        },
        loc: {
          start: {
            line: 267,
            column: 100
          },
          end: {
            line: 298,
            column: 2
          }
        },
        line: 267
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 267,
            column: 134
          },
          end: {
            line: 267,
            column: 135
          }
        },
        loc: {
          start: {
            line: 267,
            column: 147
          },
          end: {
            line: 298,
            column: 1
          }
        },
        line: 267
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 16
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 17
          },
          end: {
            line: 2,
            column: 21
          }
        }, {
          start: {
            line: 2,
            column: 25
          },
          end: {
            line: 2,
            column: 39
          }
        }, {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 35
          },
          end: {
            line: 3,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 56
          },
          end: {
            line: 3,
            column: 61
          }
        }, {
          start: {
            line: 3,
            column: 64
          },
          end: {
            line: 3,
            column: 109
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 17
          }
        }, {
          start: {
            line: 4,
            column: 22
          },
          end: {
            line: 4,
            column: 33
          }
        }],
        line: 4
      },
      "3": {
        loc: {
          start: {
            line: 7,
            column: 32
          },
          end: {
            line: 7,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 7,
            column: 46
          },
          end: {
            line: 7,
            column: 67
          }
        }, {
          start: {
            line: 7,
            column: 70
          },
          end: {
            line: 7,
            column: 115
          }
        }],
        line: 7
      },
      "4": {
        loc: {
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 61
          }
        }, {
          start: {
            line: 8,
            column: 65
          },
          end: {
            line: 8,
            column: 67
          }
        }],
        line: 8
      },
      "5": {
        loc: {
          start: {
            line: 29,
            column: 16
          },
          end: {
            line: 34,
            column: 23
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 30,
            column: 14
          },
          end: {
            line: 33,
            column: 13
          }
        }, {
          start: {
            line: 34,
            column: 14
          },
          end: {
            line: 34,
            column: 23
          }
        }],
        line: 29
      },
      "6": {
        loc: {
          start: {
            line: 35,
            column: 15
          },
          end: {
            line: 35,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 15
          },
          end: {
            line: 35,
            column: 40
          }
        }, {
          start: {
            line: 35,
            column: 44
          },
          end: {
            line: 35,
            column: 46
          }
        }],
        line: 35
      },
      "7": {
        loc: {
          start: {
            line: 36,
            column: 16
          },
          end: {
            line: 36,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 16
          },
          end: {
            line: 36,
            column: 42
          }
        }, {
          start: {
            line: 36,
            column: 46
          },
          end: {
            line: 36,
            column: 47
          }
        }],
        line: 36
      },
      "8": {
        loc: {
          start: {
            line: 41,
            column: 37
          },
          end: {
            line: 41,
            column: 102
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 41,
            column: 81
          },
          end: {
            line: 41,
            column: 87
          }
        }, {
          start: {
            line: 41,
            column: 90
          },
          end: {
            line: 41,
            column: 102
          }
        }],
        line: 41
      },
      "9": {
        loc: {
          start: {
            line: 41,
            column: 37
          },
          end: {
            line: 41,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 37
          },
          end: {
            line: 41,
            column: 61
          }
        }, {
          start: {
            line: 41,
            column: 65
          },
          end: {
            line: 41,
            column: 78
          }
        }],
        line: 41
      },
      "10": {
        loc: {
          start: {
            line: 47,
            column: 20
          },
          end: {
            line: 47,
            column: 85
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 47,
            column: 64
          },
          end: {
            line: 47,
            column: 70
          }
        }, {
          start: {
            line: 47,
            column: 73
          },
          end: {
            line: 47,
            column: 85
          }
        }],
        line: 47
      },
      "11": {
        loc: {
          start: {
            line: 47,
            column: 20
          },
          end: {
            line: 47,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 20
          },
          end: {
            line: 47,
            column: 44
          }
        }, {
          start: {
            line: 47,
            column: 48
          },
          end: {
            line: 47,
            column: 61
          }
        }],
        line: 47
      },
      "12": {
        loc: {
          start: {
            line: 74,
            column: 16
          },
          end: {
            line: 79,
            column: 23
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 75,
            column: 14
          },
          end: {
            line: 78,
            column: 13
          }
        }, {
          start: {
            line: 79,
            column: 14
          },
          end: {
            line: 79,
            column: 23
          }
        }],
        line: 74
      },
      "13": {
        loc: {
          start: {
            line: 80,
            column: 15
          },
          end: {
            line: 80,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 80,
            column: 15
          },
          end: {
            line: 80,
            column: 40
          }
        }, {
          start: {
            line: 80,
            column: 44
          },
          end: {
            line: 80,
            column: 46
          }
        }],
        line: 80
      },
      "14": {
        loc: {
          start: {
            line: 81,
            column: 16
          },
          end: {
            line: 81,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 81,
            column: 16
          },
          end: {
            line: 81,
            column: 42
          }
        }, {
          start: {
            line: 81,
            column: 46
          },
          end: {
            line: 81,
            column: 47
          }
        }],
        line: 81
      },
      "15": {
        loc: {
          start: {
            line: 86,
            column: 37
          },
          end: {
            line: 86,
            column: 102
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 86,
            column: 81
          },
          end: {
            line: 86,
            column: 87
          }
        }, {
          start: {
            line: 86,
            column: 90
          },
          end: {
            line: 86,
            column: 102
          }
        }],
        line: 86
      },
      "16": {
        loc: {
          start: {
            line: 86,
            column: 37
          },
          end: {
            line: 86,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 86,
            column: 37
          },
          end: {
            line: 86,
            column: 61
          }
        }, {
          start: {
            line: 86,
            column: 65
          },
          end: {
            line: 86,
            column: 78
          }
        }],
        line: 86
      },
      "17": {
        loc: {
          start: {
            line: 92,
            column: 20
          },
          end: {
            line: 92,
            column: 85
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 92,
            column: 64
          },
          end: {
            line: 92,
            column: 70
          }
        }, {
          start: {
            line: 92,
            column: 73
          },
          end: {
            line: 92,
            column: 85
          }
        }],
        line: 92
      },
      "18": {
        loc: {
          start: {
            line: 92,
            column: 20
          },
          end: {
            line: 92,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 92,
            column: 20
          },
          end: {
            line: 92,
            column: 44
          }
        }, {
          start: {
            line: 92,
            column: 48
          },
          end: {
            line: 92,
            column: 61
          }
        }],
        line: 92
      },
      "19": {
        loc: {
          start: {
            line: 114,
            column: 15
          },
          end: {
            line: 114,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 114,
            column: 15
          },
          end: {
            line: 114,
            column: 40
          }
        }, {
          start: {
            line: 114,
            column: 44
          },
          end: {
            line: 114,
            column: 46
          }
        }],
        line: 114
      },
      "20": {
        loc: {
          start: {
            line: 115,
            column: 16
          },
          end: {
            line: 115,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 115,
            column: 16
          },
          end: {
            line: 115,
            column: 42
          }
        }, {
          start: {
            line: 115,
            column: 46
          },
          end: {
            line: 115,
            column: 47
          }
        }],
        line: 115
      },
      "21": {
        loc: {
          start: {
            line: 120,
            column: 37
          },
          end: {
            line: 120,
            column: 102
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 120,
            column: 81
          },
          end: {
            line: 120,
            column: 87
          }
        }, {
          start: {
            line: 120,
            column: 90
          },
          end: {
            line: 120,
            column: 102
          }
        }],
        line: 120
      },
      "22": {
        loc: {
          start: {
            line: 120,
            column: 37
          },
          end: {
            line: 120,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 120,
            column: 37
          },
          end: {
            line: 120,
            column: 61
          }
        }, {
          start: {
            line: 120,
            column: 65
          },
          end: {
            line: 120,
            column: 78
          }
        }],
        line: 120
      },
      "23": {
        loc: {
          start: {
            line: 126,
            column: 20
          },
          end: {
            line: 126,
            column: 85
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 126,
            column: 64
          },
          end: {
            line: 126,
            column: 70
          }
        }, {
          start: {
            line: 126,
            column: 73
          },
          end: {
            line: 126,
            column: 85
          }
        }],
        line: 126
      },
      "24": {
        loc: {
          start: {
            line: 126,
            column: 20
          },
          end: {
            line: 126,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 126,
            column: 20
          },
          end: {
            line: 126,
            column: 44
          }
        }, {
          start: {
            line: 126,
            column: 48
          },
          end: {
            line: 126,
            column: 61
          }
        }],
        line: 126
      },
      "25": {
        loc: {
          start: {
            line: 154,
            column: 15
          },
          end: {
            line: 154,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 154,
            column: 15
          },
          end: {
            line: 154,
            column: 40
          }
        }, {
          start: {
            line: 154,
            column: 44
          },
          end: {
            line: 154,
            column: 46
          }
        }],
        line: 154
      },
      "26": {
        loc: {
          start: {
            line: 155,
            column: 16
          },
          end: {
            line: 155,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 155,
            column: 16
          },
          end: {
            line: 155,
            column: 42
          }
        }, {
          start: {
            line: 155,
            column: 46
          },
          end: {
            line: 155,
            column: 47
          }
        }],
        line: 155
      },
      "27": {
        loc: {
          start: {
            line: 160,
            column: 37
          },
          end: {
            line: 160,
            column: 102
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 160,
            column: 81
          },
          end: {
            line: 160,
            column: 87
          }
        }, {
          start: {
            line: 160,
            column: 90
          },
          end: {
            line: 160,
            column: 102
          }
        }],
        line: 160
      },
      "28": {
        loc: {
          start: {
            line: 160,
            column: 37
          },
          end: {
            line: 160,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 160,
            column: 37
          },
          end: {
            line: 160,
            column: 61
          }
        }, {
          start: {
            line: 160,
            column: 65
          },
          end: {
            line: 160,
            column: 78
          }
        }],
        line: 160
      },
      "29": {
        loc: {
          start: {
            line: 168,
            column: 20
          },
          end: {
            line: 168,
            column: 85
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 168,
            column: 64
          },
          end: {
            line: 168,
            column: 70
          }
        }, {
          start: {
            line: 168,
            column: 73
          },
          end: {
            line: 168,
            column: 85
          }
        }],
        line: 168
      },
      "30": {
        loc: {
          start: {
            line: 168,
            column: 20
          },
          end: {
            line: 168,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 168,
            column: 20
          },
          end: {
            line: 168,
            column: 44
          }
        }, {
          start: {
            line: 168,
            column: 48
          },
          end: {
            line: 168,
            column: 61
          }
        }],
        line: 168
      },
      "31": {
        loc: {
          start: {
            line: 191,
            column: 25
          },
          end: {
            line: 191,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 191,
            column: 25
          },
          end: {
            line: 191,
            column: 41
          }
        }, {
          start: {
            line: 191,
            column: 45
          },
          end: {
            line: 191,
            column: 47
          }
        }],
        line: 191
      },
      "32": {
        loc: {
          start: {
            line: 196,
            column: 20
          },
          end: {
            line: 196,
            column: 85
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 196,
            column: 64
          },
          end: {
            line: 196,
            column: 70
          }
        }, {
          start: {
            line: 196,
            column: 73
          },
          end: {
            line: 196,
            column: 85
          }
        }],
        line: 196
      },
      "33": {
        loc: {
          start: {
            line: 196,
            column: 20
          },
          end: {
            line: 196,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 196,
            column: 20
          },
          end: {
            line: 196,
            column: 44
          }
        }, {
          start: {
            line: 196,
            column: 48
          },
          end: {
            line: 196,
            column: 61
          }
        }],
        line: 196
      },
      "34": {
        loc: {
          start: {
            line: 204,
            column: 20
          },
          end: {
            line: 204,
            column: 85
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 204,
            column: 64
          },
          end: {
            line: 204,
            column: 70
          }
        }, {
          start: {
            line: 204,
            column: 73
          },
          end: {
            line: 204,
            column: 85
          }
        }],
        line: 204
      },
      "35": {
        loc: {
          start: {
            line: 204,
            column: 20
          },
          end: {
            line: 204,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 204,
            column: 20
          },
          end: {
            line: 204,
            column: 44
          }
        }, {
          start: {
            line: 204,
            column: 48
          },
          end: {
            line: 204,
            column: 61
          }
        }],
        line: 204
      },
      "36": {
        loc: {
          start: {
            line: 224,
            column: 23
          },
          end: {
            line: 224,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 224,
            column: 67
          },
          end: {
            line: 224,
            column: 73
          }
        }, {
          start: {
            line: 224,
            column: 76
          },
          end: {
            line: 224,
            column: 88
          }
        }],
        line: 224
      },
      "37": {
        loc: {
          start: {
            line: 224,
            column: 23
          },
          end: {
            line: 224,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 224,
            column: 23
          },
          end: {
            line: 224,
            column: 47
          }
        }, {
          start: {
            line: 224,
            column: 51
          },
          end: {
            line: 224,
            column: 64
          }
        }],
        line: 224
      },
      "38": {
        loc: {
          start: {
            line: 232,
            column: 16
          },
          end: {
            line: 237,
            column: 23
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 233,
            column: 14
          },
          end: {
            line: 236,
            column: 13
          }
        }, {
          start: {
            line: 237,
            column: 14
          },
          end: {
            line: 237,
            column: 23
          }
        }],
        line: 232
      },
      "39": {
        loc: {
          start: {
            line: 238,
            column: 15
          },
          end: {
            line: 238,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 238,
            column: 15
          },
          end: {
            line: 238,
            column: 40
          }
        }, {
          start: {
            line: 238,
            column: 44
          },
          end: {
            line: 238,
            column: 46
          }
        }],
        line: 238
      },
      "40": {
        loc: {
          start: {
            line: 239,
            column: 16
          },
          end: {
            line: 239,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 239,
            column: 16
          },
          end: {
            line: 239,
            column: 42
          }
        }, {
          start: {
            line: 239,
            column: 46
          },
          end: {
            line: 239,
            column: 47
          }
        }],
        line: 239
      },
      "41": {
        loc: {
          start: {
            line: 272,
            column: 15
          },
          end: {
            line: 272,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 272,
            column: 15
          },
          end: {
            line: 272,
            column: 40
          }
        }, {
          start: {
            line: 272,
            column: 44
          },
          end: {
            line: 272,
            column: 46
          }
        }],
        line: 272
      },
      "42": {
        loc: {
          start: {
            line: 273,
            column: 16
          },
          end: {
            line: 273,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 273,
            column: 16
          },
          end: {
            line: 273,
            column: 42
          }
        }, {
          start: {
            line: 273,
            column: 46
          },
          end: {
            line: 273,
            column: 47
          }
        }],
        line: 273
      },
      "43": {
        loc: {
          start: {
            line: 278,
            column: 46
          },
          end: {
            line: 278,
            column: 111
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 278,
            column: 90
          },
          end: {
            line: 278,
            column: 96
          }
        }, {
          start: {
            line: 278,
            column: 99
          },
          end: {
            line: 278,
            column: 111
          }
        }],
        line: 278
      },
      "44": {
        loc: {
          start: {
            line: 278,
            column: 46
          },
          end: {
            line: 278,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 278,
            column: 46
          },
          end: {
            line: 278,
            column: 70
          }
        }, {
          start: {
            line: 278,
            column: 74
          },
          end: {
            line: 278,
            column: 87
          }
        }],
        line: 278
      },
      "45": {
        loc: {
          start: {
            line: 285,
            column: 20
          },
          end: {
            line: 285,
            column: 85
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 285,
            column: 64
          },
          end: {
            line: 285,
            column: 70
          }
        }, {
          start: {
            line: 285,
            column: 73
          },
          end: {
            line: 285,
            column: 85
          }
        }],
        line: 285
      },
      "46": {
        loc: {
          start: {
            line: 285,
            column: 20
          },
          end: {
            line: 285,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 285,
            column: 20
          },
          end: {
            line: 285,
            column: 44
          }
        }, {
          start: {
            line: 285,
            column: 48
          },
          end: {
            line: 285,
            column: 61
          }
        }],
        line: 285
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\controllers\\searchController.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\controllers\\searchController.ts"],
      sourcesContent: ["import { Request, Response } from 'express';\nimport { searchService, SearchFilters } from '../services/searchService';\nimport { logger } from '../services/loggerService';\nimport { asyncHandler } from '../middleware/errorHandler';\n\n/**\n * B\xFAsqueda avanzada de eventos\n */\nexport const searchEventsController = asyncHandler(\n  async (req: Request, res: Response) => {\n    const filters: SearchFilters = {\n      query: req.query.query as string,\n      status: req.query.status as string,\n      eventType: req.query.eventType as string,\n      instrument: req.query.instrument as string,\n      dateFrom: req.query.dateFrom as string,\n      dateTo: req.query.dateTo as string,\n      location: req.query.location as string,\n      budget: req.query.budget\n        ? {\n            min: parseInt(req.query.budget as string),\n            max: parseInt(req.query.budgetMax as string),\n          }\n        : undefined,\n      limit: parseInt(req.query.limit as string) || 20,\n      offset: parseInt(req.query.offset as string) || 0,\n      sortBy: req.query.sortBy as string,\n      sortOrder: req.query.sortOrder as 'asc' | 'desc',\n    };\n\n    logger.info('B\xFAsqueda de eventos iniciada', {\n      metadata: { filters, userId: (req as any).user?.userEmail },\n    });\n\n    const result = await searchService.searchEvents(filters);\n\n    logger.info('B\xFAsqueda de eventos completada', {\n      metadata: {\n        totalResults: result.total,\n        userId: (req as any).user?.userEmail,\n      },\n    });\n\n    res.json({\n      success: true,\n      data: result.data,\n      pagination: {\n        total: result.total,\n        page: result.page,\n        limit: result.limit,\n        hasMore: result.hasMore,\n      },\n    });\n  }\n);\n\n/**\n * B\xFAsqueda avanzada de solicitudes de m\xFAsicos\n */\nexport const searchMusicianRequestsController = asyncHandler(\n  async (req: Request, res: Response) => {\n    const filters: SearchFilters = {\n      query: req.query.query as string,\n      status: req.query.status as string,\n      eventType: req.query.eventType as string,\n      instrument: req.query.instrument as string,\n      dateFrom: req.query.dateFrom as string,\n      dateTo: req.query.dateTo as string,\n      location: req.query.location as string,\n      budget: req.query.budget\n        ? {\n            min: parseInt(req.query.budget as string),\n            max: parseInt(req.query.budgetMax as string),\n          }\n        : undefined,\n      limit: parseInt(req.query.limit as string) || 20,\n      offset: parseInt(req.query.offset as string) || 0,\n      sortBy: req.query.sortBy as string,\n      sortOrder: req.query.sortOrder as 'asc' | 'desc',\n    };\n\n    logger.info('B\xFAsqueda de solicitudes iniciada', {\n      metadata: { filters, userId: (req as any).user?.userEmail },\n    });\n\n    const result = await searchService.searchMusicianRequests(filters);\n\n    logger.info('B\xFAsqueda de solicitudes completada', {\n      metadata: {\n        totalResults: result.total,\n        userId: (req as any).user?.userEmail,\n      },\n    });\n\n    res.json({\n      success: true,\n      data: result.data,\n      pagination: {\n        total: result.total,\n        page: result.page,\n        limit: result.limit,\n        hasMore: result.hasMore,\n      },\n    });\n  }\n);\n\n/**\n * B\xFAsqueda avanzada de usuarios\n */\nexport const searchUsersController = asyncHandler(\n  async (req: Request, res: Response) => {\n    const filters: SearchFilters = {\n      query: req.query.query as string,\n      userRole: req.query.userRole as string,\n      limit: parseInt(req.query.limit as string) || 20,\n      offset: parseInt(req.query.offset as string) || 0,\n      sortBy: req.query.sortBy as string,\n      sortOrder: req.query.sortOrder as 'asc' | 'desc',\n    };\n\n    logger.info('B\xFAsqueda de usuarios iniciada', {\n      metadata: { filters, userId: (req as any).user?.userEmail },\n    });\n\n    const result = await searchService.searchUsers(filters);\n\n    logger.info('B\xFAsqueda de usuarios completada', {\n      metadata: {\n        totalResults: result.total,\n        userId: (req as any).user?.userEmail,\n      },\n    });\n\n    res.json({\n      success: true,\n      data: result.data,\n      pagination: {\n        total: result.total,\n        page: result.page,\n        limit: result.limit,\n        hasMore: result.hasMore,\n      },\n    });\n  }\n);\n\n/**\n * B\xFAsqueda global en todas las colecciones\n */\nexport const globalSearchController = asyncHandler(\n  async (req: Request, res: Response) => {\n    const filters: SearchFilters = {\n      query: req.query.query as string,\n      status: req.query.status as string,\n      eventType: req.query.eventType as string,\n      instrument: req.query.instrument as string,\n      dateFrom: req.query.dateFrom as string,\n      dateTo: req.query.dateTo as string,\n      location: req.query.location as string,\n      userRole: req.query.userRole as string,\n      limit: parseInt(req.query.limit as string) || 10,\n      offset: parseInt(req.query.offset as string) || 0,\n      sortBy: req.query.sortBy as string,\n      sortOrder: req.query.sortOrder as 'asc' | 'desc',\n    };\n\n    logger.info('B\xFAsqueda global iniciada', {\n      metadata: { filters, userId: (req as any).user?.userEmail },\n    });\n\n    const result = await searchService.globalSearch(filters);\n\n    logger.info('B\xFAsqueda global completada', {\n      metadata: {\n        totalEvents: result.events.length,\n        totalRequests: result.requests.length,\n        totalUsers: result.users.length,\n        userId: (req as any).user?.userEmail,\n      },\n    });\n\n    res.json({\n      success: true,\n      data: {\n        events: result.events,\n        requests: result.requests,\n        users: result.users,\n      },\n      summary: {\n        totalEvents: result.events.length,\n        totalRequests: result.requests.length,\n        totalUsers: result.users.length,\n      },\n    });\n  }\n);\n\n/**\n * B\xFAsqueda por ubicaci\xF3n\n */\nexport const searchByLocationController = asyncHandler(\n  async (req: Request, res: Response) => {\n    const { location, radius } = req.query;\n    const searchRadius = parseInt(radius as string) || 50;\n\n    logger.info('B\xFAsqueda por ubicaci\xF3n iniciada', {\n      metadata: {\n        location,\n        radius: searchRadius,\n        userId: (req as any).user?.userEmail,\n      },\n    });\n\n    const result = await searchService.searchByLocation(\n      location as string,\n      searchRadius\n    );\n\n    logger.info('B\xFAsqueda por ubicaci\xF3n completada', {\n      metadata: {\n        totalEvents: result.events.length,\n        totalRequests: result.requests.length,\n        userId: (req as any).user?.userEmail,\n      },\n    });\n\n    res.json({\n      success: true,\n      data: {\n        events: result.events,\n        requests: result.requests,\n      },\n      location: {\n        searchLocation: location,\n        radius: searchRadius,\n      },\n    });\n  }\n);\n\n/**\n * B\xFAsqueda de eventos disponibles para m\xFAsicos\n */\nexport const searchAvailableEventsForMusicianController = asyncHandler(\n  async (req: Request, res: Response) => {\n    const musicianId = (req as any).user?.userEmail;\n    const filters: SearchFilters = {\n      query: req.query.query as string,\n      eventType: req.query.eventType as string,\n      instrument: req.query.instrument as string,\n      dateFrom: req.query.dateFrom as string,\n      dateTo: req.query.dateTo as string,\n      location: req.query.location as string,\n      budget: req.query.budget\n        ? {\n            min: parseInt(req.query.budget as string),\n            max: parseInt(req.query.budgetMax as string),\n          }\n        : undefined,\n      limit: parseInt(req.query.limit as string) || 20,\n      offset: parseInt(req.query.offset as string) || 0,\n      sortBy: req.query.sortBy as string,\n      sortOrder: req.query.sortOrder as 'asc' | 'desc',\n    };\n\n    logger.info('B\xFAsqueda de eventos disponibles para m\xFAsico iniciada', {\n      metadata: { filters, musicianId },\n    });\n\n    const result = await searchService.searchAvailableEventsForMusician(\n      musicianId,\n      filters\n    );\n\n    logger.info('B\xFAsqueda de eventos disponibles para m\xFAsico completada', {\n      metadata: {\n        totalResults: result.total,\n        musicianId,\n      },\n    });\n\n    res.json({\n      success: true,\n      data: result.data,\n      pagination: {\n        total: result.total,\n        page: result.page,\n        limit: result.limit,\n        hasMore: result.hasMore,\n      },\n    });\n  }\n);\n\n/**\n * B\xFAsqueda de m\xFAsicos disponibles para un evento\n */\nexport const searchAvailableMusiciansForEventController = asyncHandler(\n  async (req: Request, res: Response) => {\n    const { eventId } = req.params;\n    const filters: SearchFilters = {\n      query: req.query.query as string,\n      limit: parseInt(req.query.limit as string) || 20,\n      offset: parseInt(req.query.offset as string) || 0,\n      sortBy: req.query.sortBy as string,\n      sortOrder: req.query.sortOrder as 'asc' | 'desc',\n    };\n\n    logger.info('B\xFAsqueda de m\xFAsicos disponibles para evento iniciada', {\n      metadata: { filters, eventId, userId: (req as any).user?.userEmail },\n    });\n\n    const result = await searchService.searchAvailableMusiciansForEvent(\n      eventId,\n      filters\n    );\n\n    logger.info('B\xFAsqueda de m\xFAsicos disponibles para evento completada', {\n      metadata: {\n        totalResults: result.total,\n        eventId,\n        userId: (req as any).user?.userEmail,\n      },\n    });\n\n    res.json({\n      success: true,\n      data: result.data,\n      pagination: {\n        total: result.total,\n        page: result.page,\n        limit: result.limit,\n        hasMore: result.hasMore,\n      },\n    });\n  }\n);\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "00ab09ede7bf04b4a4be82ab3287fa2c93ec0840"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_4uflomp0l = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_4uflomp0l();
var __awaiter =
/* istanbul ignore next */
(cov_4uflomp0l().s[0]++,
/* istanbul ignore next */
(cov_4uflomp0l().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_4uflomp0l().b[0][1]++, this.__awaiter) ||
/* istanbul ignore next */
(cov_4uflomp0l().b[0][2]++, function (thisArg, _arguments, P, generator) {
  /* istanbul ignore next */
  cov_4uflomp0l().f[0]++;
  function adopt(value) {
    /* istanbul ignore next */
    cov_4uflomp0l().f[1]++;
    cov_4uflomp0l().s[1]++;
    return value instanceof P ?
    /* istanbul ignore next */
    (cov_4uflomp0l().b[1][0]++, value) :
    /* istanbul ignore next */
    (cov_4uflomp0l().b[1][1]++, new P(function (resolve) {
      /* istanbul ignore next */
      cov_4uflomp0l().f[2]++;
      cov_4uflomp0l().s[2]++;
      resolve(value);
    }));
  }
  /* istanbul ignore next */
  cov_4uflomp0l().s[3]++;
  return new (
  /* istanbul ignore next */
  (cov_4uflomp0l().b[2][0]++, P) ||
  /* istanbul ignore next */
  (cov_4uflomp0l().b[2][1]++, P = Promise))(function (resolve, reject) {
    /* istanbul ignore next */
    cov_4uflomp0l().f[3]++;
    function fulfilled(value) {
      /* istanbul ignore next */
      cov_4uflomp0l().f[4]++;
      cov_4uflomp0l().s[4]++;
      try {
        /* istanbul ignore next */
        cov_4uflomp0l().s[5]++;
        step(generator.next(value));
      } catch (e) {
        /* istanbul ignore next */
        cov_4uflomp0l().s[6]++;
        reject(e);
      }
    }
    function rejected(value) {
      /* istanbul ignore next */
      cov_4uflomp0l().f[5]++;
      cov_4uflomp0l().s[7]++;
      try {
        /* istanbul ignore next */
        cov_4uflomp0l().s[8]++;
        step(generator["throw"](value));
      } catch (e) {
        /* istanbul ignore next */
        cov_4uflomp0l().s[9]++;
        reject(e);
      }
    }
    function step(result) {
      /* istanbul ignore next */
      cov_4uflomp0l().f[6]++;
      cov_4uflomp0l().s[10]++;
      result.done ?
      /* istanbul ignore next */
      (cov_4uflomp0l().b[3][0]++, resolve(result.value)) :
      /* istanbul ignore next */
      (cov_4uflomp0l().b[3][1]++, adopt(result.value).then(fulfilled, rejected));
    }
    /* istanbul ignore next */
    cov_4uflomp0l().s[11]++;
    step((generator = generator.apply(thisArg,
    /* istanbul ignore next */
    (cov_4uflomp0l().b[4][0]++, _arguments) ||
    /* istanbul ignore next */
    (cov_4uflomp0l().b[4][1]++, []))).next());
  });
}));
/* istanbul ignore next */
cov_4uflomp0l().s[12]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_4uflomp0l().s[13]++;
exports.searchAvailableMusiciansForEventController = exports.searchAvailableEventsForMusicianController = exports.searchByLocationController = exports.globalSearchController = exports.searchUsersController = exports.searchMusicianRequestsController = exports.searchEventsController = void 0;
const searchService_1 =
/* istanbul ignore next */
(cov_4uflomp0l().s[14]++, require("../services/searchService"));
const loggerService_1 =
/* istanbul ignore next */
(cov_4uflomp0l().s[15]++, require("../services/loggerService"));
const errorHandler_1 =
/* istanbul ignore next */
(cov_4uflomp0l().s[16]++, require("../middleware/errorHandler"));
/**
 * Búsqueda avanzada de eventos
 */
/* istanbul ignore next */
cov_4uflomp0l().s[17]++;
exports.searchEventsController = (0, errorHandler_1.asyncHandler)((req, res) => {
  /* istanbul ignore next */
  cov_4uflomp0l().f[7]++;
  cov_4uflomp0l().s[18]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_4uflomp0l().f[8]++;
    var _a, _b;
    const filters =
    /* istanbul ignore next */
    (cov_4uflomp0l().s[19]++, {
      query: req.query.query,
      status: req.query.status,
      eventType: req.query.eventType,
      instrument: req.query.instrument,
      dateFrom: req.query.dateFrom,
      dateTo: req.query.dateTo,
      location: req.query.location,
      budget: req.query.budget ?
      /* istanbul ignore next */
      (cov_4uflomp0l().b[5][0]++, {
        min: parseInt(req.query.budget),
        max: parseInt(req.query.budgetMax)
      }) :
      /* istanbul ignore next */
      (cov_4uflomp0l().b[5][1]++, undefined),
      limit:
      /* istanbul ignore next */
      (cov_4uflomp0l().b[6][0]++, parseInt(req.query.limit)) ||
      /* istanbul ignore next */
      (cov_4uflomp0l().b[6][1]++, 20),
      offset:
      /* istanbul ignore next */
      (cov_4uflomp0l().b[7][0]++, parseInt(req.query.offset)) ||
      /* istanbul ignore next */
      (cov_4uflomp0l().b[7][1]++, 0),
      sortBy: req.query.sortBy,
      sortOrder: req.query.sortOrder
    });
    /* istanbul ignore next */
    cov_4uflomp0l().s[20]++;
    loggerService_1.logger.info('Búsqueda de eventos iniciada', {
      metadata: {
        filters,
        userId:
        /* istanbul ignore next */
        (cov_4uflomp0l().b[9][0]++, (_a = req.user) === null) ||
        /* istanbul ignore next */
        (cov_4uflomp0l().b[9][1]++, _a === void 0) ?
        /* istanbul ignore next */
        (cov_4uflomp0l().b[8][0]++, void 0) :
        /* istanbul ignore next */
        (cov_4uflomp0l().b[8][1]++, _a.userEmail)
      }
    });
    const result =
    /* istanbul ignore next */
    (cov_4uflomp0l().s[21]++, yield searchService_1.searchService.searchEvents(filters));
    /* istanbul ignore next */
    cov_4uflomp0l().s[22]++;
    loggerService_1.logger.info('Búsqueda de eventos completada', {
      metadata: {
        totalResults: result.total,
        userId:
        /* istanbul ignore next */
        (cov_4uflomp0l().b[11][0]++, (_b = req.user) === null) ||
        /* istanbul ignore next */
        (cov_4uflomp0l().b[11][1]++, _b === void 0) ?
        /* istanbul ignore next */
        (cov_4uflomp0l().b[10][0]++, void 0) :
        /* istanbul ignore next */
        (cov_4uflomp0l().b[10][1]++, _b.userEmail)
      }
    });
    /* istanbul ignore next */
    cov_4uflomp0l().s[23]++;
    res.json({
      success: true,
      data: result.data,
      pagination: {
        total: result.total,
        page: result.page,
        limit: result.limit,
        hasMore: result.hasMore
      }
    });
  });
});
/**
 * Búsqueda avanzada de solicitudes de músicos
 */
/* istanbul ignore next */
cov_4uflomp0l().s[24]++;
exports.searchMusicianRequestsController = (0, errorHandler_1.asyncHandler)((req, res) => {
  /* istanbul ignore next */
  cov_4uflomp0l().f[9]++;
  cov_4uflomp0l().s[25]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_4uflomp0l().f[10]++;
    var _a, _b;
    const filters =
    /* istanbul ignore next */
    (cov_4uflomp0l().s[26]++, {
      query: req.query.query,
      status: req.query.status,
      eventType: req.query.eventType,
      instrument: req.query.instrument,
      dateFrom: req.query.dateFrom,
      dateTo: req.query.dateTo,
      location: req.query.location,
      budget: req.query.budget ?
      /* istanbul ignore next */
      (cov_4uflomp0l().b[12][0]++, {
        min: parseInt(req.query.budget),
        max: parseInt(req.query.budgetMax)
      }) :
      /* istanbul ignore next */
      (cov_4uflomp0l().b[12][1]++, undefined),
      limit:
      /* istanbul ignore next */
      (cov_4uflomp0l().b[13][0]++, parseInt(req.query.limit)) ||
      /* istanbul ignore next */
      (cov_4uflomp0l().b[13][1]++, 20),
      offset:
      /* istanbul ignore next */
      (cov_4uflomp0l().b[14][0]++, parseInt(req.query.offset)) ||
      /* istanbul ignore next */
      (cov_4uflomp0l().b[14][1]++, 0),
      sortBy: req.query.sortBy,
      sortOrder: req.query.sortOrder
    });
    /* istanbul ignore next */
    cov_4uflomp0l().s[27]++;
    loggerService_1.logger.info('Búsqueda de solicitudes iniciada', {
      metadata: {
        filters,
        userId:
        /* istanbul ignore next */
        (cov_4uflomp0l().b[16][0]++, (_a = req.user) === null) ||
        /* istanbul ignore next */
        (cov_4uflomp0l().b[16][1]++, _a === void 0) ?
        /* istanbul ignore next */
        (cov_4uflomp0l().b[15][0]++, void 0) :
        /* istanbul ignore next */
        (cov_4uflomp0l().b[15][1]++, _a.userEmail)
      }
    });
    const result =
    /* istanbul ignore next */
    (cov_4uflomp0l().s[28]++, yield searchService_1.searchService.searchMusicianRequests(filters));
    /* istanbul ignore next */
    cov_4uflomp0l().s[29]++;
    loggerService_1.logger.info('Búsqueda de solicitudes completada', {
      metadata: {
        totalResults: result.total,
        userId:
        /* istanbul ignore next */
        (cov_4uflomp0l().b[18][0]++, (_b = req.user) === null) ||
        /* istanbul ignore next */
        (cov_4uflomp0l().b[18][1]++, _b === void 0) ?
        /* istanbul ignore next */
        (cov_4uflomp0l().b[17][0]++, void 0) :
        /* istanbul ignore next */
        (cov_4uflomp0l().b[17][1]++, _b.userEmail)
      }
    });
    /* istanbul ignore next */
    cov_4uflomp0l().s[30]++;
    res.json({
      success: true,
      data: result.data,
      pagination: {
        total: result.total,
        page: result.page,
        limit: result.limit,
        hasMore: result.hasMore
      }
    });
  });
});
/**
 * Búsqueda avanzada de usuarios
 */
/* istanbul ignore next */
cov_4uflomp0l().s[31]++;
exports.searchUsersController = (0, errorHandler_1.asyncHandler)((req, res) => {
  /* istanbul ignore next */
  cov_4uflomp0l().f[11]++;
  cov_4uflomp0l().s[32]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_4uflomp0l().f[12]++;
    var _a, _b;
    const filters =
    /* istanbul ignore next */
    (cov_4uflomp0l().s[33]++, {
      query: req.query.query,
      userRole: req.query.userRole,
      limit:
      /* istanbul ignore next */
      (cov_4uflomp0l().b[19][0]++, parseInt(req.query.limit)) ||
      /* istanbul ignore next */
      (cov_4uflomp0l().b[19][1]++, 20),
      offset:
      /* istanbul ignore next */
      (cov_4uflomp0l().b[20][0]++, parseInt(req.query.offset)) ||
      /* istanbul ignore next */
      (cov_4uflomp0l().b[20][1]++, 0),
      sortBy: req.query.sortBy,
      sortOrder: req.query.sortOrder
    });
    /* istanbul ignore next */
    cov_4uflomp0l().s[34]++;
    loggerService_1.logger.info('Búsqueda de usuarios iniciada', {
      metadata: {
        filters,
        userId:
        /* istanbul ignore next */
        (cov_4uflomp0l().b[22][0]++, (_a = req.user) === null) ||
        /* istanbul ignore next */
        (cov_4uflomp0l().b[22][1]++, _a === void 0) ?
        /* istanbul ignore next */
        (cov_4uflomp0l().b[21][0]++, void 0) :
        /* istanbul ignore next */
        (cov_4uflomp0l().b[21][1]++, _a.userEmail)
      }
    });
    const result =
    /* istanbul ignore next */
    (cov_4uflomp0l().s[35]++, yield searchService_1.searchService.searchUsers(filters));
    /* istanbul ignore next */
    cov_4uflomp0l().s[36]++;
    loggerService_1.logger.info('Búsqueda de usuarios completada', {
      metadata: {
        totalResults: result.total,
        userId:
        /* istanbul ignore next */
        (cov_4uflomp0l().b[24][0]++, (_b = req.user) === null) ||
        /* istanbul ignore next */
        (cov_4uflomp0l().b[24][1]++, _b === void 0) ?
        /* istanbul ignore next */
        (cov_4uflomp0l().b[23][0]++, void 0) :
        /* istanbul ignore next */
        (cov_4uflomp0l().b[23][1]++, _b.userEmail)
      }
    });
    /* istanbul ignore next */
    cov_4uflomp0l().s[37]++;
    res.json({
      success: true,
      data: result.data,
      pagination: {
        total: result.total,
        page: result.page,
        limit: result.limit,
        hasMore: result.hasMore
      }
    });
  });
});
/**
 * Búsqueda global en todas las colecciones
 */
/* istanbul ignore next */
cov_4uflomp0l().s[38]++;
exports.globalSearchController = (0, errorHandler_1.asyncHandler)((req, res) => {
  /* istanbul ignore next */
  cov_4uflomp0l().f[13]++;
  cov_4uflomp0l().s[39]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_4uflomp0l().f[14]++;
    var _a, _b;
    const filters =
    /* istanbul ignore next */
    (cov_4uflomp0l().s[40]++, {
      query: req.query.query,
      status: req.query.status,
      eventType: req.query.eventType,
      instrument: req.query.instrument,
      dateFrom: req.query.dateFrom,
      dateTo: req.query.dateTo,
      location: req.query.location,
      userRole: req.query.userRole,
      limit:
      /* istanbul ignore next */
      (cov_4uflomp0l().b[25][0]++, parseInt(req.query.limit)) ||
      /* istanbul ignore next */
      (cov_4uflomp0l().b[25][1]++, 10),
      offset:
      /* istanbul ignore next */
      (cov_4uflomp0l().b[26][0]++, parseInt(req.query.offset)) ||
      /* istanbul ignore next */
      (cov_4uflomp0l().b[26][1]++, 0),
      sortBy: req.query.sortBy,
      sortOrder: req.query.sortOrder
    });
    /* istanbul ignore next */
    cov_4uflomp0l().s[41]++;
    loggerService_1.logger.info('Búsqueda global iniciada', {
      metadata: {
        filters,
        userId:
        /* istanbul ignore next */
        (cov_4uflomp0l().b[28][0]++, (_a = req.user) === null) ||
        /* istanbul ignore next */
        (cov_4uflomp0l().b[28][1]++, _a === void 0) ?
        /* istanbul ignore next */
        (cov_4uflomp0l().b[27][0]++, void 0) :
        /* istanbul ignore next */
        (cov_4uflomp0l().b[27][1]++, _a.userEmail)
      }
    });
    const result =
    /* istanbul ignore next */
    (cov_4uflomp0l().s[42]++, yield searchService_1.searchService.globalSearch(filters));
    /* istanbul ignore next */
    cov_4uflomp0l().s[43]++;
    loggerService_1.logger.info('Búsqueda global completada', {
      metadata: {
        totalEvents: result.events.length,
        totalRequests: result.requests.length,
        totalUsers: result.users.length,
        userId:
        /* istanbul ignore next */
        (cov_4uflomp0l().b[30][0]++, (_b = req.user) === null) ||
        /* istanbul ignore next */
        (cov_4uflomp0l().b[30][1]++, _b === void 0) ?
        /* istanbul ignore next */
        (cov_4uflomp0l().b[29][0]++, void 0) :
        /* istanbul ignore next */
        (cov_4uflomp0l().b[29][1]++, _b.userEmail)
      }
    });
    /* istanbul ignore next */
    cov_4uflomp0l().s[44]++;
    res.json({
      success: true,
      data: {
        events: result.events,
        requests: result.requests,
        users: result.users
      },
      summary: {
        totalEvents: result.events.length,
        totalRequests: result.requests.length,
        totalUsers: result.users.length
      }
    });
  });
});
/**
 * Búsqueda por ubicación
 */
/* istanbul ignore next */
cov_4uflomp0l().s[45]++;
exports.searchByLocationController = (0, errorHandler_1.asyncHandler)((req, res) => {
  /* istanbul ignore next */
  cov_4uflomp0l().f[15]++;
  cov_4uflomp0l().s[46]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_4uflomp0l().f[16]++;
    var _a, _b;
    const {
      location,
      radius
    } =
    /* istanbul ignore next */
    (cov_4uflomp0l().s[47]++, req.query);
    const searchRadius =
    /* istanbul ignore next */
    (cov_4uflomp0l().s[48]++,
    /* istanbul ignore next */
    (cov_4uflomp0l().b[31][0]++, parseInt(radius)) ||
    /* istanbul ignore next */
    (cov_4uflomp0l().b[31][1]++, 50));
    /* istanbul ignore next */
    cov_4uflomp0l().s[49]++;
    loggerService_1.logger.info('Búsqueda por ubicación iniciada', {
      metadata: {
        location,
        radius: searchRadius,
        userId:
        /* istanbul ignore next */
        (cov_4uflomp0l().b[33][0]++, (_a = req.user) === null) ||
        /* istanbul ignore next */
        (cov_4uflomp0l().b[33][1]++, _a === void 0) ?
        /* istanbul ignore next */
        (cov_4uflomp0l().b[32][0]++, void 0) :
        /* istanbul ignore next */
        (cov_4uflomp0l().b[32][1]++, _a.userEmail)
      }
    });
    const result =
    /* istanbul ignore next */
    (cov_4uflomp0l().s[50]++, yield searchService_1.searchService.searchByLocation(location, searchRadius));
    /* istanbul ignore next */
    cov_4uflomp0l().s[51]++;
    loggerService_1.logger.info('Búsqueda por ubicación completada', {
      metadata: {
        totalEvents: result.events.length,
        totalRequests: result.requests.length,
        userId:
        /* istanbul ignore next */
        (cov_4uflomp0l().b[35][0]++, (_b = req.user) === null) ||
        /* istanbul ignore next */
        (cov_4uflomp0l().b[35][1]++, _b === void 0) ?
        /* istanbul ignore next */
        (cov_4uflomp0l().b[34][0]++, void 0) :
        /* istanbul ignore next */
        (cov_4uflomp0l().b[34][1]++, _b.userEmail)
      }
    });
    /* istanbul ignore next */
    cov_4uflomp0l().s[52]++;
    res.json({
      success: true,
      data: {
        events: result.events,
        requests: result.requests
      },
      location: {
        searchLocation: location,
        radius: searchRadius
      }
    });
  });
});
/**
 * Búsqueda de eventos disponibles para músicos
 */
/* istanbul ignore next */
cov_4uflomp0l().s[53]++;
exports.searchAvailableEventsForMusicianController = (0, errorHandler_1.asyncHandler)((req, res) => {
  /* istanbul ignore next */
  cov_4uflomp0l().f[17]++;
  cov_4uflomp0l().s[54]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_4uflomp0l().f[18]++;
    var _a;
    const musicianId =
    /* istanbul ignore next */
    (cov_4uflomp0l().s[55]++,
    /* istanbul ignore next */
    (cov_4uflomp0l().b[37][0]++, (_a = req.user) === null) ||
    /* istanbul ignore next */
    (cov_4uflomp0l().b[37][1]++, _a === void 0) ?
    /* istanbul ignore next */
    (cov_4uflomp0l().b[36][0]++, void 0) :
    /* istanbul ignore next */
    (cov_4uflomp0l().b[36][1]++, _a.userEmail));
    const filters =
    /* istanbul ignore next */
    (cov_4uflomp0l().s[56]++, {
      query: req.query.query,
      eventType: req.query.eventType,
      instrument: req.query.instrument,
      dateFrom: req.query.dateFrom,
      dateTo: req.query.dateTo,
      location: req.query.location,
      budget: req.query.budget ?
      /* istanbul ignore next */
      (cov_4uflomp0l().b[38][0]++, {
        min: parseInt(req.query.budget),
        max: parseInt(req.query.budgetMax)
      }) :
      /* istanbul ignore next */
      (cov_4uflomp0l().b[38][1]++, undefined),
      limit:
      /* istanbul ignore next */
      (cov_4uflomp0l().b[39][0]++, parseInt(req.query.limit)) ||
      /* istanbul ignore next */
      (cov_4uflomp0l().b[39][1]++, 20),
      offset:
      /* istanbul ignore next */
      (cov_4uflomp0l().b[40][0]++, parseInt(req.query.offset)) ||
      /* istanbul ignore next */
      (cov_4uflomp0l().b[40][1]++, 0),
      sortBy: req.query.sortBy,
      sortOrder: req.query.sortOrder
    });
    /* istanbul ignore next */
    cov_4uflomp0l().s[57]++;
    loggerService_1.logger.info('Búsqueda de eventos disponibles para músico iniciada', {
      metadata: {
        filters,
        musicianId
      }
    });
    const result =
    /* istanbul ignore next */
    (cov_4uflomp0l().s[58]++, yield searchService_1.searchService.searchAvailableEventsForMusician(musicianId, filters));
    /* istanbul ignore next */
    cov_4uflomp0l().s[59]++;
    loggerService_1.logger.info('Búsqueda de eventos disponibles para músico completada', {
      metadata: {
        totalResults: result.total,
        musicianId
      }
    });
    /* istanbul ignore next */
    cov_4uflomp0l().s[60]++;
    res.json({
      success: true,
      data: result.data,
      pagination: {
        total: result.total,
        page: result.page,
        limit: result.limit,
        hasMore: result.hasMore
      }
    });
  });
});
/**
 * Búsqueda de músicos disponibles para un evento
 */
/* istanbul ignore next */
cov_4uflomp0l().s[61]++;
exports.searchAvailableMusiciansForEventController = (0, errorHandler_1.asyncHandler)((req, res) => {
  /* istanbul ignore next */
  cov_4uflomp0l().f[19]++;
  cov_4uflomp0l().s[62]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_4uflomp0l().f[20]++;
    var _a, _b;
    const {
      eventId
    } =
    /* istanbul ignore next */
    (cov_4uflomp0l().s[63]++, req.params);
    const filters =
    /* istanbul ignore next */
    (cov_4uflomp0l().s[64]++, {
      query: req.query.query,
      limit:
      /* istanbul ignore next */
      (cov_4uflomp0l().b[41][0]++, parseInt(req.query.limit)) ||
      /* istanbul ignore next */
      (cov_4uflomp0l().b[41][1]++, 20),
      offset:
      /* istanbul ignore next */
      (cov_4uflomp0l().b[42][0]++, parseInt(req.query.offset)) ||
      /* istanbul ignore next */
      (cov_4uflomp0l().b[42][1]++, 0),
      sortBy: req.query.sortBy,
      sortOrder: req.query.sortOrder
    });
    /* istanbul ignore next */
    cov_4uflomp0l().s[65]++;
    loggerService_1.logger.info('Búsqueda de músicos disponibles para evento iniciada', {
      metadata: {
        filters,
        eventId,
        userId:
        /* istanbul ignore next */
        (cov_4uflomp0l().b[44][0]++, (_a = req.user) === null) ||
        /* istanbul ignore next */
        (cov_4uflomp0l().b[44][1]++, _a === void 0) ?
        /* istanbul ignore next */
        (cov_4uflomp0l().b[43][0]++, void 0) :
        /* istanbul ignore next */
        (cov_4uflomp0l().b[43][1]++, _a.userEmail)
      }
    });
    const result =
    /* istanbul ignore next */
    (cov_4uflomp0l().s[66]++, yield searchService_1.searchService.searchAvailableMusiciansForEvent(eventId, filters));
    /* istanbul ignore next */
    cov_4uflomp0l().s[67]++;
    loggerService_1.logger.info('Búsqueda de músicos disponibles para evento completada', {
      metadata: {
        totalResults: result.total,
        eventId,
        userId:
        /* istanbul ignore next */
        (cov_4uflomp0l().b[46][0]++, (_b = req.user) === null) ||
        /* istanbul ignore next */
        (cov_4uflomp0l().b[46][1]++, _b === void 0) ?
        /* istanbul ignore next */
        (cov_4uflomp0l().b[45][0]++, void 0) :
        /* istanbul ignore next */
        (cov_4uflomp0l().b[45][1]++, _b.userEmail)
      }
    });
    /* istanbul ignore next */
    cov_4uflomp0l().s[68]++;
    res.json({
      success: true,
      data: result.data,
      pagination: {
        total: result.total,
        page: result.page,
        limit: result.limit,
        hasMore: result.hasMore
      }
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,