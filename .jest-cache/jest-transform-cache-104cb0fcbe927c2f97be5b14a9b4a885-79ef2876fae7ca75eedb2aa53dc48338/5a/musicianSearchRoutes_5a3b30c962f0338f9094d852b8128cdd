3ca5e9da4a6d1a0431d810ee5c29ef8b
"use strict";

/* istanbul ignore next */
function cov_1jv3jiwigw() {
  var path = "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\routes\\musicianSearchRoutes.ts";
  var hash = "b3cbe838cb95709f10d71b38a39f3f2d27fed1db";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\routes\\musicianSearchRoutes.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 16
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 28
        },
        end: {
          line: 3,
          column: 110
        }
      },
      "2": {
        start: {
          line: 3,
          column: 91
        },
        end: {
          line: 3,
          column: 106
        }
      },
      "3": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "4": {
        start: {
          line: 5,
          column: 36
        },
        end: {
          line: 5,
          column: 97
        }
      },
      "5": {
        start: {
          line: 5,
          column: 42
        },
        end: {
          line: 5,
          column: 70
        }
      },
      "6": {
        start: {
          line: 5,
          column: 85
        },
        end: {
          line: 5,
          column: 95
        }
      },
      "7": {
        start: {
          line: 6,
          column: 35
        },
        end: {
          line: 6,
          column: 100
        }
      },
      "8": {
        start: {
          line: 6,
          column: 41
        },
        end: {
          line: 6,
          column: 73
        }
      },
      "9": {
        start: {
          line: 6,
          column: 88
        },
        end: {
          line: 6,
          column: 98
        }
      },
      "10": {
        start: {
          line: 7,
          column: 32
        },
        end: {
          line: 7,
          column: 116
        }
      },
      "11": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 78
        }
      },
      "12": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 62
        }
      },
      "13": {
        start: {
          line: 12,
          column: 18
        },
        end: {
          line: 12,
          column: 36
        }
      },
      "14": {
        start: {
          line: 13,
          column: 25
        },
        end: {
          line: 13,
          column: 64
        }
      },
      "15": {
        start: {
          line: 14,
          column: 23
        },
        end: {
          line: 14,
          column: 60
        }
      },
      "16": {
        start: {
          line: 15,
          column: 24
        },
        end: {
          line: 15,
          column: 60
        }
      },
      "17": {
        start: {
          line: 16,
          column: 35
        },
        end: {
          line: 16,
          column: 85
        }
      },
      "18": {
        start: {
          line: 17,
          column: 15
        },
        end: {
          line: 17,
          column: 38
        }
      },
      "19": {
        start: {
          line: 127,
          column: 0
        },
        end: {
          line: 134,
          column: 5
        }
      },
      "20": {
        start: {
          line: 127,
          column: 113
        },
        end: {
          line: 134,
          column: 2
        }
      },
      "21": {
        start: {
          line: 129,
          column: 4
        },
        end: {
          line: 131,
          column: 7
        }
      },
      "22": {
        start: {
          line: 132,
          column: 4
        },
        end: {
          line: 132,
          column: 96
        }
      },
      "23": {
        start: {
          line: 133,
          column: 4
        },
        end: {
          line: 133,
          column: 136
        }
      },
      "24": {
        start: {
          line: 206,
          column: 0
        },
        end: {
          line: 213,
          column: 5
        }
      },
      "25": {
        start: {
          line: 206,
          column: 120
        },
        end: {
          line: 213,
          column: 2
        }
      },
      "26": {
        start: {
          line: 208,
          column: 4
        },
        end: {
          line: 210,
          column: 7
        }
      },
      "27": {
        start: {
          line: 211,
          column: 4
        },
        end: {
          line: 211,
          column: 96
        }
      },
      "28": {
        start: {
          line: 212,
          column: 4
        },
        end: {
          line: 212,
          column: 131
        }
      },
      "29": {
        start: {
          line: 318,
          column: 0
        },
        end: {
          line: 325,
          column: 5
        }
      },
      "30": {
        start: {
          line: 318,
          column: 112
        },
        end: {
          line: 325,
          column: 2
        }
      },
      "31": {
        start: {
          line: 320,
          column: 4
        },
        end: {
          line: 322,
          column: 7
        }
      },
      "32": {
        start: {
          line: 323,
          column: 4
        },
        end: {
          line: 323,
          column: 87
        }
      },
      "33": {
        start: {
          line: 324,
          column: 4
        },
        end: {
          line: 324,
          column: 134
        }
      },
      "34": {
        start: {
          line: 371,
          column: 0
        },
        end: {
          line: 376,
          column: 5
        }
      },
      "35": {
        start: {
          line: 371,
          column: 101
        },
        end: {
          line: 376,
          column: 2
        }
      },
      "36": {
        start: {
          line: 373,
          column: 4
        },
        end: {
          line: 373,
          column: 142
        }
      },
      "37": {
        start: {
          line: 374,
          column: 4
        },
        end: {
          line: 374,
          column: 87
        }
      },
      "38": {
        start: {
          line: 375,
          column: 4
        },
        end: {
          line: 375,
          column: 140
        }
      },
      "39": {
        start: {
          line: 377,
          column: 0
        },
        end: {
          line: 377,
          column: 25
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 2,
            column: 45
          }
        },
        loc: {
          start: {
            line: 2,
            column: 89
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "adopt",
        decl: {
          start: {
            line: 3,
            column: 13
          },
          end: {
            line: 3,
            column: 18
          }
        },
        loc: {
          start: {
            line: 3,
            column: 26
          },
          end: {
            line: 3,
            column: 112
          }
        },
        line: 3
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 3,
            column: 70
          },
          end: {
            line: 3,
            column: 71
          }
        },
        loc: {
          start: {
            line: 3,
            column: 89
          },
          end: {
            line: 3,
            column: 108
          }
        },
        line: 3
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 4,
            column: 36
          },
          end: {
            line: 4,
            column: 37
          }
        },
        loc: {
          start: {
            line: 4,
            column: 63
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 4
      },
      "4": {
        name: "fulfilled",
        decl: {
          start: {
            line: 5,
            column: 17
          },
          end: {
            line: 5,
            column: 26
          }
        },
        loc: {
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 99
          }
        },
        line: 5
      },
      "5": {
        name: "rejected",
        decl: {
          start: {
            line: 6,
            column: 17
          },
          end: {
            line: 6,
            column: 25
          }
        },
        loc: {
          start: {
            line: 6,
            column: 33
          },
          end: {
            line: 6,
            column: 102
          }
        },
        line: 6
      },
      "6": {
        name: "step",
        decl: {
          start: {
            line: 7,
            column: 17
          },
          end: {
            line: 7,
            column: 21
          }
        },
        loc: {
          start: {
            line: 7,
            column: 30
          },
          end: {
            line: 7,
            column: 118
          }
        },
        line: 7
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 127,
            column: 99
          },
          end: {
            line: 127,
            column: 100
          }
        },
        loc: {
          start: {
            line: 127,
            column: 113
          },
          end: {
            line: 134,
            column: 2
          }
        },
        line: 127
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 127,
            column: 147
          },
          end: {
            line: 127,
            column: 148
          }
        },
        loc: {
          start: {
            line: 127,
            column: 160
          },
          end: {
            line: 134,
            column: 1
          }
        },
        line: 127
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 206,
            column: 106
          },
          end: {
            line: 206,
            column: 107
          }
        },
        loc: {
          start: {
            line: 206,
            column: 120
          },
          end: {
            line: 213,
            column: 2
          }
        },
        line: 206
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 206,
            column: 154
          },
          end: {
            line: 206,
            column: 155
          }
        },
        loc: {
          start: {
            line: 206,
            column: 167
          },
          end: {
            line: 213,
            column: 1
          }
        },
        line: 206
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 318,
            column: 98
          },
          end: {
            line: 318,
            column: 99
          }
        },
        loc: {
          start: {
            line: 318,
            column: 112
          },
          end: {
            line: 325,
            column: 2
          }
        },
        line: 318
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 318,
            column: 146
          },
          end: {
            line: 318,
            column: 147
          }
        },
        loc: {
          start: {
            line: 318,
            column: 159
          },
          end: {
            line: 325,
            column: 1
          }
        },
        line: 318
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 371,
            column: 87
          },
          end: {
            line: 371,
            column: 88
          }
        },
        loc: {
          start: {
            line: 371,
            column: 101
          },
          end: {
            line: 376,
            column: 2
          }
        },
        line: 371
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 371,
            column: 135
          },
          end: {
            line: 371,
            column: 136
          }
        },
        loc: {
          start: {
            line: 371,
            column: 148
          },
          end: {
            line: 376,
            column: 1
          }
        },
        line: 371
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 16
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 17
          },
          end: {
            line: 2,
            column: 21
          }
        }, {
          start: {
            line: 2,
            column: 25
          },
          end: {
            line: 2,
            column: 39
          }
        }, {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 35
          },
          end: {
            line: 3,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 56
          },
          end: {
            line: 3,
            column: 61
          }
        }, {
          start: {
            line: 3,
            column: 64
          },
          end: {
            line: 3,
            column: 109
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 17
          }
        }, {
          start: {
            line: 4,
            column: 22
          },
          end: {
            line: 4,
            column: 33
          }
        }],
        line: 4
      },
      "3": {
        loc: {
          start: {
            line: 7,
            column: 32
          },
          end: {
            line: 7,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 7,
            column: 46
          },
          end: {
            line: 7,
            column: 67
          }
        }, {
          start: {
            line: 7,
            column: 70
          },
          end: {
            line: 7,
            column: 115
          }
        }],
        line: 7
      },
      "4": {
        loc: {
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 61
          }
        }, {
          start: {
            line: 8,
            column: 65
          },
          end: {
            line: 8,
            column: 67
          }
        }],
        line: 8
      },
      "5": {
        loc: {
          start: {
            line: 129,
            column: 69
          },
          end: {
            line: 129,
            column: 134
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 129,
            column: 113
          },
          end: {
            line: 129,
            column: 119
          }
        }, {
          start: {
            line: 129,
            column: 122
          },
          end: {
            line: 129,
            column: 134
          }
        }],
        line: 129
      },
      "6": {
        loc: {
          start: {
            line: 129,
            column: 69
          },
          end: {
            line: 129,
            column: 110
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 129,
            column: 69
          },
          end: {
            line: 129,
            column: 93
          }
        }, {
          start: {
            line: 129,
            column: 97
          },
          end: {
            line: 129,
            column: 110
          }
        }],
        line: 129
      },
      "7": {
        loc: {
          start: {
            line: 133,
            column: 69
          },
          end: {
            line: 133,
            column: 134
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 133,
            column: 113
          },
          end: {
            line: 133,
            column: 119
          }
        }, {
          start: {
            line: 133,
            column: 122
          },
          end: {
            line: 133,
            column: 134
          }
        }],
        line: 133
      },
      "8": {
        loc: {
          start: {
            line: 133,
            column: 69
          },
          end: {
            line: 133,
            column: 110
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 133,
            column: 69
          },
          end: {
            line: 133,
            column: 93
          }
        }, {
          start: {
            line: 133,
            column: 97
          },
          end: {
            line: 133,
            column: 110
          }
        }],
        line: 133
      },
      "9": {
        loc: {
          start: {
            line: 208,
            column: 66
          },
          end: {
            line: 208,
            column: 131
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 208,
            column: 110
          },
          end: {
            line: 208,
            column: 116
          }
        }, {
          start: {
            line: 208,
            column: 119
          },
          end: {
            line: 208,
            column: 131
          }
        }],
        line: 208
      },
      "10": {
        loc: {
          start: {
            line: 208,
            column: 66
          },
          end: {
            line: 208,
            column: 107
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 208,
            column: 66
          },
          end: {
            line: 208,
            column: 90
          }
        }, {
          start: {
            line: 208,
            column: 94
          },
          end: {
            line: 208,
            column: 107
          }
        }],
        line: 208
      },
      "11": {
        loc: {
          start: {
            line: 212,
            column: 64
          },
          end: {
            line: 212,
            column: 129
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 212,
            column: 108
          },
          end: {
            line: 212,
            column: 114
          }
        }, {
          start: {
            line: 212,
            column: 117
          },
          end: {
            line: 212,
            column: 129
          }
        }],
        line: 212
      },
      "12": {
        loc: {
          start: {
            line: 212,
            column: 64
          },
          end: {
            line: 212,
            column: 105
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 212,
            column: 64
          },
          end: {
            line: 212,
            column: 88
          }
        }, {
          start: {
            line: 212,
            column: 92
          },
          end: {
            line: 212,
            column: 105
          }
        }],
        line: 212
      },
      "13": {
        loc: {
          start: {
            line: 320,
            column: 67
          },
          end: {
            line: 320,
            column: 132
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 320,
            column: 111
          },
          end: {
            line: 320,
            column: 117
          }
        }, {
          start: {
            line: 320,
            column: 120
          },
          end: {
            line: 320,
            column: 132
          }
        }],
        line: 320
      },
      "14": {
        loc: {
          start: {
            line: 320,
            column: 67
          },
          end: {
            line: 320,
            column: 108
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 320,
            column: 67
          },
          end: {
            line: 320,
            column: 91
          }
        }, {
          start: {
            line: 320,
            column: 95
          },
          end: {
            line: 320,
            column: 108
          }
        }],
        line: 320
      },
      "15": {
        loc: {
          start: {
            line: 324,
            column: 67
          },
          end: {
            line: 324,
            column: 132
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 324,
            column: 111
          },
          end: {
            line: 324,
            column: 117
          }
        }, {
          start: {
            line: 324,
            column: 120
          },
          end: {
            line: 324,
            column: 132
          }
        }],
        line: 324
      },
      "16": {
        loc: {
          start: {
            line: 324,
            column: 67
          },
          end: {
            line: 324,
            column: 108
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 324,
            column: 67
          },
          end: {
            line: 324,
            column: 91
          }
        }, {
          start: {
            line: 324,
            column: 95
          },
          end: {
            line: 324,
            column: 108
          }
        }],
        line: 324
      },
      "17": {
        loc: {
          start: {
            line: 373,
            column: 75
          },
          end: {
            line: 373,
            column: 140
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 373,
            column: 119
          },
          end: {
            line: 373,
            column: 125
          }
        }, {
          start: {
            line: 373,
            column: 128
          },
          end: {
            line: 373,
            column: 140
          }
        }],
        line: 373
      },
      "18": {
        loc: {
          start: {
            line: 373,
            column: 75
          },
          end: {
            line: 373,
            column: 116
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 373,
            column: 75
          },
          end: {
            line: 373,
            column: 99
          }
        }, {
          start: {
            line: 373,
            column: 103
          },
          end: {
            line: 373,
            column: 116
          }
        }],
        line: 373
      },
      "19": {
        loc: {
          start: {
            line: 375,
            column: 73
          },
          end: {
            line: 375,
            column: 138
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 375,
            column: 117
          },
          end: {
            line: 375,
            column: 123
          }
        }, {
          start: {
            line: 375,
            column: 126
          },
          end: {
            line: 375,
            column: 138
          }
        }],
        line: 375
      },
      "20": {
        loc: {
          start: {
            line: 375,
            column: 73
          },
          end: {
            line: 375,
            column: 114
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 375,
            column: 73
          },
          end: {
            line: 375,
            column: 97
          }
        }, {
          start: {
            line: 375,
            column: 101
          },
          end: {
            line: 375,
            column: 114
          }
        }],
        line: 375
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\routes\\musicianSearchRoutes.ts",
      mappings: ";;;;;;;;;;;AAAA,qCAA6D;AAC7D,iEAA8D;AAC9D,6DAA0D;AAC1D,6DAAmD;AACnD,sFAAmF;AAEnF,MAAM,MAAM,GAAG,IAAA,gBAAM,GAAE,CAAC;AAExB;;;;;GAKG;AAEH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAsGG;AACH,MAAM,CAAC,IAAI,CACT,mBAAmB,EACnB,+BAAc,EACd,IAAA,2BAAY,EAAC,CAAO,GAAY,EAAE,GAAa,EAAE,EAAE;;IACjD,sBAAM,CAAC,OAAO,CAAC,gCAAgC,EAAE,MAAC,GAAW,CAAC,IAAI,0CAAE,SAAS,EAAE;QAC7E,QAAQ,EAAE,EAAE,OAAO,EAAE,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE;KACxC,CAAC,CAAC;IACH,MAAM,mDAAwB,CAAC,uBAAuB,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IACjE,sBAAM,CAAC,OAAO,CAAC,gCAAgC,EAAE,MAAC,GAAW,CAAC,IAAI,0CAAE,SAAS,CAAC,CAAC;AACjF,CAAC,CAAA,CAAC,CACH,CAAC;AAEF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAsEG;AACH,MAAM,CAAC,GAAG,CACR,2BAA2B,EAC3B,+BAAc,EACd,IAAA,2BAAY,EAAC,CAAO,GAAY,EAAE,GAAa,EAAE,EAAE;;IACjD,sBAAM,CAAC,OAAO,CAAC,6BAA6B,EAAE,MAAC,GAAW,CAAC,IAAI,0CAAE,SAAS,EAAE;QAC1E,QAAQ,EAAE,EAAE,OAAO,EAAE,GAAG,CAAC,MAAM,CAAC,OAAO,EAAE;KAC1C,CAAC,CAAC;IACH,MAAM,mDAAwB,CAAC,uBAAuB,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IACjE,sBAAM,CAAC,OAAO,CAAC,2BAA2B,EAAE,MAAC,GAAW,CAAC,IAAI,0CAAE,SAAS,CAAC,CAAC;AAC5E,CAAC,CAAA,CAAC,CACH,CAAC;AAEF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAuGG;AACH,MAAM,CAAC,IAAI,CACT,kBAAkB,EAClB,+BAAc,EACd,IAAA,2BAAY,EAAC,CAAO,GAAY,EAAE,GAAa,EAAE,EAAE;;IACjD,sBAAM,CAAC,OAAO,CAAC,8BAA8B,EAAE,MAAC,GAAW,CAAC,IAAI,0CAAE,SAAS,EAAE;QAC3E,QAAQ,EAAE,EAAE,QAAQ,EAAE,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE;KAC1C,CAAC,CAAC;IACH,MAAM,mDAAwB,CAAC,cAAc,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IACxD,sBAAM,CAAC,OAAO,CAAC,8BAA8B,EAAE,MAAC,GAAW,CAAC,IAAI,0CAAE,SAAS,CAAC,CAAC;AAC/E,CAAC,CAAA,CAAC,CACH,CAAC;AAEF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA4CG;AACH,MAAM,CAAC,GAAG,CACR,QAAQ,EACR,+BAAc,EACd,IAAA,2BAAY,EAAC,CAAO,GAAY,EAAE,GAAa,EAAE,EAAE;;IACjD,sBAAM,CAAC,OAAO,CAAC,sCAAsC,EAAE,MAAC,GAAW,CAAC,IAAI,0CAAE,SAAS,CAAC,CAAC;IACrF,MAAM,mDAAwB,CAAC,cAAc,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IACxD,sBAAM,CAAC,OAAO,CAAC,oCAAoC,EAAE,MAAC,GAAW,CAAC,IAAI,0CAAE,SAAS,CAAC,CAAC;AACrF,CAAC,CAAA,CAAC,CACH,CAAC;AAEF,kBAAe,MAAM,CAAC",
      names: [],
      sources: ["C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\routes\\musicianSearchRoutes.ts"],
      sourcesContent: ["import express, { Request, Response, Router } from 'express';\r\nimport { authMiddleware } from '../middleware/authMiddleware';\r\nimport { asyncHandler } from '../middleware/errorHandler';\r\nimport { logger } from '../services/loggerService';\r\nimport { MusicianSearchController } from '../controllers/musicianSearchController';\r\n\r\nconst router = Router();\r\n\r\n/**\r\n * @swagger\r\n * tags:\r\n *   name: Musician Search\r\n *   description: Endpoints para b\xFAsqueda y recomendaci\xF3n de m\xFAsicos\r\n */\r\n\r\n/**\r\n * @swagger\r\n * /musician-search/search-for-event:\r\n *   post:\r\n *     tags: [Musician Search]\r\n *     summary: Buscar m\xFAsicos disponibles para un evento espec\xEDfico\r\n *     description: Algoritmo de b\xFAsqueda inteligente que encuentra m\xFAsicos que coinciden con los criterios del evento\r\n *     security:\r\n *       - bearerAuth: []\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             type: object\r\n *             required:\r\n *               - eventId\r\n *             properties:\r\n *               eventId:\r\n *                 type: string\r\n *                 description: ID del evento para el cual buscar m\xFAsicos\r\n *               criteria:\r\n *                 type: object\r\n *                 description: Criterios adicionales de b\xFAsqueda (opcionales)\r\n *                 properties:\r\n *                   instrument:\r\n *                     type: string\r\n *                     description: Instrumento espec\xEDfico requerido\r\n *                   location:\r\n *                     type: string\r\n *                     description: Ubicaci\xF3n preferida\r\n *                   budget:\r\n *                     type: number\r\n *                     description: Presupuesto m\xE1ximo\r\n *                   maxDistance:\r\n *                     type: number\r\n *                     description: Distancia m\xE1xima en kil\xF3metros\r\n *     responses:\r\n *       200:\r\n *         description: B\xFAsqueda completada exitosamente\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 message:\r\n *                   type: string\r\n *                 data:\r\n *                   type: object\r\n *                   properties:\r\n *                     eventId:\r\n *                       type: string\r\n *                     totalMusicians:\r\n *                       type: number\r\n *                     musicians:\r\n *                       type: array\r\n *                       items:\r\n *                         type: object\r\n *                         properties:\r\n *                           userEmail:\r\n *                             type: string\r\n *                           name:\r\n *                             type: string\r\n *                           lastName:\r\n *                             type: string\r\n *                           instruments:\r\n *                             type: array\r\n *                             items:\r\n *                               type: string\r\n *                           hasOwnInstruments:\r\n *                             type: boolean\r\n *                           experience:\r\n *                             type: number\r\n *                           hourlyRate:\r\n *                             type: number\r\n *                           location:\r\n *                             type: string\r\n *                           isAvailable:\r\n *                             type: boolean\r\n *                           rating:\r\n *                             type: number\r\n *                           matchScore:\r\n *                             type: number\r\n *                           availability:\r\n *                             type: object\r\n *                             properties:\r\n *                               isAvailable:\r\n *                                 type: boolean\r\n *                               conflicts:\r\n *                                 type: array\r\n *                                 items:\r\n *                                   type: string\r\n *       400:\r\n *         description: Datos de entrada inv\xE1lidos\r\n *       403:\r\n *         description: No autorizado - Solo creadores de eventos\r\n *       404:\r\n *         description: Evento no encontrado\r\n *       500:\r\n *         description: Error interno del servidor\r\n */\r\nrouter.post(\r\n  '/search-for-event',\r\n  authMiddleware,\r\n  asyncHandler(async (req: Request, res: Response) => {\r\n    logger.logAuth('B\xFAsqueda de m\xFAsicos solicitada', (req as any).user?.userEmail, {\r\n      metadata: { eventId: req.body.eventId },\r\n    });\r\n    await MusicianSearchController.searchMusiciansForEvent(req, res);\r\n    logger.logAuth('B\xFAsqueda de m\xFAsicos completada', (req as any).user?.userEmail);\r\n  })\r\n);\r\n\r\n/**\r\n * @swagger\r\n * /musician-search/recommendations/{eventId}:\r\n *   get:\r\n *     tags: [Musician Search]\r\n *     summary: Obtener m\xFAsicos recomendados para un evento\r\n *     description: Obtiene las mejores recomendaciones de m\xFAsicos para un evento espec\xEDfico\r\n *     security:\r\n *       - bearerAuth: []\r\n *     parameters:\r\n *       - in: path\r\n *         name: eventId\r\n *         required: true\r\n *         schema:\r\n *           type: string\r\n *         description: ID del evento\r\n *     responses:\r\n *       200:\r\n *         description: Recomendaciones obtenidas exitosamente\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 message:\r\n *                   type: string\r\n *                 data:\r\n *                   type: object\r\n *                   properties:\r\n *                     eventId:\r\n *                       type: string\r\n *                     totalRecommendations:\r\n *                       type: number\r\n *                     recommendations:\r\n *                       type: array\r\n *                       items:\r\n *                         type: object\r\n *                         properties:\r\n *                           userEmail:\r\n *                             type: string\r\n *                           name:\r\n *                             type: string\r\n *                           lastName:\r\n *                             type: string\r\n *                           instruments:\r\n *                             type: array\r\n *                             items:\r\n *                               type: string\r\n *                           hasOwnInstruments:\r\n *                             type: boolean\r\n *                           experience:\r\n *                             type: number\r\n *                           hourlyRate:\r\n *                             type: number\r\n *                           location:\r\n *                             type: string\r\n *                           isAvailable:\r\n *                             type: boolean\r\n *                           rating:\r\n *                             type: number\r\n *                           matchScore:\r\n *                             type: number\r\n *       403:\r\n *         description: No autorizado - Solo creadores de eventos\r\n *       404:\r\n *         description: Evento no encontrado\r\n *       500:\r\n *         description: Error interno del servidor\r\n */\r\nrouter.get(\r\n  '/recommendations/:eventId',\r\n  authMiddleware,\r\n  asyncHandler(async (req: Request, res: Response) => {\r\n    logger.logAuth('Recomendaciones solicitadas', (req as any).user?.userEmail, {\r\n      metadata: { eventId: req.params.eventId },\r\n    });\r\n    await MusicianSearchController.getRecommendedMusicians(req, res);\r\n    logger.logAuth('Recomendaciones obtenidas', (req as any).user?.userEmail);\r\n  })\r\n);\r\n\r\n/**\r\n * @swagger\r\n * /musician-search/advanced-search:\r\n *   post:\r\n *     tags: [Musician Search]\r\n *     summary: B\xFAsqueda avanzada de m\xFAsicos\r\n *     description: B\xFAsqueda personalizada con criterios espec\xEDficos\r\n *     security:\r\n *       - bearerAuth: []\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             type: object\r\n *             required:\r\n *               - criteria\r\n *             properties:\r\n *               criteria:\r\n *                 type: object\r\n *                 required:\r\n *                   - instrument\r\n *                 properties:\r\n *                   instrument:\r\n *                     type: string\r\n *                     description: Instrumento requerido\r\n *                   location:\r\n *                     type: string\r\n *                     description: Ubicaci\xF3n preferida\r\n *                   budget:\r\n *                     type: number\r\n *                     description: Presupuesto m\xE1ximo\r\n *                   date:\r\n *                     type: string\r\n *                     format: date\r\n *                     description: Fecha del evento\r\n *                   time:\r\n *                     type: string\r\n *                     description: Hora del evento\r\n *                   duration:\r\n *                     type: string\r\n *                     description: Duraci\xF3n del evento (HH:MM)\r\n *                   eventType:\r\n *                     type: string\r\n *                     description: Tipo de evento\r\n *                   maxDistance:\r\n *                     type: number\r\n *                     description: Distancia m\xE1xima en kil\xF3metros\r\n *                   bringInstrument:\r\n *                     type: boolean\r\n *                     description: Si el evento requiere instrumento\r\n *     responses:\r\n *       200:\r\n *         description: B\xFAsqueda avanzada completada exitosamente\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 message:\r\n *                   type: string\r\n *                 data:\r\n *                   type: object\r\n *                   properties:\r\n *                     totalMusicians:\r\n *                       type: number\r\n *                     musicians:\r\n *                       type: array\r\n *                       items:\r\n *                         type: object\r\n *                         properties:\r\n *                           userEmail:\r\n *                             type: string\r\n *                           name:\r\n *                             type: string\r\n *                           lastName:\r\n *                             type: string\r\n *                           instruments:\r\n *                             type: array\r\n *                             items:\r\n *                               type: string\r\n *                           hasOwnInstruments:\r\n *                             type: boolean\r\n *                           experience:\r\n *                             type: number\r\n *                           hourlyRate:\r\n *                             type: number\r\n *                           location:\r\n *                             type: string\r\n *                           isAvailable:\r\n *                             type: boolean\r\n *                           rating:\r\n *                             type: number\r\n *                           matchScore:\r\n *                             type: number\r\n *       400:\r\n *         description: Criterios de b\xFAsqueda inv\xE1lidos\r\n *       403:\r\n *         description: No autorizado - Solo creadores de eventos\r\n *       500:\r\n *         description: Error interno del servidor\r\n */\r\nrouter.post(\r\n  '/advanced-search',\r\n  authMiddleware,\r\n  asyncHandler(async (req: Request, res: Response) => {\r\n    logger.logAuth('B\xFAsqueda avanzada solicitada', (req as any).user?.userEmail, {\r\n      metadata: { criteria: req.body.criteria },\r\n    });\r\n    await MusicianSearchController.advancedSearch(req, res);\r\n    logger.logAuth('B\xFAsqueda avanzada completada', (req as any).user?.userEmail);\r\n  })\r\n);\r\n\r\n/**\r\n * @swagger\r\n * /musician-search/stats:\r\n *   get:\r\n *     tags: [Musician Search]\r\n *     summary: Obtener estad\xEDsticas de b\xFAsqueda\r\n *     description: Obtiene estad\xEDsticas sobre las b\xFAsquedas realizadas\r\n *     security:\r\n *       - bearerAuth: []\r\n *     responses:\r\n *       200:\r\n *         description: Estad\xEDsticas obtenidas exitosamente\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 message:\r\n *                   type: string\r\n *                 data:\r\n *                   type: object\r\n *                   properties:\r\n *                     totalSearches:\r\n *                       type: number\r\n *                       description: Total de b\xFAsquedas realizadas\r\n *                     averageResults:\r\n *                       type: number\r\n *                       description: Promedio de resultados por b\xFAsqueda\r\n *                     mostSearchedInstrument:\r\n *                       type: string\r\n *                       description: Instrumento m\xE1s buscado\r\n *                     lastSearchDate:\r\n *                       type: string\r\n *                       format: date-time\r\n *                       description: Fecha de la \xFAltima b\xFAsqueda\r\n *                     totalMusiciansAvailable:\r\n *                       type: number\r\n *                       description: Total de m\xFAsicos disponibles\r\n *       403:\r\n *         description: No autorizado - Solo creadores de eventos\r\n *       500:\r\n *         description: Error interno del servidor\r\n */\r\nrouter.get(\r\n  '/stats',\r\n  authMiddleware,\r\n  asyncHandler(async (req: Request, res: Response) => {\r\n    logger.logAuth('Estad\xEDsticas de b\xFAsqueda solicitadas', (req as any).user?.userEmail);\r\n    await MusicianSearchController.getSearchStats(req, res);\r\n    logger.logAuth('Estad\xEDsticas de b\xFAsqueda obtenidas', (req as any).user?.userEmail);\r\n  })\r\n);\r\n\r\nexport default router; "],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b3cbe838cb95709f10d71b38a39f3f2d27fed1db"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1jv3jiwigw = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1jv3jiwigw();
var __awaiter =
/* istanbul ignore next */
(cov_1jv3jiwigw().s[0]++,
/* istanbul ignore next */
(cov_1jv3jiwigw().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1jv3jiwigw().b[0][1]++, this.__awaiter) ||
/* istanbul ignore next */
(cov_1jv3jiwigw().b[0][2]++, function (thisArg, _arguments, P, generator) {
  /* istanbul ignore next */
  cov_1jv3jiwigw().f[0]++;
  function adopt(value) {
    /* istanbul ignore next */
    cov_1jv3jiwigw().f[1]++;
    cov_1jv3jiwigw().s[1]++;
    return value instanceof P ?
    /* istanbul ignore next */
    (cov_1jv3jiwigw().b[1][0]++, value) :
    /* istanbul ignore next */
    (cov_1jv3jiwigw().b[1][1]++, new P(function (resolve) {
      /* istanbul ignore next */
      cov_1jv3jiwigw().f[2]++;
      cov_1jv3jiwigw().s[2]++;
      resolve(value);
    }));
  }
  /* istanbul ignore next */
  cov_1jv3jiwigw().s[3]++;
  return new (
  /* istanbul ignore next */
  (cov_1jv3jiwigw().b[2][0]++, P) ||
  /* istanbul ignore next */
  (cov_1jv3jiwigw().b[2][1]++, P = Promise))(function (resolve, reject) {
    /* istanbul ignore next */
    cov_1jv3jiwigw().f[3]++;
    function fulfilled(value) {
      /* istanbul ignore next */
      cov_1jv3jiwigw().f[4]++;
      cov_1jv3jiwigw().s[4]++;
      try {
        /* istanbul ignore next */
        cov_1jv3jiwigw().s[5]++;
        step(generator.next(value));
      } catch (e) {
        /* istanbul ignore next */
        cov_1jv3jiwigw().s[6]++;
        reject(e);
      }
    }
    function rejected(value) {
      /* istanbul ignore next */
      cov_1jv3jiwigw().f[5]++;
      cov_1jv3jiwigw().s[7]++;
      try {
        /* istanbul ignore next */
        cov_1jv3jiwigw().s[8]++;
        step(generator["throw"](value));
      } catch (e) {
        /* istanbul ignore next */
        cov_1jv3jiwigw().s[9]++;
        reject(e);
      }
    }
    function step(result) {
      /* istanbul ignore next */
      cov_1jv3jiwigw().f[6]++;
      cov_1jv3jiwigw().s[10]++;
      result.done ?
      /* istanbul ignore next */
      (cov_1jv3jiwigw().b[3][0]++, resolve(result.value)) :
      /* istanbul ignore next */
      (cov_1jv3jiwigw().b[3][1]++, adopt(result.value).then(fulfilled, rejected));
    }
    /* istanbul ignore next */
    cov_1jv3jiwigw().s[11]++;
    step((generator = generator.apply(thisArg,
    /* istanbul ignore next */
    (cov_1jv3jiwigw().b[4][0]++, _arguments) ||
    /* istanbul ignore next */
    (cov_1jv3jiwigw().b[4][1]++, []))).next());
  });
}));
/* istanbul ignore next */
cov_1jv3jiwigw().s[12]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const express_1 =
/* istanbul ignore next */
(cov_1jv3jiwigw().s[13]++, require("express"));
const authMiddleware_1 =
/* istanbul ignore next */
(cov_1jv3jiwigw().s[14]++, require("../middleware/authMiddleware"));
const errorHandler_1 =
/* istanbul ignore next */
(cov_1jv3jiwigw().s[15]++, require("../middleware/errorHandler"));
const loggerService_1 =
/* istanbul ignore next */
(cov_1jv3jiwigw().s[16]++, require("../services/loggerService"));
const musicianSearchController_1 =
/* istanbul ignore next */
(cov_1jv3jiwigw().s[17]++, require("../controllers/musicianSearchController"));
const router =
/* istanbul ignore next */
(cov_1jv3jiwigw().s[18]++, (0, express_1.Router)());
/**
 * @swagger
 * tags:
 *   name: Musician Search
 *   description: Endpoints para búsqueda y recomendación de músicos
 */
/**
 * @swagger
 * /musician-search/search-for-event:
 *   post:
 *     tags: [Musician Search]
 *     summary: Buscar músicos disponibles para un evento específico
 *     description: Algoritmo de búsqueda inteligente que encuentra músicos que coinciden con los criterios del evento
 *     security:
 *       - bearerAuth: []
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             type: object
 *             required:
 *               - eventId
 *             properties:
 *               eventId:
 *                 type: string
 *                 description: ID del evento para el cual buscar músicos
 *               criteria:
 *                 type: object
 *                 description: Criterios adicionales de búsqueda (opcionales)
 *                 properties:
 *                   instrument:
 *                     type: string
 *                     description: Instrumento específico requerido
 *                   location:
 *                     type: string
 *                     description: Ubicación preferida
 *                   budget:
 *                     type: number
 *                     description: Presupuesto máximo
 *                   maxDistance:
 *                     type: number
 *                     description: Distancia máxima en kilómetros
 *     responses:
 *       200:
 *         description: Búsqueda completada exitosamente
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 message:
 *                   type: string
 *                 data:
 *                   type: object
 *                   properties:
 *                     eventId:
 *                       type: string
 *                     totalMusicians:
 *                       type: number
 *                     musicians:
 *                       type: array
 *                       items:
 *                         type: object
 *                         properties:
 *                           userEmail:
 *                             type: string
 *                           name:
 *                             type: string
 *                           lastName:
 *                             type: string
 *                           instruments:
 *                             type: array
 *                             items:
 *                               type: string
 *                           hasOwnInstruments:
 *                             type: boolean
 *                           experience:
 *                             type: number
 *                           hourlyRate:
 *                             type: number
 *                           location:
 *                             type: string
 *                           isAvailable:
 *                             type: boolean
 *                           rating:
 *                             type: number
 *                           matchScore:
 *                             type: number
 *                           availability:
 *                             type: object
 *                             properties:
 *                               isAvailable:
 *                                 type: boolean
 *                               conflicts:
 *                                 type: array
 *                                 items:
 *                                   type: string
 *       400:
 *         description: Datos de entrada inválidos
 *       403:
 *         description: No autorizado - Solo creadores de eventos
 *       404:
 *         description: Evento no encontrado
 *       500:
 *         description: Error interno del servidor
 */
/* istanbul ignore next */
cov_1jv3jiwigw().s[19]++;
router.post('/search-for-event', authMiddleware_1.authMiddleware, (0, errorHandler_1.asyncHandler)((req, res) => {
  /* istanbul ignore next */
  cov_1jv3jiwigw().f[7]++;
  cov_1jv3jiwigw().s[20]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1jv3jiwigw().f[8]++;
    var _a, _b;
    /* istanbul ignore next */
    cov_1jv3jiwigw().s[21]++;
    loggerService_1.logger.logAuth('Búsqueda de músicos solicitada',
    /* istanbul ignore next */
    (cov_1jv3jiwigw().b[6][0]++, (_a = req.user) === null) ||
    /* istanbul ignore next */
    (cov_1jv3jiwigw().b[6][1]++, _a === void 0) ?
    /* istanbul ignore next */
    (cov_1jv3jiwigw().b[5][0]++, void 0) :
    /* istanbul ignore next */
    (cov_1jv3jiwigw().b[5][1]++, _a.userEmail), {
      metadata: {
        eventId: req.body.eventId
      }
    });
    /* istanbul ignore next */
    cov_1jv3jiwigw().s[22]++;
    yield musicianSearchController_1.MusicianSearchController.searchMusiciansForEvent(req, res);
    /* istanbul ignore next */
    cov_1jv3jiwigw().s[23]++;
    loggerService_1.logger.logAuth('Búsqueda de músicos completada',
    /* istanbul ignore next */
    (cov_1jv3jiwigw().b[8][0]++, (_b = req.user) === null) ||
    /* istanbul ignore next */
    (cov_1jv3jiwigw().b[8][1]++, _b === void 0) ?
    /* istanbul ignore next */
    (cov_1jv3jiwigw().b[7][0]++, void 0) :
    /* istanbul ignore next */
    (cov_1jv3jiwigw().b[7][1]++, _b.userEmail));
  });
}));
/**
 * @swagger
 * /musician-search/recommendations/{eventId}:
 *   get:
 *     tags: [Musician Search]
 *     summary: Obtener músicos recomendados para un evento
 *     description: Obtiene las mejores recomendaciones de músicos para un evento específico
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: path
 *         name: eventId
 *         required: true
 *         schema:
 *           type: string
 *         description: ID del evento
 *     responses:
 *       200:
 *         description: Recomendaciones obtenidas exitosamente
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 message:
 *                   type: string
 *                 data:
 *                   type: object
 *                   properties:
 *                     eventId:
 *                       type: string
 *                     totalRecommendations:
 *                       type: number
 *                     recommendations:
 *                       type: array
 *                       items:
 *                         type: object
 *                         properties:
 *                           userEmail:
 *                             type: string
 *                           name:
 *                             type: string
 *                           lastName:
 *                             type: string
 *                           instruments:
 *                             type: array
 *                             items:
 *                               type: string
 *                           hasOwnInstruments:
 *                             type: boolean
 *                           experience:
 *                             type: number
 *                           hourlyRate:
 *                             type: number
 *                           location:
 *                             type: string
 *                           isAvailable:
 *                             type: boolean
 *                           rating:
 *                             type: number
 *                           matchScore:
 *                             type: number
 *       403:
 *         description: No autorizado - Solo creadores de eventos
 *       404:
 *         description: Evento no encontrado
 *       500:
 *         description: Error interno del servidor
 */
/* istanbul ignore next */
cov_1jv3jiwigw().s[24]++;
router.get('/recommendations/:eventId', authMiddleware_1.authMiddleware, (0, errorHandler_1.asyncHandler)((req, res) => {
  /* istanbul ignore next */
  cov_1jv3jiwigw().f[9]++;
  cov_1jv3jiwigw().s[25]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1jv3jiwigw().f[10]++;
    var _a, _b;
    /* istanbul ignore next */
    cov_1jv3jiwigw().s[26]++;
    loggerService_1.logger.logAuth('Recomendaciones solicitadas',
    /* istanbul ignore next */
    (cov_1jv3jiwigw().b[10][0]++, (_a = req.user) === null) ||
    /* istanbul ignore next */
    (cov_1jv3jiwigw().b[10][1]++, _a === void 0) ?
    /* istanbul ignore next */
    (cov_1jv3jiwigw().b[9][0]++, void 0) :
    /* istanbul ignore next */
    (cov_1jv3jiwigw().b[9][1]++, _a.userEmail), {
      metadata: {
        eventId: req.params.eventId
      }
    });
    /* istanbul ignore next */
    cov_1jv3jiwigw().s[27]++;
    yield musicianSearchController_1.MusicianSearchController.getRecommendedMusicians(req, res);
    /* istanbul ignore next */
    cov_1jv3jiwigw().s[28]++;
    loggerService_1.logger.logAuth('Recomendaciones obtenidas',
    /* istanbul ignore next */
    (cov_1jv3jiwigw().b[12][0]++, (_b = req.user) === null) ||
    /* istanbul ignore next */
    (cov_1jv3jiwigw().b[12][1]++, _b === void 0) ?
    /* istanbul ignore next */
    (cov_1jv3jiwigw().b[11][0]++, void 0) :
    /* istanbul ignore next */
    (cov_1jv3jiwigw().b[11][1]++, _b.userEmail));
  });
}));
/**
 * @swagger
 * /musician-search/advanced-search:
 *   post:
 *     tags: [Musician Search]
 *     summary: Búsqueda avanzada de músicos
 *     description: Búsqueda personalizada con criterios específicos
 *     security:
 *       - bearerAuth: []
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             type: object
 *             required:
 *               - criteria
 *             properties:
 *               criteria:
 *                 type: object
 *                 required:
 *                   - instrument
 *                 properties:
 *                   instrument:
 *                     type: string
 *                     description: Instrumento requerido
 *                   location:
 *                     type: string
 *                     description: Ubicación preferida
 *                   budget:
 *                     type: number
 *                     description: Presupuesto máximo
 *                   date:
 *                     type: string
 *                     format: date
 *                     description: Fecha del evento
 *                   time:
 *                     type: string
 *                     description: Hora del evento
 *                   duration:
 *                     type: string
 *                     description: Duración del evento (HH:MM)
 *                   eventType:
 *                     type: string
 *                     description: Tipo de evento
 *                   maxDistance:
 *                     type: number
 *                     description: Distancia máxima en kilómetros
 *                   bringInstrument:
 *                     type: boolean
 *                     description: Si el evento requiere instrumento
 *     responses:
 *       200:
 *         description: Búsqueda avanzada completada exitosamente
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 message:
 *                   type: string
 *                 data:
 *                   type: object
 *                   properties:
 *                     totalMusicians:
 *                       type: number
 *                     musicians:
 *                       type: array
 *                       items:
 *                         type: object
 *                         properties:
 *                           userEmail:
 *                             type: string
 *                           name:
 *                             type: string
 *                           lastName:
 *                             type: string
 *                           instruments:
 *                             type: array
 *                             items:
 *                               type: string
 *                           hasOwnInstruments:
 *                             type: boolean
 *                           experience:
 *                             type: number
 *                           hourlyRate:
 *                             type: number
 *                           location:
 *                             type: string
 *                           isAvailable:
 *                             type: boolean
 *                           rating:
 *                             type: number
 *                           matchScore:
 *                             type: number
 *       400:
 *         description: Criterios de búsqueda inválidos
 *       403:
 *         description: No autorizado - Solo creadores de eventos
 *       500:
 *         description: Error interno del servidor
 */
/* istanbul ignore next */
cov_1jv3jiwigw().s[29]++;
router.post('/advanced-search', authMiddleware_1.authMiddleware, (0, errorHandler_1.asyncHandler)((req, res) => {
  /* istanbul ignore next */
  cov_1jv3jiwigw().f[11]++;
  cov_1jv3jiwigw().s[30]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1jv3jiwigw().f[12]++;
    var _a, _b;
    /* istanbul ignore next */
    cov_1jv3jiwigw().s[31]++;
    loggerService_1.logger.logAuth('Búsqueda avanzada solicitada',
    /* istanbul ignore next */
    (cov_1jv3jiwigw().b[14][0]++, (_a = req.user) === null) ||
    /* istanbul ignore next */
    (cov_1jv3jiwigw().b[14][1]++, _a === void 0) ?
    /* istanbul ignore next */
    (cov_1jv3jiwigw().b[13][0]++, void 0) :
    /* istanbul ignore next */
    (cov_1jv3jiwigw().b[13][1]++, _a.userEmail), {
      metadata: {
        criteria: req.body.criteria
      }
    });
    /* istanbul ignore next */
    cov_1jv3jiwigw().s[32]++;
    yield musicianSearchController_1.MusicianSearchController.advancedSearch(req, res);
    /* istanbul ignore next */
    cov_1jv3jiwigw().s[33]++;
    loggerService_1.logger.logAuth('Búsqueda avanzada completada',
    /* istanbul ignore next */
    (cov_1jv3jiwigw().b[16][0]++, (_b = req.user) === null) ||
    /* istanbul ignore next */
    (cov_1jv3jiwigw().b[16][1]++, _b === void 0) ?
    /* istanbul ignore next */
    (cov_1jv3jiwigw().b[15][0]++, void 0) :
    /* istanbul ignore next */
    (cov_1jv3jiwigw().b[15][1]++, _b.userEmail));
  });
}));
/**
 * @swagger
 * /musician-search/stats:
 *   get:
 *     tags: [Musician Search]
 *     summary: Obtener estadísticas de búsqueda
 *     description: Obtiene estadísticas sobre las búsquedas realizadas
 *     security:
 *       - bearerAuth: []
 *     responses:
 *       200:
 *         description: Estadísticas obtenidas exitosamente
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 message:
 *                   type: string
 *                 data:
 *                   type: object
 *                   properties:
 *                     totalSearches:
 *                       type: number
 *                       description: Total de búsquedas realizadas
 *                     averageResults:
 *                       type: number
 *                       description: Promedio de resultados por búsqueda
 *                     mostSearchedInstrument:
 *                       type: string
 *                       description: Instrumento más buscado
 *                     lastSearchDate:
 *                       type: string
 *                       format: date-time
 *                       description: Fecha de la última búsqueda
 *                     totalMusiciansAvailable:
 *                       type: number
 *                       description: Total de músicos disponibles
 *       403:
 *         description: No autorizado - Solo creadores de eventos
 *       500:
 *         description: Error interno del servidor
 */
/* istanbul ignore next */
cov_1jv3jiwigw().s[34]++;
router.get('/stats', authMiddleware_1.authMiddleware, (0, errorHandler_1.asyncHandler)((req, res) => {
  /* istanbul ignore next */
  cov_1jv3jiwigw().f[13]++;
  cov_1jv3jiwigw().s[35]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1jv3jiwigw().f[14]++;
    var _a, _b;
    /* istanbul ignore next */
    cov_1jv3jiwigw().s[36]++;
    loggerService_1.logger.logAuth('Estadísticas de búsqueda solicitadas',
    /* istanbul ignore next */
    (cov_1jv3jiwigw().b[18][0]++, (_a = req.user) === null) ||
    /* istanbul ignore next */
    (cov_1jv3jiwigw().b[18][1]++, _a === void 0) ?
    /* istanbul ignore next */
    (cov_1jv3jiwigw().b[17][0]++, void 0) :
    /* istanbul ignore next */
    (cov_1jv3jiwigw().b[17][1]++, _a.userEmail));
    /* istanbul ignore next */
    cov_1jv3jiwigw().s[37]++;
    yield musicianSearchController_1.MusicianSearchController.getSearchStats(req, res);
    /* istanbul ignore next */
    cov_1jv3jiwigw().s[38]++;
    loggerService_1.logger.logAuth('Estadísticas de búsqueda obtenidas',
    /* istanbul ignore next */
    (cov_1jv3jiwigw().b[20][0]++, (_b = req.user) === null) ||
    /* istanbul ignore next */
    (cov_1jv3jiwigw().b[20][1]++, _b === void 0) ?
    /* istanbul ignore next */
    (cov_1jv3jiwigw().b[19][0]++, void 0) :
    /* istanbul ignore next */
    (cov_1jv3jiwigw().b[19][1]++, _b.userEmail));
  });
}));
/* istanbul ignore next */
cov_1jv3jiwigw().s[39]++;
exports.default = router;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,