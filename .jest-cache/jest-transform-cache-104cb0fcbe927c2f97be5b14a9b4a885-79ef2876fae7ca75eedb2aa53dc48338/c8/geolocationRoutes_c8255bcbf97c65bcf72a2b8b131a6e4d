f9aa4bc67cc9b6811f7db8d2d35b759e
"use strict";

/* istanbul ignore next */
function cov_uu4u3xkn1() {
  var path = "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\routes\\geolocationRoutes.ts";
  var hash = "71534b3cec0968db202e2cd75e9740917d4234a2";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\routes\\geolocationRoutes.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 18
        },
        end: {
          line: 6,
          column: 36
        }
      },
      "4": {
        start: {
          line: 7,
          column: 25
        },
        end: {
          line: 7,
          column: 64
        }
      },
      "5": {
        start: {
          line: 8,
          column: 31
        },
        end: {
          line: 8,
          column: 76
        }
      },
      "6": {
        start: {
          line: 9,
          column: 14
        },
        end: {
          line: 9,
          column: 45
        }
      },
      "7": {
        start: {
          line: 10,
          column: 32
        },
        end: {
          line: 10,
          column: 79
        }
      },
      "8": {
        start: {
          line: 11,
          column: 15
        },
        end: {
          line: 11,
          column: 38
        }
      },
      "9": {
        start: {
          line: 13,
          column: 23
        },
        end: {
          line: 16,
          column: 2
        }
      },
      "10": {
        start: {
          line: 17,
          column: 26
        },
        end: {
          line: 19,
          column: 2
        }
      },
      "11": {
        start: {
          line: 20,
          column: 26
        },
        end: {
          line: 23,
          column: 2
        }
      },
      "12": {
        start: {
          line: 24,
          column: 29
        },
        end: {
          line: 27,
          column: 2
        }
      },
      "13": {
        start: {
          line: 28,
          column: 26
        },
        end: {
          line: 32,
          column: 2
        }
      },
      "14": {
        start: {
          line: 33,
          column: 25
        },
        end: {
          line: 38,
          column: 2
        }
      },
      "15": {
        start: {
          line: 128,
          column: 0
        },
        end: {
          line: 128,
          column: 111
        }
      },
      "16": {
        start: {
          line: 170,
          column: 0
        },
        end: {
          line: 170,
          column: 114
        }
      },
      "17": {
        start: {
          line: 212,
          column: 0
        },
        end: {
          line: 212,
          column: 120
        }
      },
      "18": {
        start: {
          line: 253,
          column: 0
        },
        end: {
          line: 253,
          column: 169
        }
      },
      "19": {
        start: {
          line: 275,
          column: 0
        },
        end: {
          line: 275,
          column: 164
        }
      },
      "20": {
        start: {
          line: 299,
          column: 0
        },
        end: {
          line: 299,
          column: 172
        }
      },
      "21": {
        start: {
          line: 333,
          column: 0
        },
        end: {
          line: 333,
          column: 181
        }
      },
      "22": {
        start: {
          line: 346,
          column: 0
        },
        end: {
          line: 346,
          column: 106
        }
      },
      "23": {
        start: {
          line: 382,
          column: 0
        },
        end: {
          line: 382,
          column: 170
        }
      },
      "24": {
        start: {
          line: 383,
          column: 0
        },
        end: {
          line: 383,
          column: 25
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\routes\\geolocationRoutes.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\routes\\geolocationRoutes.ts"],
      sourcesContent: ["import { Router } from 'express';\r\nimport { authMiddleware } from '../middleware/authMiddleware';\r\nimport { validate } from '../middleware/validationMiddleware';\r\nimport Joi from 'joi';\r\nimport {\r\n  searchByProximityController,\r\n  findNearbyEventsController,\r\n  findNearbyMusiciansController,\r\n  optimizeRouteController,\r\n  geocodeAddressController,\r\n  reverseGeocodeController,\r\n  calculateDistanceController,\r\n  getLocationStatsController,\r\n  isWithinRadiusController,\r\n} from '../controllers/geolocationController';\r\n\r\nconst router = Router();\r\n\r\n// DTOs para validaci\xF3n\r\nconst coordinatesDTO = Joi.object({\r\n  lat: Joi.number().min(-90).max(90).required(),\r\n  lng: Joi.number().min(-180).max(180).required(),\r\n});\r\n\r\nconst geocodeAddressDTO = Joi.object({\r\n  address: Joi.string().required().min(3).max(200),\r\n});\r\n\r\nconst reverseGeocodeDTO = Joi.object({\r\n  lat: Joi.number().min(-90).max(90).required(),\r\n  lng: Joi.number().min(-180).max(180).required(),\r\n});\r\n\r\nconst calculateDistanceDTO = Joi.object({\r\n  point1: coordinatesDTO.required(),\r\n  point2: coordinatesDTO.required(),\r\n});\r\n\r\nconst isWithinRadiusDTO = Joi.object({\r\n  center: coordinatesDTO.required(),\r\n  point: coordinatesDTO.required(),\r\n  radius: Joi.number().positive().required(),\r\n});\r\n\r\nconst optimizeRouteDTO = Joi.object({\r\n  startLocation: coordinatesDTO.required(),\r\n  destinations: Joi.array().items(coordinatesDTO).min(1).required(),\r\n  mode: Joi.string().valid('driving', 'walking', 'transit').required(),\r\n  optimize: Joi.boolean().default(false),\r\n});\r\n\r\n/**\r\n * @swagger\r\n * /geolocation/proximity:\r\n *   get:\r\n *     summary: Buscar ubicaciones por proximidad\r\n *     tags: [Geolocalizaci\xF3n]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     parameters:\r\n *       - in: query\r\n *         name: lat\r\n *         schema:\r\n *           type: number\r\n *         required: true\r\n *         description: Latitud del centro de b\xFAsqueda\r\n *       - in: query\r\n *         name: lng\r\n *         schema:\r\n *           type: number\r\n *         required: true\r\n *         description: Longitud del centro de b\xFAsqueda\r\n *       - in: query\r\n *         name: radius\r\n *         schema:\r\n *           type: number\r\n *         required: true\r\n *         description: Radio de b\xFAsqueda en kil\xF3metros\r\n *       - in: query\r\n *         name: type\r\n *         schema:\r\n *           type: string\r\n *           enum: [event, user, venue, all]\r\n *         description: Tipo de ubicaci\xF3n a buscar\r\n *       - in: query\r\n *         name: instrument\r\n *         schema:\r\n *           type: string\r\n *         description: Instrumento requerido\r\n *       - in: query\r\n *         name: eventType\r\n *         schema:\r\n *           type: string\r\n *         description: Tipo de evento\r\n *       - in: query\r\n *         name: limit\r\n *         schema:\r\n *           type: number\r\n *         description: N\xFAmero m\xE1ximo de resultados\r\n *       - in: query\r\n *         name: offset\r\n *         schema:\r\n *           type: number\r\n *         description: Desplazamiento para paginaci\xF3n\r\n *     responses:\r\n *       200:\r\n *         description: Ubicaciones encontradas\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 data:\r\n *                   type: object\r\n *                   properties:\r\n *                     locations:\r\n *                       type: array\r\n *                       items:\r\n *                         type: object\r\n *                         properties:\r\n *                           id:\r\n *                             type: string\r\n *                           name:\r\n *                             type: string\r\n *                           address:\r\n *                             type: string\r\n *                           coordinates:\r\n *                             type: object\r\n *                             properties:\r\n *                               lat:\r\n *                                 type: number\r\n *                               lng:\r\n *                                 type: number\r\n *                           distance:\r\n *                             type: number\r\n *                     total:\r\n *                       type: number\r\n */\r\nrouter.get('/proximity', authMiddleware, searchByProximityController);\r\n\r\n/**\r\n * @swagger\r\n * /geolocation/nearby-events:\r\n *   get:\r\n *     summary: Buscar eventos cercanos\r\n *     tags: [Geolocalizaci\xF3n]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     parameters:\r\n *       - in: query\r\n *         name: lat\r\n *         schema:\r\n *           type: number\r\n *         required: true\r\n *         description: Latitud del centro de b\xFAsqueda\r\n *       - in: query\r\n *         name: lng\r\n *         schema:\r\n *           type: number\r\n *         required: true\r\n *         description: Longitud del centro de b\xFAsqueda\r\n *       - in: query\r\n *         name: radius\r\n *         schema:\r\n *           type: number\r\n *         required: true\r\n *         description: Radio de b\xFAsqueda en kil\xF3metros\r\n *       - in: query\r\n *         name: instrument\r\n *         schema:\r\n *           type: string\r\n *         description: Instrumento requerido\r\n *       - in: query\r\n *         name: eventType\r\n *         schema:\r\n *           type: string\r\n *         description: Tipo de evento\r\n *     responses:\r\n *       200:\r\n *         description: Eventos cercanos encontrados\r\n */\r\nrouter.get('/nearby-events', authMiddleware, findNearbyEventsController);\r\n\r\n/**\r\n * @swagger\r\n * /geolocation/nearby-musicians:\r\n *   get:\r\n *     summary: Buscar m\xFAsicos cercanos\r\n *     tags: [Geolocalizaci\xF3n]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     parameters:\r\n *       - in: query\r\n *         name: lat\r\n *         schema:\r\n *           type: number\r\n *         required: true\r\n *         description: Latitud del centro de b\xFAsqueda\r\n *       - in: query\r\n *         name: lng\r\n *         schema:\r\n *           type: number\r\n *         required: true\r\n *         description: Longitud del centro de b\xFAsqueda\r\n *       - in: query\r\n *         name: radius\r\n *         schema:\r\n *           type: number\r\n *         required: true\r\n *         description: Radio de b\xFAsqueda en kil\xF3metros\r\n *       - in: query\r\n *         name: instrument\r\n *         schema:\r\n *           type: string\r\n *         description: Instrumento del m\xFAsico\r\n *       - in: query\r\n *         name: specialties\r\n *         schema:\r\n *           type: string\r\n *         description: Especialidades del m\xFAsico\r\n *     responses:\r\n *       200:\r\n *         description: M\xFAsicos cercanos encontrados\r\n */\r\nrouter.get('/nearby-musicians', authMiddleware, findNearbyMusiciansController);\r\n\r\n/**\r\n * @swagger\r\n * /geolocation/optimize-route:\r\n *   post:\r\n *     summary: Optimizar ruta para m\xFAltiples destinos\r\n *     tags: [Geolocalizaci\xF3n]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             type: object\r\n *             properties:\r\n *               startLocation:\r\n *                 type: object\r\n *                 properties:\r\n *                   lat:\r\n *                     type: number\r\n *                   lng:\r\n *                     type: number\r\n *               destinations:\r\n *                 type: array\r\n *                 items:\r\n *                   type: object\r\n *                   properties:\r\n *                     lat:\r\n *                       type: number\r\n *                     lng:\r\n *                       type: number\r\n *               mode:\r\n *                 type: string\r\n *                 enum: [driving, walking, transit]\r\n *               optimize:\r\n *                 type: boolean\r\n *     responses:\r\n *       200:\r\n *         description: Ruta optimizada\r\n */\r\nrouter.post(\r\n  '/optimize-route',\r\n  authMiddleware,\r\n  validate(optimizeRouteDTO),\r\n  optimizeRouteController\r\n);\r\n\r\n/**\r\n * @swagger\r\n * /geolocation/geocode:\r\n *   post:\r\n *     summary: Geocodificar direcci\xF3n a coordenadas\r\n *     tags: [Geolocalizaci\xF3n]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             type: object\r\n *             properties:\r\n *               address:\r\n *                 type: string\r\n *     responses:\r\n *       200:\r\n *         description: Coordenadas obtenidas\r\n */\r\nrouter.post(\r\n  '/geocode',\r\n  authMiddleware,\r\n  validate(geocodeAddressDTO),\r\n  geocodeAddressController\r\n);\r\n\r\n/**\r\n * @swagger\r\n * /geolocation/reverse-geocode:\r\n *   post:\r\n *     summary: Geocodificar coordenadas a direcci\xF3n\r\n *     tags: [Geolocalizaci\xF3n]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             type: object\r\n *             properties:\r\n *               lat:\r\n *                 type: number\r\n *               lng:\r\n *                 type: number\r\n *     responses:\r\n *       200:\r\n *         description: Direcci\xF3n obtenida\r\n */\r\nrouter.post(\r\n  '/reverse-geocode',\r\n  authMiddleware,\r\n  validate(reverseGeocodeDTO),\r\n  reverseGeocodeController\r\n);\r\n\r\n/**\r\n * @swagger\r\n * /geolocation/calculate-distance:\r\n *   post:\r\n *     summary: Calcular distancia entre dos puntos\r\n *     tags: [Geolocalizaci\xF3n]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             type: object\r\n *             properties:\r\n *               point1:\r\n *                 type: object\r\n *                 properties:\r\n *                   lat:\r\n *                     type: number\r\n *                   lng:\r\n *                     type: number\r\n *               point2:\r\n *                 type: object\r\n *                 properties:\r\n *                   lat:\r\n *                     type: number\r\n *                   lng:\r\n *                     type: number\r\n *     responses:\r\n *       200:\r\n *         description: Distancia calculada\r\n */\r\nrouter.post(\r\n  '/calculate-distance',\r\n  authMiddleware,\r\n  validate(calculateDistanceDTO),\r\n  calculateDistanceController\r\n);\r\n\r\n/**\r\n * @swagger\r\n * /geolocation/stats:\r\n *   get:\r\n *     summary: Obtener estad\xEDsticas de ubicaciones\r\n *     tags: [Geolocalizaci\xF3n]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     responses:\r\n *       200:\r\n *         description: Estad\xEDsticas de ubicaciones\r\n */\r\nrouter.get('/stats', authMiddleware, getLocationStatsController);\r\n\r\n/**\r\n * @swagger\r\n * /geolocation/within-radius:\r\n *   post:\r\n *     summary: Verificar si un punto est\xE1 dentro del radio\r\n *     tags: [Geolocalizaci\xF3n]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             type: object\r\n *             properties:\r\n *               center:\r\n *                 type: object\r\n *                 properties:\r\n *                   lat:\r\n *                     type: number\r\n *                   lng:\r\n *                     type: number\r\n *               point:\r\n *                 type: object\r\n *                 properties:\r\n *                   lat:\r\n *                     type: number\r\n *                   lng:\r\n *                     type: number\r\n *               radius:\r\n *                 type: number\r\n *     responses:\r\n *       200:\r\n *         description: Resultado de la verificaci\xF3n\r\n */\r\nrouter.post(\r\n  '/within-radius',\r\n  authMiddleware,\r\n  validate(isWithinRadiusDTO),\r\n  isWithinRadiusController\r\n);\r\n\r\nexport default router;\r\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "71534b3cec0968db202e2cd75e9740917d4234a2"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_uu4u3xkn1 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_uu4u3xkn1();
var __importDefault =
/* istanbul ignore next */
(cov_uu4u3xkn1().s[0]++,
/* istanbul ignore next */
(cov_uu4u3xkn1().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_uu4u3xkn1().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_uu4u3xkn1().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_uu4u3xkn1().f[0]++;
  cov_uu4u3xkn1().s[1]++;
  return /* istanbul ignore next */(cov_uu4u3xkn1().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_uu4u3xkn1().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_uu4u3xkn1().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_uu4u3xkn1().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_uu4u3xkn1().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const express_1 =
/* istanbul ignore next */
(cov_uu4u3xkn1().s[3]++, require("express"));
const authMiddleware_1 =
/* istanbul ignore next */
(cov_uu4u3xkn1().s[4]++, require("../middleware/authMiddleware"));
const validationMiddleware_1 =
/* istanbul ignore next */
(cov_uu4u3xkn1().s[5]++, require("../middleware/validationMiddleware"));
const joi_1 =
/* istanbul ignore next */
(cov_uu4u3xkn1().s[6]++, __importDefault(require("joi")));
const geolocationController_1 =
/* istanbul ignore next */
(cov_uu4u3xkn1().s[7]++, require("../controllers/geolocationController"));
const router =
/* istanbul ignore next */
(cov_uu4u3xkn1().s[8]++, (0, express_1.Router)());
// DTOs para validación
const coordinatesDTO =
/* istanbul ignore next */
(cov_uu4u3xkn1().s[9]++, joi_1.default.object({
  lat: joi_1.default.number().min(-90).max(90).required(),
  lng: joi_1.default.number().min(-180).max(180).required()
}));
const geocodeAddressDTO =
/* istanbul ignore next */
(cov_uu4u3xkn1().s[10]++, joi_1.default.object({
  address: joi_1.default.string().required().min(3).max(200)
}));
const reverseGeocodeDTO =
/* istanbul ignore next */
(cov_uu4u3xkn1().s[11]++, joi_1.default.object({
  lat: joi_1.default.number().min(-90).max(90).required(),
  lng: joi_1.default.number().min(-180).max(180).required()
}));
const calculateDistanceDTO =
/* istanbul ignore next */
(cov_uu4u3xkn1().s[12]++, joi_1.default.object({
  point1: coordinatesDTO.required(),
  point2: coordinatesDTO.required()
}));
const isWithinRadiusDTO =
/* istanbul ignore next */
(cov_uu4u3xkn1().s[13]++, joi_1.default.object({
  center: coordinatesDTO.required(),
  point: coordinatesDTO.required(),
  radius: joi_1.default.number().positive().required()
}));
const optimizeRouteDTO =
/* istanbul ignore next */
(cov_uu4u3xkn1().s[14]++, joi_1.default.object({
  startLocation: coordinatesDTO.required(),
  destinations: joi_1.default.array().items(coordinatesDTO).min(1).required(),
  mode: joi_1.default.string().valid('driving', 'walking', 'transit').required(),
  optimize: joi_1.default.boolean().default(false)
}));
/**
 * @swagger
 * /geolocation/proximity:
 *   get:
 *     summary: Buscar ubicaciones por proximidad
 *     tags: [Geolocalización]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: query
 *         name: lat
 *         schema:
 *           type: number
 *         required: true
 *         description: Latitud del centro de búsqueda
 *       - in: query
 *         name: lng
 *         schema:
 *           type: number
 *         required: true
 *         description: Longitud del centro de búsqueda
 *       - in: query
 *         name: radius
 *         schema:
 *           type: number
 *         required: true
 *         description: Radio de búsqueda en kilómetros
 *       - in: query
 *         name: type
 *         schema:
 *           type: string
 *           enum: [event, user, venue, all]
 *         description: Tipo de ubicación a buscar
 *       - in: query
 *         name: instrument
 *         schema:
 *           type: string
 *         description: Instrumento requerido
 *       - in: query
 *         name: eventType
 *         schema:
 *           type: string
 *         description: Tipo de evento
 *       - in: query
 *         name: limit
 *         schema:
 *           type: number
 *         description: Número máximo de resultados
 *       - in: query
 *         name: offset
 *         schema:
 *           type: number
 *         description: Desplazamiento para paginación
 *     responses:
 *       200:
 *         description: Ubicaciones encontradas
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 data:
 *                   type: object
 *                   properties:
 *                     locations:
 *                       type: array
 *                       items:
 *                         type: object
 *                         properties:
 *                           id:
 *                             type: string
 *                           name:
 *                             type: string
 *                           address:
 *                             type: string
 *                           coordinates:
 *                             type: object
 *                             properties:
 *                               lat:
 *                                 type: number
 *                               lng:
 *                                 type: number
 *                           distance:
 *                             type: number
 *                     total:
 *                       type: number
 */
/* istanbul ignore next */
cov_uu4u3xkn1().s[15]++;
router.get('/proximity', authMiddleware_1.authMiddleware, geolocationController_1.searchByProximityController);
/**
 * @swagger
 * /geolocation/nearby-events:
 *   get:
 *     summary: Buscar eventos cercanos
 *     tags: [Geolocalización]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: query
 *         name: lat
 *         schema:
 *           type: number
 *         required: true
 *         description: Latitud del centro de búsqueda
 *       - in: query
 *         name: lng
 *         schema:
 *           type: number
 *         required: true
 *         description: Longitud del centro de búsqueda
 *       - in: query
 *         name: radius
 *         schema:
 *           type: number
 *         required: true
 *         description: Radio de búsqueda en kilómetros
 *       - in: query
 *         name: instrument
 *         schema:
 *           type: string
 *         description: Instrumento requerido
 *       - in: query
 *         name: eventType
 *         schema:
 *           type: string
 *         description: Tipo de evento
 *     responses:
 *       200:
 *         description: Eventos cercanos encontrados
 */
/* istanbul ignore next */
cov_uu4u3xkn1().s[16]++;
router.get('/nearby-events', authMiddleware_1.authMiddleware, geolocationController_1.findNearbyEventsController);
/**
 * @swagger
 * /geolocation/nearby-musicians:
 *   get:
 *     summary: Buscar músicos cercanos
 *     tags: [Geolocalización]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: query
 *         name: lat
 *         schema:
 *           type: number
 *         required: true
 *         description: Latitud del centro de búsqueda
 *       - in: query
 *         name: lng
 *         schema:
 *           type: number
 *         required: true
 *         description: Longitud del centro de búsqueda
 *       - in: query
 *         name: radius
 *         schema:
 *           type: number
 *         required: true
 *         description: Radio de búsqueda en kilómetros
 *       - in: query
 *         name: instrument
 *         schema:
 *           type: string
 *         description: Instrumento del músico
 *       - in: query
 *         name: specialties
 *         schema:
 *           type: string
 *         description: Especialidades del músico
 *     responses:
 *       200:
 *         description: Músicos cercanos encontrados
 */
/* istanbul ignore next */
cov_uu4u3xkn1().s[17]++;
router.get('/nearby-musicians', authMiddleware_1.authMiddleware, geolocationController_1.findNearbyMusiciansController);
/**
 * @swagger
 * /geolocation/optimize-route:
 *   post:
 *     summary: Optimizar ruta para múltiples destinos
 *     tags: [Geolocalización]
 *     security:
 *       - bearerAuth: []
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             type: object
 *             properties:
 *               startLocation:
 *                 type: object
 *                 properties:
 *                   lat:
 *                     type: number
 *                   lng:
 *                     type: number
 *               destinations:
 *                 type: array
 *                 items:
 *                   type: object
 *                   properties:
 *                     lat:
 *                       type: number
 *                     lng:
 *                       type: number
 *               mode:
 *                 type: string
 *                 enum: [driving, walking, transit]
 *               optimize:
 *                 type: boolean
 *     responses:
 *       200:
 *         description: Ruta optimizada
 */
/* istanbul ignore next */
cov_uu4u3xkn1().s[18]++;
router.post('/optimize-route', authMiddleware_1.authMiddleware, (0, validationMiddleware_1.validate)(optimizeRouteDTO), geolocationController_1.optimizeRouteController);
/**
 * @swagger
 * /geolocation/geocode:
 *   post:
 *     summary: Geocodificar dirección a coordenadas
 *     tags: [Geolocalización]
 *     security:
 *       - bearerAuth: []
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             type: object
 *             properties:
 *               address:
 *                 type: string
 *     responses:
 *       200:
 *         description: Coordenadas obtenidas
 */
/* istanbul ignore next */
cov_uu4u3xkn1().s[19]++;
router.post('/geocode', authMiddleware_1.authMiddleware, (0, validationMiddleware_1.validate)(geocodeAddressDTO), geolocationController_1.geocodeAddressController);
/**
 * @swagger
 * /geolocation/reverse-geocode:
 *   post:
 *     summary: Geocodificar coordenadas a dirección
 *     tags: [Geolocalización]
 *     security:
 *       - bearerAuth: []
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             type: object
 *             properties:
 *               lat:
 *                 type: number
 *               lng:
 *                 type: number
 *     responses:
 *       200:
 *         description: Dirección obtenida
 */
/* istanbul ignore next */
cov_uu4u3xkn1().s[20]++;
router.post('/reverse-geocode', authMiddleware_1.authMiddleware, (0, validationMiddleware_1.validate)(reverseGeocodeDTO), geolocationController_1.reverseGeocodeController);
/**
 * @swagger
 * /geolocation/calculate-distance:
 *   post:
 *     summary: Calcular distancia entre dos puntos
 *     tags: [Geolocalización]
 *     security:
 *       - bearerAuth: []
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             type: object
 *             properties:
 *               point1:
 *                 type: object
 *                 properties:
 *                   lat:
 *                     type: number
 *                   lng:
 *                     type: number
 *               point2:
 *                 type: object
 *                 properties:
 *                   lat:
 *                     type: number
 *                   lng:
 *                     type: number
 *     responses:
 *       200:
 *         description: Distancia calculada
 */
/* istanbul ignore next */
cov_uu4u3xkn1().s[21]++;
router.post('/calculate-distance', authMiddleware_1.authMiddleware, (0, validationMiddleware_1.validate)(calculateDistanceDTO), geolocationController_1.calculateDistanceController);
/**
 * @swagger
 * /geolocation/stats:
 *   get:
 *     summary: Obtener estadísticas de ubicaciones
 *     tags: [Geolocalización]
 *     security:
 *       - bearerAuth: []
 *     responses:
 *       200:
 *         description: Estadísticas de ubicaciones
 */
/* istanbul ignore next */
cov_uu4u3xkn1().s[22]++;
router.get('/stats', authMiddleware_1.authMiddleware, geolocationController_1.getLocationStatsController);
/**
 * @swagger
 * /geolocation/within-radius:
 *   post:
 *     summary: Verificar si un punto está dentro del radio
 *     tags: [Geolocalización]
 *     security:
 *       - bearerAuth: []
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             type: object
 *             properties:
 *               center:
 *                 type: object
 *                 properties:
 *                   lat:
 *                     type: number
 *                   lng:
 *                     type: number
 *               point:
 *                 type: object
 *                 properties:
 *                   lat:
 *                     type: number
 *                   lng:
 *                     type: number
 *               radius:
 *                 type: number
 *     responses:
 *       200:
 *         description: Resultado de la verificación
 */
/* istanbul ignore next */
cov_uu4u3xkn1().s[23]++;
router.post('/within-radius', authMiddleware_1.authMiddleware, (0, validationMiddleware_1.validate)(isWithinRadiusDTO), geolocationController_1.isWithinRadiusController);
/* istanbul ignore next */
cov_uu4u3xkn1().s[24]++;
exports.default = router;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,