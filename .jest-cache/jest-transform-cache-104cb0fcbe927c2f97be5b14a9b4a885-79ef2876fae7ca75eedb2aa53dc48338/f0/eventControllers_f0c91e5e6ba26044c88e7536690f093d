154994b51035c5c2d74120015cb97401
"use strict";

/* istanbul ignore next */
function cov_k7a7dmlig() {
  var path = "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\controllers\\eventControllers.ts";
  var hash = "d2aa19507d2439df4fb6d3f8b9bfc0826795984d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\controllers\\eventControllers.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 16
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 28
        },
        end: {
          line: 3,
          column: 110
        }
      },
      "2": {
        start: {
          line: 3,
          column: 91
        },
        end: {
          line: 3,
          column: 106
        }
      },
      "3": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "4": {
        start: {
          line: 5,
          column: 36
        },
        end: {
          line: 5,
          column: 97
        }
      },
      "5": {
        start: {
          line: 5,
          column: 42
        },
        end: {
          line: 5,
          column: 70
        }
      },
      "6": {
        start: {
          line: 5,
          column: 85
        },
        end: {
          line: 5,
          column: 95
        }
      },
      "7": {
        start: {
          line: 6,
          column: 35
        },
        end: {
          line: 6,
          column: 100
        }
      },
      "8": {
        start: {
          line: 6,
          column: 41
        },
        end: {
          line: 6,
          column: 73
        }
      },
      "9": {
        start: {
          line: 6,
          column: 88
        },
        end: {
          line: 6,
          column: 98
        }
      },
      "10": {
        start: {
          line: 7,
          column: 32
        },
        end: {
          line: 7,
          column: 116
        }
      },
      "11": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 78
        }
      },
      "12": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 62
        }
      },
      "13": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 499
        }
      },
      "14": {
        start: {
          line: 13,
          column: 24
        },
        end: {
          line: 13,
          column: 60
        }
      },
      "15": {
        start: {
          line: 14,
          column: 21
        },
        end: {
          line: 14,
          column: 52
        }
      },
      "16": {
        start: {
          line: 18,
          column: 34
        },
        end: {
          line: 31,
          column: 2
        }
      },
      "17": {
        start: {
          line: 18,
          column: 48
        },
        end: {
          line: 31,
          column: 2
        }
      },
      "18": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 30,
          column: 5
        }
      },
      "19": {
        start: {
          line: 20,
          column: 21
        },
        end: {
          line: 20,
          column: 29
        }
      },
      "20": {
        start: {
          line: 21,
          column: 26
        },
        end: {
          line: 21,
          column: 34
        }
      },
      "21": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 128
        }
      },
      "22": {
        start: {
          line: 23,
          column: 22
        },
        end: {
          line: 23,
          column: 133
        }
      },
      "23": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 46
        }
      },
      "24": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 73
        }
      },
      "25": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 66
        }
      },
      "26": {
        start: {
          line: 32,
          column: 0
        },
        end: {
          line: 32,
          column: 62
        }
      },
      "27": {
        start: {
          line: 33,
          column: 34
        },
        end: {
          line: 37,
          column: 2
        }
      },
      "28": {
        start: {
          line: 33,
          column: 48
        },
        end: {
          line: 37,
          column: 2
        }
      },
      "29": {
        start: {
          line: 34,
          column: 17
        },
        end: {
          line: 34,
          column: 25
        }
      },
      "30": {
        start: {
          line: 35,
          column: 19
        },
        end: {
          line: 35,
          column: 103
        }
      },
      "31": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 36,
          column: 31
        }
      },
      "32": {
        start: {
          line: 38,
          column: 0
        },
        end: {
          line: 38,
          column: 62
        }
      },
      "33": {
        start: {
          line: 39,
          column: 35
        },
        end: {
          line: 46,
          column: 2
        }
      },
      "34": {
        start: {
          line: 39,
          column: 49
        },
        end: {
          line: 46,
          column: 2
        }
      },
      "35": {
        start: {
          line: 40,
          column: 17
        },
        end: {
          line: 40,
          column: 25
        }
      },
      "36": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 41,
          column: 119
        }
      },
      "37": {
        start: {
          line: 42,
          column: 19
        },
        end: {
          line: 42,
          column: 104
        }
      },
      "38": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 43,
          column: 127
        }
      },
      "39": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 44,
          column: 87
        }
      },
      "40": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 45,
          column: 31
        }
      },
      "41": {
        start: {
          line: 47,
          column: 0
        },
        end: {
          line: 47,
          column: 64
        }
      },
      "42": {
        start: {
          line: 48,
          column: 36
        },
        end: {
          line: 52,
          column: 2
        }
      },
      "43": {
        start: {
          line: 48,
          column: 50
        },
        end: {
          line: 52,
          column: 2
        }
      },
      "44": {
        start: {
          line: 49,
          column: 17
        },
        end: {
          line: 49,
          column: 25
        }
      },
      "45": {
        start: {
          line: 50,
          column: 19
        },
        end: {
          line: 50,
          column: 96
        }
      },
      "46": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 51,
          column: 31
        }
      },
      "47": {
        start: {
          line: 53,
          column: 0
        },
        end: {
          line: 53,
          column: 66
        }
      },
      "48": {
        start: {
          line: 54,
          column: 36
        },
        end: {
          line: 57,
          column: 2
        }
      },
      "49": {
        start: {
          line: 54,
          column: 50
        },
        end: {
          line: 57,
          column: 2
        }
      },
      "50": {
        start: {
          line: 55,
          column: 19
        },
        end: {
          line: 55,
          column: 63
        }
      },
      "51": {
        start: {
          line: 56,
          column: 4
        },
        end: {
          line: 56,
          column: 31
        }
      },
      "52": {
        start: {
          line: 58,
          column: 0
        },
        end: {
          line: 58,
          column: 66
        }
      },
      "53": {
        start: {
          line: 59,
          column: 30
        },
        end: {
          line: 79,
          column: 2
        }
      },
      "54": {
        start: {
          line: 59,
          column: 44
        },
        end: {
          line: 79,
          column: 2
        }
      },
      "55": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 78,
          column: 5
        }
      },
      "56": {
        start: {
          line: 61,
          column: 21
        },
        end: {
          line: 61,
          column: 29
        }
      },
      "57": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 65,
          column: 9
        }
      },
      "58": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 63,
          column: 86
        }
      },
      "59": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 64,
          column: 19
        }
      },
      "60": {
        start: {
          line: 66,
          column: 28
        },
        end: {
          line: 66,
          column: 38
        }
      },
      "61": {
        start: {
          line: 67,
          column: 29
        },
        end: {
          line: 67,
          column: 94
        }
      },
      "62": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 71,
          column: 9
        }
      },
      "63": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 69,
          column: 75
        }
      },
      "64": {
        start: {
          line: 70,
          column: 12
        },
        end: {
          line: 70,
          column: 19
        }
      },
      "65": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 73,
          column: 31
        }
      },
      "66": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 76,
          column: 72
        }
      },
      "67": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 77,
          column: 65
        }
      },
      "68": {
        start: {
          line: 80,
          column: 0
        },
        end: {
          line: 80,
          column: 54
        }
      },
      "69": {
        start: {
          line: 81,
          column: 36
        },
        end: {
          line: 85,
          column: 2
        }
      },
      "70": {
        start: {
          line: 81,
          column: 50
        },
        end: {
          line: 85,
          column: 2
        }
      },
      "71": {
        start: {
          line: 82,
          column: 17
        },
        end: {
          line: 82,
          column: 25
        }
      },
      "72": {
        start: {
          line: 83,
          column: 19
        },
        end: {
          line: 83,
          column: 108
        }
      },
      "73": {
        start: {
          line: 84,
          column: 4
        },
        end: {
          line: 84,
          column: 31
        }
      },
      "74": {
        start: {
          line: 86,
          column: 0
        },
        end: {
          line: 86,
          column: 66
        }
      },
      "75": {
        start: {
          line: 87,
          column: 37
        },
        end: {
          line: 91,
          column: 2
        }
      },
      "76": {
        start: {
          line: 87,
          column: 51
        },
        end: {
          line: 91,
          column: 2
        }
      },
      "77": {
        start: {
          line: 88,
          column: 17
        },
        end: {
          line: 88,
          column: 25
        }
      },
      "78": {
        start: {
          line: 89,
          column: 19
        },
        end: {
          line: 89,
          column: 100
        }
      },
      "79": {
        start: {
          line: 90,
          column: 4
        },
        end: {
          line: 90,
          column: 31
        }
      },
      "80": {
        start: {
          line: 92,
          column: 0
        },
        end: {
          line: 92,
          column: 68
        }
      },
      "81": {
        start: {
          line: 93,
          column: 27
        },
        end: {
          line: 103,
          column: 2
        }
      },
      "82": {
        start: {
          line: 93,
          column: 41
        },
        end: {
          line: 103,
          column: 2
        }
      },
      "83": {
        start: {
          line: 94,
          column: 17
        },
        end: {
          line: 94,
          column: 25
        }
      },
      "84": {
        start: {
          line: 95,
          column: 17
        },
        end: {
          line: 95,
          column: 19
        }
      },
      "85": {
        start: {
          line: 96,
          column: 4
        },
        end: {
          line: 101,
          column: 5
        }
      },
      "86": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 97,
          column: 73
        }
      },
      "87": {
        start: {
          line: 99,
          column: 9
        },
        end: {
          line: 101,
          column: 5
        }
      },
      "88": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 100,
          column: 77
        }
      },
      "89": {
        start: {
          line: 102,
          column: 4
        },
        end: {
          line: 102,
          column: 31
        }
      },
      "90": {
        start: {
          line: 104,
          column: 0
        },
        end: {
          line: 104,
          column: 48
        }
      },
      "91": {
        start: {
          line: 105,
          column: 36
        },
        end: {
          line: 121,
          column: 2
        }
      },
      "92": {
        start: {
          line: 105,
          column: 50
        },
        end: {
          line: 121,
          column: 2
        }
      },
      "93": {
        start: {
          line: 106,
          column: 17
        },
        end: {
          line: 106,
          column: 25
        }
      },
      "94": {
        start: {
          line: 107,
          column: 17
        },
        end: {
          line: 107,
          column: 19
        }
      },
      "95": {
        start: {
          line: 108,
          column: 4
        },
        end: {
          line: 119,
          column: 5
        }
      },
      "96": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 110,
          column: 95
        }
      },
      "97": {
        start: {
          line: 111,
          column: 40
        },
        end: {
          line: 111,
          column: 126
        }
      },
      "98": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 112,
          column: 57
        }
      },
      "99": {
        start: {
          line: 114,
          column: 9
        },
        end: {
          line: 119,
          column: 5
        }
      },
      "100": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 116,
          column: 99
        }
      },
      "101": {
        start: {
          line: 117,
          column: 40
        },
        end: {
          line: 117,
          column: 130
        }
      },
      "102": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 118,
          column: 57
        }
      },
      "103": {
        start: {
          line: 120,
          column: 4
        },
        end: {
          line: 120,
          column: 31
        }
      },
      "104": {
        start: {
          line: 122,
          column: 0
        },
        end: {
          line: 122,
          column: 66
        }
      },
      "105": {
        start: {
          line: 123,
          column: 31
        },
        end: {
          line: 147,
          column: 2
        }
      },
      "106": {
        start: {
          line: 123,
          column: 45
        },
        end: {
          line: 147,
          column: 2
        }
      },
      "107": {
        start: {
          line: 124,
          column: 4
        },
        end: {
          line: 146,
          column: 5
        }
      },
      "108": {
        start: {
          line: 125,
          column: 28
        },
        end: {
          line: 125,
          column: 38
        }
      },
      "109": {
        start: {
          line: 126,
          column: 22
        },
        end: {
          line: 126,
          column: 72
        }
      },
      "110": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 133,
          column: 9
        }
      },
      "111": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 131,
          column: 15
        }
      },
      "112": {
        start: {
          line: 132,
          column: 12
        },
        end: {
          line: 132,
          column: 19
        }
      },
      "113": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 137,
          column: 11
        }
      },
      "114": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 140,
          column: 75
        }
      },
      "115": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 145,
          column: 11
        }
      },
      "116": {
        start: {
          line: 148,
          column: 0
        },
        end: {
          line: 148,
          column: 56
        }
      },
      "117": {
        start: {
          line: 149,
          column: 30
        },
        end: {
          line: 208,
          column: 2
        }
      },
      "118": {
        start: {
          line: 149,
          column: 44
        },
        end: {
          line: 208,
          column: 2
        }
      },
      "119": {
        start: {
          line: 150,
          column: 4
        },
        end: {
          line: 207,
          column: 5
        }
      },
      "120": {
        start: {
          line: 151,
          column: 21
        },
        end: {
          line: 151,
          column: 29
        }
      },
      "121": {
        start: {
          line: 152,
          column: 28
        },
        end: {
          line: 152,
          column: 38
        }
      },
      "122": {
        start: {
          line: 153,
          column: 8
        },
        end: {
          line: 153,
          column: 118
        }
      },
      "123": {
        start: {
          line: 155,
          column: 30
        },
        end: {
          line: 155,
          column: 80
        }
      },
      "124": {
        start: {
          line: 156,
          column: 8
        },
        end: {
          line: 163,
          column: 9
        }
      },
      "125": {
        start: {
          line: 157,
          column: 12
        },
        end: {
          line: 157,
          column: 97
        }
      },
      "126": {
        start: {
          line: 158,
          column: 12
        },
        end: {
          line: 161,
          column: 15
        }
      },
      "127": {
        start: {
          line: 162,
          column: 12
        },
        end: {
          line: 162,
          column: 19
        }
      },
      "128": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 172,
          column: 9
        }
      },
      "129": {
        start: {
          line: 166,
          column: 12
        },
        end: {
          line: 166,
          column: 96
        }
      },
      "130": {
        start: {
          line: 167,
          column: 12
        },
        end: {
          line: 170,
          column: 15
        }
      },
      "131": {
        start: {
          line: 171,
          column: 12
        },
        end: {
          line: 171,
          column: 19
        }
      },
      "132": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 181,
          column: 9
        }
      },
      "133": {
        start: {
          line: 175,
          column: 12
        },
        end: {
          line: 175,
          column: 95
        }
      },
      "134": {
        start: {
          line: 176,
          column: 12
        },
        end: {
          line: 179,
          column: 15
        }
      },
      "135": {
        start: {
          line: 180,
          column: 12
        },
        end: {
          line: 180,
          column: 19
        }
      },
      "136": {
        start: {
          line: 183,
          column: 31
        },
        end: {
          line: 183,
          column: 96
        }
      },
      "137": {
        start: {
          line: 184,
          column: 8
        },
        end: {
          line: 191,
          column: 9
        }
      },
      "138": {
        start: {
          line: 185,
          column: 12
        },
        end: {
          line: 185,
          column: 93
        }
      },
      "139": {
        start: {
          line: 186,
          column: 12
        },
        end: {
          line: 189,
          column: 15
        }
      },
      "140": {
        start: {
          line: 190,
          column: 12
        },
        end: {
          line: 190,
          column: 19
        }
      },
      "141": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 192,
          column: 102
        }
      },
      "142": {
        start: {
          line: 194,
          column: 8
        },
        end: {
          line: 198,
          column: 11
        }
      },
      "143": {
        start: {
          line: 201,
          column: 8
        },
        end: {
          line: 201,
          column: 78
        }
      },
      "144": {
        start: {
          line: 202,
          column: 8
        },
        end: {
          line: 206,
          column: 11
        }
      },
      "145": {
        start: {
          line: 209,
          column: 0
        },
        end: {
          line: 209,
          column: 54
        }
      },
      "146": {
        start: {
          line: 210,
          column: 32
        },
        end: {
          line: 270,
          column: 2
        }
      },
      "147": {
        start: {
          line: 210,
          column: 46
        },
        end: {
          line: 270,
          column: 2
        }
      },
      "148": {
        start: {
          line: 211,
          column: 4
        },
        end: {
          line: 269,
          column: 5
        }
      },
      "149": {
        start: {
          line: 212,
          column: 21
        },
        end: {
          line: 212,
          column: 29
        }
      },
      "150": {
        start: {
          line: 213,
          column: 28
        },
        end: {
          line: 213,
          column: 38
        }
      },
      "151": {
        start: {
          line: 214,
          column: 8
        },
        end: {
          line: 214,
          column: 119
        }
      },
      "152": {
        start: {
          line: 216,
          column: 30
        },
        end: {
          line: 216,
          column: 80
        }
      },
      "153": {
        start: {
          line: 217,
          column: 8
        },
        end: {
          line: 224,
          column: 9
        }
      },
      "154": {
        start: {
          line: 218,
          column: 12
        },
        end: {
          line: 218,
          column: 97
        }
      },
      "155": {
        start: {
          line: 219,
          column: 12
        },
        end: {
          line: 222,
          column: 15
        }
      },
      "156": {
        start: {
          line: 223,
          column: 12
        },
        end: {
          line: 223,
          column: 19
        }
      },
      "157": {
        start: {
          line: 226,
          column: 8
        },
        end: {
          line: 233,
          column: 9
        }
      },
      "158": {
        start: {
          line: 227,
          column: 12
        },
        end: {
          line: 227,
          column: 97
        }
      },
      "159": {
        start: {
          line: 228,
          column: 12
        },
        end: {
          line: 231,
          column: 15
        }
      },
      "160": {
        start: {
          line: 232,
          column: 12
        },
        end: {
          line: 232,
          column: 19
        }
      },
      "161": {
        start: {
          line: 234,
          column: 8
        },
        end: {
          line: 242,
          column: 9
        }
      },
      "162": {
        start: {
          line: 236,
          column: 12
        },
        end: {
          line: 236,
          column: 96
        }
      },
      "163": {
        start: {
          line: 237,
          column: 12
        },
        end: {
          line: 240,
          column: 15
        }
      },
      "164": {
        start: {
          line: 241,
          column: 12
        },
        end: {
          line: 241,
          column: 19
        }
      },
      "165": {
        start: {
          line: 244,
          column: 31
        },
        end: {
          line: 244,
          column: 98
        }
      },
      "166": {
        start: {
          line: 245,
          column: 8
        },
        end: {
          line: 252,
          column: 9
        }
      },
      "167": {
        start: {
          line: 246,
          column: 12
        },
        end: {
          line: 246,
          column: 94
        }
      },
      "168": {
        start: {
          line: 247,
          column: 12
        },
        end: {
          line: 250,
          column: 15
        }
      },
      "169": {
        start: {
          line: 251,
          column: 12
        },
        end: {
          line: 251,
          column: 19
        }
      },
      "170": {
        start: {
          line: 253,
          column: 8
        },
        end: {
          line: 253,
          column: 103
        }
      },
      "171": {
        start: {
          line: 255,
          column: 25
        },
        end: {
          line: 259,
          column: 9
        }
      },
      "172": {
        start: {
          line: 260,
          column: 8
        },
        end: {
          line: 260,
          column: 27
        }
      },
      "173": {
        start: {
          line: 263,
          column: 8
        },
        end: {
          line: 263,
          column: 79
        }
      },
      "174": {
        start: {
          line: 264,
          column: 8
        },
        end: {
          line: 268,
          column: 11
        }
      },
      "175": {
        start: {
          line: 271,
          column: 0
        },
        end: {
          line: 271,
          column: 58
        }
      },
      "176": {
        start: {
          line: 272,
          column: 30
        },
        end: {
          line: 329,
          column: 2
        }
      },
      "177": {
        start: {
          line: 272,
          column: 44
        },
        end: {
          line: 329,
          column: 2
        }
      },
      "178": {
        start: {
          line: 273,
          column: 4
        },
        end: {
          line: 328,
          column: 5
        }
      },
      "179": {
        start: {
          line: 274,
          column: 21
        },
        end: {
          line: 274,
          column: 29
        }
      },
      "180": {
        start: {
          line: 275,
          column: 28
        },
        end: {
          line: 275,
          column: 38
        }
      },
      "181": {
        start: {
          line: 276,
          column: 8
        },
        end: {
          line: 276,
          column: 119
        }
      },
      "182": {
        start: {
          line: 278,
          column: 30
        },
        end: {
          line: 278,
          column: 80
        }
      },
      "183": {
        start: {
          line: 279,
          column: 8
        },
        end: {
          line: 286,
          column: 9
        }
      },
      "184": {
        start: {
          line: 280,
          column: 12
        },
        end: {
          line: 280,
          column: 97
        }
      },
      "185": {
        start: {
          line: 281,
          column: 12
        },
        end: {
          line: 284,
          column: 15
        }
      },
      "186": {
        start: {
          line: 285,
          column: 12
        },
        end: {
          line: 285,
          column: 19
        }
      },
      "187": {
        start: {
          line: 288,
          column: 8
        },
        end: {
          line: 295,
          column: 9
        }
      },
      "188": {
        start: {
          line: 289,
          column: 12
        },
        end: {
          line: 289,
          column: 96
        }
      },
      "189": {
        start: {
          line: 290,
          column: 12
        },
        end: {
          line: 293,
          column: 15
        }
      },
      "190": {
        start: {
          line: 294,
          column: 12
        },
        end: {
          line: 294,
          column: 19
        }
      },
      "191": {
        start: {
          line: 296,
          column: 8
        },
        end: {
          line: 303,
          column: 9
        }
      },
      "192": {
        start: {
          line: 297,
          column: 12
        },
        end: {
          line: 297,
          column: 96
        }
      },
      "193": {
        start: {
          line: 298,
          column: 12
        },
        end: {
          line: 301,
          column: 15
        }
      },
      "194": {
        start: {
          line: 302,
          column: 12
        },
        end: {
          line: 302,
          column: 19
        }
      },
      "195": {
        start: {
          line: 305,
          column: 29
        },
        end: {
          line: 305,
          column: 94
        }
      },
      "196": {
        start: {
          line: 306,
          column: 8
        },
        end: {
          line: 313,
          column: 9
        }
      },
      "197": {
        start: {
          line: 307,
          column: 12
        },
        end: {
          line: 307,
          column: 93
        }
      },
      "198": {
        start: {
          line: 308,
          column: 12
        },
        end: {
          line: 311,
          column: 15
        }
      },
      "199": {
        start: {
          line: 312,
          column: 12
        },
        end: {
          line: 312,
          column: 19
        }
      },
      "200": {
        start: {
          line: 314,
          column: 8
        },
        end: {
          line: 314,
          column: 102
        }
      },
      "201": {
        start: {
          line: 316,
          column: 8
        },
        end: {
          line: 319,
          column: 11
        }
      },
      "202": {
        start: {
          line: 322,
          column: 8
        },
        end: {
          line: 322,
          column: 78
        }
      },
      "203": {
        start: {
          line: 323,
          column: 8
        },
        end: {
          line: 327,
          column: 11
        }
      },
      "204": {
        start: {
          line: 330,
          column: 0
        },
        end: {
          line: 330,
          column: 54
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 2,
            column: 45
          }
        },
        loc: {
          start: {
            line: 2,
            column: 89
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "adopt",
        decl: {
          start: {
            line: 3,
            column: 13
          },
          end: {
            line: 3,
            column: 18
          }
        },
        loc: {
          start: {
            line: 3,
            column: 26
          },
          end: {
            line: 3,
            column: 112
          }
        },
        line: 3
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 3,
            column: 70
          },
          end: {
            line: 3,
            column: 71
          }
        },
        loc: {
          start: {
            line: 3,
            column: 89
          },
          end: {
            line: 3,
            column: 108
          }
        },
        line: 3
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 4,
            column: 36
          },
          end: {
            line: 4,
            column: 37
          }
        },
        loc: {
          start: {
            line: 4,
            column: 63
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 4
      },
      "4": {
        name: "fulfilled",
        decl: {
          start: {
            line: 5,
            column: 17
          },
          end: {
            line: 5,
            column: 26
          }
        },
        loc: {
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 99
          }
        },
        line: 5
      },
      "5": {
        name: "rejected",
        decl: {
          start: {
            line: 6,
            column: 17
          },
          end: {
            line: 6,
            column: 25
          }
        },
        loc: {
          start: {
            line: 6,
            column: 33
          },
          end: {
            line: 6,
            column: 102
          }
        },
        line: 6
      },
      "6": {
        name: "step",
        decl: {
          start: {
            line: 7,
            column: 17
          },
          end: {
            line: 7,
            column: 21
          }
        },
        loc: {
          start: {
            line: 7,
            column: 30
          },
          end: {
            line: 7,
            column: 118
          }
        },
        line: 7
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 18,
            column: 34
          },
          end: {
            line: 18,
            column: 35
          }
        },
        loc: {
          start: {
            line: 18,
            column: 48
          },
          end: {
            line: 31,
            column: 2
          }
        },
        line: 18
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 18,
            column: 82
          },
          end: {
            line: 18,
            column: 83
          }
        },
        loc: {
          start: {
            line: 18,
            column: 95
          },
          end: {
            line: 31,
            column: 1
          }
        },
        line: 18
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 33,
            column: 34
          },
          end: {
            line: 33,
            column: 35
          }
        },
        loc: {
          start: {
            line: 33,
            column: 48
          },
          end: {
            line: 37,
            column: 2
          }
        },
        line: 33
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 33,
            column: 82
          },
          end: {
            line: 33,
            column: 83
          }
        },
        loc: {
          start: {
            line: 33,
            column: 95
          },
          end: {
            line: 37,
            column: 1
          }
        },
        line: 33
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 39,
            column: 35
          },
          end: {
            line: 39,
            column: 36
          }
        },
        loc: {
          start: {
            line: 39,
            column: 49
          },
          end: {
            line: 46,
            column: 2
          }
        },
        line: 39
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 39,
            column: 83
          },
          end: {
            line: 39,
            column: 84
          }
        },
        loc: {
          start: {
            line: 39,
            column: 96
          },
          end: {
            line: 46,
            column: 1
          }
        },
        line: 39
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 48,
            column: 36
          },
          end: {
            line: 48,
            column: 37
          }
        },
        loc: {
          start: {
            line: 48,
            column: 50
          },
          end: {
            line: 52,
            column: 2
          }
        },
        line: 48
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 48,
            column: 84
          },
          end: {
            line: 48,
            column: 85
          }
        },
        loc: {
          start: {
            line: 48,
            column: 97
          },
          end: {
            line: 52,
            column: 1
          }
        },
        line: 48
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 54,
            column: 36
          },
          end: {
            line: 54,
            column: 37
          }
        },
        loc: {
          start: {
            line: 54,
            column: 50
          },
          end: {
            line: 57,
            column: 2
          }
        },
        line: 54
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 54,
            column: 84
          },
          end: {
            line: 54,
            column: 85
          }
        },
        loc: {
          start: {
            line: 54,
            column: 97
          },
          end: {
            line: 57,
            column: 1
          }
        },
        line: 54
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 59,
            column: 30
          },
          end: {
            line: 59,
            column: 31
          }
        },
        loc: {
          start: {
            line: 59,
            column: 44
          },
          end: {
            line: 79,
            column: 2
          }
        },
        line: 59
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 59,
            column: 78
          },
          end: {
            line: 59,
            column: 79
          }
        },
        loc: {
          start: {
            line: 59,
            column: 91
          },
          end: {
            line: 79,
            column: 1
          }
        },
        line: 59
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 81,
            column: 36
          },
          end: {
            line: 81,
            column: 37
          }
        },
        loc: {
          start: {
            line: 81,
            column: 50
          },
          end: {
            line: 85,
            column: 2
          }
        },
        line: 81
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 81,
            column: 84
          },
          end: {
            line: 81,
            column: 85
          }
        },
        loc: {
          start: {
            line: 81,
            column: 97
          },
          end: {
            line: 85,
            column: 1
          }
        },
        line: 81
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 87,
            column: 37
          },
          end: {
            line: 87,
            column: 38
          }
        },
        loc: {
          start: {
            line: 87,
            column: 51
          },
          end: {
            line: 91,
            column: 2
          }
        },
        line: 87
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 87,
            column: 85
          },
          end: {
            line: 87,
            column: 86
          }
        },
        loc: {
          start: {
            line: 87,
            column: 98
          },
          end: {
            line: 91,
            column: 1
          }
        },
        line: 87
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 93,
            column: 27
          },
          end: {
            line: 93,
            column: 28
          }
        },
        loc: {
          start: {
            line: 93,
            column: 41
          },
          end: {
            line: 103,
            column: 2
          }
        },
        line: 93
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 93,
            column: 75
          },
          end: {
            line: 93,
            column: 76
          }
        },
        loc: {
          start: {
            line: 93,
            column: 88
          },
          end: {
            line: 103,
            column: 1
          }
        },
        line: 93
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 105,
            column: 36
          },
          end: {
            line: 105,
            column: 37
          }
        },
        loc: {
          start: {
            line: 105,
            column: 50
          },
          end: {
            line: 121,
            column: 2
          }
        },
        line: 105
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 105,
            column: 84
          },
          end: {
            line: 105,
            column: 85
          }
        },
        loc: {
          start: {
            line: 105,
            column: 97
          },
          end: {
            line: 121,
            column: 1
          }
        },
        line: 105
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 123,
            column: 31
          },
          end: {
            line: 123,
            column: 32
          }
        },
        loc: {
          start: {
            line: 123,
            column: 45
          },
          end: {
            line: 147,
            column: 2
          }
        },
        line: 123
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 123,
            column: 79
          },
          end: {
            line: 123,
            column: 80
          }
        },
        loc: {
          start: {
            line: 123,
            column: 92
          },
          end: {
            line: 147,
            column: 1
          }
        },
        line: 123
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 149,
            column: 30
          },
          end: {
            line: 149,
            column: 31
          }
        },
        loc: {
          start: {
            line: 149,
            column: 44
          },
          end: {
            line: 208,
            column: 2
          }
        },
        line: 149
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 149,
            column: 78
          },
          end: {
            line: 149,
            column: 79
          }
        },
        loc: {
          start: {
            line: 149,
            column: 91
          },
          end: {
            line: 208,
            column: 1
          }
        },
        line: 149
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 210,
            column: 32
          },
          end: {
            line: 210,
            column: 33
          }
        },
        loc: {
          start: {
            line: 210,
            column: 46
          },
          end: {
            line: 270,
            column: 2
          }
        },
        line: 210
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 210,
            column: 80
          },
          end: {
            line: 210,
            column: 81
          }
        },
        loc: {
          start: {
            line: 210,
            column: 93
          },
          end: {
            line: 270,
            column: 1
          }
        },
        line: 210
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 272,
            column: 30
          },
          end: {
            line: 272,
            column: 31
          }
        },
        loc: {
          start: {
            line: 272,
            column: 44
          },
          end: {
            line: 329,
            column: 2
          }
        },
        line: 272
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 272,
            column: 78
          },
          end: {
            line: 272,
            column: 79
          }
        },
        loc: {
          start: {
            line: 272,
            column: 91
          },
          end: {
            line: 329,
            column: 1
          }
        },
        line: 272
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 16
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 17
          },
          end: {
            line: 2,
            column: 21
          }
        }, {
          start: {
            line: 2,
            column: 25
          },
          end: {
            line: 2,
            column: 39
          }
        }, {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 35
          },
          end: {
            line: 3,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 56
          },
          end: {
            line: 3,
            column: 61
          }
        }, {
          start: {
            line: 3,
            column: 64
          },
          end: {
            line: 3,
            column: 109
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 17
          }
        }, {
          start: {
            line: 4,
            column: 22
          },
          end: {
            line: 4,
            column: 33
          }
        }],
        line: 4
      },
      "3": {
        loc: {
          start: {
            line: 7,
            column: 32
          },
          end: {
            line: 7,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 7,
            column: 46
          },
          end: {
            line: 7,
            column: 67
          }
        }, {
          start: {
            line: 7,
            column: 70
          },
          end: {
            line: 7,
            column: 115
          }
        }],
        line: 7
      },
      "4": {
        loc: {
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 61
          }
        }, {
          start: {
            line: 8,
            column: 65
          },
          end: {
            line: 8,
            column: 67
          }
        }],
        line: 8
      },
      "5": {
        loc: {
          start: {
            line: 62,
            column: 8
          },
          end: {
            line: 65,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 8
          },
          end: {
            line: 65,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 62
      },
      "6": {
        loc: {
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 71,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 71,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 68
      },
      "7": {
        loc: {
          start: {
            line: 96,
            column: 4
          },
          end: {
            line: 101,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 96,
            column: 4
          },
          end: {
            line: 101,
            column: 5
          }
        }, {
          start: {
            line: 99,
            column: 9
          },
          end: {
            line: 101,
            column: 5
          }
        }],
        line: 96
      },
      "8": {
        loc: {
          start: {
            line: 99,
            column: 9
          },
          end: {
            line: 101,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 99,
            column: 9
          },
          end: {
            line: 101,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 99
      },
      "9": {
        loc: {
          start: {
            line: 108,
            column: 4
          },
          end: {
            line: 119,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 108,
            column: 4
          },
          end: {
            line: 119,
            column: 5
          }
        }, {
          start: {
            line: 114,
            column: 9
          },
          end: {
            line: 119,
            column: 5
          }
        }],
        line: 108
      },
      "10": {
        loc: {
          start: {
            line: 114,
            column: 9
          },
          end: {
            line: 119,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 114,
            column: 9
          },
          end: {
            line: 119,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 114
      },
      "11": {
        loc: {
          start: {
            line: 127,
            column: 8
          },
          end: {
            line: 133,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 127,
            column: 8
          },
          end: {
            line: 133,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 127
      },
      "12": {
        loc: {
          start: {
            line: 144,
            column: 19
          },
          end: {
            line: 144,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 144,
            column: 44
          },
          end: {
            line: 144,
            column: 57
          }
        }, {
          start: {
            line: 144,
            column: 60
          },
          end: {
            line: 144,
            column: 79
          }
        }],
        line: 144
      },
      "13": {
        loc: {
          start: {
            line: 156,
            column: 8
          },
          end: {
            line: 163,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 156,
            column: 8
          },
          end: {
            line: 163,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 156
      },
      "14": {
        loc: {
          start: {
            line: 165,
            column: 8
          },
          end: {
            line: 172,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 165,
            column: 8
          },
          end: {
            line: 172,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 165
      },
      "15": {
        loc: {
          start: {
            line: 165,
            column: 12
          },
          end: {
            line: 165,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 165,
            column: 12
          },
          end: {
            line: 165,
            column: 40
          }
        }, {
          start: {
            line: 165,
            column: 44
          },
          end: {
            line: 165,
            column: 81
          }
        }],
        line: 165
      },
      "16": {
        loc: {
          start: {
            line: 173,
            column: 8
          },
          end: {
            line: 181,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 173,
            column: 8
          },
          end: {
            line: 181,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 173
      },
      "17": {
        loc: {
          start: {
            line: 173,
            column: 12
          },
          end: {
            line: 174,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 173,
            column: 12
          },
          end: {
            line: 173,
            column: 34
          }
        }, {
          start: {
            line: 174,
            column: 12
          },
          end: {
            line: 174,
            column: 63
          }
        }],
        line: 173
      },
      "18": {
        loc: {
          start: {
            line: 184,
            column: 8
          },
          end: {
            line: 191,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 184,
            column: 8
          },
          end: {
            line: 191,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 184
      },
      "19": {
        loc: {
          start: {
            line: 205,
            column: 19
          },
          end: {
            line: 205,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 205,
            column: 44
          },
          end: {
            line: 205,
            column: 57
          }
        }, {
          start: {
            line: 205,
            column: 60
          },
          end: {
            line: 205,
            column: 79
          }
        }],
        line: 205
      },
      "20": {
        loc: {
          start: {
            line: 217,
            column: 8
          },
          end: {
            line: 224,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 217,
            column: 8
          },
          end: {
            line: 224,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 217
      },
      "21": {
        loc: {
          start: {
            line: 226,
            column: 8
          },
          end: {
            line: 233,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 226,
            column: 8
          },
          end: {
            line: 233,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 226
      },
      "22": {
        loc: {
          start: {
            line: 226,
            column: 12
          },
          end: {
            line: 226,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 226,
            column: 12
          },
          end: {
            line: 226,
            column: 40
          }
        }, {
          start: {
            line: 226,
            column: 44
          },
          end: {
            line: 226,
            column: 81
          }
        }],
        line: 226
      },
      "23": {
        loc: {
          start: {
            line: 234,
            column: 8
          },
          end: {
            line: 242,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 234,
            column: 8
          },
          end: {
            line: 242,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 234
      },
      "24": {
        loc: {
          start: {
            line: 234,
            column: 12
          },
          end: {
            line: 235,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 234,
            column: 12
          },
          end: {
            line: 234,
            column: 34
          }
        }, {
          start: {
            line: 235,
            column: 12
          },
          end: {
            line: 235,
            column: 63
          }
        }],
        line: 234
      },
      "25": {
        loc: {
          start: {
            line: 245,
            column: 8
          },
          end: {
            line: 252,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 245,
            column: 8
          },
          end: {
            line: 252,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 245
      },
      "26": {
        loc: {
          start: {
            line: 267,
            column: 19
          },
          end: {
            line: 267,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 267,
            column: 44
          },
          end: {
            line: 267,
            column: 57
          }
        }, {
          start: {
            line: 267,
            column: 60
          },
          end: {
            line: 267,
            column: 79
          }
        }],
        line: 267
      },
      "27": {
        loc: {
          start: {
            line: 279,
            column: 8
          },
          end: {
            line: 286,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 279,
            column: 8
          },
          end: {
            line: 286,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 279
      },
      "28": {
        loc: {
          start: {
            line: 288,
            column: 8
          },
          end: {
            line: 295,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 288,
            column: 8
          },
          end: {
            line: 295,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 288
      },
      "29": {
        loc: {
          start: {
            line: 296,
            column: 8
          },
          end: {
            line: 303,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 296,
            column: 8
          },
          end: {
            line: 303,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 296
      },
      "30": {
        loc: {
          start: {
            line: 306,
            column: 8
          },
          end: {
            line: 313,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 306,
            column: 8
          },
          end: {
            line: 313,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 306
      },
      "31": {
        loc: {
          start: {
            line: 326,
            column: 19
          },
          end: {
            line: 326,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 326,
            column: 44
          },
          end: {
            line: 326,
            column: 57
          }
        }, {
          start: {
            line: 326,
            column: 60
          },
          end: {
            line: 326,
            column: 79
          }
        }],
        line: 326
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\controllers\\eventControllers.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\controllers\\eventControllers.ts"],
      sourcesContent: ["import { Request, Response } from 'express';\r\nimport { logger } from '../services/loggerService';\r\nimport {\r\n  createEventModel,\r\n  getEventsByUserAndStatus,\r\n  getAvailableEvents,\r\n  acceptEventModel,\r\n  getEventsByMusicianAndStatus,\r\n  getEventsByUser,\r\n  getEventsByMusician,\r\n  getEventByIdModel,\r\n  cancelEventModel,\r\n  completeEventModel,\r\n  deleteEventModel,\r\n} from '../models/eventModel';\r\nimport { Event } from '../utils/DataTypes';\r\n\r\n// Comentado temporalmente para evitar dependencias circulares\r\n// import { io, users } from \"../../index\";\r\n\r\n// POST /events/request-musician\r\nexport const requestMusicianController = async (\r\n  req: Request,\r\n  res: Response\r\n): Promise<void> => {\r\n  try {\r\n    const user = (req as any).user;\r\n    const eventData = req.body;\r\n    logger.info('Payload recibido en /events/request-musician:', { context: 'Event', metadata: eventData });\r\n    const event = await createEventModel({\r\n      ...eventData,\r\n      user: user.userEmail,\r\n    });\r\n    // io.emit('new_event_request', event); // Comentado temporalmente\r\n    res.status(201).json({ data: event });\r\n  } catch (error) {\r\n    logger.error('Error al crear solicitud:', error as Error);\r\n    res.status(500).json({ msg: 'Error al crear solicitud' });\r\n  }\r\n};\r\n\r\nexport const myPendingEventsController = async (\r\n  req: Request,\r\n  res: Response\r\n): Promise<void> => {\r\n  const user = (req as any).user;\r\n  const events = await getEventsByUserAndStatus(\r\n    user.userEmail,\r\n    'pending_musician'\r\n  );\r\n  res.json({ data: events });\r\n};\r\n\r\nexport const myAssignedEventsController = async (\r\n  req: Request,\r\n  res: Response\r\n): Promise<void> => {\r\n  const user = (req as any).user;\r\n  logger.info('\uD83D\uDD0D Buscando eventos asignados para:', { context: 'Event', metadata: user.userEmail });\r\n  const events = await getEventsByUserAndStatus(\r\n    user.userEmail,\r\n    'musician_assigned'\r\n  );\r\n  logger.info('\uD83D\uDCE6 Eventos asignados encontrados:', { context: 'Event', metadata: { count: events.length } });\r\n  logger.info('\uD83D\uDCE6 Eventos:', { context: 'Event', metadata: events });\r\n  res.json({ data: events });\r\n};\r\n\r\nexport const myCompletedEventsController = async (\r\n  req: Request,\r\n  res: Response\r\n): Promise<void> => {\r\n  const user = (req as any).user;\r\n  const events = await getEventsByUserAndStatus(user.userEmail, 'completed');\r\n  res.json({ data: events });\r\n};\r\n\r\nexport const availableRequestsController = async (\r\n  req: Request,\r\n  res: Response\r\n): Promise<void> => {\r\n  const events = await getAvailableEvents();\r\n  res.json({ data: events });\r\n};\r\n\r\nexport const acceptEventController = async (\r\n  req: Request,\r\n  res: Response\r\n): Promise<void> => {\r\n  try {\r\n    const user = (req as any).user;\r\n    if (user.roll !== 'musico') {\r\n      res.status(403).json({ msg: 'Solo los m\xFAsicos pueden aceptar eventos.' });\r\n      return;\r\n    }\r\n    const { eventId } = req.params;\r\n    const updatedEvent = await acceptEventModel(eventId, user.userEmail);\r\n    if (!updatedEvent) {\r\n      res.status(400).json({ msg: 'No se pudo aceptar el evento.' });\r\n      return;\r\n    }\r\n    // Comentado temporalmente - notificaciones por socket\r\n    res.json(updatedEvent);\r\n  } catch (error) {\r\n    logger.error('Error al aceptar evento:', error as Error);\r\n    res.status(500).json({ msg: 'Error al aceptar evento' });\r\n  }\r\n};\r\n\r\nexport const myScheduledEventsController = async (\r\n  req: Request,\r\n  res: Response\r\n): Promise<void> => {\r\n  const user = (req as any).user;\r\n  const events = await getEventsByMusicianAndStatus(\r\n    user.userEmail,\r\n    'musician_assigned'\r\n  );\r\n  res.json({ data: events });\r\n};\r\n\r\nexport const myPastPerformancesController = async (\r\n  req: Request,\r\n  res: Response\r\n): Promise<void> => {\r\n  const user = (req as any).user;\r\n  const events = await getEventsByMusicianAndStatus(\r\n    user.userEmail,\r\n    'completed'\r\n  );\r\n  res.json({ data: events });\r\n};\r\n\r\nexport const myEventsController = async (\r\n  req: Request,\r\n  res: Response\r\n): Promise<void> => {\r\n  const user = (req as any).user;\r\n  let events: Event[] = [];\r\n  if (user.roll === 'eventCreator') {\r\n    events = await getEventsByUser(user.userEmail);\r\n  } else if (user.roll === 'musico') {\r\n    events = await getEventsByMusician(user.userEmail);\r\n  }\r\n  res.json({ data: events });\r\n};\r\n\r\nexport const myCancelledEventsController = async (\r\n  req: Request,\r\n  res: Response\r\n): Promise<void> => {\r\n  const user = (req as any).user;\r\n  let events: Event[] = [];\r\n\r\n  if (user.roll === 'eventCreator') {\r\n    // Para organizadores: obtener eventos cancelados que ellos crearon\r\n    events = await getEventsByUserAndStatus(user.userEmail, 'cancelled');\r\n    const musicianCancelledEvents = await getEventsByUserAndStatus(\r\n      user.userEmail,\r\n      'musician_cancelled'\r\n    );\r\n    events = [...events, ...musicianCancelledEvents];\r\n  } else if (user.roll === 'musico') {\r\n    // Para m\xFAsicos: obtener eventos cancelados donde est\xE1n asignados\r\n    events = await getEventsByMusicianAndStatus(user.userEmail, 'cancelled');\r\n    const musicianCancelledEvents = await getEventsByMusicianAndStatus(\r\n      user.userEmail,\r\n      'musician_cancelled'\r\n    );\r\n    events = [...events, ...musicianCancelledEvents];\r\n  }\r\n\r\n  res.json({ data: events });\r\n};\r\n\r\nexport const getEventByIdController = async (\r\n  req: Request,\r\n  res: Response\r\n): Promise<void> => {\r\n  try {\r\n    const { eventId } = req.params;\r\n    const event = await getEventByIdModel(eventId);\r\n\r\n    if (!event) {\r\n      res.status(404).json({\r\n        success: false,\r\n        message: 'Evento no encontrado',\r\n      });\r\n      return;\r\n    }\r\n\r\n    res.json({\r\n      success: true,\r\n      data: event,\r\n    });\r\n  } catch (error) {\r\n    logger.error('Error al obtener el evento:', error as Error);\r\n    res.status(500).json({\r\n      success: false,\r\n      message: 'Error al obtener el evento',\r\n      error: error instanceof Error ? error.message : 'Error desconocido',\r\n    });\r\n  }\r\n};\r\n\r\nexport const cancelEventController = async (\r\n  req: Request,\r\n  res: Response\r\n): Promise<void> => {\r\n  try {\r\n    const user = (req as any).user;\r\n    const { eventId } = req.params;\r\n\r\n    logger.info('\uD83D\uDD04 Cancelando solicitud:', { metadata: { eventId, userEmail: user.userEmail } });\r\n\r\n    // Obtener el evento antes de cancelarlo\r\n    const originalEvent = await getEventByIdModel(eventId);\r\n\r\n    if (!originalEvent) {\r\n      logger.info('\u274C Solicitud no encontrada:', { metadata: { eventId } });\r\n      res.status(404).json({\r\n        success: false,\r\n        message: 'Solicitud no encontrada',\r\n      });\r\n      return;\r\n    }\r\n\r\n    // Verificar permisos\r\n    if (user.roll === 'eventCreator' && originalEvent.user !== user.userEmail) {\r\n      logger.info('\u274C Usuario no autorizado para cancelar esta solicitud');\r\n      res.status(403).json({\r\n        success: false,\r\n        message: 'No tienes permisos para cancelar esta solicitud',\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (\r\n      user.roll === 'musico' &&\r\n      originalEvent.assignedMusicianId !== user.userEmail\r\n    ) {\r\n      logger.info('\u274C M\xFAsico no autorizado para cancelar esta solicitud');\r\n      res.status(403).json({\r\n        success: false,\r\n        message: 'No tienes permisos para cancelar esta solicitud',\r\n      });\r\n      return;\r\n    }\r\n\r\n    // Cancelar el evento\r\n    const cancelledEvent = await cancelEventModel(eventId, user.userEmail);\r\n\r\n    if (!cancelledEvent) {\r\n      logger.info('\u274C Error al cancelar solicitud en la base de datos');\r\n      res.status(500).json({\r\n        success: false,\r\n        message: 'Error al cancelar la solicitud',\r\n      });\r\n      return;\r\n    }\r\n\r\n    logger.info('\u2705 Solicitud cancelada exitosamente:', { metadata: { eventId } });\r\n\r\n    // Comentado temporalmente - notificaciones por socket\r\n\r\n    res.json({\r\n      success: true,\r\n      message: 'Solicitud cancelada exitosamente',\r\n      data: cancelledEvent,\r\n    });\r\n  } catch (error) {\r\n    logger.error('\u274C Error al cancelar solicitud:', error as Error);\r\n    res.status(500).json({\r\n      success: false,\r\n      message: 'Error al cancelar la solicitud',\r\n      error: error instanceof Error ? error.message : 'Error desconocido',\r\n    });\r\n  }\r\n};\r\n\r\nexport const completeEventController = async (\r\n  req: Request,\r\n  res: Response\r\n): Promise<void> => {\r\n  try {\r\n    const user = (req as any).user;\r\n    const { eventId } = req.params;\r\n\r\n    logger.info('\uD83D\uDD04 Completando solicitud:', { metadata: { eventId, userEmail: user.userEmail } });\r\n\r\n    // Obtener el evento antes de completarlo\r\n    const originalEvent = await getEventByIdModel(eventId);\r\n\r\n    if (!originalEvent) {\r\n      logger.info('\u274C Solicitud no encontrada:', { metadata: { eventId } });\r\n      res.status(404).json({\r\n        success: false,\r\n        message: 'Solicitud no encontrada',\r\n      });\r\n      return;\r\n    }\r\n\r\n    // Verificar permisos\r\n    if (user.roll === 'eventCreator' && originalEvent.user !== user.userEmail) {\r\n      logger.info('\u274C Usuario no autorizado para completar esta solicitud');\r\n      res.status(403).json({\r\n        success: false,\r\n        message: 'No tienes permisos para completar esta solicitud',\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (\r\n      user.roll === 'musico' &&\r\n      originalEvent.assignedMusicianId !== user.userEmail\r\n    ) {\r\n      logger.info('\u274C M\xFAsico no autorizado para completar esta solicitud');\r\n      res.status(403).json({\r\n        success: false,\r\n        message: 'No tienes permisos para completar esta solicitud',\r\n      });\r\n      return;\r\n    }\r\n\r\n    // Completar el evento\r\n    const completedEvent = await completeEventModel(eventId, user.userEmail);\r\n\r\n    if (!completedEvent) {\r\n      logger.info('\u274C Error al completar solicitud en la base de datos');\r\n      res.status(500).json({\r\n        success: false,\r\n        message: 'Error al completar la solicitud',\r\n      });\r\n      return;\r\n    }\r\n\r\n    logger.info('\u2705 Solicitud completada exitosamente:', { metadata: { eventId } });\r\n\r\n    // Comentado temporalmente - notificaciones por socket\r\n\r\n    const response = {\r\n      success: true,\r\n      message: 'Solicitud completada exitosamente',\r\n      data: completedEvent,\r\n    };\r\n\r\n    res.json(response);\r\n  } catch (error) {\r\n    logger.error('\u274C Error al completar solicitud:', error as Error);\r\n    res.status(500).json({\r\n      success: false,\r\n      message: 'Error al completar la solicitud',\r\n      error: error instanceof Error ? error.message : 'Error desconocido',\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteEventController = async (\r\n  req: Request,\r\n  res: Response\r\n): Promise<void> => {\r\n  try {\r\n    const user = (req as any).user;\r\n    const { eventId } = req.params;\r\n\r\n    logger.info('\uD83D\uDDD1\uFE0F Eliminando solicitud:', { metadata: { eventId, userEmail: user.userEmail } });\r\n\r\n    // Obtener el evento antes de eliminarlo\r\n    const originalEvent = await getEventByIdModel(eventId);\r\n\r\n    if (!originalEvent) {\r\n      logger.info('\u274C Solicitud no encontrada:', { metadata: { eventId } });\r\n      res.status(404).json({\r\n        success: false,\r\n        message: 'Solicitud no encontrada',\r\n      });\r\n      return;\r\n    }\r\n\r\n    // Verificar permisos\r\n    if (user.roll !== 'eventCreator') {\r\n      logger.info('\u274C Solo los organizadores pueden eliminar solicitudes');\r\n      res.status(403).json({\r\n        success: false,\r\n        message: 'Solo los organizadores pueden eliminar solicitudes',\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (originalEvent.user !== user.userEmail) {\r\n      logger.info('\u274C Usuario no autorizado para eliminar esta solicitud');\r\n      res.status(403).json({\r\n        success: false,\r\n        message: 'No tienes permisos para eliminar esta solicitud',\r\n      });\r\n      return;\r\n    }\r\n\r\n    // Eliminar el evento\r\n    const deleteResult = await deleteEventModel(eventId, user.userEmail);\r\n\r\n    if (!deleteResult) {\r\n      logger.info('\u274C Error al eliminar solicitud en la base de datos');\r\n      res.status(500).json({\r\n        success: false,\r\n        message: 'Error al eliminar la solicitud',\r\n      });\r\n      return;\r\n    }\r\n\r\n    logger.info('\u2705 Solicitud eliminada exitosamente:', { metadata: { eventId } });\r\n\r\n    // Comentado temporalmente - notificaciones por socket\r\n\r\n    res.json({\r\n      success: true,\r\n      message: 'Solicitud eliminada exitosamente',\r\n    });\r\n  } catch (error) {\r\n    logger.error('\u274C Error al eliminar solicitud:', error as Error);\r\n    res.status(500).json({\r\n      success: false,\r\n      message: 'Error al eliminar la solicitud',\r\n      error: error instanceof Error ? error.message : 'Error desconocido',\r\n    });\r\n  }\r\n};\r\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d2aa19507d2439df4fb6d3f8b9bfc0826795984d"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_k7a7dmlig = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_k7a7dmlig();
var __awaiter =
/* istanbul ignore next */
(cov_k7a7dmlig().s[0]++,
/* istanbul ignore next */
(cov_k7a7dmlig().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_k7a7dmlig().b[0][1]++, this.__awaiter) ||
/* istanbul ignore next */
(cov_k7a7dmlig().b[0][2]++, function (thisArg, _arguments, P, generator) {
  /* istanbul ignore next */
  cov_k7a7dmlig().f[0]++;
  function adopt(value) {
    /* istanbul ignore next */
    cov_k7a7dmlig().f[1]++;
    cov_k7a7dmlig().s[1]++;
    return value instanceof P ?
    /* istanbul ignore next */
    (cov_k7a7dmlig().b[1][0]++, value) :
    /* istanbul ignore next */
    (cov_k7a7dmlig().b[1][1]++, new P(function (resolve) {
      /* istanbul ignore next */
      cov_k7a7dmlig().f[2]++;
      cov_k7a7dmlig().s[2]++;
      resolve(value);
    }));
  }
  /* istanbul ignore next */
  cov_k7a7dmlig().s[3]++;
  return new (
  /* istanbul ignore next */
  (cov_k7a7dmlig().b[2][0]++, P) ||
  /* istanbul ignore next */
  (cov_k7a7dmlig().b[2][1]++, P = Promise))(function (resolve, reject) {
    /* istanbul ignore next */
    cov_k7a7dmlig().f[3]++;
    function fulfilled(value) {
      /* istanbul ignore next */
      cov_k7a7dmlig().f[4]++;
      cov_k7a7dmlig().s[4]++;
      try {
        /* istanbul ignore next */
        cov_k7a7dmlig().s[5]++;
        step(generator.next(value));
      } catch (e) {
        /* istanbul ignore next */
        cov_k7a7dmlig().s[6]++;
        reject(e);
      }
    }
    function rejected(value) {
      /* istanbul ignore next */
      cov_k7a7dmlig().f[5]++;
      cov_k7a7dmlig().s[7]++;
      try {
        /* istanbul ignore next */
        cov_k7a7dmlig().s[8]++;
        step(generator["throw"](value));
      } catch (e) {
        /* istanbul ignore next */
        cov_k7a7dmlig().s[9]++;
        reject(e);
      }
    }
    function step(result) {
      /* istanbul ignore next */
      cov_k7a7dmlig().f[6]++;
      cov_k7a7dmlig().s[10]++;
      result.done ?
      /* istanbul ignore next */
      (cov_k7a7dmlig().b[3][0]++, resolve(result.value)) :
      /* istanbul ignore next */
      (cov_k7a7dmlig().b[3][1]++, adopt(result.value).then(fulfilled, rejected));
    }
    /* istanbul ignore next */
    cov_k7a7dmlig().s[11]++;
    step((generator = generator.apply(thisArg,
    /* istanbul ignore next */
    (cov_k7a7dmlig().b[4][0]++, _arguments) ||
    /* istanbul ignore next */
    (cov_k7a7dmlig().b[4][1]++, []))).next());
  });
}));
/* istanbul ignore next */
cov_k7a7dmlig().s[12]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_k7a7dmlig().s[13]++;
exports.deleteEventController = exports.completeEventController = exports.cancelEventController = exports.getEventByIdController = exports.myCancelledEventsController = exports.myEventsController = exports.myPastPerformancesController = exports.myScheduledEventsController = exports.acceptEventController = exports.availableRequestsController = exports.myCompletedEventsController = exports.myAssignedEventsController = exports.myPendingEventsController = exports.requestMusicianController = void 0;
const loggerService_1 =
/* istanbul ignore next */
(cov_k7a7dmlig().s[14]++, require("../services/loggerService"));
const eventModel_1 =
/* istanbul ignore next */
(cov_k7a7dmlig().s[15]++, require("../models/eventModel"));
// Comentado temporalmente para evitar dependencias circulares
// import { io, users } from "../../index";
// POST /events/request-musician
/* istanbul ignore next */
cov_k7a7dmlig().s[16]++;
const requestMusicianController = (req, res) => {
  /* istanbul ignore next */
  cov_k7a7dmlig().f[7]++;
  cov_k7a7dmlig().s[17]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_k7a7dmlig().f[8]++;
    cov_k7a7dmlig().s[18]++;
    try {
      const user =
      /* istanbul ignore next */
      (cov_k7a7dmlig().s[19]++, req.user);
      const eventData =
      /* istanbul ignore next */
      (cov_k7a7dmlig().s[20]++, req.body);
      /* istanbul ignore next */
      cov_k7a7dmlig().s[21]++;
      loggerService_1.logger.info('Payload recibido en /events/request-musician:', {
        context: 'Event',
        metadata: eventData
      });
      const event =
      /* istanbul ignore next */
      (cov_k7a7dmlig().s[22]++, yield (0, eventModel_1.createEventModel)(Object.assign(Object.assign({}, eventData), {
        user: user.userEmail
      })));
      // io.emit('new_event_request', event); // Comentado temporalmente
      /* istanbul ignore next */
      cov_k7a7dmlig().s[23]++;
      res.status(201).json({
        data: event
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_k7a7dmlig().s[24]++;
      loggerService_1.logger.error('Error al crear solicitud:', error);
      /* istanbul ignore next */
      cov_k7a7dmlig().s[25]++;
      res.status(500).json({
        msg: 'Error al crear solicitud'
      });
    }
  });
};
/* istanbul ignore next */
cov_k7a7dmlig().s[26]++;
exports.requestMusicianController = requestMusicianController;
/* istanbul ignore next */
cov_k7a7dmlig().s[27]++;
const myPendingEventsController = (req, res) => {
  /* istanbul ignore next */
  cov_k7a7dmlig().f[9]++;
  cov_k7a7dmlig().s[28]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_k7a7dmlig().f[10]++;
    const user =
    /* istanbul ignore next */
    (cov_k7a7dmlig().s[29]++, req.user);
    const events =
    /* istanbul ignore next */
    (cov_k7a7dmlig().s[30]++, yield (0, eventModel_1.getEventsByUserAndStatus)(user.userEmail, 'pending_musician'));
    /* istanbul ignore next */
    cov_k7a7dmlig().s[31]++;
    res.json({
      data: events
    });
  });
};
/* istanbul ignore next */
cov_k7a7dmlig().s[32]++;
exports.myPendingEventsController = myPendingEventsController;
/* istanbul ignore next */
cov_k7a7dmlig().s[33]++;
const myAssignedEventsController = (req, res) => {
  /* istanbul ignore next */
  cov_k7a7dmlig().f[11]++;
  cov_k7a7dmlig().s[34]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_k7a7dmlig().f[12]++;
    const user =
    /* istanbul ignore next */
    (cov_k7a7dmlig().s[35]++, req.user);
    /* istanbul ignore next */
    cov_k7a7dmlig().s[36]++;
    loggerService_1.logger.info('🔍 Buscando eventos asignados para:', {
      context: 'Event',
      metadata: user.userEmail
    });
    const events =
    /* istanbul ignore next */
    (cov_k7a7dmlig().s[37]++, yield (0, eventModel_1.getEventsByUserAndStatus)(user.userEmail, 'musician_assigned'));
    /* istanbul ignore next */
    cov_k7a7dmlig().s[38]++;
    loggerService_1.logger.info('📦 Eventos asignados encontrados:', {
      context: 'Event',
      metadata: {
        count: events.length
      }
    });
    /* istanbul ignore next */
    cov_k7a7dmlig().s[39]++;
    loggerService_1.logger.info('📦 Eventos:', {
      context: 'Event',
      metadata: events
    });
    /* istanbul ignore next */
    cov_k7a7dmlig().s[40]++;
    res.json({
      data: events
    });
  });
};
/* istanbul ignore next */
cov_k7a7dmlig().s[41]++;
exports.myAssignedEventsController = myAssignedEventsController;
/* istanbul ignore next */
cov_k7a7dmlig().s[42]++;
const myCompletedEventsController = (req, res) => {
  /* istanbul ignore next */
  cov_k7a7dmlig().f[13]++;
  cov_k7a7dmlig().s[43]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_k7a7dmlig().f[14]++;
    const user =
    /* istanbul ignore next */
    (cov_k7a7dmlig().s[44]++, req.user);
    const events =
    /* istanbul ignore next */
    (cov_k7a7dmlig().s[45]++, yield (0, eventModel_1.getEventsByUserAndStatus)(user.userEmail, 'completed'));
    /* istanbul ignore next */
    cov_k7a7dmlig().s[46]++;
    res.json({
      data: events
    });
  });
};
/* istanbul ignore next */
cov_k7a7dmlig().s[47]++;
exports.myCompletedEventsController = myCompletedEventsController;
/* istanbul ignore next */
cov_k7a7dmlig().s[48]++;
const availableRequestsController = (req, res) => {
  /* istanbul ignore next */
  cov_k7a7dmlig().f[15]++;
  cov_k7a7dmlig().s[49]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_k7a7dmlig().f[16]++;
    const events =
    /* istanbul ignore next */
    (cov_k7a7dmlig().s[50]++, yield (0, eventModel_1.getAvailableEvents)());
    /* istanbul ignore next */
    cov_k7a7dmlig().s[51]++;
    res.json({
      data: events
    });
  });
};
/* istanbul ignore next */
cov_k7a7dmlig().s[52]++;
exports.availableRequestsController = availableRequestsController;
/* istanbul ignore next */
cov_k7a7dmlig().s[53]++;
const acceptEventController = (req, res) => {
  /* istanbul ignore next */
  cov_k7a7dmlig().f[17]++;
  cov_k7a7dmlig().s[54]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_k7a7dmlig().f[18]++;
    cov_k7a7dmlig().s[55]++;
    try {
      const user =
      /* istanbul ignore next */
      (cov_k7a7dmlig().s[56]++, req.user);
      /* istanbul ignore next */
      cov_k7a7dmlig().s[57]++;
      if (user.roll !== 'musico') {
        /* istanbul ignore next */
        cov_k7a7dmlig().b[5][0]++;
        cov_k7a7dmlig().s[58]++;
        res.status(403).json({
          msg: 'Solo los músicos pueden aceptar eventos.'
        });
        /* istanbul ignore next */
        cov_k7a7dmlig().s[59]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_k7a7dmlig().b[5][1]++;
      }
      const {
        eventId
      } =
      /* istanbul ignore next */
      (cov_k7a7dmlig().s[60]++, req.params);
      const updatedEvent =
      /* istanbul ignore next */
      (cov_k7a7dmlig().s[61]++, yield (0, eventModel_1.acceptEventModel)(eventId, user.userEmail));
      /* istanbul ignore next */
      cov_k7a7dmlig().s[62]++;
      if (!updatedEvent) {
        /* istanbul ignore next */
        cov_k7a7dmlig().b[6][0]++;
        cov_k7a7dmlig().s[63]++;
        res.status(400).json({
          msg: 'No se pudo aceptar el evento.'
        });
        /* istanbul ignore next */
        cov_k7a7dmlig().s[64]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_k7a7dmlig().b[6][1]++;
      }
      // Comentado temporalmente - notificaciones por socket
      cov_k7a7dmlig().s[65]++;
      res.json(updatedEvent);
    } catch (error) {
      /* istanbul ignore next */
      cov_k7a7dmlig().s[66]++;
      loggerService_1.logger.error('Error al aceptar evento:', error);
      /* istanbul ignore next */
      cov_k7a7dmlig().s[67]++;
      res.status(500).json({
        msg: 'Error al aceptar evento'
      });
    }
  });
};
/* istanbul ignore next */
cov_k7a7dmlig().s[68]++;
exports.acceptEventController = acceptEventController;
/* istanbul ignore next */
cov_k7a7dmlig().s[69]++;
const myScheduledEventsController = (req, res) => {
  /* istanbul ignore next */
  cov_k7a7dmlig().f[19]++;
  cov_k7a7dmlig().s[70]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_k7a7dmlig().f[20]++;
    const user =
    /* istanbul ignore next */
    (cov_k7a7dmlig().s[71]++, req.user);
    const events =
    /* istanbul ignore next */
    (cov_k7a7dmlig().s[72]++, yield (0, eventModel_1.getEventsByMusicianAndStatus)(user.userEmail, 'musician_assigned'));
    /* istanbul ignore next */
    cov_k7a7dmlig().s[73]++;
    res.json({
      data: events
    });
  });
};
/* istanbul ignore next */
cov_k7a7dmlig().s[74]++;
exports.myScheduledEventsController = myScheduledEventsController;
/* istanbul ignore next */
cov_k7a7dmlig().s[75]++;
const myPastPerformancesController = (req, res) => {
  /* istanbul ignore next */
  cov_k7a7dmlig().f[21]++;
  cov_k7a7dmlig().s[76]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_k7a7dmlig().f[22]++;
    const user =
    /* istanbul ignore next */
    (cov_k7a7dmlig().s[77]++, req.user);
    const events =
    /* istanbul ignore next */
    (cov_k7a7dmlig().s[78]++, yield (0, eventModel_1.getEventsByMusicianAndStatus)(user.userEmail, 'completed'));
    /* istanbul ignore next */
    cov_k7a7dmlig().s[79]++;
    res.json({
      data: events
    });
  });
};
/* istanbul ignore next */
cov_k7a7dmlig().s[80]++;
exports.myPastPerformancesController = myPastPerformancesController;
/* istanbul ignore next */
cov_k7a7dmlig().s[81]++;
const myEventsController = (req, res) => {
  /* istanbul ignore next */
  cov_k7a7dmlig().f[23]++;
  cov_k7a7dmlig().s[82]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_k7a7dmlig().f[24]++;
    const user =
    /* istanbul ignore next */
    (cov_k7a7dmlig().s[83]++, req.user);
    let events =
    /* istanbul ignore next */
    (cov_k7a7dmlig().s[84]++, []);
    /* istanbul ignore next */
    cov_k7a7dmlig().s[85]++;
    if (user.roll === 'eventCreator') {
      /* istanbul ignore next */
      cov_k7a7dmlig().b[7][0]++;
      cov_k7a7dmlig().s[86]++;
      events = yield (0, eventModel_1.getEventsByUser)(user.userEmail);
    } else {
      /* istanbul ignore next */
      cov_k7a7dmlig().b[7][1]++;
      cov_k7a7dmlig().s[87]++;
      if (user.roll === 'musico') {
        /* istanbul ignore next */
        cov_k7a7dmlig().b[8][0]++;
        cov_k7a7dmlig().s[88]++;
        events = yield (0, eventModel_1.getEventsByMusician)(user.userEmail);
      } else
      /* istanbul ignore next */
      {
        cov_k7a7dmlig().b[8][1]++;
      }
    }
    /* istanbul ignore next */
    cov_k7a7dmlig().s[89]++;
    res.json({
      data: events
    });
  });
};
/* istanbul ignore next */
cov_k7a7dmlig().s[90]++;
exports.myEventsController = myEventsController;
/* istanbul ignore next */
cov_k7a7dmlig().s[91]++;
const myCancelledEventsController = (req, res) => {
  /* istanbul ignore next */
  cov_k7a7dmlig().f[25]++;
  cov_k7a7dmlig().s[92]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_k7a7dmlig().f[26]++;
    const user =
    /* istanbul ignore next */
    (cov_k7a7dmlig().s[93]++, req.user);
    let events =
    /* istanbul ignore next */
    (cov_k7a7dmlig().s[94]++, []);
    /* istanbul ignore next */
    cov_k7a7dmlig().s[95]++;
    if (user.roll === 'eventCreator') {
      /* istanbul ignore next */
      cov_k7a7dmlig().b[9][0]++;
      cov_k7a7dmlig().s[96]++;
      // Para organizadores: obtener eventos cancelados que ellos crearon
      events = yield (0, eventModel_1.getEventsByUserAndStatus)(user.userEmail, 'cancelled');
      const musicianCancelledEvents =
      /* istanbul ignore next */
      (cov_k7a7dmlig().s[97]++, yield (0, eventModel_1.getEventsByUserAndStatus)(user.userEmail, 'musician_cancelled'));
      /* istanbul ignore next */
      cov_k7a7dmlig().s[98]++;
      events = [...events, ...musicianCancelledEvents];
    } else {
      /* istanbul ignore next */
      cov_k7a7dmlig().b[9][1]++;
      cov_k7a7dmlig().s[99]++;
      if (user.roll === 'musico') {
        /* istanbul ignore next */
        cov_k7a7dmlig().b[10][0]++;
        cov_k7a7dmlig().s[100]++;
        // Para músicos: obtener eventos cancelados donde están asignados
        events = yield (0, eventModel_1.getEventsByMusicianAndStatus)(user.userEmail, 'cancelled');
        const musicianCancelledEvents =
        /* istanbul ignore next */
        (cov_k7a7dmlig().s[101]++, yield (0, eventModel_1.getEventsByMusicianAndStatus)(user.userEmail, 'musician_cancelled'));
        /* istanbul ignore next */
        cov_k7a7dmlig().s[102]++;
        events = [...events, ...musicianCancelledEvents];
      } else
      /* istanbul ignore next */
      {
        cov_k7a7dmlig().b[10][1]++;
      }
    }
    /* istanbul ignore next */
    cov_k7a7dmlig().s[103]++;
    res.json({
      data: events
    });
  });
};
/* istanbul ignore next */
cov_k7a7dmlig().s[104]++;
exports.myCancelledEventsController = myCancelledEventsController;
/* istanbul ignore next */
cov_k7a7dmlig().s[105]++;
const getEventByIdController = (req, res) => {
  /* istanbul ignore next */
  cov_k7a7dmlig().f[27]++;
  cov_k7a7dmlig().s[106]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_k7a7dmlig().f[28]++;
    cov_k7a7dmlig().s[107]++;
    try {
      const {
        eventId
      } =
      /* istanbul ignore next */
      (cov_k7a7dmlig().s[108]++, req.params);
      const event =
      /* istanbul ignore next */
      (cov_k7a7dmlig().s[109]++, yield (0, eventModel_1.getEventByIdModel)(eventId));
      /* istanbul ignore next */
      cov_k7a7dmlig().s[110]++;
      if (!event) {
        /* istanbul ignore next */
        cov_k7a7dmlig().b[11][0]++;
        cov_k7a7dmlig().s[111]++;
        res.status(404).json({
          success: false,
          message: 'Evento no encontrado'
        });
        /* istanbul ignore next */
        cov_k7a7dmlig().s[112]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_k7a7dmlig().b[11][1]++;
      }
      cov_k7a7dmlig().s[113]++;
      res.json({
        success: true,
        data: event
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_k7a7dmlig().s[114]++;
      loggerService_1.logger.error('Error al obtener el evento:', error);
      /* istanbul ignore next */
      cov_k7a7dmlig().s[115]++;
      res.status(500).json({
        success: false,
        message: 'Error al obtener el evento',
        error: error instanceof Error ?
        /* istanbul ignore next */
        (cov_k7a7dmlig().b[12][0]++, error.message) :
        /* istanbul ignore next */
        (cov_k7a7dmlig().b[12][1]++, 'Error desconocido')
      });
    }
  });
};
/* istanbul ignore next */
cov_k7a7dmlig().s[116]++;
exports.getEventByIdController = getEventByIdController;
/* istanbul ignore next */
cov_k7a7dmlig().s[117]++;
const cancelEventController = (req, res) => {
  /* istanbul ignore next */
  cov_k7a7dmlig().f[29]++;
  cov_k7a7dmlig().s[118]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_k7a7dmlig().f[30]++;
    cov_k7a7dmlig().s[119]++;
    try {
      const user =
      /* istanbul ignore next */
      (cov_k7a7dmlig().s[120]++, req.user);
      const {
        eventId
      } =
      /* istanbul ignore next */
      (cov_k7a7dmlig().s[121]++, req.params);
      /* istanbul ignore next */
      cov_k7a7dmlig().s[122]++;
      loggerService_1.logger.info('🔄 Cancelando solicitud:', {
        metadata: {
          eventId,
          userEmail: user.userEmail
        }
      });
      // Obtener el evento antes de cancelarlo
      const originalEvent =
      /* istanbul ignore next */
      (cov_k7a7dmlig().s[123]++, yield (0, eventModel_1.getEventByIdModel)(eventId));
      /* istanbul ignore next */
      cov_k7a7dmlig().s[124]++;
      if (!originalEvent) {
        /* istanbul ignore next */
        cov_k7a7dmlig().b[13][0]++;
        cov_k7a7dmlig().s[125]++;
        loggerService_1.logger.info('❌ Solicitud no encontrada:', {
          metadata: {
            eventId
          }
        });
        /* istanbul ignore next */
        cov_k7a7dmlig().s[126]++;
        res.status(404).json({
          success: false,
          message: 'Solicitud no encontrada'
        });
        /* istanbul ignore next */
        cov_k7a7dmlig().s[127]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_k7a7dmlig().b[13][1]++;
      }
      // Verificar permisos
      cov_k7a7dmlig().s[128]++;
      if (
      /* istanbul ignore next */
      (cov_k7a7dmlig().b[15][0]++, user.roll === 'eventCreator') &&
      /* istanbul ignore next */
      (cov_k7a7dmlig().b[15][1]++, originalEvent.user !== user.userEmail)) {
        /* istanbul ignore next */
        cov_k7a7dmlig().b[14][0]++;
        cov_k7a7dmlig().s[129]++;
        loggerService_1.logger.info('❌ Usuario no autorizado para cancelar esta solicitud');
        /* istanbul ignore next */
        cov_k7a7dmlig().s[130]++;
        res.status(403).json({
          success: false,
          message: 'No tienes permisos para cancelar esta solicitud'
        });
        /* istanbul ignore next */
        cov_k7a7dmlig().s[131]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_k7a7dmlig().b[14][1]++;
      }
      cov_k7a7dmlig().s[132]++;
      if (
      /* istanbul ignore next */
      (cov_k7a7dmlig().b[17][0]++, user.roll === 'musico') &&
      /* istanbul ignore next */
      (cov_k7a7dmlig().b[17][1]++, originalEvent.assignedMusicianId !== user.userEmail)) {
        /* istanbul ignore next */
        cov_k7a7dmlig().b[16][0]++;
        cov_k7a7dmlig().s[133]++;
        loggerService_1.logger.info('❌ Músico no autorizado para cancelar esta solicitud');
        /* istanbul ignore next */
        cov_k7a7dmlig().s[134]++;
        res.status(403).json({
          success: false,
          message: 'No tienes permisos para cancelar esta solicitud'
        });
        /* istanbul ignore next */
        cov_k7a7dmlig().s[135]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_k7a7dmlig().b[16][1]++;
      }
      // Cancelar el evento
      const cancelledEvent =
      /* istanbul ignore next */
      (cov_k7a7dmlig().s[136]++, yield (0, eventModel_1.cancelEventModel)(eventId, user.userEmail));
      /* istanbul ignore next */
      cov_k7a7dmlig().s[137]++;
      if (!cancelledEvent) {
        /* istanbul ignore next */
        cov_k7a7dmlig().b[18][0]++;
        cov_k7a7dmlig().s[138]++;
        loggerService_1.logger.info('❌ Error al cancelar solicitud en la base de datos');
        /* istanbul ignore next */
        cov_k7a7dmlig().s[139]++;
        res.status(500).json({
          success: false,
          message: 'Error al cancelar la solicitud'
        });
        /* istanbul ignore next */
        cov_k7a7dmlig().s[140]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_k7a7dmlig().b[18][1]++;
      }
      cov_k7a7dmlig().s[141]++;
      loggerService_1.logger.info('✅ Solicitud cancelada exitosamente:', {
        metadata: {
          eventId
        }
      });
      // Comentado temporalmente - notificaciones por socket
      /* istanbul ignore next */
      cov_k7a7dmlig().s[142]++;
      res.json({
        success: true,
        message: 'Solicitud cancelada exitosamente',
        data: cancelledEvent
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_k7a7dmlig().s[143]++;
      loggerService_1.logger.error('❌ Error al cancelar solicitud:', error);
      /* istanbul ignore next */
      cov_k7a7dmlig().s[144]++;
      res.status(500).json({
        success: false,
        message: 'Error al cancelar la solicitud',
        error: error instanceof Error ?
        /* istanbul ignore next */
        (cov_k7a7dmlig().b[19][0]++, error.message) :
        /* istanbul ignore next */
        (cov_k7a7dmlig().b[19][1]++, 'Error desconocido')
      });
    }
  });
};
/* istanbul ignore next */
cov_k7a7dmlig().s[145]++;
exports.cancelEventController = cancelEventController;
/* istanbul ignore next */
cov_k7a7dmlig().s[146]++;
const completeEventController = (req, res) => {
  /* istanbul ignore next */
  cov_k7a7dmlig().f[31]++;
  cov_k7a7dmlig().s[147]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_k7a7dmlig().f[32]++;
    cov_k7a7dmlig().s[148]++;
    try {
      const user =
      /* istanbul ignore next */
      (cov_k7a7dmlig().s[149]++, req.user);
      const {
        eventId
      } =
      /* istanbul ignore next */
      (cov_k7a7dmlig().s[150]++, req.params);
      /* istanbul ignore next */
      cov_k7a7dmlig().s[151]++;
      loggerService_1.logger.info('🔄 Completando solicitud:', {
        metadata: {
          eventId,
          userEmail: user.userEmail
        }
      });
      // Obtener el evento antes de completarlo
      const originalEvent =
      /* istanbul ignore next */
      (cov_k7a7dmlig().s[152]++, yield (0, eventModel_1.getEventByIdModel)(eventId));
      /* istanbul ignore next */
      cov_k7a7dmlig().s[153]++;
      if (!originalEvent) {
        /* istanbul ignore next */
        cov_k7a7dmlig().b[20][0]++;
        cov_k7a7dmlig().s[154]++;
        loggerService_1.logger.info('❌ Solicitud no encontrada:', {
          metadata: {
            eventId
          }
        });
        /* istanbul ignore next */
        cov_k7a7dmlig().s[155]++;
        res.status(404).json({
          success: false,
          message: 'Solicitud no encontrada'
        });
        /* istanbul ignore next */
        cov_k7a7dmlig().s[156]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_k7a7dmlig().b[20][1]++;
      }
      // Verificar permisos
      cov_k7a7dmlig().s[157]++;
      if (
      /* istanbul ignore next */
      (cov_k7a7dmlig().b[22][0]++, user.roll === 'eventCreator') &&
      /* istanbul ignore next */
      (cov_k7a7dmlig().b[22][1]++, originalEvent.user !== user.userEmail)) {
        /* istanbul ignore next */
        cov_k7a7dmlig().b[21][0]++;
        cov_k7a7dmlig().s[158]++;
        loggerService_1.logger.info('❌ Usuario no autorizado para completar esta solicitud');
        /* istanbul ignore next */
        cov_k7a7dmlig().s[159]++;
        res.status(403).json({
          success: false,
          message: 'No tienes permisos para completar esta solicitud'
        });
        /* istanbul ignore next */
        cov_k7a7dmlig().s[160]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_k7a7dmlig().b[21][1]++;
      }
      cov_k7a7dmlig().s[161]++;
      if (
      /* istanbul ignore next */
      (cov_k7a7dmlig().b[24][0]++, user.roll === 'musico') &&
      /* istanbul ignore next */
      (cov_k7a7dmlig().b[24][1]++, originalEvent.assignedMusicianId !== user.userEmail)) {
        /* istanbul ignore next */
        cov_k7a7dmlig().b[23][0]++;
        cov_k7a7dmlig().s[162]++;
        loggerService_1.logger.info('❌ Músico no autorizado para completar esta solicitud');
        /* istanbul ignore next */
        cov_k7a7dmlig().s[163]++;
        res.status(403).json({
          success: false,
          message: 'No tienes permisos para completar esta solicitud'
        });
        /* istanbul ignore next */
        cov_k7a7dmlig().s[164]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_k7a7dmlig().b[23][1]++;
      }
      // Completar el evento
      const completedEvent =
      /* istanbul ignore next */
      (cov_k7a7dmlig().s[165]++, yield (0, eventModel_1.completeEventModel)(eventId, user.userEmail));
      /* istanbul ignore next */
      cov_k7a7dmlig().s[166]++;
      if (!completedEvent) {
        /* istanbul ignore next */
        cov_k7a7dmlig().b[25][0]++;
        cov_k7a7dmlig().s[167]++;
        loggerService_1.logger.info('❌ Error al completar solicitud en la base de datos');
        /* istanbul ignore next */
        cov_k7a7dmlig().s[168]++;
        res.status(500).json({
          success: false,
          message: 'Error al completar la solicitud'
        });
        /* istanbul ignore next */
        cov_k7a7dmlig().s[169]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_k7a7dmlig().b[25][1]++;
      }
      cov_k7a7dmlig().s[170]++;
      loggerService_1.logger.info('✅ Solicitud completada exitosamente:', {
        metadata: {
          eventId
        }
      });
      // Comentado temporalmente - notificaciones por socket
      const response =
      /* istanbul ignore next */
      (cov_k7a7dmlig().s[171]++, {
        success: true,
        message: 'Solicitud completada exitosamente',
        data: completedEvent
      });
      /* istanbul ignore next */
      cov_k7a7dmlig().s[172]++;
      res.json(response);
    } catch (error) {
      /* istanbul ignore next */
      cov_k7a7dmlig().s[173]++;
      loggerService_1.logger.error('❌ Error al completar solicitud:', error);
      /* istanbul ignore next */
      cov_k7a7dmlig().s[174]++;
      res.status(500).json({
        success: false,
        message: 'Error al completar la solicitud',
        error: error instanceof Error ?
        /* istanbul ignore next */
        (cov_k7a7dmlig().b[26][0]++, error.message) :
        /* istanbul ignore next */
        (cov_k7a7dmlig().b[26][1]++, 'Error desconocido')
      });
    }
  });
};
/* istanbul ignore next */
cov_k7a7dmlig().s[175]++;
exports.completeEventController = completeEventController;
/* istanbul ignore next */
cov_k7a7dmlig().s[176]++;
const deleteEventController = (req, res) => {
  /* istanbul ignore next */
  cov_k7a7dmlig().f[33]++;
  cov_k7a7dmlig().s[177]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_k7a7dmlig().f[34]++;
    cov_k7a7dmlig().s[178]++;
    try {
      const user =
      /* istanbul ignore next */
      (cov_k7a7dmlig().s[179]++, req.user);
      const {
        eventId
      } =
      /* istanbul ignore next */
      (cov_k7a7dmlig().s[180]++, req.params);
      /* istanbul ignore next */
      cov_k7a7dmlig().s[181]++;
      loggerService_1.logger.info('🗑️ Eliminando solicitud:', {
        metadata: {
          eventId,
          userEmail: user.userEmail
        }
      });
      // Obtener el evento antes de eliminarlo
      const originalEvent =
      /* istanbul ignore next */
      (cov_k7a7dmlig().s[182]++, yield (0, eventModel_1.getEventByIdModel)(eventId));
      /* istanbul ignore next */
      cov_k7a7dmlig().s[183]++;
      if (!originalEvent) {
        /* istanbul ignore next */
        cov_k7a7dmlig().b[27][0]++;
        cov_k7a7dmlig().s[184]++;
        loggerService_1.logger.info('❌ Solicitud no encontrada:', {
          metadata: {
            eventId
          }
        });
        /* istanbul ignore next */
        cov_k7a7dmlig().s[185]++;
        res.status(404).json({
          success: false,
          message: 'Solicitud no encontrada'
        });
        /* istanbul ignore next */
        cov_k7a7dmlig().s[186]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_k7a7dmlig().b[27][1]++;
      }
      // Verificar permisos
      cov_k7a7dmlig().s[187]++;
      if (user.roll !== 'eventCreator') {
        /* istanbul ignore next */
        cov_k7a7dmlig().b[28][0]++;
        cov_k7a7dmlig().s[188]++;
        loggerService_1.logger.info('❌ Solo los organizadores pueden eliminar solicitudes');
        /* istanbul ignore next */
        cov_k7a7dmlig().s[189]++;
        res.status(403).json({
          success: false,
          message: 'Solo los organizadores pueden eliminar solicitudes'
        });
        /* istanbul ignore next */
        cov_k7a7dmlig().s[190]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_k7a7dmlig().b[28][1]++;
      }
      cov_k7a7dmlig().s[191]++;
      if (originalEvent.user !== user.userEmail) {
        /* istanbul ignore next */
        cov_k7a7dmlig().b[29][0]++;
        cov_k7a7dmlig().s[192]++;
        loggerService_1.logger.info('❌ Usuario no autorizado para eliminar esta solicitud');
        /* istanbul ignore next */
        cov_k7a7dmlig().s[193]++;
        res.status(403).json({
          success: false,
          message: 'No tienes permisos para eliminar esta solicitud'
        });
        /* istanbul ignore next */
        cov_k7a7dmlig().s[194]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_k7a7dmlig().b[29][1]++;
      }
      // Eliminar el evento
      const deleteResult =
      /* istanbul ignore next */
      (cov_k7a7dmlig().s[195]++, yield (0, eventModel_1.deleteEventModel)(eventId, user.userEmail));
      /* istanbul ignore next */
      cov_k7a7dmlig().s[196]++;
      if (!deleteResult) {
        /* istanbul ignore next */
        cov_k7a7dmlig().b[30][0]++;
        cov_k7a7dmlig().s[197]++;
        loggerService_1.logger.info('❌ Error al eliminar solicitud en la base de datos');
        /* istanbul ignore next */
        cov_k7a7dmlig().s[198]++;
        res.status(500).json({
          success: false,
          message: 'Error al eliminar la solicitud'
        });
        /* istanbul ignore next */
        cov_k7a7dmlig().s[199]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_k7a7dmlig().b[30][1]++;
      }
      cov_k7a7dmlig().s[200]++;
      loggerService_1.logger.info('✅ Solicitud eliminada exitosamente:', {
        metadata: {
          eventId
        }
      });
      // Comentado temporalmente - notificaciones por socket
      /* istanbul ignore next */
      cov_k7a7dmlig().s[201]++;
      res.json({
        success: true,
        message: 'Solicitud eliminada exitosamente'
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_k7a7dmlig().s[202]++;
      loggerService_1.logger.error('❌ Error al eliminar solicitud:', error);
      /* istanbul ignore next */
      cov_k7a7dmlig().s[203]++;
      res.status(500).json({
        success: false,
        message: 'Error al eliminar la solicitud',
        error: error instanceof Error ?
        /* istanbul ignore next */
        (cov_k7a7dmlig().b[31][0]++, error.message) :
        /* istanbul ignore next */
        (cov_k7a7dmlig().b[31][1]++, 'Error desconocido')
      });
    }
  });
};
/* istanbul ignore next */
cov_k7a7dmlig().s[204]++;
exports.deleteEventController = deleteEventController;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,