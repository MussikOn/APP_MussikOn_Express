15d02b5c5f0db5aa537878975695c249
"use strict";

/* istanbul ignore next */
function cov_1wpckdlacw() {
  var path = "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\controllers\\paymentController.ts";
  var hash = "48b526c0795e12783d95104db67d0eabec2de3a5";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\controllers\\paymentController.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 16
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 28
        },
        end: {
          line: 3,
          column: 110
        }
      },
      "2": {
        start: {
          line: 3,
          column: 91
        },
        end: {
          line: 3,
          column: 106
        }
      },
      "3": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "4": {
        start: {
          line: 5,
          column: 36
        },
        end: {
          line: 5,
          column: 97
        }
      },
      "5": {
        start: {
          line: 5,
          column: 42
        },
        end: {
          line: 5,
          column: 70
        }
      },
      "6": {
        start: {
          line: 5,
          column: 85
        },
        end: {
          line: 5,
          column: 95
        }
      },
      "7": {
        start: {
          line: 6,
          column: 35
        },
        end: {
          line: 6,
          column: 100
        }
      },
      "8": {
        start: {
          line: 6,
          column: 41
        },
        end: {
          line: 6,
          column: 73
        }
      },
      "9": {
        start: {
          line: 6,
          column: 88
        },
        end: {
          line: 6,
          column: 98
        }
      },
      "10": {
        start: {
          line: 7,
          column: 32
        },
        end: {
          line: 7,
          column: 116
        }
      },
      "11": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 78
        }
      },
      "12": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 62
        }
      },
      "13": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 459
        }
      },
      "14": {
        start: {
          line: 13,
          column: 23
        },
        end: {
          line: 13,
          column: 60
        }
      },
      "15": {
        start: {
          line: 14,
          column: 25
        },
        end: {
          line: 14,
          column: 62
        }
      },
      "16": {
        start: {
          line: 15,
          column: 24
        },
        end: {
          line: 15,
          column: 60
        }
      },
      "17": {
        start: {
          line: 16,
          column: 23
        },
        end: {
          line: 16,
          column: 60
        }
      },
      "18": {
        start: {
          line: 18,
          column: 0
        },
        end: {
          line: 35,
          column: 4
        }
      },
      "19": {
        start: {
          line: 18,
          column: 87
        },
        end: {
          line: 35,
          column: 2
        }
      },
      "20": {
        start: {
          line: 19,
          column: 23
        },
        end: {
          line: 19,
          column: 31
        }
      },
      "21": {
        start: {
          line: 20,
          column: 79
        },
        end: {
          line: 20,
          column: 87
        }
      },
      "22": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 21,
          column: 91
        }
      },
      "23": {
        start: {
          line: 22,
          column: 26
        },
        end: {
          line: 29,
          column: 6
        }
      },
      "24": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 34,
          column: 7
        }
      },
      "25": {
        start: {
          line: 37,
          column: 0
        },
        end: {
          line: 46,
          column: 4
        }
      },
      "26": {
        start: {
          line: 37,
          column: 85
        },
        end: {
          line: 46,
          column: 2
        }
      },
      "27": {
        start: {
          line: 38,
          column: 23
        },
        end: {
          line: 38,
          column: 31
        }
      },
      "28": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 39,
          column: 71
        }
      },
      "29": {
        start: {
          line: 40,
          column: 27
        },
        end: {
          line: 40,
          column: 73
        }
      },
      "30": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 45,
          column: 7
        }
      },
      "31": {
        start: {
          line: 48,
          column: 0
        },
        end: {
          line: 60,
          column: 4
        }
      },
      "32": {
        start: {
          line: 48,
          column: 91
        },
        end: {
          line: 60,
          column: 2
        }
      },
      "33": {
        start: {
          line: 49,
          column: 23
        },
        end: {
          line: 49,
          column: 31
        }
      },
      "34": {
        start: {
          line: 50,
          column: 32
        },
        end: {
          line: 50,
          column: 42
        }
      },
      "35": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 54,
          column: 7
        }
      },
      "36": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 55,
          column: 74
        }
      },
      "37": {
        start: {
          line: 56,
          column: 4
        },
        end: {
          line: 59,
          column: 7
        }
      },
      "38": {
        start: {
          line: 62,
          column: 0
        },
        end: {
          line: 75,
          column: 4
        }
      },
      "39": {
        start: {
          line: 62,
          column: 87
        },
        end: {
          line: 75,
          column: 2
        }
      },
      "40": {
        start: {
          line: 63,
          column: 23
        },
        end: {
          line: 63,
          column: 31
        }
      },
      "41": {
        start: {
          line: 64,
          column: 56
        },
        end: {
          line: 64,
          column: 64
        }
      },
      "42": {
        start: {
          line: 65,
          column: 4
        },
        end: {
          line: 68,
          column: 7
        }
      },
      "43": {
        start: {
          line: 69,
          column: 26
        },
        end: {
          line: 69,
          column: 115
        }
      },
      "44": {
        start: {
          line: 70,
          column: 4
        },
        end: {
          line: 74,
          column: 7
        }
      },
      "45": {
        start: {
          line: 77,
          column: 0
        },
        end: {
          line: 92,
          column: 4
        }
      },
      "46": {
        start: {
          line: 77,
          column: 82
        },
        end: {
          line: 92,
          column: 2
        }
      },
      "47": {
        start: {
          line: 78,
          column: 23
        },
        end: {
          line: 78,
          column: 31
        }
      },
      "48": {
        start: {
          line: 79,
          column: 49
        },
        end: {
          line: 79,
          column: 57
        }
      },
      "49": {
        start: {
          line: 80,
          column: 4
        },
        end: {
          line: 83,
          column: 7
        }
      },
      "50": {
        start: {
          line: 84,
          column: 19
        },
        end: {
          line: 84,
          column: 88
        }
      },
      "51": {
        start: {
          line: 85,
          column: 4
        },
        end: {
          line: 91,
          column: 7
        }
      },
      "52": {
        start: {
          line: 94,
          column: 0
        },
        end: {
          line: 107,
          column: 4
        }
      },
      "53": {
        start: {
          line: 94,
          column: 81
        },
        end: {
          line: 107,
          column: 2
        }
      },
      "54": {
        start: {
          line: 95,
          column: 23
        },
        end: {
          line: 95,
          column: 31
        }
      },
      "55": {
        start: {
          line: 96,
          column: 40
        },
        end: {
          line: 96,
          column: 48
        }
      },
      "56": {
        start: {
          line: 97,
          column: 4
        },
        end: {
          line: 100,
          column: 7
        }
      },
      "57": {
        start: {
          line: 101,
          column: 20
        },
        end: {
          line: 101,
          column: 97
        }
      },
      "58": {
        start: {
          line: 102,
          column: 4
        },
        end: {
          line: 106,
          column: 7
        }
      },
      "59": {
        start: {
          line: 109,
          column: 0
        },
        end: {
          line: 122,
          column: 4
        }
      },
      "60": {
        start: {
          line: 109,
          column: 79
        },
        end: {
          line: 122,
          column: 2
        }
      },
      "61": {
        start: {
          line: 110,
          column: 23
        },
        end: {
          line: 110,
          column: 31
        }
      },
      "62": {
        start: {
          line: 111,
          column: 23
        },
        end: {
          line: 111,
          column: 32
        }
      },
      "63": {
        start: {
          line: 112,
          column: 4
        },
        end: {
          line: 115,
          column: 7
        }
      },
      "64": {
        start: {
          line: 116,
          column: 21
        },
        end: {
          line: 116,
          column: 69
        }
      },
      "65": {
        start: {
          line: 117,
          column: 4
        },
        end: {
          line: 121,
          column: 7
        }
      },
      "66": {
        start: {
          line: 124,
          column: 0
        },
        end: {
          line: 138,
          column: 4
        }
      },
      "67": {
        start: {
          line: 124,
          column: 85
        },
        end: {
          line: 138,
          column: 2
        }
      },
      "68": {
        start: {
          line: 125,
          column: 23
        },
        end: {
          line: 125,
          column: 31
        }
      },
      "69": {
        start: {
          line: 126,
          column: 26
        },
        end: {
          line: 126,
          column: 36
        }
      },
      "70": {
        start: {
          line: 127,
          column: 32
        },
        end: {
          line: 127,
          column: 40
        }
      },
      "71": {
        start: {
          line: 128,
          column: 4
        },
        end: {
          line: 131,
          column: 7
        }
      },
      "72": {
        start: {
          line: 132,
          column: 19
        },
        end: {
          line: 132,
          column: 85
        }
      },
      "73": {
        start: {
          line: 133,
          column: 4
        },
        end: {
          line: 137,
          column: 7
        }
      },
      "74": {
        start: {
          line: 140,
          column: 0
        },
        end: {
          line: 153,
          column: 4
        }
      },
      "75": {
        start: {
          line: 140,
          column: 81
        },
        end: {
          line: 153,
          column: 2
        }
      },
      "76": {
        start: {
          line: 141,
          column: 23
        },
        end: {
          line: 141,
          column: 31
        }
      },
      "77": {
        start: {
          line: 142,
          column: 48
        },
        end: {
          line: 142,
          column: 56
        }
      },
      "78": {
        start: {
          line: 143,
          column: 4
        },
        end: {
          line: 146,
          column: 7
        }
      },
      "79": {
        start: {
          line: 147,
          column: 19
        },
        end: {
          line: 147,
          column: 86
        }
      },
      "80": {
        start: {
          line: 148,
          column: 4
        },
        end: {
          line: 152,
          column: 7
        }
      },
      "81": {
        start: {
          line: 155,
          column: 0
        },
        end: {
          line: 167,
          column: 4
        }
      },
      "82": {
        start: {
          line: 155,
          column: 83
        },
        end: {
          line: 167,
          column: 2
        }
      },
      "83": {
        start: {
          line: 156,
          column: 31
        },
        end: {
          line: 156,
          column: 40
        }
      },
      "84": {
        start: {
          line: 157,
          column: 4
        },
        end: {
          line: 160,
          column: 7
        }
      },
      "85": {
        start: {
          line: 161,
          column: 18
        },
        end: {
          line: 161,
          column: 152
        }
      },
      "86": {
        start: {
          line: 162,
          column: 4
        },
        end: {
          line: 166,
          column: 7
        }
      },
      "87": {
        start: {
          line: 169,
          column: 0
        },
        end: {
          line: 183,
          column: 4
        }
      },
      "88": {
        start: {
          line: 169,
          column: 89
        },
        end: {
          line: 183,
          column: 2
        }
      },
      "89": {
        start: {
          line: 170,
          column: 57
        },
        end: {
          line: 170,
          column: 65
        }
      },
      "90": {
        start: {
          line: 171,
          column: 4
        },
        end: {
          line: 171,
          column: 61
        }
      },
      "91": {
        start: {
          line: 172,
          column: 23
        },
        end: {
          line: 177,
          column: 6
        }
      },
      "92": {
        start: {
          line: 178,
          column: 4
        },
        end: {
          line: 182,
          column: 7
        }
      },
      "93": {
        start: {
          line: 185,
          column: 0
        },
        end: {
          line: 193,
          column: 4
        }
      },
      "94": {
        start: {
          line: 185,
          column: 86
        },
        end: {
          line: 193,
          column: 2
        }
      },
      "95": {
        start: {
          line: 186,
          column: 4
        },
        end: {
          line: 186,
          column: 60
        }
      },
      "96": {
        start: {
          line: 187,
          column: 21
        },
        end: {
          line: 187,
          column: 62
        }
      },
      "97": {
        start: {
          line: 188,
          column: 4
        },
        end: {
          line: 192,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 2,
            column: 45
          }
        },
        loc: {
          start: {
            line: 2,
            column: 89
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "adopt",
        decl: {
          start: {
            line: 3,
            column: 13
          },
          end: {
            line: 3,
            column: 18
          }
        },
        loc: {
          start: {
            line: 3,
            column: 26
          },
          end: {
            line: 3,
            column: 112
          }
        },
        line: 3
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 3,
            column: 70
          },
          end: {
            line: 3,
            column: 71
          }
        },
        loc: {
          start: {
            line: 3,
            column: 89
          },
          end: {
            line: 3,
            column: 108
          }
        },
        line: 3
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 4,
            column: 36
          },
          end: {
            line: 4,
            column: 37
          }
        },
        loc: {
          start: {
            line: 4,
            column: 63
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 4
      },
      "4": {
        name: "fulfilled",
        decl: {
          start: {
            line: 5,
            column: 17
          },
          end: {
            line: 5,
            column: 26
          }
        },
        loc: {
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 99
          }
        },
        line: 5
      },
      "5": {
        name: "rejected",
        decl: {
          start: {
            line: 6,
            column: 17
          },
          end: {
            line: 6,
            column: 25
          }
        },
        loc: {
          start: {
            line: 6,
            column: 33
          },
          end: {
            line: 6,
            column: 102
          }
        },
        line: 6
      },
      "6": {
        name: "step",
        decl: {
          start: {
            line: 7,
            column: 17
          },
          end: {
            line: 7,
            column: 21
          }
        },
        loc: {
          start: {
            line: 7,
            column: 30
          },
          end: {
            line: 7,
            column: 118
          }
        },
        line: 7
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 18,
            column: 73
          },
          end: {
            line: 18,
            column: 74
          }
        },
        loc: {
          start: {
            line: 18,
            column: 87
          },
          end: {
            line: 35,
            column: 2
          }
        },
        line: 18
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 18,
            column: 121
          },
          end: {
            line: 18,
            column: 122
          }
        },
        loc: {
          start: {
            line: 18,
            column: 134
          },
          end: {
            line: 35,
            column: 1
          }
        },
        line: 18
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 37,
            column: 71
          },
          end: {
            line: 37,
            column: 72
          }
        },
        loc: {
          start: {
            line: 37,
            column: 85
          },
          end: {
            line: 46,
            column: 2
          }
        },
        line: 37
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 37,
            column: 119
          },
          end: {
            line: 37,
            column: 120
          }
        },
        loc: {
          start: {
            line: 37,
            column: 132
          },
          end: {
            line: 46,
            column: 1
          }
        },
        line: 37
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 48,
            column: 77
          },
          end: {
            line: 48,
            column: 78
          }
        },
        loc: {
          start: {
            line: 48,
            column: 91
          },
          end: {
            line: 60,
            column: 2
          }
        },
        line: 48
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 48,
            column: 125
          },
          end: {
            line: 48,
            column: 126
          }
        },
        loc: {
          start: {
            line: 48,
            column: 138
          },
          end: {
            line: 60,
            column: 1
          }
        },
        line: 48
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 62,
            column: 73
          },
          end: {
            line: 62,
            column: 74
          }
        },
        loc: {
          start: {
            line: 62,
            column: 87
          },
          end: {
            line: 75,
            column: 2
          }
        },
        line: 62
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 62,
            column: 121
          },
          end: {
            line: 62,
            column: 122
          }
        },
        loc: {
          start: {
            line: 62,
            column: 134
          },
          end: {
            line: 75,
            column: 1
          }
        },
        line: 62
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 77,
            column: 68
          },
          end: {
            line: 77,
            column: 69
          }
        },
        loc: {
          start: {
            line: 77,
            column: 82
          },
          end: {
            line: 92,
            column: 2
          }
        },
        line: 77
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 77,
            column: 116
          },
          end: {
            line: 77,
            column: 117
          }
        },
        loc: {
          start: {
            line: 77,
            column: 129
          },
          end: {
            line: 92,
            column: 1
          }
        },
        line: 77
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 94,
            column: 67
          },
          end: {
            line: 94,
            column: 68
          }
        },
        loc: {
          start: {
            line: 94,
            column: 81
          },
          end: {
            line: 107,
            column: 2
          }
        },
        line: 94
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 94,
            column: 115
          },
          end: {
            line: 94,
            column: 116
          }
        },
        loc: {
          start: {
            line: 94,
            column: 128
          },
          end: {
            line: 107,
            column: 1
          }
        },
        line: 94
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 109,
            column: 65
          },
          end: {
            line: 109,
            column: 66
          }
        },
        loc: {
          start: {
            line: 109,
            column: 79
          },
          end: {
            line: 122,
            column: 2
          }
        },
        line: 109
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 109,
            column: 113
          },
          end: {
            line: 109,
            column: 114
          }
        },
        loc: {
          start: {
            line: 109,
            column: 126
          },
          end: {
            line: 122,
            column: 1
          }
        },
        line: 109
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 124,
            column: 71
          },
          end: {
            line: 124,
            column: 72
          }
        },
        loc: {
          start: {
            line: 124,
            column: 85
          },
          end: {
            line: 138,
            column: 2
          }
        },
        line: 124
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 124,
            column: 119
          },
          end: {
            line: 124,
            column: 120
          }
        },
        loc: {
          start: {
            line: 124,
            column: 132
          },
          end: {
            line: 138,
            column: 1
          }
        },
        line: 124
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 140,
            column: 67
          },
          end: {
            line: 140,
            column: 68
          }
        },
        loc: {
          start: {
            line: 140,
            column: 81
          },
          end: {
            line: 153,
            column: 2
          }
        },
        line: 140
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 140,
            column: 115
          },
          end: {
            line: 140,
            column: 116
          }
        },
        loc: {
          start: {
            line: 140,
            column: 128
          },
          end: {
            line: 153,
            column: 1
          }
        },
        line: 140
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 155,
            column: 69
          },
          end: {
            line: 155,
            column: 70
          }
        },
        loc: {
          start: {
            line: 155,
            column: 83
          },
          end: {
            line: 167,
            column: 2
          }
        },
        line: 155
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 155,
            column: 117
          },
          end: {
            line: 155,
            column: 118
          }
        },
        loc: {
          start: {
            line: 155,
            column: 130
          },
          end: {
            line: 167,
            column: 1
          }
        },
        line: 155
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 169,
            column: 75
          },
          end: {
            line: 169,
            column: 76
          }
        },
        loc: {
          start: {
            line: 169,
            column: 89
          },
          end: {
            line: 183,
            column: 2
          }
        },
        line: 169
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 169,
            column: 123
          },
          end: {
            line: 169,
            column: 124
          }
        },
        loc: {
          start: {
            line: 169,
            column: 136
          },
          end: {
            line: 183,
            column: 1
          }
        },
        line: 169
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 185,
            column: 72
          },
          end: {
            line: 185,
            column: 73
          }
        },
        loc: {
          start: {
            line: 185,
            column: 86
          },
          end: {
            line: 193,
            column: 2
          }
        },
        line: 185
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 185,
            column: 120
          },
          end: {
            line: 185,
            column: 121
          }
        },
        loc: {
          start: {
            line: 185,
            column: 133
          },
          end: {
            line: 193,
            column: 1
          }
        },
        line: 185
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 16
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 17
          },
          end: {
            line: 2,
            column: 21
          }
        }, {
          start: {
            line: 2,
            column: 25
          },
          end: {
            line: 2,
            column: 39
          }
        }, {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 35
          },
          end: {
            line: 3,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 56
          },
          end: {
            line: 3,
            column: 61
          }
        }, {
          start: {
            line: 3,
            column: 64
          },
          end: {
            line: 3,
            column: 109
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 17
          }
        }, {
          start: {
            line: 4,
            column: 22
          },
          end: {
            line: 4,
            column: 33
          }
        }],
        line: 4
      },
      "3": {
        loc: {
          start: {
            line: 7,
            column: 32
          },
          end: {
            line: 7,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 7,
            column: 46
          },
          end: {
            line: 7,
            column: 67
          }
        }, {
          start: {
            line: 7,
            column: 70
          },
          end: {
            line: 7,
            column: 115
          }
        }],
        line: 7
      },
      "4": {
        loc: {
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 61
          }
        }, {
          start: {
            line: 8,
            column: 65
          },
          end: {
            line: 8,
            column: 67
          }
        }],
        line: 8
      },
      "5": {
        loc: {
          start: {
            line: 88,
            column: 17
          },
          end: {
            line: 90,
            column: 41
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 89,
            column: 14
          },
          end: {
            line: 89,
            column: 43
          }
        }, {
          start: {
            line: 90,
            column: 14
          },
          end: {
            line: 90,
            column: 41
          }
        }],
        line: 88
      },
      "6": {
        loc: {
          start: {
            line: 158,
            column: 16
          },
          end: {
            line: 158,
            column: 63
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 158,
            column: 45
          },
          end: {
            line: 158,
            column: 51
          }
        }, {
          start: {
            line: 158,
            column: 54
          },
          end: {
            line: 158,
            column: 63
          }
        }],
        line: 158
      },
      "7": {
        loc: {
          start: {
            line: 159,
            column: 28
          },
          end: {
            line: 159,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 159,
            column: 57
          },
          end: {
            line: 159,
            column: 63
          }
        }, {
          start: {
            line: 159,
            column: 66
          },
          end: {
            line: 159,
            column: 75
          }
        }],
        line: 159
      },
      "8": {
        loc: {
          start: {
            line: 161,
            column: 55
          },
          end: {
            line: 161,
            column: 102
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 161,
            column: 84
          },
          end: {
            line: 161,
            column: 90
          }
        }, {
          start: {
            line: 161,
            column: 93
          },
          end: {
            line: 161,
            column: 102
          }
        }],
        line: 161
      },
      "9": {
        loc: {
          start: {
            line: 161,
            column: 104
          },
          end: {
            line: 161,
            column: 151
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 161,
            column: 133
          },
          end: {
            line: 161,
            column: 139
          }
        }, {
          start: {
            line: 161,
            column: 142
          },
          end: {
            line: 161,
            column: 151
          }
        }],
        line: 161
      },
      "10": {
        loc: {
          start: {
            line: 181,
            column: 17
          },
          end: {
            line: 181,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 181,
            column: 30
          },
          end: {
            line: 181,
            column: 53
          }
        }, {
          start: {
            line: 181,
            column: 56
          },
          end: {
            line: 181,
            column: 81
          }
        }],
        line: 181
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\controllers\\paymentController.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\controllers\\paymentController.ts"],
      sourcesContent: ["import { Request, Response } from 'express';\r\nimport { asyncHandler } from '../middleware/errorHandler';\r\nimport { PaymentService } from '../services/paymentService';\r\nimport { logger } from '../services/loggerService';\r\n\r\nconst paymentService = new PaymentService();\r\n\r\n// Crear m\xE9todo de pago\r\nexport const createPaymentMethodController = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const { userId } = req.user!;\r\n    const { type, cardNumber, expiryMonth, expiryYear, cvc, billingAddress } =\r\n      req.body;\r\n\r\n    logger.info('Creating payment method', { userId, metadata: { type } });\r\n\r\n    const paymentMethod = await paymentService.createPaymentMethod(userId, {\r\n      type,\r\n      cardNumber,\r\n      expiryMonth,\r\n      expiryYear,\r\n      cvc,\r\n      billingAddress,\r\n    });\r\n\r\n    res.status(201).json({\r\n      success: true,\r\n      data: paymentMethod,\r\n      message: 'M\xE9todo de pago creado exitosamente',\r\n    });\r\n  }\r\n);\r\n\r\n// Obtener m\xE9todos de pago del usuario\r\nexport const getPaymentMethodsController = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const { userId } = req.user!;\r\n\r\n    logger.info('Getting payment methods', { userId });\r\n\r\n    const paymentMethods = await paymentService.getPaymentMethods(userId);\r\n\r\n    res.status(200).json({\r\n      success: true,\r\n      data: paymentMethods,\r\n      message: 'M\xE9todos de pago obtenidos exitosamente',\r\n    });\r\n  }\r\n);\r\n\r\n// Establecer m\xE9todo de pago por defecto\r\nexport const setDefaultPaymentMethodController = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const { userId } = req.user!;\r\n    const { paymentMethodId } = req.params;\r\n\r\n    logger.info('Setting default payment method', {\r\n      userId,\r\n      metadata: { paymentMethodId },\r\n    });\r\n\r\n    await paymentService.setDefaultPaymentMethod(userId, paymentMethodId);\r\n\r\n    res.status(200).json({\r\n      success: true,\r\n      message: 'M\xE9todo de pago por defecto actualizado exitosamente',\r\n    });\r\n  }\r\n);\r\n\r\n// Crear intent de pago\r\nexport const createPaymentIntentController = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const { userId } = req.user!;\r\n    const { amount, currency, description, metadata } = req.body;\r\n\r\n    logger.info('Creating payment intent', {\r\n      userId,\r\n      metadata: { amount, currency },\r\n    });\r\n\r\n    const paymentIntent = await paymentService.createPaymentIntent(\r\n      userId,\r\n      amount,\r\n      currency,\r\n      description,\r\n      metadata\r\n    );\r\n\r\n    res.status(201).json({\r\n      success: true,\r\n      data: paymentIntent,\r\n      message: 'Intent de pago creado exitosamente',\r\n    });\r\n  }\r\n);\r\n\r\n// Procesar pago\r\nexport const processPaymentController = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const { userId } = req.user!;\r\n    const { paymentIntentId, paymentMethodId } = req.body;\r\n\r\n    logger.info('Processing payment', {\r\n      userId,\r\n      metadata: { paymentIntentId, paymentMethodId },\r\n    });\r\n\r\n    const result = await paymentService.processPayment(\r\n      paymentIntentId,\r\n      paymentMethodId\r\n    );\r\n\r\n    res.status(200).json({\r\n      success: true,\r\n      data: result,\r\n      message:\r\n        result.status === 'succeeded'\r\n          ? 'Pago procesado exitosamente'\r\n          : 'Error al procesar el pago',\r\n    });\r\n  }\r\n);\r\n\r\n// Crear factura\r\nexport const createInvoiceController = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const { userId } = req.user!;\r\n    const { items, dueDate, eventId } = req.body;\r\n\r\n    logger.info('Creating invoice', {\r\n      userId,\r\n      metadata: { itemsCount: items.length },\r\n    });\r\n\r\n    const invoice = await paymentService.createInvoice(\r\n      userId,\r\n      items,\r\n      new Date(dueDate),\r\n      eventId\r\n    );\r\n\r\n    res.status(201).json({\r\n      success: true,\r\n      data: invoice,\r\n      message: 'Factura creada exitosamente',\r\n    });\r\n  }\r\n);\r\n\r\n// Obtener facturas del usuario\r\nexport const getInvoicesController = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const { userId } = req.user!;\r\n    const { status } = req.query;\r\n\r\n    logger.info('Getting invoices', {\r\n      userId,\r\n      metadata: { status: status as string },\r\n    });\r\n\r\n    const invoices = await paymentService.getInvoices(userId, status as string);\r\n\r\n    res.status(200).json({\r\n      success: true,\r\n      data: invoices,\r\n      message: 'Facturas obtenidas exitosamente',\r\n    });\r\n  }\r\n);\r\n\r\n// Marcar factura como pagada\r\nexport const markInvoiceAsPaidController = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const { userId } = req.user!;\r\n    const { invoiceId } = req.params;\r\n    const { paymentMethodId } = req.body;\r\n\r\n    logger.info('Marking invoice as paid', {\r\n      userId,\r\n      metadata: { invoiceId, paymentMethodId },\r\n    });\r\n\r\n    const result = await paymentService.markInvoiceAsPaid(\r\n      invoiceId,\r\n      paymentMethodId\r\n    );\r\n\r\n    res.status(200).json({\r\n      success: true,\r\n      data: result,\r\n      message: 'Factura marcada como pagada exitosamente',\r\n    });\r\n  }\r\n);\r\n\r\n// Procesar reembolso\r\nexport const processRefundController = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const { userId } = req.user!;\r\n    const { paymentIntentId, amount, reason } = req.body;\r\n\r\n    logger.info('Processing refund', {\r\n      userId,\r\n      metadata: { paymentIntentId, amount, reason },\r\n    });\r\n\r\n    const refund = await paymentService.processRefund(\r\n      paymentIntentId,\r\n      amount,\r\n      reason\r\n    );\r\n\r\n    res.status(200).json({\r\n      success: true,\r\n      data: refund,\r\n      message: 'Reembolso procesado exitosamente',\r\n    });\r\n  }\r\n);\r\n\r\n// Obtener estad\xEDsticas de pagos (solo admin)\r\nexport const getPaymentStatsController = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const { userId, period } = req.query;\r\n\r\n    logger.info('Getting payment stats', {\r\n      userId: typeof userId === 'string' ? userId : undefined,\r\n      metadata: { period: typeof period === 'string' ? period : undefined },\r\n    });\r\n\r\n    const stats = await paymentService.getPaymentStats(\r\n      typeof userId === 'string' ? userId : undefined,\r\n      typeof period === 'string' ? period : undefined\r\n    );\r\n\r\n    res.status(200).json({\r\n      success: true,\r\n      data: stats,\r\n      message: 'Estad\xEDsticas de pagos obtenidas exitosamente',\r\n    });\r\n  }\r\n);\r\n\r\n// Validar m\xE9todo de pago\r\nexport const validatePaymentMethodController = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const { cardNumber, expiryMonth, expiryYear, cvc } = req.body;\r\n\r\n    logger.info('Validating payment method');\r\n\r\n    const validation = await paymentService.validatePaymentMethod({\r\n      cardNumber,\r\n      expiryMonth,\r\n      expiryYear,\r\n      cvc,\r\n    });\r\n\r\n    res.status(200).json({\r\n      success: true,\r\n      data: { isValid: validation },\r\n      message: validation ? 'M\xE9todo de pago v\xE1lido' : 'M\xE9todo de pago inv\xE1lido',\r\n    });\r\n  }\r\n);\r\n\r\n// Obtener gateways de pago disponibles\r\nexport const getPaymentGatewaysController = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    logger.info('Getting payment gateways');\r\n\r\n    const gateways = await paymentService.getPaymentGateways();\r\n\r\n    res.status(200).json({\r\n      success: true,\r\n      data: gateways,\r\n      message: 'Gateways de pago obtenidos exitosamente',\r\n    });\r\n  }\r\n);\r\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "48b526c0795e12783d95104db67d0eabec2de3a5"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1wpckdlacw = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1wpckdlacw();
var __awaiter =
/* istanbul ignore next */
(cov_1wpckdlacw().s[0]++,
/* istanbul ignore next */
(cov_1wpckdlacw().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1wpckdlacw().b[0][1]++, this.__awaiter) ||
/* istanbul ignore next */
(cov_1wpckdlacw().b[0][2]++, function (thisArg, _arguments, P, generator) {
  /* istanbul ignore next */
  cov_1wpckdlacw().f[0]++;
  function adopt(value) {
    /* istanbul ignore next */
    cov_1wpckdlacw().f[1]++;
    cov_1wpckdlacw().s[1]++;
    return value instanceof P ?
    /* istanbul ignore next */
    (cov_1wpckdlacw().b[1][0]++, value) :
    /* istanbul ignore next */
    (cov_1wpckdlacw().b[1][1]++, new P(function (resolve) {
      /* istanbul ignore next */
      cov_1wpckdlacw().f[2]++;
      cov_1wpckdlacw().s[2]++;
      resolve(value);
    }));
  }
  /* istanbul ignore next */
  cov_1wpckdlacw().s[3]++;
  return new (
  /* istanbul ignore next */
  (cov_1wpckdlacw().b[2][0]++, P) ||
  /* istanbul ignore next */
  (cov_1wpckdlacw().b[2][1]++, P = Promise))(function (resolve, reject) {
    /* istanbul ignore next */
    cov_1wpckdlacw().f[3]++;
    function fulfilled(value) {
      /* istanbul ignore next */
      cov_1wpckdlacw().f[4]++;
      cov_1wpckdlacw().s[4]++;
      try {
        /* istanbul ignore next */
        cov_1wpckdlacw().s[5]++;
        step(generator.next(value));
      } catch (e) {
        /* istanbul ignore next */
        cov_1wpckdlacw().s[6]++;
        reject(e);
      }
    }
    function rejected(value) {
      /* istanbul ignore next */
      cov_1wpckdlacw().f[5]++;
      cov_1wpckdlacw().s[7]++;
      try {
        /* istanbul ignore next */
        cov_1wpckdlacw().s[8]++;
        step(generator["throw"](value));
      } catch (e) {
        /* istanbul ignore next */
        cov_1wpckdlacw().s[9]++;
        reject(e);
      }
    }
    function step(result) {
      /* istanbul ignore next */
      cov_1wpckdlacw().f[6]++;
      cov_1wpckdlacw().s[10]++;
      result.done ?
      /* istanbul ignore next */
      (cov_1wpckdlacw().b[3][0]++, resolve(result.value)) :
      /* istanbul ignore next */
      (cov_1wpckdlacw().b[3][1]++, adopt(result.value).then(fulfilled, rejected));
    }
    /* istanbul ignore next */
    cov_1wpckdlacw().s[11]++;
    step((generator = generator.apply(thisArg,
    /* istanbul ignore next */
    (cov_1wpckdlacw().b[4][0]++, _arguments) ||
    /* istanbul ignore next */
    (cov_1wpckdlacw().b[4][1]++, []))).next());
  });
}));
/* istanbul ignore next */
cov_1wpckdlacw().s[12]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1wpckdlacw().s[13]++;
exports.getPaymentGatewaysController = exports.validatePaymentMethodController = exports.getPaymentStatsController = exports.processRefundController = exports.markInvoiceAsPaidController = exports.getInvoicesController = exports.createInvoiceController = exports.processPaymentController = exports.createPaymentIntentController = exports.setDefaultPaymentMethodController = exports.getPaymentMethodsController = exports.createPaymentMethodController = void 0;
const errorHandler_1 =
/* istanbul ignore next */
(cov_1wpckdlacw().s[14]++, require("../middleware/errorHandler"));
const paymentService_1 =
/* istanbul ignore next */
(cov_1wpckdlacw().s[15]++, require("../services/paymentService"));
const loggerService_1 =
/* istanbul ignore next */
(cov_1wpckdlacw().s[16]++, require("../services/loggerService"));
const paymentService =
/* istanbul ignore next */
(cov_1wpckdlacw().s[17]++, new paymentService_1.PaymentService());
// Crear método de pago
/* istanbul ignore next */
cov_1wpckdlacw().s[18]++;
exports.createPaymentMethodController = (0, errorHandler_1.asyncHandler)((req, res) => {
  /* istanbul ignore next */
  cov_1wpckdlacw().f[7]++;
  cov_1wpckdlacw().s[19]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1wpckdlacw().f[8]++;
    const {
      userId
    } =
    /* istanbul ignore next */
    (cov_1wpckdlacw().s[20]++, req.user);
    const {
      type,
      cardNumber,
      expiryMonth,
      expiryYear,
      cvc,
      billingAddress
    } =
    /* istanbul ignore next */
    (cov_1wpckdlacw().s[21]++, req.body);
    /* istanbul ignore next */
    cov_1wpckdlacw().s[22]++;
    loggerService_1.logger.info('Creating payment method', {
      userId,
      metadata: {
        type
      }
    });
    const paymentMethod =
    /* istanbul ignore next */
    (cov_1wpckdlacw().s[23]++, yield paymentService.createPaymentMethod(userId, {
      type,
      cardNumber,
      expiryMonth,
      expiryYear,
      cvc,
      billingAddress
    }));
    /* istanbul ignore next */
    cov_1wpckdlacw().s[24]++;
    res.status(201).json({
      success: true,
      data: paymentMethod,
      message: 'Método de pago creado exitosamente'
    });
  });
});
// Obtener métodos de pago del usuario
/* istanbul ignore next */
cov_1wpckdlacw().s[25]++;
exports.getPaymentMethodsController = (0, errorHandler_1.asyncHandler)((req, res) => {
  /* istanbul ignore next */
  cov_1wpckdlacw().f[9]++;
  cov_1wpckdlacw().s[26]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1wpckdlacw().f[10]++;
    const {
      userId
    } =
    /* istanbul ignore next */
    (cov_1wpckdlacw().s[27]++, req.user);
    /* istanbul ignore next */
    cov_1wpckdlacw().s[28]++;
    loggerService_1.logger.info('Getting payment methods', {
      userId
    });
    const paymentMethods =
    /* istanbul ignore next */
    (cov_1wpckdlacw().s[29]++, yield paymentService.getPaymentMethods(userId));
    /* istanbul ignore next */
    cov_1wpckdlacw().s[30]++;
    res.status(200).json({
      success: true,
      data: paymentMethods,
      message: 'Métodos de pago obtenidos exitosamente'
    });
  });
});
// Establecer método de pago por defecto
/* istanbul ignore next */
cov_1wpckdlacw().s[31]++;
exports.setDefaultPaymentMethodController = (0, errorHandler_1.asyncHandler)((req, res) => {
  /* istanbul ignore next */
  cov_1wpckdlacw().f[11]++;
  cov_1wpckdlacw().s[32]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1wpckdlacw().f[12]++;
    const {
      userId
    } =
    /* istanbul ignore next */
    (cov_1wpckdlacw().s[33]++, req.user);
    const {
      paymentMethodId
    } =
    /* istanbul ignore next */
    (cov_1wpckdlacw().s[34]++, req.params);
    /* istanbul ignore next */
    cov_1wpckdlacw().s[35]++;
    loggerService_1.logger.info('Setting default payment method', {
      userId,
      metadata: {
        paymentMethodId
      }
    });
    /* istanbul ignore next */
    cov_1wpckdlacw().s[36]++;
    yield paymentService.setDefaultPaymentMethod(userId, paymentMethodId);
    /* istanbul ignore next */
    cov_1wpckdlacw().s[37]++;
    res.status(200).json({
      success: true,
      message: 'Método de pago por defecto actualizado exitosamente'
    });
  });
});
// Crear intent de pago
/* istanbul ignore next */
cov_1wpckdlacw().s[38]++;
exports.createPaymentIntentController = (0, errorHandler_1.asyncHandler)((req, res) => {
  /* istanbul ignore next */
  cov_1wpckdlacw().f[13]++;
  cov_1wpckdlacw().s[39]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1wpckdlacw().f[14]++;
    const {
      userId
    } =
    /* istanbul ignore next */
    (cov_1wpckdlacw().s[40]++, req.user);
    const {
      amount,
      currency,
      description,
      metadata
    } =
    /* istanbul ignore next */
    (cov_1wpckdlacw().s[41]++, req.body);
    /* istanbul ignore next */
    cov_1wpckdlacw().s[42]++;
    loggerService_1.logger.info('Creating payment intent', {
      userId,
      metadata: {
        amount,
        currency
      }
    });
    const paymentIntent =
    /* istanbul ignore next */
    (cov_1wpckdlacw().s[43]++, yield paymentService.createPaymentIntent(userId, amount, currency, description, metadata));
    /* istanbul ignore next */
    cov_1wpckdlacw().s[44]++;
    res.status(201).json({
      success: true,
      data: paymentIntent,
      message: 'Intent de pago creado exitosamente'
    });
  });
});
// Procesar pago
/* istanbul ignore next */
cov_1wpckdlacw().s[45]++;
exports.processPaymentController = (0, errorHandler_1.asyncHandler)((req, res) => {
  /* istanbul ignore next */
  cov_1wpckdlacw().f[15]++;
  cov_1wpckdlacw().s[46]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1wpckdlacw().f[16]++;
    const {
      userId
    } =
    /* istanbul ignore next */
    (cov_1wpckdlacw().s[47]++, req.user);
    const {
      paymentIntentId,
      paymentMethodId
    } =
    /* istanbul ignore next */
    (cov_1wpckdlacw().s[48]++, req.body);
    /* istanbul ignore next */
    cov_1wpckdlacw().s[49]++;
    loggerService_1.logger.info('Processing payment', {
      userId,
      metadata: {
        paymentIntentId,
        paymentMethodId
      }
    });
    const result =
    /* istanbul ignore next */
    (cov_1wpckdlacw().s[50]++, yield paymentService.processPayment(paymentIntentId, paymentMethodId));
    /* istanbul ignore next */
    cov_1wpckdlacw().s[51]++;
    res.status(200).json({
      success: true,
      data: result,
      message: result.status === 'succeeded' ?
      /* istanbul ignore next */
      (cov_1wpckdlacw().b[5][0]++, 'Pago procesado exitosamente') :
      /* istanbul ignore next */
      (cov_1wpckdlacw().b[5][1]++, 'Error al procesar el pago')
    });
  });
});
// Crear factura
/* istanbul ignore next */
cov_1wpckdlacw().s[52]++;
exports.createInvoiceController = (0, errorHandler_1.asyncHandler)((req, res) => {
  /* istanbul ignore next */
  cov_1wpckdlacw().f[17]++;
  cov_1wpckdlacw().s[53]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1wpckdlacw().f[18]++;
    const {
      userId
    } =
    /* istanbul ignore next */
    (cov_1wpckdlacw().s[54]++, req.user);
    const {
      items,
      dueDate,
      eventId
    } =
    /* istanbul ignore next */
    (cov_1wpckdlacw().s[55]++, req.body);
    /* istanbul ignore next */
    cov_1wpckdlacw().s[56]++;
    loggerService_1.logger.info('Creating invoice', {
      userId,
      metadata: {
        itemsCount: items.length
      }
    });
    const invoice =
    /* istanbul ignore next */
    (cov_1wpckdlacw().s[57]++, yield paymentService.createInvoice(userId, items, new Date(dueDate), eventId));
    /* istanbul ignore next */
    cov_1wpckdlacw().s[58]++;
    res.status(201).json({
      success: true,
      data: invoice,
      message: 'Factura creada exitosamente'
    });
  });
});
// Obtener facturas del usuario
/* istanbul ignore next */
cov_1wpckdlacw().s[59]++;
exports.getInvoicesController = (0, errorHandler_1.asyncHandler)((req, res) => {
  /* istanbul ignore next */
  cov_1wpckdlacw().f[19]++;
  cov_1wpckdlacw().s[60]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1wpckdlacw().f[20]++;
    const {
      userId
    } =
    /* istanbul ignore next */
    (cov_1wpckdlacw().s[61]++, req.user);
    const {
      status
    } =
    /* istanbul ignore next */
    (cov_1wpckdlacw().s[62]++, req.query);
    /* istanbul ignore next */
    cov_1wpckdlacw().s[63]++;
    loggerService_1.logger.info('Getting invoices', {
      userId,
      metadata: {
        status: status
      }
    });
    const invoices =
    /* istanbul ignore next */
    (cov_1wpckdlacw().s[64]++, yield paymentService.getInvoices(userId, status));
    /* istanbul ignore next */
    cov_1wpckdlacw().s[65]++;
    res.status(200).json({
      success: true,
      data: invoices,
      message: 'Facturas obtenidas exitosamente'
    });
  });
});
// Marcar factura como pagada
/* istanbul ignore next */
cov_1wpckdlacw().s[66]++;
exports.markInvoiceAsPaidController = (0, errorHandler_1.asyncHandler)((req, res) => {
  /* istanbul ignore next */
  cov_1wpckdlacw().f[21]++;
  cov_1wpckdlacw().s[67]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1wpckdlacw().f[22]++;
    const {
      userId
    } =
    /* istanbul ignore next */
    (cov_1wpckdlacw().s[68]++, req.user);
    const {
      invoiceId
    } =
    /* istanbul ignore next */
    (cov_1wpckdlacw().s[69]++, req.params);
    const {
      paymentMethodId
    } =
    /* istanbul ignore next */
    (cov_1wpckdlacw().s[70]++, req.body);
    /* istanbul ignore next */
    cov_1wpckdlacw().s[71]++;
    loggerService_1.logger.info('Marking invoice as paid', {
      userId,
      metadata: {
        invoiceId,
        paymentMethodId
      }
    });
    const result =
    /* istanbul ignore next */
    (cov_1wpckdlacw().s[72]++, yield paymentService.markInvoiceAsPaid(invoiceId, paymentMethodId));
    /* istanbul ignore next */
    cov_1wpckdlacw().s[73]++;
    res.status(200).json({
      success: true,
      data: result,
      message: 'Factura marcada como pagada exitosamente'
    });
  });
});
// Procesar reembolso
/* istanbul ignore next */
cov_1wpckdlacw().s[74]++;
exports.processRefundController = (0, errorHandler_1.asyncHandler)((req, res) => {
  /* istanbul ignore next */
  cov_1wpckdlacw().f[23]++;
  cov_1wpckdlacw().s[75]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1wpckdlacw().f[24]++;
    const {
      userId
    } =
    /* istanbul ignore next */
    (cov_1wpckdlacw().s[76]++, req.user);
    const {
      paymentIntentId,
      amount,
      reason
    } =
    /* istanbul ignore next */
    (cov_1wpckdlacw().s[77]++, req.body);
    /* istanbul ignore next */
    cov_1wpckdlacw().s[78]++;
    loggerService_1.logger.info('Processing refund', {
      userId,
      metadata: {
        paymentIntentId,
        amount,
        reason
      }
    });
    const refund =
    /* istanbul ignore next */
    (cov_1wpckdlacw().s[79]++, yield paymentService.processRefund(paymentIntentId, amount, reason));
    /* istanbul ignore next */
    cov_1wpckdlacw().s[80]++;
    res.status(200).json({
      success: true,
      data: refund,
      message: 'Reembolso procesado exitosamente'
    });
  });
});
// Obtener estadísticas de pagos (solo admin)
/* istanbul ignore next */
cov_1wpckdlacw().s[81]++;
exports.getPaymentStatsController = (0, errorHandler_1.asyncHandler)((req, res) => {
  /* istanbul ignore next */
  cov_1wpckdlacw().f[25]++;
  cov_1wpckdlacw().s[82]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1wpckdlacw().f[26]++;
    const {
      userId,
      period
    } =
    /* istanbul ignore next */
    (cov_1wpckdlacw().s[83]++, req.query);
    /* istanbul ignore next */
    cov_1wpckdlacw().s[84]++;
    loggerService_1.logger.info('Getting payment stats', {
      userId: typeof userId === 'string' ?
      /* istanbul ignore next */
      (cov_1wpckdlacw().b[6][0]++, userId) :
      /* istanbul ignore next */
      (cov_1wpckdlacw().b[6][1]++, undefined),
      metadata: {
        period: typeof period === 'string' ?
        /* istanbul ignore next */
        (cov_1wpckdlacw().b[7][0]++, period) :
        /* istanbul ignore next */
        (cov_1wpckdlacw().b[7][1]++, undefined)
      }
    });
    const stats =
    /* istanbul ignore next */
    (cov_1wpckdlacw().s[85]++, yield paymentService.getPaymentStats(typeof userId === 'string' ?
    /* istanbul ignore next */
    (cov_1wpckdlacw().b[8][0]++, userId) :
    /* istanbul ignore next */
    (cov_1wpckdlacw().b[8][1]++, undefined), typeof period === 'string' ?
    /* istanbul ignore next */
    (cov_1wpckdlacw().b[9][0]++, period) :
    /* istanbul ignore next */
    (cov_1wpckdlacw().b[9][1]++, undefined)));
    /* istanbul ignore next */
    cov_1wpckdlacw().s[86]++;
    res.status(200).json({
      success: true,
      data: stats,
      message: 'Estadísticas de pagos obtenidas exitosamente'
    });
  });
});
// Validar método de pago
/* istanbul ignore next */
cov_1wpckdlacw().s[87]++;
exports.validatePaymentMethodController = (0, errorHandler_1.asyncHandler)((req, res) => {
  /* istanbul ignore next */
  cov_1wpckdlacw().f[27]++;
  cov_1wpckdlacw().s[88]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1wpckdlacw().f[28]++;
    const {
      cardNumber,
      expiryMonth,
      expiryYear,
      cvc
    } =
    /* istanbul ignore next */
    (cov_1wpckdlacw().s[89]++, req.body);
    /* istanbul ignore next */
    cov_1wpckdlacw().s[90]++;
    loggerService_1.logger.info('Validating payment method');
    const validation =
    /* istanbul ignore next */
    (cov_1wpckdlacw().s[91]++, yield paymentService.validatePaymentMethod({
      cardNumber,
      expiryMonth,
      expiryYear,
      cvc
    }));
    /* istanbul ignore next */
    cov_1wpckdlacw().s[92]++;
    res.status(200).json({
      success: true,
      data: {
        isValid: validation
      },
      message: validation ?
      /* istanbul ignore next */
      (cov_1wpckdlacw().b[10][0]++, 'Método de pago válido') :
      /* istanbul ignore next */
      (cov_1wpckdlacw().b[10][1]++, 'Método de pago inválido')
    });
  });
});
// Obtener gateways de pago disponibles
/* istanbul ignore next */
cov_1wpckdlacw().s[93]++;
exports.getPaymentGatewaysController = (0, errorHandler_1.asyncHandler)((req, res) => {
  /* istanbul ignore next */
  cov_1wpckdlacw().f[29]++;
  cov_1wpckdlacw().s[94]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1wpckdlacw().f[30]++;
    cov_1wpckdlacw().s[95]++;
    loggerService_1.logger.info('Getting payment gateways');
    const gateways =
    /* istanbul ignore next */
    (cov_1wpckdlacw().s[96]++, yield paymentService.getPaymentGateways());
    /* istanbul ignore next */
    cov_1wpckdlacw().s[97]++;
    res.status(200).json({
      success: true,
      data: gateways,
      message: 'Gateways de pago obtenidos exitosamente'
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,