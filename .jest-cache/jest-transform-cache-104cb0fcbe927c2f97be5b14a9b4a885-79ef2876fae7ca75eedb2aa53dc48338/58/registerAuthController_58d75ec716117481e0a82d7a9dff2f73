d2d283c896579af4d7e31ba9dc5c28e5
"use strict";

/* istanbul ignore next */
function cov_1lcsbep3ac() {
  var path = "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\controllers\\registerAuthController.ts";
  var hash = "c93f6080198fc269fada7dd7e32d9bfb4fb0d37d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\controllers\\registerAuthController.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 16
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 28
        },
        end: {
          line: 3,
          column: 110
        }
      },
      "2": {
        start: {
          line: 3,
          column: 91
        },
        end: {
          line: 3,
          column: 106
        }
      },
      "3": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "4": {
        start: {
          line: 5,
          column: 36
        },
        end: {
          line: 5,
          column: 97
        }
      },
      "5": {
        start: {
          line: 5,
          column: 42
        },
        end: {
          line: 5,
          column: 70
        }
      },
      "6": {
        start: {
          line: 5,
          column: 85
        },
        end: {
          line: 5,
          column: 95
        }
      },
      "7": {
        start: {
          line: 6,
          column: 35
        },
        end: {
          line: 6,
          column: 100
        }
      },
      "8": {
        start: {
          line: 6,
          column: 41
        },
        end: {
          line: 6,
          column: 73
        }
      },
      "9": {
        start: {
          line: 6,
          column: 88
        },
        end: {
          line: 6,
          column: 98
        }
      },
      "10": {
        start: {
          line: 7,
          column: 32
        },
        end: {
          line: 7,
          column: 116
        }
      },
      "11": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 78
        }
      },
      "12": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 62
        }
      },
      "13": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 43
        }
      },
      "14": {
        start: {
          line: 14,
          column: 19
        },
        end: {
          line: 14,
          column: 47
        }
      },
      "15": {
        start: {
          line: 15,
          column: 24
        },
        end: {
          line: 15,
          column: 60
        }
      },
      "16": {
        start: {
          line: 43,
          column: 34
        },
        end: {
          line: 62,
          column: 2
        }
      },
      "17": {
        start: {
          line: 43,
          column: 48
        },
        end: {
          line: 62,
          column: 2
        }
      },
      "18": {
        start: {
          line: 44,
          column: 20
        },
        end: {
          line: 44,
          column: 28
        }
      },
      "19": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 61,
          column: 5
        }
      },
      "20": {
        start: {
          line: 46,
          column: 21
        },
        end: {
          line: 46,
          column: 65
        }
      },
      "21": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 50,
          column: 9
        }
      },
      "22": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 48,
          column: 79
        }
      },
      "23": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 49,
          column: 19
        }
      },
      "24": {
        start: {
          line: 51,
          column: 21
        },
        end: {
          line: 53,
          column: 54
        }
      },
      "25": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 55,
          column: 86
        }
      },
      "26": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 65
        }
      },
      "27": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 60,
          column: 77
        }
      },
      "28": {
        start: {
          line: 63,
          column: 0
        },
        end: {
          line: 63,
          column: 62
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 2,
            column: 45
          }
        },
        loc: {
          start: {
            line: 2,
            column: 89
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "adopt",
        decl: {
          start: {
            line: 3,
            column: 13
          },
          end: {
            line: 3,
            column: 18
          }
        },
        loc: {
          start: {
            line: 3,
            column: 26
          },
          end: {
            line: 3,
            column: 112
          }
        },
        line: 3
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 3,
            column: 70
          },
          end: {
            line: 3,
            column: 71
          }
        },
        loc: {
          start: {
            line: 3,
            column: 89
          },
          end: {
            line: 3,
            column: 108
          }
        },
        line: 3
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 4,
            column: 36
          },
          end: {
            line: 4,
            column: 37
          }
        },
        loc: {
          start: {
            line: 4,
            column: 63
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 4
      },
      "4": {
        name: "fulfilled",
        decl: {
          start: {
            line: 5,
            column: 17
          },
          end: {
            line: 5,
            column: 26
          }
        },
        loc: {
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 99
          }
        },
        line: 5
      },
      "5": {
        name: "rejected",
        decl: {
          start: {
            line: 6,
            column: 17
          },
          end: {
            line: 6,
            column: 25
          }
        },
        loc: {
          start: {
            line: 6,
            column: 33
          },
          end: {
            line: 6,
            column: 102
          }
        },
        line: 6
      },
      "6": {
        name: "step",
        decl: {
          start: {
            line: 7,
            column: 17
          },
          end: {
            line: 7,
            column: 21
          }
        },
        loc: {
          start: {
            line: 7,
            column: 30
          },
          end: {
            line: 7,
            column: 118
          }
        },
        line: 7
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 43,
            column: 34
          },
          end: {
            line: 43,
            column: 35
          }
        },
        loc: {
          start: {
            line: 43,
            column: 48
          },
          end: {
            line: 62,
            column: 2
          }
        },
        line: 43
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 43,
            column: 82
          },
          end: {
            line: 43,
            column: 83
          }
        },
        loc: {
          start: {
            line: 43,
            column: 95
          },
          end: {
            line: 62,
            column: 1
          }
        },
        line: 43
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 16
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 17
          },
          end: {
            line: 2,
            column: 21
          }
        }, {
          start: {
            line: 2,
            column: 25
          },
          end: {
            line: 2,
            column: 39
          }
        }, {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 35
          },
          end: {
            line: 3,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 56
          },
          end: {
            line: 3,
            column: 61
          }
        }, {
          start: {
            line: 3,
            column: 64
          },
          end: {
            line: 3,
            column: 109
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 17
          }
        }, {
          start: {
            line: 4,
            column: 22
          },
          end: {
            line: 4,
            column: 33
          }
        }],
        line: 4
      },
      "3": {
        loc: {
          start: {
            line: 7,
            column: 32
          },
          end: {
            line: 7,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 7,
            column: 46
          },
          end: {
            line: 7,
            column: 67
          }
        }, {
          start: {
            line: 7,
            column: 70
          },
          end: {
            line: 7,
            column: 115
          }
        }],
        line: 7
      },
      "4": {
        loc: {
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 61
          }
        }, {
          start: {
            line: 8,
            column: 65
          },
          end: {
            line: 8,
            column: 67
          }
        }],
        line: 8
      },
      "5": {
        loc: {
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 50,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 50,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 47
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\controllers\\registerAuthController.ts",
      mappings: ";;;;;;;;;;;;AAAA,oCAAoC;AACpC,gDAAgD;AAGhD,6DAAmD;AAEnD;;;;;;;;;;;;;;;;;;;;;;;;;;GA0BG;AACI,MAAM,yBAAyB,GAAG,CACvC,GAAY,EACZ,GAAa,EACb,EAAE;IACF,MAAM,EAAE,GAAG,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC;IAEzB,IAAI,CAAC;QACH,MAAM,IAAI,GAAG,MAAM,kBAAO,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAE/C,IAAI,IAAI,CAAC,aAAa,EAAE,CAAC;YACvB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,+BAA+B,EAAE,CAAC,CAAC;YACnE,OAAO;QACT,CAAC;QAED,MAAM,IAAI,GAAG,MAAM,kBAAO;aACvB,IAAI,EAAE;aACN,6BAA6B,CAAC,IAAI,CAAC,KAAM,CAAC,CAAC;QAE9C,2EAA2E;QAC3E,sBAAM,CAAC,IAAI,CAAC,oBAAoB,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,EAAE,IAAI,EAAG,EAAE,CAAC,CAAC;QAE/D,qDAAqD;QACrD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC,CAAC;IAC3D,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,0BAA0B,EAAE,KAAK,EAAE,CAAC,CAAC;IACvE,CAAC;AACH,CAAC,CAAA,CAAC;AA1BW,QAAA,yBAAyB,6BA0BpC",
      names: [],
      sources: ["C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\controllers\\registerAuthController.ts"],
      sourcesContent: ["// src/controllers/authController.ts\r\nimport { db, dmAdmin } from '../utils/firebase';\r\nimport nodemailer from 'nodemailer';\r\nimport { Request, Response } from 'express';\r\nimport { logger } from '../services/loggerService';\r\n\r\n/**\r\n * @swagger\r\n * /auth/sendEmailVerificationLink:\r\n *   post:\r\n *     summary: Env\xEDa un link de verificaci\xF3n de email a un usuario\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             type: object\r\n *             properties:\r\n *               uid:\r\n *                 type: string\r\n *     responses:\r\n *       200:\r\n *         description: Link generado exitosamente\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 message:\r\n *                   type: string\r\n *                 link:\r\n *                   type: string\r\n */\r\nexport const sendEmailVerificationLink = async (\r\n  req: Request,\r\n  res: Response\r\n) => {\r\n  const { uid } = req.body;\r\n\r\n  try {\r\n    const user = await dmAdmin.auth().getUser(uid);\r\n\r\n    if (user.emailVerified) {\r\n      res.status(400).json({ message: 'El correo ya est\xE1 verificado.' });\r\n      return;\r\n    }\r\n\r\n    const link = await dmAdmin\r\n      .auth()\r\n      .generateEmailVerificationLink(user.email!);\r\n\r\n    // Aqu\xED puedes enviar ese link por correo usando nodemailer o Mailgun, etc.\r\n    logger.info('Verification link:', { metadata: { id: link  } });\r\n\r\n    // Devolver el enlace directamente o enviar v\xEDa email\r\n    res.status(200).json({ message: 'Link generado', link });\r\n  } catch (error) {\r\n    res.status(500).json({ message: 'Error al generar el link', error });\r\n  }\r\n};\r\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c93f6080198fc269fada7dd7e32d9bfb4fb0d37d"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1lcsbep3ac = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1lcsbep3ac();
var __awaiter =
/* istanbul ignore next */
(cov_1lcsbep3ac().s[0]++,
/* istanbul ignore next */
(cov_1lcsbep3ac().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1lcsbep3ac().b[0][1]++, this.__awaiter) ||
/* istanbul ignore next */
(cov_1lcsbep3ac().b[0][2]++, function (thisArg, _arguments, P, generator) {
  /* istanbul ignore next */
  cov_1lcsbep3ac().f[0]++;
  function adopt(value) {
    /* istanbul ignore next */
    cov_1lcsbep3ac().f[1]++;
    cov_1lcsbep3ac().s[1]++;
    return value instanceof P ?
    /* istanbul ignore next */
    (cov_1lcsbep3ac().b[1][0]++, value) :
    /* istanbul ignore next */
    (cov_1lcsbep3ac().b[1][1]++, new P(function (resolve) {
      /* istanbul ignore next */
      cov_1lcsbep3ac().f[2]++;
      cov_1lcsbep3ac().s[2]++;
      resolve(value);
    }));
  }
  /* istanbul ignore next */
  cov_1lcsbep3ac().s[3]++;
  return new (
  /* istanbul ignore next */
  (cov_1lcsbep3ac().b[2][0]++, P) ||
  /* istanbul ignore next */
  (cov_1lcsbep3ac().b[2][1]++, P = Promise))(function (resolve, reject) {
    /* istanbul ignore next */
    cov_1lcsbep3ac().f[3]++;
    function fulfilled(value) {
      /* istanbul ignore next */
      cov_1lcsbep3ac().f[4]++;
      cov_1lcsbep3ac().s[4]++;
      try {
        /* istanbul ignore next */
        cov_1lcsbep3ac().s[5]++;
        step(generator.next(value));
      } catch (e) {
        /* istanbul ignore next */
        cov_1lcsbep3ac().s[6]++;
        reject(e);
      }
    }
    function rejected(value) {
      /* istanbul ignore next */
      cov_1lcsbep3ac().f[5]++;
      cov_1lcsbep3ac().s[7]++;
      try {
        /* istanbul ignore next */
        cov_1lcsbep3ac().s[8]++;
        step(generator["throw"](value));
      } catch (e) {
        /* istanbul ignore next */
        cov_1lcsbep3ac().s[9]++;
        reject(e);
      }
    }
    function step(result) {
      /* istanbul ignore next */
      cov_1lcsbep3ac().f[6]++;
      cov_1lcsbep3ac().s[10]++;
      result.done ?
      /* istanbul ignore next */
      (cov_1lcsbep3ac().b[3][0]++, resolve(result.value)) :
      /* istanbul ignore next */
      (cov_1lcsbep3ac().b[3][1]++, adopt(result.value).then(fulfilled, rejected));
    }
    /* istanbul ignore next */
    cov_1lcsbep3ac().s[11]++;
    step((generator = generator.apply(thisArg,
    /* istanbul ignore next */
    (cov_1lcsbep3ac().b[4][0]++, _arguments) ||
    /* istanbul ignore next */
    (cov_1lcsbep3ac().b[4][1]++, []))).next());
  });
}));
/* istanbul ignore next */
cov_1lcsbep3ac().s[12]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1lcsbep3ac().s[13]++;
exports.sendEmailVerificationLink = void 0;
// src/controllers/authController.ts
const firebase_1 =
/* istanbul ignore next */
(cov_1lcsbep3ac().s[14]++, require("../utils/firebase"));
const loggerService_1 =
/* istanbul ignore next */
(cov_1lcsbep3ac().s[15]++, require("../services/loggerService"));
/**
 * @swagger
 * /auth/sendEmailVerificationLink:
 *   post:
 *     summary: Envía un link de verificación de email a un usuario
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             type: object
 *             properties:
 *               uid:
 *                 type: string
 *     responses:
 *       200:
 *         description: Link generado exitosamente
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 message:
 *                   type: string
 *                 link:
 *                   type: string
 */
/* istanbul ignore next */
cov_1lcsbep3ac().s[16]++;
const sendEmailVerificationLink = (req, res) => {
  /* istanbul ignore next */
  cov_1lcsbep3ac().f[7]++;
  cov_1lcsbep3ac().s[17]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1lcsbep3ac().f[8]++;
    const {
      uid
    } =
    /* istanbul ignore next */
    (cov_1lcsbep3ac().s[18]++, req.body);
    /* istanbul ignore next */
    cov_1lcsbep3ac().s[19]++;
    try {
      const user =
      /* istanbul ignore next */
      (cov_1lcsbep3ac().s[20]++, yield firebase_1.dmAdmin.auth().getUser(uid));
      /* istanbul ignore next */
      cov_1lcsbep3ac().s[21]++;
      if (user.emailVerified) {
        /* istanbul ignore next */
        cov_1lcsbep3ac().b[5][0]++;
        cov_1lcsbep3ac().s[22]++;
        res.status(400).json({
          message: 'El correo ya está verificado.'
        });
        /* istanbul ignore next */
        cov_1lcsbep3ac().s[23]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1lcsbep3ac().b[5][1]++;
      }
      const link =
      /* istanbul ignore next */
      (cov_1lcsbep3ac().s[24]++, yield firebase_1.dmAdmin.auth().generateEmailVerificationLink(user.email));
      // Aquí puedes enviar ese link por correo usando nodemailer o Mailgun, etc.
      /* istanbul ignore next */
      cov_1lcsbep3ac().s[25]++;
      loggerService_1.logger.info('Verification link:', {
        metadata: {
          id: link
        }
      });
      // Devolver el enlace directamente o enviar vía email
      /* istanbul ignore next */
      cov_1lcsbep3ac().s[26]++;
      res.status(200).json({
        message: 'Link generado',
        link
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1lcsbep3ac().s[27]++;
      res.status(500).json({
        message: 'Error al generar el link',
        error
      });
    }
  });
};
/* istanbul ignore next */
cov_1lcsbep3ac().s[28]++;
exports.sendEmailVerificationLink = sendEmailVerificationLink;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMWxjc2JlcDNhYyIsImFjdHVhbENvdmVyYWdlIiwiZmlyZWJhc2VfMSIsInMiLCJyZXF1aXJlIiwibG9nZ2VyU2VydmljZV8xIiwic2VuZEVtYWlsVmVyaWZpY2F0aW9uTGluayIsInJlcSIsInJlcyIsImYiLCJfX2F3YWl0ZXIiLCJ1aWQiLCJib2R5IiwidXNlciIsImRtQWRtaW4iLCJhdXRoIiwiZ2V0VXNlciIsImVtYWlsVmVyaWZpZWQiLCJiIiwic3RhdHVzIiwianNvbiIsIm1lc3NhZ2UiLCJsaW5rIiwiZ2VuZXJhdGVFbWFpbFZlcmlmaWNhdGlvbkxpbmsiLCJlbWFpbCIsImxvZ2dlciIsImluZm8iLCJtZXRhZGF0YSIsImlkIiwiZXJyb3IiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiQzpcXHNyY1xcQVBQX011c3Npa09uXFxBUFBfTXVzc2lrT25fRXhwcmVzc1xcc3JjXFxjb250cm9sbGVyc1xccmVnaXN0ZXJBdXRoQ29udHJvbGxlci50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvY29udHJvbGxlcnMvYXV0aENvbnRyb2xsZXIudHNcclxuaW1wb3J0IHsgZGIsIGRtQWRtaW4gfSBmcm9tICcuLi91dGlscy9maXJlYmFzZSc7XHJcbmltcG9ydCBub2RlbWFpbGVyIGZyb20gJ25vZGVtYWlsZXInO1xyXG5pbXBvcnQgeyBSZXF1ZXN0LCBSZXNwb25zZSB9IGZyb20gJ2V4cHJlc3MnO1xyXG5pbXBvcnQgeyBsb2dnZXIgfSBmcm9tICcuLi9zZXJ2aWNlcy9sb2dnZXJTZXJ2aWNlJztcclxuXHJcbi8qKlxyXG4gKiBAc3dhZ2dlclxyXG4gKiAvYXV0aC9zZW5kRW1haWxWZXJpZmljYXRpb25MaW5rOlxyXG4gKiAgIHBvc3Q6XHJcbiAqICAgICBzdW1tYXJ5OiBFbnbDrWEgdW4gbGluayBkZSB2ZXJpZmljYWNpw7NuIGRlIGVtYWlsIGEgdW4gdXN1YXJpb1xyXG4gKiAgICAgcmVxdWVzdEJvZHk6XHJcbiAqICAgICAgIHJlcXVpcmVkOiB0cnVlXHJcbiAqICAgICAgIGNvbnRlbnQ6XHJcbiAqICAgICAgICAgYXBwbGljYXRpb24vanNvbjpcclxuICogICAgICAgICAgIHNjaGVtYTpcclxuICogICAgICAgICAgICAgdHlwZTogb2JqZWN0XHJcbiAqICAgICAgICAgICAgIHByb3BlcnRpZXM6XHJcbiAqICAgICAgICAgICAgICAgdWlkOlxyXG4gKiAgICAgICAgICAgICAgICAgdHlwZTogc3RyaW5nXHJcbiAqICAgICByZXNwb25zZXM6XHJcbiAqICAgICAgIDIwMDpcclxuICogICAgICAgICBkZXNjcmlwdGlvbjogTGluayBnZW5lcmFkbyBleGl0b3NhbWVudGVcclxuICogICAgICAgICBjb250ZW50OlxyXG4gKiAgICAgICAgICAgYXBwbGljYXRpb24vanNvbjpcclxuICogICAgICAgICAgICAgc2NoZW1hOlxyXG4gKiAgICAgICAgICAgICAgIHR5cGU6IG9iamVjdFxyXG4gKiAgICAgICAgICAgICAgIHByb3BlcnRpZXM6XHJcbiAqICAgICAgICAgICAgICAgICBtZXNzYWdlOlxyXG4gKiAgICAgICAgICAgICAgICAgICB0eXBlOiBzdHJpbmdcclxuICogICAgICAgICAgICAgICAgIGxpbms6XHJcbiAqICAgICAgICAgICAgICAgICAgIHR5cGU6IHN0cmluZ1xyXG4gKi9cclxuZXhwb3J0IGNvbnN0IHNlbmRFbWFpbFZlcmlmaWNhdGlvbkxpbmsgPSBhc3luYyAoXHJcbiAgcmVxOiBSZXF1ZXN0LFxyXG4gIHJlczogUmVzcG9uc2VcclxuKSA9PiB7XHJcbiAgY29uc3QgeyB1aWQgfSA9IHJlcS5ib2R5O1xyXG5cclxuICB0cnkge1xyXG4gICAgY29uc3QgdXNlciA9IGF3YWl0IGRtQWRtaW4uYXV0aCgpLmdldFVzZXIodWlkKTtcclxuXHJcbiAgICBpZiAodXNlci5lbWFpbFZlcmlmaWVkKSB7XHJcbiAgICAgIHJlcy5zdGF0dXMoNDAwKS5qc29uKHsgbWVzc2FnZTogJ0VsIGNvcnJlbyB5YSBlc3TDoSB2ZXJpZmljYWRvLicgfSk7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBsaW5rID0gYXdhaXQgZG1BZG1pblxyXG4gICAgICAuYXV0aCgpXHJcbiAgICAgIC5nZW5lcmF0ZUVtYWlsVmVyaWZpY2F0aW9uTGluayh1c2VyLmVtYWlsISk7XHJcblxyXG4gICAgLy8gQXF1w60gcHVlZGVzIGVudmlhciBlc2UgbGluayBwb3IgY29ycmVvIHVzYW5kbyBub2RlbWFpbGVyIG8gTWFpbGd1biwgZXRjLlxyXG4gICAgbG9nZ2VyLmluZm8oJ1ZlcmlmaWNhdGlvbiBsaW5rOicsIHsgbWV0YWRhdGE6IHsgaWQ6IGxpbmsgIH0gfSk7XHJcblxyXG4gICAgLy8gRGV2b2x2ZXIgZWwgZW5sYWNlIGRpcmVjdGFtZW50ZSBvIGVudmlhciB2w61hIGVtYWlsXHJcbiAgICByZXMuc3RhdHVzKDIwMCkuanNvbih7IG1lc3NhZ2U6ICdMaW5rIGdlbmVyYWRvJywgbGluayB9KTtcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgcmVzLnN0YXR1cyg1MDApLmpzb24oeyBtZXNzYWdlOiAnRXJyb3IgYWwgZ2VuZXJhciBlbCBsaW5rJywgZXJyb3IgfSk7XHJcbiAgfVxyXG59O1xyXG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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