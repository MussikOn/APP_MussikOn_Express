61ef7c29c9e8527afbc4d13c1695451a
"use strict";

/* istanbul ignore next */
function cov_1g5xzar55g() {
  var path = "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\models\\imagesModel.ts";
  var hash = "f29d035a99d07967b647fc7bcc0a7741bc06cd0d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\models\\imagesModel.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 16
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 28
        },
        end: {
          line: 3,
          column: 110
        }
      },
      "2": {
        start: {
          line: 3,
          column: 91
        },
        end: {
          line: 3,
          column: 106
        }
      },
      "3": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "4": {
        start: {
          line: 5,
          column: 36
        },
        end: {
          line: 5,
          column: 97
        }
      },
      "5": {
        start: {
          line: 5,
          column: 42
        },
        end: {
          line: 5,
          column: 70
        }
      },
      "6": {
        start: {
          line: 5,
          column: 85
        },
        end: {
          line: 5,
          column: 95
        }
      },
      "7": {
        start: {
          line: 6,
          column: 35
        },
        end: {
          line: 6,
          column: 100
        }
      },
      "8": {
        start: {
          line: 6,
          column: 41
        },
        end: {
          line: 6,
          column: 73
        }
      },
      "9": {
        start: {
          line: 6,
          column: 88
        },
        end: {
          line: 6,
          column: 98
        }
      },
      "10": {
        start: {
          line: 7,
          column: 32
        },
        end: {
          line: 7,
          column: 116
        }
      },
      "11": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 78
        }
      },
      "12": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 62
        }
      },
      "13": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 362
        }
      },
      "14": {
        start: {
          line: 13,
          column: 20
        },
        end: {
          line: 13,
          column: 49
        }
      },
      "15": {
        start: {
          line: 14,
          column: 31
        },
        end: {
          line: 14,
          column: 71
        }
      },
      "16": {
        start: {
          line: 15,
          column: 19
        },
        end: {
          line: 15,
          column: 47
        }
      },
      "17": {
        start: {
          line: 16,
          column: 24
        },
        end: {
          line: 16,
          column: 60
        }
      },
      "18": {
        start: {
          line: 18,
          column: 17
        },
        end: {
          line: 26,
          column: 2
        }
      },
      "19": {
        start: {
          line: 27,
          column: 20
        },
        end: {
          line: 27,
          column: 53
        }
      },
      "20": {
        start: {
          line: 29,
          column: 22
        },
        end: {
          line: 29,
          column: 38
        }
      },
      "21": {
        start: {
          line: 30,
          column: 27
        },
        end: {
          line: 36,
          column: 1
        }
      },
      "22": {
        start: {
          line: 40,
          column: 21
        },
        end: {
          line: 47,
          column: 1
        }
      },
      "23": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 43,
          column: 5
        }
      },
      "24": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 99
        }
      },
      "25": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 46,
          column: 5
        }
      },
      "26": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 111
        }
      },
      "27": {
        start: {
          line: 51,
          column: 25
        },
        end: {
          line: 56,
          column: 1
        }
      },
      "28": {
        start: {
          line: 52,
          column: 22
        },
        end: {
          line: 52,
          column: 32
        }
      },
      "29": {
        start: {
          line: 53,
          column: 25
        },
        end: {
          line: 53,
          column: 68
        }
      },
      "30": {
        start: {
          line: 54,
          column: 22
        },
        end: {
          line: 54,
          column: 51
        }
      },
      "31": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 55,
          column: 77
        }
      },
      "32": {
        start: {
          line: 60,
          column: 24
        },
        end: {
          line: 86,
          column: 2
        }
      },
      "33": {
        start: {
          line: 60,
          column: 39
        },
        end: {
          line: 86,
          column: 2
        }
      },
      "34": {
        start: {
          line: 61,
          column: 4
        },
        end: {
          line: 85,
          column: 5
        }
      },
      "35": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 27
        }
      },
      "36": {
        start: {
          line: 63,
          column: 24
        },
        end: {
          line: 73,
          column: 10
        }
      },
      "37": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 74,
          column: 37
        }
      },
      "38": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 75,
          column: 100
        }
      },
      "39": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 80,
          column: 10
        }
      },
      "40": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 83,
          column: 125
        }
      },
      "41": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 84,
          column: 20
        }
      },
      "42": {
        start: {
          line: 87,
          column: 0
        },
        end: {
          line: 87,
          column: 42
        }
      },
      "43": {
        start: {
          line: 91,
          column: 26
        },
        end: {
          line: 104,
          column: 2
        }
      },
      "44": {
        start: {
          line: 91,
          column: 48
        },
        end: {
          line: 104,
          column: 2
        }
      },
      "45": {
        start: {
          line: 92,
          column: 4
        },
        end: {
          line: 103,
          column: 5
        }
      },
      "46": {
        start: {
          line: 93,
          column: 24
        },
        end: {
          line: 96,
          column: 10
        }
      },
      "47": {
        start: {
          line: 97,
          column: 26
        },
        end: {
          line: 97,
          column: 106
        }
      },
      "48": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 98,
          column: 25
        }
      },
      "49": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 101,
          column: 123
        }
      },
      "50": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 102,
          column: 20
        }
      },
      "51": {
        start: {
          line: 105,
          column: 0
        },
        end: {
          line: 105,
          column: 46
        }
      },
      "52": {
        start: {
          line: 109,
          column: 26
        },
        end: {
          line: 122,
          column: 2
        }
      },
      "53": {
        start: {
          line: 109,
          column: 41
        },
        end: {
          line: 122,
          column: 2
        }
      },
      "54": {
        start: {
          line: 110,
          column: 4
        },
        end: {
          line: 121,
          column: 5
        }
      },
      "55": {
        start: {
          line: 111,
          column: 20
        },
        end: {
          line: 111,
          column: 44
        }
      },
      "56": {
        start: {
          line: 112,
          column: 25
        },
        end: {
          line: 112,
          column: 65
        }
      },
      "57": {
        start: {
          line: 113,
          column: 22
        },
        end: {
          line: 113,
          column: 118
        }
      },
      "58": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 114,
          column: 34
        }
      },
      "59": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 115,
          column: 121
        }
      },
      "60": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 116,
          column: 21
        }
      },
      "61": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 119,
          column: 128
        }
      },
      "62": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 120,
          column: 20
        }
      },
      "63": {
        start: {
          line: 123,
          column: 0
        },
        end: {
          line: 123,
          column: 46
        }
      },
      "64": {
        start: {
          line: 127,
          column: 20
        },
        end: {
          line: 159,
          column: 2
        }
      },
      "65": {
        start: {
          line: 127,
          column: 65
        },
        end: {
          line: 159,
          column: 2
        }
      },
      "66": {
        start: {
          line: 128,
          column: 4
        },
        end: {
          line: 158,
          column: 5
        }
      },
      "67": {
        start: {
          line: 130,
          column: 20
        },
        end: {
          line: 130,
          column: 73
        }
      },
      "68": {
        start: {
          line: 132,
          column: 29
        },
        end: {
          line: 132,
          column: 74
        }
      },
      "69": {
        start: {
          line: 134,
          column: 20
        },
        end: {
          line: 134,
          column: 61
        }
      },
      "70": {
        start: {
          line: 136,
          column: 26
        },
        end: {
          line: 150,
          column: 9
        }
      },
      "71": {
        start: {
          line: 151,
          column: 22
        },
        end: {
          line: 151,
          column: 69
        }
      },
      "72": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 152,
          column: 103
        }
      },
      "73": {
        start: {
          line: 153,
          column: 8
        },
        end: {
          line: 153,
          column: 21
        }
      },
      "74": {
        start: {
          line: 156,
          column: 8
        },
        end: {
          line: 156,
          column: 110
        }
      },
      "75": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 157,
          column: 20
        }
      },
      "76": {
        start: {
          line: 160,
          column: 0
        },
        end: {
          line: 160,
          column: 34
        }
      },
      "77": {
        start: {
          line: 164,
          column: 21
        },
        end: {
          line: 201,
          column: 2
        }
      },
      "78": {
        start: {
          line: 164,
          column: 34
        },
        end: {
          line: 201,
          column: 2
        }
      },
      "79": {
        start: {
          line: 165,
          column: 4
        },
        end: {
          line: 200,
          column: 5
        }
      },
      "80": {
        start: {
          line: 166,
          column: 25
        },
        end: {
          line: 166,
          column: 84
        }
      },
      "81": {
        start: {
          line: 167,
          column: 8
        },
        end: {
          line: 169,
          column: 9
        }
      },
      "82": {
        start: {
          line: 168,
          column: 12
        },
        end: {
          line: 168,
          column: 24
        }
      },
      "83": {
        start: {
          line: 170,
          column: 22
        },
        end: {
          line: 170,
          column: 37
        }
      },
      "84": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 194,
          column: 9
        }
      },
      "85": {
        start: {
          line: 173,
          column: 33
        },
        end: {
          line: 173,
          column: 65
        }
      },
      "86": {
        start: {
          line: 174,
          column: 12
        },
        end: {
          line: 185,
          column: 13
        }
      },
      "87": {
        start: {
          line: 175,
          column: 34
        },
        end: {
          line: 175,
          column: 59
        }
      },
      "88": {
        start: {
          line: 176,
          column: 28
        },
        end: {
          line: 176,
          column: 57
        }
      },
      "89": {
        start: {
          line: 177,
          column: 16
        },
        end: {
          line: 184,
          column: 17
        }
      },
      "90": {
        start: {
          line: 179,
          column: 20
        },
        end: {
          line: 179,
          column: 80
        }
      },
      "91": {
        start: {
          line: 180,
          column: 20
        },
        end: {
          line: 183,
          column: 23
        }
      },
      "92": {
        start: {
          line: 189,
          column: 12
        },
        end: {
          line: 189,
          column: 72
        }
      },
      "93": {
        start: {
          line: 190,
          column: 12
        },
        end: {
          line: 193,
          column: 15
        }
      },
      "94": {
        start: {
          line: 195,
          column: 8
        },
        end: {
          line: 195,
          column: 21
        }
      },
      "95": {
        start: {
          line: 198,
          column: 8
        },
        end: {
          line: 198,
          column: 113
        }
      },
      "96": {
        start: {
          line: 199,
          column: 8
        },
        end: {
          line: 199,
          column: 20
        }
      },
      "97": {
        start: {
          line: 202,
          column: 0
        },
        end: {
          line: 202,
          column: 36
        }
      },
      "98": {
        start: {
          line: 206,
          column: 19
        },
        end: {
          line: 278,
          column: 2
        }
      },
      "99": {
        start: {
          line: 206,
          column: 34
        },
        end: {
          line: 278,
          column: 2
        }
      },
      "100": {
        start: {
          line: 207,
          column: 4
        },
        end: {
          line: 277,
          column: 5
        }
      },
      "101": {
        start: {
          line: 208,
          column: 20
        },
        end: {
          line: 208,
          column: 54
        }
      },
      "102": {
        start: {
          line: 210,
          column: 8
        },
        end: {
          line: 212,
          column: 9
        }
      },
      "103": {
        start: {
          line: 211,
          column: 12
        },
        end: {
          line: 211,
          column: 68
        }
      },
      "104": {
        start: {
          line: 213,
          column: 8
        },
        end: {
          line: 215,
          column: 9
        }
      },
      "105": {
        start: {
          line: 214,
          column: 12
        },
        end: {
          line: 214,
          column: 64
        }
      },
      "106": {
        start: {
          line: 216,
          column: 8
        },
        end: {
          line: 218,
          column: 9
        }
      },
      "107": {
        start: {
          line: 217,
          column: 12
        },
        end: {
          line: 217,
          column: 68
        }
      },
      "108": {
        start: {
          line: 219,
          column: 8
        },
        end: {
          line: 221,
          column: 9
        }
      },
      "109": {
        start: {
          line: 220,
          column: 12
        },
        end: {
          line: 220,
          column: 68
        }
      },
      "110": {
        start: {
          line: 222,
          column: 8
        },
        end: {
          line: 226,
          column: 9
        }
      },
      "111": {
        start: {
          line: 223,
          column: 12
        },
        end: {
          line: 225,
          column: 15
        }
      },
      "112": {
        start: {
          line: 224,
          column: 16
        },
        end: {
          line: 224,
          column: 68
        }
      },
      "113": {
        start: {
          line: 228,
          column: 8
        },
        end: {
          line: 228,
          column: 51
        }
      },
      "114": {
        start: {
          line: 230,
          column: 8
        },
        end: {
          line: 232,
          column: 9
        }
      },
      "115": {
        start: {
          line: 231,
          column: 12
        },
        end: {
          line: 231,
          column: 47
        }
      },
      "116": {
        start: {
          line: 233,
          column: 8
        },
        end: {
          line: 235,
          column: 9
        }
      },
      "117": {
        start: {
          line: 234,
          column: 12
        },
        end: {
          line: 234,
          column: 49
        }
      },
      "118": {
        start: {
          line: 236,
          column: 25
        },
        end: {
          line: 236,
          column: 42
        }
      },
      "119": {
        start: {
          line: 237,
          column: 23
        },
        end: {
          line: 237,
          column: 61
        }
      },
      "120": {
        start: {
          line: 237,
          column: 50
        },
        end: {
          line: 237,
          column: 60
        }
      },
      "121": {
        start: {
          line: 239,
          column: 31
        },
        end: {
          line: 270,
          column: 12
        }
      },
      "122": {
        start: {
          line: 239,
          column: 71
        },
        end: {
          line: 270,
          column: 10
        }
      },
      "123": {
        start: {
          line: 240,
          column: 12
        },
        end: {
          line: 269,
          column: 13
        }
      },
      "124": {
        start: {
          line: 241,
          column: 16
        },
        end: {
          line: 263,
          column: 17
        }
      },
      "125": {
        start: {
          line: 242,
          column: 41
        },
        end: {
          line: 242,
          column: 73
        }
      },
      "126": {
        start: {
          line: 243,
          column: 20
        },
        end: {
          line: 254,
          column: 21
        }
      },
      "127": {
        start: {
          line: 244,
          column: 42
        },
        end: {
          line: 244,
          column: 67
        }
      },
      "128": {
        start: {
          line: 245,
          column: 36
        },
        end: {
          line: 245,
          column: 65
        }
      },
      "129": {
        start: {
          line: 246,
          column: 24
        },
        end: {
          line: 253,
          column: 25
        }
      },
      "130": {
        start: {
          line: 248,
          column: 28
        },
        end: {
          line: 248,
          column: 88
        }
      },
      "131": {
        start: {
          line: 249,
          column: 28
        },
        end: {
          line: 252,
          column: 31
        }
      },
      "132": {
        start: {
          line: 258,
          column: 20
        },
        end: {
          line: 258,
          column: 80
        }
      },
      "133": {
        start: {
          line: 259,
          column: 20
        },
        end: {
          line: 262,
          column: 23
        }
      },
      "134": {
        start: {
          line: 264,
          column: 16
        },
        end: {
          line: 264,
          column: 29
        }
      },
      "135": {
        start: {
          line: 267,
          column: 16
        },
        end: {
          line: 267,
          column: 127
        }
      },
      "136": {
        start: {
          line: 268,
          column: 16
        },
        end: {
          line: 268,
          column: 29
        }
      },
      "137": {
        start: {
          line: 271,
          column: 8
        },
        end: {
          line: 271,
          column: 108
        }
      },
      "138": {
        start: {
          line: 272,
          column: 8
        },
        end: {
          line: 272,
          column: 30
        }
      },
      "139": {
        start: {
          line: 275,
          column: 8
        },
        end: {
          line: 275,
          column: 112
        }
      },
      "140": {
        start: {
          line: 276,
          column: 8
        },
        end: {
          line: 276,
          column: 20
        }
      },
      "141": {
        start: {
          line: 279,
          column: 0
        },
        end: {
          line: 279,
          column: 32
        }
      },
      "142": {
        start: {
          line: 283,
          column: 20
        },
        end: {
          line: 302,
          column: 2
        }
      },
      "143": {
        start: {
          line: 283,
          column: 45
        },
        end: {
          line: 302,
          column: 2
        }
      },
      "144": {
        start: {
          line: 284,
          column: 4
        },
        end: {
          line: 301,
          column: 5
        }
      },
      "145": {
        start: {
          line: 285,
          column: 25
        },
        end: {
          line: 285,
          column: 72
        }
      },
      "146": {
        start: {
          line: 286,
          column: 25
        },
        end: {
          line: 286,
          column: 45
        }
      },
      "147": {
        start: {
          line: 287,
          column: 8
        },
        end: {
          line: 289,
          column: 9
        }
      },
      "148": {
        start: {
          line: 288,
          column: 12
        },
        end: {
          line: 288,
          column: 52
        }
      },
      "149": {
        start: {
          line: 290,
          column: 29
        },
        end: {
          line: 290,
          column: 114
        }
      },
      "150": {
        start: {
          line: 291,
          column: 8
        },
        end: {
          line: 291,
          column: 44
        }
      },
      "151": {
        start: {
          line: 293,
          column: 27
        },
        end: {
          line: 293,
          column: 47
        }
      },
      "152": {
        start: {
          line: 294,
          column: 29
        },
        end: {
          line: 294,
          column: 46
        }
      },
      "153": {
        start: {
          line: 295,
          column: 8
        },
        end: {
          line: 295,
          column: 94
        }
      },
      "154": {
        start: {
          line: 296,
          column: 8
        },
        end: {
          line: 296,
          column: 28
        }
      },
      "155": {
        start: {
          line: 299,
          column: 8
        },
        end: {
          line: 299,
          column: 115
        }
      },
      "156": {
        start: {
          line: 300,
          column: 8
        },
        end: {
          line: 300,
          column: 20
        }
      },
      "157": {
        start: {
          line: 303,
          column: 0
        },
        end: {
          line: 303,
          column: 34
        }
      },
      "158": {
        start: {
          line: 307,
          column: 20
        },
        end: {
          line: 336,
          column: 2
        }
      },
      "159": {
        start: {
          line: 307,
          column: 41
        },
        end: {
          line: 336,
          column: 2
        }
      },
      "160": {
        start: {
          line: 309,
          column: 4
        },
        end: {
          line: 335,
          column: 5
        }
      },
      "161": {
        start: {
          line: 310,
          column: 25
        },
        end: {
          line: 310,
          column: 72
        }
      },
      "162": {
        start: {
          line: 311,
          column: 25
        },
        end: {
          line: 311,
          column: 45
        }
      },
      "163": {
        start: {
          line: 312,
          column: 8
        },
        end: {
          line: 314,
          column: 9
        }
      },
      "164": {
        start: {
          line: 313,
          column: 12
        },
        end: {
          line: 313,
          column: 52
        }
      },
      "165": {
        start: {
          line: 315,
          column: 22
        },
        end: {
          line: 315,
          column: 37
        }
      },
      "166": {
        start: {
          line: 317,
          column: 8
        },
        end: {
          line: 323,
          column: 9
        }
      },
      "167": {
        start: {
          line: 319,
          column: 28
        },
        end: {
          line: 319,
          column: 85
        }
      },
      "168": {
        start: {
          line: 320,
          column: 12
        },
        end: {
          line: 322,
          column: 13
        }
      },
      "169": {
        start: {
          line: 321,
          column: 16
        },
        end: {
          line: 321,
          column: 80
        }
      },
      "170": {
        start: {
          line: 325,
          column: 8
        },
        end: {
          line: 328,
          column: 11
        }
      },
      "171": {
        start: {
          line: 329,
          column: 8
        },
        end: {
          line: 329,
          column: 105
        }
      },
      "172": {
        start: {
          line: 330,
          column: 8
        },
        end: {
          line: 330,
          column: 20
        }
      },
      "173": {
        start: {
          line: 333,
          column: 8
        },
        end: {
          line: 333,
          column: 113
        }
      },
      "174": {
        start: {
          line: 334,
          column: 8
        },
        end: {
          line: 334,
          column: 20
        }
      },
      "175": {
        start: {
          line: 337,
          column: 0
        },
        end: {
          line: 337,
          column: 34
        }
      },
      "176": {
        start: {
          line: 341,
          column: 26
        },
        end: {
          line: 355,
          column: 2
        }
      },
      "177": {
        start: {
          line: 341,
          column: 35
        },
        end: {
          line: 355,
          column: 2
        }
      },
      "178": {
        start: {
          line: 342,
          column: 4
        },
        end: {
          line: 354,
          column: 5
        }
      },
      "179": {
        start: {
          line: 343,
          column: 24
        },
        end: {
          line: 346,
          column: 10
        }
      },
      "180": {
        start: {
          line: 347,
          column: 8
        },
        end: {
          line: 347,
          column: 37
        }
      },
      "181": {
        start: {
          line: 348,
          column: 8
        },
        end: {
          line: 348,
          column: 106
        }
      },
      "182": {
        start: {
          line: 349,
          column: 8
        },
        end: {
          line: 349,
          column: 20
        }
      },
      "183": {
        start: {
          line: 352,
          column: 8
        },
        end: {
          line: 352,
          column: 131
        }
      },
      "184": {
        start: {
          line: 353,
          column: 8
        },
        end: {
          line: 353,
          column: 20
        }
      },
      "185": {
        start: {
          line: 356,
          column: 0
        },
        end: {
          line: 356,
          column: 46
        }
      },
      "186": {
        start: {
          line: 360,
          column: 22
        },
        end: {
          line: 393,
          column: 2
        }
      },
      "187": {
        start: {
          line: 360,
          column: 28
        },
        end: {
          line: 393,
          column: 2
        }
      },
      "188": {
        start: {
          line: 361,
          column: 4
        },
        end: {
          line: 392,
          column: 5
        }
      },
      "189": {
        start: {
          line: 362,
          column: 25
        },
        end: {
          line: 365,
          column: 18
        }
      },
      "190": {
        start: {
          line: 366,
          column: 23
        },
        end: {
          line: 366,
          column: 59
        }
      },
      "191": {
        start: {
          line: 366,
          column: 48
        },
        end: {
          line: 366,
          column: 58
        }
      },
      "192": {
        start: {
          line: 367,
          column: 28
        },
        end: {
          line: 367,
          column: 41
        }
      },
      "193": {
        start: {
          line: 368,
          column: 26
        },
        end: {
          line: 368,
          column: 72
        }
      },
      "194": {
        start: {
          line: 368,
          column: 54
        },
        end: {
          line: 368,
          column: 68
        }
      },
      "195": {
        start: {
          line: 369,
          column: 33
        },
        end: {
          line: 369,
          column: 35
        }
      },
      "196": {
        start: {
          line: 370,
          column: 29
        },
        end: {
          line: 370,
          column: 31
        }
      },
      "197": {
        start: {
          line: 371,
          column: 8
        },
        end: {
          line: 375,
          column: 11
        }
      },
      "198": {
        start: {
          line: 372,
          column: 12
        },
        end: {
          line: 373,
          column: 60
        }
      },
      "199": {
        start: {
          line: 374,
          column: 12
        },
        end: {
          line: 374,
          column: 79
        }
      },
      "200": {
        start: {
          line: 376,
          column: 30
        },
        end: {
          line: 378,
          column: 25
        }
      },
      "201": {
        start: {
          line: 377,
          column: 28
        },
        end: {
          line: 377,
          column: 93
        }
      },
      "202": {
        start: {
          line: 379,
          column: 22
        },
        end: {
          line: 385,
          column: 9
        }
      },
      "203": {
        start: {
          line: 386,
          column: 8
        },
        end: {
          line: 386,
          column: 133
        }
      },
      "204": {
        start: {
          line: 387,
          column: 8
        },
        end: {
          line: 387,
          column: 21
        }
      },
      "205": {
        start: {
          line: 390,
          column: 8
        },
        end: {
          line: 390,
          column: 120
        }
      },
      "206": {
        start: {
          line: 391,
          column: 8
        },
        end: {
          line: 391,
          column: 20
        }
      },
      "207": {
        start: {
          line: 394,
          column: 0
        },
        end: {
          line: 394,
          column: 38
        }
      },
      "208": {
        start: {
          line: 398,
          column: 29
        },
        end: {
          line: 410,
          column: 2
        }
      },
      "209": {
        start: {
          line: 398,
          column: 41
        },
        end: {
          line: 410,
          column: 2
        }
      },
      "210": {
        start: {
          line: 399,
          column: 4
        },
        end: {
          line: 409,
          column: 5
        }
      },
      "211": {
        start: {
          line: 400,
          column: 8
        },
        end: {
          line: 404,
          column: 11
        }
      },
      "212": {
        start: {
          line: 407,
          column: 8
        },
        end: {
          line: 407,
          column: 133
        }
      },
      "213": {
        start: {
          line: 408,
          column: 8
        },
        end: {
          line: 408,
          column: 20
        }
      },
      "214": {
        start: {
          line: 411,
          column: 0
        },
        end: {
          line: 411,
          column: 52
        }
      },
      "215": {
        start: {
          line: 415,
          column: 22
        },
        end: {
          line: 431,
          column: 2
        }
      },
      "216": {
        start: {
          line: 415,
          column: 34
        },
        end: {
          line: 431,
          column: 2
        }
      },
      "217": {
        start: {
          line: 416,
          column: 4
        },
        end: {
          line: 430,
          column: 5
        }
      },
      "218": {
        start: {
          line: 417,
          column: 24
        },
        end: {
          line: 421,
          column: 9
        }
      },
      "219": {
        start: {
          line: 422,
          column: 8
        },
        end: {
          line: 424,
          column: 9
        }
      },
      "220": {
        start: {
          line: 423,
          column: 12
        },
        end: {
          line: 423,
          column: 36
        }
      },
      "221": {
        start: {
          line: 425,
          column: 8
        },
        end: {
          line: 425,
          column: 54
        }
      },
      "222": {
        start: {
          line: 428,
          column: 8
        },
        end: {
          line: 428,
          column: 125
        }
      },
      "223": {
        start: {
          line: 429,
          column: 8
        },
        end: {
          line: 429,
          column: 20
        }
      },
      "224": {
        start: {
          line: 432,
          column: 0
        },
        end: {
          line: 432,
          column: 38
        }
      },
      "225": {
        start: {
          line: 436,
          column: 23
        },
        end: {
          line: 451,
          column: 2
        }
      },
      "226": {
        start: {
          line: 436,
          column: 36
        },
        end: {
          line: 451,
          column: 2
        }
      },
      "227": {
        start: {
          line: 437,
          column: 4
        },
        end: {
          line: 450,
          column: 5
        }
      },
      "228": {
        start: {
          line: 438,
          column: 24
        },
        end: {
          line: 441,
          column: 9
        }
      },
      "229": {
        start: {
          line: 442,
          column: 8
        },
        end: {
          line: 444,
          column: 9
        }
      },
      "230": {
        start: {
          line: 443,
          column: 12
        },
        end: {
          line: 443,
          column: 43
        }
      },
      "231": {
        start: {
          line: 445,
          column: 8
        },
        end: {
          line: 445,
          column: 54
        }
      },
      "232": {
        start: {
          line: 448,
          column: 8
        },
        end: {
          line: 448,
          column: 128
        }
      },
      "233": {
        start: {
          line: 449,
          column: 8
        },
        end: {
          line: 449,
          column: 20
        }
      },
      "234": {
        start: {
          line: 452,
          column: 0
        },
        end: {
          line: 452,
          column: 40
        }
      },
      "235": {
        start: {
          line: 456,
          column: 29
        },
        end: {
          line: 483,
          column: 2
        }
      },
      "236": {
        start: {
          line: 456,
          column: 35
        },
        end: {
          line: 483,
          column: 2
        }
      },
      "237": {
        start: {
          line: 457,
          column: 4
        },
        end: {
          line: 482,
          column: 5
        }
      },
      "238": {
        start: {
          line: 458,
          column: 20
        },
        end: {
          line: 458,
          column: 30
        }
      },
      "239": {
        start: {
          line: 459,
          column: 25
        },
        end: {
          line: 463,
          column: 18
        }
      },
      "240": {
        start: {
          line: 464,
          column: 27
        },
        end: {
          line: 464,
          column: 28
        }
      },
      "241": {
        start: {
          line: 465,
          column: 8
        },
        end: {
          line: 475,
          column: 9
        }
      },
      "242": {
        start: {
          line: 466,
          column: 26
        },
        end: {
          line: 466,
          column: 36
        }
      },
      "243": {
        start: {
          line: 468,
          column: 12
        },
        end: {
          line: 468,
          column: 60
        }
      },
      "244": {
        start: {
          line: 470,
          column: 12
        },
        end: {
          line: 473,
          column: 15
        }
      },
      "245": {
        start: {
          line: 474,
          column: 12
        },
        end: {
          line: 474,
          column: 27
        }
      },
      "246": {
        start: {
          line: 476,
          column: 8
        },
        end: {
          line: 476,
          column: 118
        }
      },
      "247": {
        start: {
          line: 477,
          column: 8
        },
        end: {
          line: 477,
          column: 28
        }
      },
      "248": {
        start: {
          line: 480,
          column: 8
        },
        end: {
          line: 480,
          column: 133
        }
      },
      "249": {
        start: {
          line: 481,
          column: 8
        },
        end: {
          line: 481,
          column: 20
        }
      },
      "250": {
        start: {
          line: 484,
          column: 0
        },
        end: {
          line: 484,
          column: 52
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 2,
            column: 45
          }
        },
        loc: {
          start: {
            line: 2,
            column: 89
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "adopt",
        decl: {
          start: {
            line: 3,
            column: 13
          },
          end: {
            line: 3,
            column: 18
          }
        },
        loc: {
          start: {
            line: 3,
            column: 26
          },
          end: {
            line: 3,
            column: 112
          }
        },
        line: 3
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 3,
            column: 70
          },
          end: {
            line: 3,
            column: 71
          }
        },
        loc: {
          start: {
            line: 3,
            column: 89
          },
          end: {
            line: 3,
            column: 108
          }
        },
        line: 3
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 4,
            column: 36
          },
          end: {
            line: 4,
            column: 37
          }
        },
        loc: {
          start: {
            line: 4,
            column: 63
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 4
      },
      "4": {
        name: "fulfilled",
        decl: {
          start: {
            line: 5,
            column: 17
          },
          end: {
            line: 5,
            column: 26
          }
        },
        loc: {
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 99
          }
        },
        line: 5
      },
      "5": {
        name: "rejected",
        decl: {
          start: {
            line: 6,
            column: 17
          },
          end: {
            line: 6,
            column: 25
          }
        },
        loc: {
          start: {
            line: 6,
            column: 33
          },
          end: {
            line: 6,
            column: 102
          }
        },
        line: 6
      },
      "6": {
        name: "step",
        decl: {
          start: {
            line: 7,
            column: 17
          },
          end: {
            line: 7,
            column: 21
          }
        },
        loc: {
          start: {
            line: 7,
            column: 30
          },
          end: {
            line: 7,
            column: 118
          }
        },
        line: 7
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 40,
            column: 21
          },
          end: {
            line: 40,
            column: 22
          }
        },
        loc: {
          start: {
            line: 40,
            column: 31
          },
          end: {
            line: 47,
            column: 1
          }
        },
        line: 40
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 51,
            column: 25
          },
          end: {
            line: 51,
            column: 26
          }
        },
        loc: {
          start: {
            line: 51,
            column: 61
          },
          end: {
            line: 56,
            column: 1
          }
        },
        line: 51
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 60,
            column: 24
          },
          end: {
            line: 60,
            column: 25
          }
        },
        loc: {
          start: {
            line: 60,
            column: 39
          },
          end: {
            line: 86,
            column: 2
          }
        },
        line: 60
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 60,
            column: 73
          },
          end: {
            line: 60,
            column: 74
          }
        },
        loc: {
          start: {
            line: 60,
            column: 86
          },
          end: {
            line: 86,
            column: 1
          }
        },
        line: 60
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 91,
            column: 26
          },
          end: {
            line: 91,
            column: 27
          }
        },
        loc: {
          start: {
            line: 91,
            column: 48
          },
          end: {
            line: 104,
            column: 2
          }
        },
        line: 91
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 91,
            column: 94
          },
          end: {
            line: 91,
            column: 95
          }
        },
        loc: {
          start: {
            line: 91,
            column: 128
          },
          end: {
            line: 104,
            column: 1
          }
        },
        line: 91
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 109,
            column: 26
          },
          end: {
            line: 109,
            column: 27
          }
        },
        loc: {
          start: {
            line: 109,
            column: 41
          },
          end: {
            line: 122,
            column: 2
          }
        },
        line: 109
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 109,
            column: 75
          },
          end: {
            line: 109,
            column: 76
          }
        },
        loc: {
          start: {
            line: 109,
            column: 88
          },
          end: {
            line: 122,
            column: 1
          }
        },
        line: 109
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 127,
            column: 20
          },
          end: {
            line: 127,
            column: 21
          }
        },
        loc: {
          start: {
            line: 127,
            column: 65
          },
          end: {
            line: 159,
            column: 2
          }
        },
        line: 127
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 127,
            column: 134
          },
          end: {
            line: 127,
            column: 135
          }
        },
        loc: {
          start: {
            line: 127,
            column: 184
          },
          end: {
            line: 159,
            column: 1
          }
        },
        line: 127
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 164,
            column: 21
          },
          end: {
            line: 164,
            column: 22
          }
        },
        loc: {
          start: {
            line: 164,
            column: 34
          },
          end: {
            line: 201,
            column: 2
          }
        },
        line: 164
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 164,
            column: 68
          },
          end: {
            line: 164,
            column: 69
          }
        },
        loc: {
          start: {
            line: 164,
            column: 81
          },
          end: {
            line: 201,
            column: 1
          }
        },
        line: 164
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 206,
            column: 19
          },
          end: {
            line: 206,
            column: 20
          }
        },
        loc: {
          start: {
            line: 206,
            column: 34
          },
          end: {
            line: 278,
            column: 2
          }
        },
        line: 206
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 206,
            column: 73
          },
          end: {
            line: 206,
            column: 74
          }
        },
        loc: {
          start: {
            line: 206,
            column: 98
          },
          end: {
            line: 278,
            column: 1
          }
        },
        line: 206
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 223,
            column: 53
          },
          end: {
            line: 223,
            column: 54
          }
        },
        loc: {
          start: {
            line: 223,
            column: 71
          },
          end: {
            line: 225,
            column: 13
          }
        },
        line: 223
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 237,
            column: 41
          },
          end: {
            line: 237,
            column: 42
          }
        },
        loc: {
          start: {
            line: 237,
            column: 50
          },
          end: {
            line: 237,
            column: 60
          }
        },
        line: 237
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 239,
            column: 60
          },
          end: {
            line: 239,
            column: 61
          }
        },
        loc: {
          start: {
            line: 239,
            column: 71
          },
          end: {
            line: 270,
            column: 10
          }
        },
        line: 239
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 239,
            column: 105
          },
          end: {
            line: 239,
            column: 106
          }
        },
        loc: {
          start: {
            line: 239,
            column: 118
          },
          end: {
            line: 270,
            column: 9
          }
        },
        line: 239
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 283,
            column: 20
          },
          end: {
            line: 283,
            column: 21
          }
        },
        loc: {
          start: {
            line: 283,
            column: 45
          },
          end: {
            line: 302,
            column: 2
          }
        },
        line: 283
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 283,
            column: 79
          },
          end: {
            line: 283,
            column: 80
          }
        },
        loc: {
          start: {
            line: 283,
            column: 92
          },
          end: {
            line: 302,
            column: 1
          }
        },
        line: 283
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 307,
            column: 20
          },
          end: {
            line: 307,
            column: 21
          }
        },
        loc: {
          start: {
            line: 307,
            column: 41
          },
          end: {
            line: 336,
            column: 2
          }
        },
        line: 307
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 307,
            column: 75
          },
          end: {
            line: 307,
            column: 76
          }
        },
        loc: {
          start: {
            line: 307,
            column: 88
          },
          end: {
            line: 336,
            column: 1
          }
        },
        line: 307
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 341,
            column: 26
          },
          end: {
            line: 341,
            column: 27
          }
        },
        loc: {
          start: {
            line: 341,
            column: 35
          },
          end: {
            line: 355,
            column: 2
          }
        },
        line: 341
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 341,
            column: 69
          },
          end: {
            line: 341,
            column: 70
          }
        },
        loc: {
          start: {
            line: 341,
            column: 82
          },
          end: {
            line: 355,
            column: 1
          }
        },
        line: 341
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 360,
            column: 22
          },
          end: {
            line: 360,
            column: 23
          }
        },
        loc: {
          start: {
            line: 360,
            column: 28
          },
          end: {
            line: 393,
            column: 2
          }
        },
        line: 360
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 360,
            column: 62
          },
          end: {
            line: 360,
            column: 63
          }
        },
        loc: {
          start: {
            line: 360,
            column: 75
          },
          end: {
            line: 393,
            column: 1
          }
        },
        line: 360
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 366,
            column: 41
          },
          end: {
            line: 366,
            column: 42
          }
        },
        loc: {
          start: {
            line: 366,
            column: 48
          },
          end: {
            line: 366,
            column: 58
          }
        },
        line: 366
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 368,
            column: 40
          },
          end: {
            line: 368,
            column: 41
          }
        },
        loc: {
          start: {
            line: 368,
            column: 54
          },
          end: {
            line: 368,
            column: 68
          }
        },
        line: 368
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 371,
            column: 23
          },
          end: {
            line: 371,
            column: 24
          }
        },
        loc: {
          start: {
            line: 371,
            column: 32
          },
          end: {
            line: 375,
            column: 9
          }
        },
        line: 371
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 377,
            column: 18
          },
          end: {
            line: 377,
            column: 19
          }
        },
        loc: {
          start: {
            line: 377,
            column: 28
          },
          end: {
            line: 377,
            column: 93
          }
        },
        line: 377
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 398,
            column: 29
          },
          end: {
            line: 398,
            column: 30
          }
        },
        loc: {
          start: {
            line: 398,
            column: 41
          },
          end: {
            line: 410,
            column: 2
          }
        },
        line: 398
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 398,
            column: 75
          },
          end: {
            line: 398,
            column: 76
          }
        },
        loc: {
          start: {
            line: 398,
            column: 88
          },
          end: {
            line: 410,
            column: 1
          }
        },
        line: 398
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 415,
            column: 22
          },
          end: {
            line: 415,
            column: 23
          }
        },
        loc: {
          start: {
            line: 415,
            column: 34
          },
          end: {
            line: 431,
            column: 2
          }
        },
        line: 415
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 415,
            column: 68
          },
          end: {
            line: 415,
            column: 69
          }
        },
        loc: {
          start: {
            line: 415,
            column: 81
          },
          end: {
            line: 431,
            column: 1
          }
        },
        line: 415
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 436,
            column: 23
          },
          end: {
            line: 436,
            column: 24
          }
        },
        loc: {
          start: {
            line: 436,
            column: 36
          },
          end: {
            line: 451,
            column: 2
          }
        },
        line: 436
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 436,
            column: 70
          },
          end: {
            line: 436,
            column: 71
          }
        },
        loc: {
          start: {
            line: 436,
            column: 83
          },
          end: {
            line: 451,
            column: 1
          }
        },
        line: 436
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 456,
            column: 29
          },
          end: {
            line: 456,
            column: 30
          }
        },
        loc: {
          start: {
            line: 456,
            column: 35
          },
          end: {
            line: 483,
            column: 2
          }
        },
        line: 456
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 456,
            column: 69
          },
          end: {
            line: 456,
            column: 70
          }
        },
        loc: {
          start: {
            line: 456,
            column: 82
          },
          end: {
            line: 483,
            column: 1
          }
        },
        line: 456
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 16
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 17
          },
          end: {
            line: 2,
            column: 21
          }
        }, {
          start: {
            line: 2,
            column: 25
          },
          end: {
            line: 2,
            column: 39
          }
        }, {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 35
          },
          end: {
            line: 3,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 56
          },
          end: {
            line: 3,
            column: 61
          }
        }, {
          start: {
            line: 3,
            column: 64
          },
          end: {
            line: 3,
            column: 109
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 17
          }
        }, {
          start: {
            line: 4,
            column: 22
          },
          end: {
            line: 4,
            column: 33
          }
        }],
        line: 4
      },
      "3": {
        loc: {
          start: {
            line: 7,
            column: 32
          },
          end: {
            line: 7,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 7,
            column: 46
          },
          end: {
            line: 7,
            column: 67
          }
        }, {
          start: {
            line: 7,
            column: 70
          },
          end: {
            line: 7,
            column: 115
          }
        }],
        line: 7
      },
      "4": {
        loc: {
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 61
          }
        }, {
          start: {
            line: 8,
            column: 65
          },
          end: {
            line: 8,
            column: 67
          }
        }],
        line: 8
      },
      "5": {
        loc: {
          start: {
            line: 19,
            column: 12
          },
          end: {
            line: 19,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 19,
            column: 12
          },
          end: {
            line: 19,
            column: 40
          }
        }, {
          start: {
            line: 19,
            column: 44
          },
          end: {
            line: 19,
            column: 55
          }
        }],
        line: 19
      },
      "6": {
        loc: {
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 43,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 43,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "7": {
        loc: {
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 44
      },
      "8": {
        loc: {
          start: {
            line: 91,
            column: 110
          },
          end: {
            line: 91,
            column: 126
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 91,
            column: 122
          },
          end: {
            line: 91,
            column: 126
          }
        }],
        line: 91
      },
      "9": {
        loc: {
          start: {
            line: 127,
            column: 169
          },
          end: {
            line: 127,
            column: 182
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 127,
            column: 180
          },
          end: {
            line: 127,
            column: 182
          }
        }],
        line: 127
      },
      "10": {
        loc: {
          start: {
            line: 140,
            column: 22
          },
          end: {
            line: 140,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 140,
            column: 22
          },
          end: {
            line: 140,
            column: 42
          }
        }, {
          start: {
            line: 140,
            column: 46
          },
          end: {
            line: 140,
            column: 63
          }
        }],
        line: 140
      },
      "11": {
        loc: {
          start: {
            line: 145,
            column: 25
          },
          end: {
            line: 145,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 145,
            column: 25
          },
          end: {
            line: 145,
            column: 45
          }
        }, {
          start: {
            line: 145,
            column: 49
          },
          end: {
            line: 145,
            column: 51
          }
        }],
        line: 145
      },
      "12": {
        loc: {
          start: {
            line: 146,
            column: 18
          },
          end: {
            line: 146,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 146,
            column: 18
          },
          end: {
            line: 146,
            column: 31
          }
        }, {
          start: {
            line: 146,
            column: 35
          },
          end: {
            line: 146,
            column: 37
          }
        }],
        line: 146
      },
      "13": {
        loc: {
          start: {
            line: 147,
            column: 22
          },
          end: {
            line: 147,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 147,
            column: 22
          },
          end: {
            line: 147,
            column: 45
          }
        }, {
          start: {
            line: 147,
            column: 49
          },
          end: {
            line: 147,
            column: 51
          }
        }],
        line: 147
      },
      "14": {
        loc: {
          start: {
            line: 148,
            column: 22
          },
          end: {
            line: 148,
            column: 80
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 148,
            column: 56
          },
          end: {
            line: 148,
            column: 73
          }
        }, {
          start: {
            line: 148,
            column: 76
          },
          end: {
            line: 148,
            column: 80
          }
        }],
        line: 148
      },
      "15": {
        loc: {
          start: {
            line: 167,
            column: 8
          },
          end: {
            line: 169,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 167,
            column: 8
          },
          end: {
            line: 169,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 167
      },
      "16": {
        loc: {
          start: {
            line: 172,
            column: 8
          },
          end: {
            line: 194,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 172,
            column: 8
          },
          end: {
            line: 194,
            column: 9
          }
        }, {
          start: {
            line: 187,
            column: 13
          },
          end: {
            line: 194,
            column: 9
          }
        }],
        line: 172
      },
      "17": {
        loc: {
          start: {
            line: 172,
            column: 12
          },
          end: {
            line: 172,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 172,
            column: 12
          },
          end: {
            line: 172,
            column: 21
          }
        }, {
          start: {
            line: 172,
            column: 25
          },
          end: {
            line: 172,
            column: 55
          }
        }],
        line: 172
      },
      "18": {
        loc: {
          start: {
            line: 174,
            column: 12
          },
          end: {
            line: 185,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 174,
            column: 12
          },
          end: {
            line: 185,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 174
      },
      "19": {
        loc: {
          start: {
            line: 177,
            column: 16
          },
          end: {
            line: 184,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 177,
            column: 16
          },
          end: {
            line: 184,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 177
      },
      "20": {
        loc: {
          start: {
            line: 206,
            column: 84
          },
          end: {
            line: 206,
            column: 96
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 206,
            column: 94
          },
          end: {
            line: 206,
            column: 96
          }
        }],
        line: 206
      },
      "21": {
        loc: {
          start: {
            line: 210,
            column: 8
          },
          end: {
            line: 212,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 210,
            column: 8
          },
          end: {
            line: 212,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 210
      },
      "22": {
        loc: {
          start: {
            line: 213,
            column: 8
          },
          end: {
            line: 215,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 213,
            column: 8
          },
          end: {
            line: 215,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 213
      },
      "23": {
        loc: {
          start: {
            line: 216,
            column: 8
          },
          end: {
            line: 218,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 216,
            column: 8
          },
          end: {
            line: 218,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 216
      },
      "24": {
        loc: {
          start: {
            line: 219,
            column: 8
          },
          end: {
            line: 221,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 219,
            column: 8
          },
          end: {
            line: 221,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 219
      },
      "25": {
        loc: {
          start: {
            line: 222,
            column: 8
          },
          end: {
            line: 226,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 222,
            column: 8
          },
          end: {
            line: 226,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 222
      },
      "26": {
        loc: {
          start: {
            line: 230,
            column: 8
          },
          end: {
            line: 232,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 230,
            column: 8
          },
          end: {
            line: 232,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 230
      },
      "27": {
        loc: {
          start: {
            line: 233,
            column: 8
          },
          end: {
            line: 235,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 233,
            column: 8
          },
          end: {
            line: 235,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 233
      },
      "28": {
        loc: {
          start: {
            line: 241,
            column: 16
          },
          end: {
            line: 263,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 241,
            column: 16
          },
          end: {
            line: 263,
            column: 17
          }
        }, {
          start: {
            line: 256,
            column: 21
          },
          end: {
            line: 263,
            column: 17
          }
        }],
        line: 241
      },
      "29": {
        loc: {
          start: {
            line: 241,
            column: 20
          },
          end: {
            line: 241,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 241,
            column: 20
          },
          end: {
            line: 241,
            column: 29
          }
        }, {
          start: {
            line: 241,
            column: 33
          },
          end: {
            line: 241,
            column: 63
          }
        }],
        line: 241
      },
      "30": {
        loc: {
          start: {
            line: 243,
            column: 20
          },
          end: {
            line: 254,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 243,
            column: 20
          },
          end: {
            line: 254,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 243
      },
      "31": {
        loc: {
          start: {
            line: 246,
            column: 24
          },
          end: {
            line: 253,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 246,
            column: 24
          },
          end: {
            line: 253,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 246
      },
      "32": {
        loc: {
          start: {
            line: 287,
            column: 8
          },
          end: {
            line: 289,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 287,
            column: 8
          },
          end: {
            line: 289,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 287
      },
      "33": {
        loc: {
          start: {
            line: 312,
            column: 8
          },
          end: {
            line: 314,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 312,
            column: 8
          },
          end: {
            line: 314,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 312
      },
      "34": {
        loc: {
          start: {
            line: 317,
            column: 8
          },
          end: {
            line: 323,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 317,
            column: 8
          },
          end: {
            line: 323,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 317
      },
      "35": {
        loc: {
          start: {
            line: 320,
            column: 12
          },
          end: {
            line: 322,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 320,
            column: 12
          },
          end: {
            line: 322,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 320
      },
      "36": {
        loc: {
          start: {
            line: 320,
            column: 16
          },
          end: {
            line: 320,
            column: 115
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 320,
            column: 16
          },
          end: {
            line: 320,
            column: 31
          }
        }, {
          start: {
            line: 320,
            column: 35
          },
          end: {
            line: 320,
            column: 115
          }
        }],
        line: 320
      },
      "37": {
        loc: {
          start: {
            line: 320,
            column: 36
          },
          end: {
            line: 320,
            column: 102
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 320,
            column: 86
          },
          end: {
            line: 320,
            column: 92
          }
        }, {
          start: {
            line: 320,
            column: 95
          },
          end: {
            line: 320,
            column: 102
          }
        }],
        line: 320
      },
      "38": {
        loc: {
          start: {
            line: 320,
            column: 36
          },
          end: {
            line: 320,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 320,
            column: 36
          },
          end: {
            line: 320,
            column: 66
          }
        }, {
          start: {
            line: 320,
            column: 70
          },
          end: {
            line: 320,
            column: 83
          }
        }],
        line: 320
      },
      "39": {
        loc: {
          start: {
            line: 373,
            column: 17
          },
          end: {
            line: 373,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 373,
            column: 17
          },
          end: {
            line: 373,
            column: 49
          }
        }, {
          start: {
            line: 373,
            column: 53
          },
          end: {
            line: 373,
            column: 54
          }
        }],
        line: 373
      },
      "40": {
        loc: {
          start: {
            line: 374,
            column: 42
          },
          end: {
            line: 374,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 374,
            column: 42
          },
          end: {
            line: 374,
            column: 68
          }
        }, {
          start: {
            line: 374,
            column: 72
          },
          end: {
            line: 374,
            column: 73
          }
        }],
        line: 374
      },
      "41": {
        loc: {
          start: {
            line: 422,
            column: 8
          },
          end: {
            line: 424,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 422,
            column: 8
          },
          end: {
            line: 424,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 422
      },
      "42": {
        loc: {
          start: {
            line: 442,
            column: 8
          },
          end: {
            line: 444,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 442,
            column: 8
          },
          end: {
            line: 444,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 442
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0],
      "9": [0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\models\\imagesModel.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\models\\imagesModel.ts"],
      sourcesContent: ["import {\r\n  S3Client,\r\n  PutObjectCommand,\r\n  DeleteObjectCommand,\r\n  GetObjectCommand,\r\n  ListObjectsV2Command,\r\n  CopyObjectCommand,\r\n  HeadObjectCommand,\r\n} from '@aws-sdk/client-s3';\r\nimport { getSignedUrl } from '@aws-sdk/s3-request-presigner';\r\nimport {\r\n  Image,\r\n  ImageFilters,\r\n  ImageStats,\r\n  ImageUpdateRequest,\r\n} from '../utils/DataTypes';\r\nimport { db } from '../utils/firebase';\r\nimport * as admin from 'firebase-admin';\r\nimport { logger } from '../services/loggerService';\r\n\r\n// Configuraci\xF3n de idriveE2\r\nconst s3Client = new S3Client({\r\n  region: process.env.IDRIVE_E2_REGION || 'us-east-1',\r\n  endpoint: process.env.IDRIVE_E2_ENDPOINT,\r\n  credentials: {\r\n    accessKeyId: process.env.IDRIVE_E2_ACCESS_KEY!,\r\n    secretAccessKey: process.env.IDRIVE_E2_SECRET_KEY!,\r\n  },\r\n  forcePathStyle: true,\r\n});\r\n\r\nconst BUCKET_NAME = process.env.IDRIVE_E2_BUCKET_NAME!;\r\n\r\n// Configuraci\xF3n de validaci\xF3n\r\nconst MAX_FILE_SIZE = 10 * 1024 * 1024; // 10MB\r\nconst ALLOWED_MIME_TYPES = [\r\n  'image/jpeg',\r\n  'image/png',\r\n  'image/gif',\r\n  'image/webp',\r\n  'image/svg+xml',\r\n];\r\n\r\n/**\r\n * Validar archivo antes de subir\r\n */\r\nconst validateFile = (file: Express.Multer.File): void => {\r\n  if (file.size > MAX_FILE_SIZE) {\r\n    throw new Error(\r\n      `El archivo es demasiado grande. M\xE1ximo ${MAX_FILE_SIZE / 1024 / 1024}MB`\r\n    );\r\n  }\r\n\r\n  if (!ALLOWED_MIME_TYPES.includes(file.mimetype)) {\r\n    throw new Error(\r\n      'Tipo de archivo no permitido. Solo se permiten im\xE1genes (JPEG, PNG, GIF, WebP, SVG)'\r\n    );\r\n  }\r\n};\r\n\r\n/**\r\n * Generar nombre \xFAnico para el archivo\r\n */\r\nconst generateFileName = (\r\n  originalName: string,\r\n  category: string,\r\n  userId: string\r\n): string => {\r\n  const timestamp = Date.now();\r\n  const randomString = Math.random().toString(36).substring(2, 15);\r\n  const extension = originalName.split('.').pop();\r\n  return `${category}/${userId}/${timestamp}_${randomString}.${extension}`;\r\n};\r\n\r\n/**\r\n * Subir imagen a idriveE2\r\n */\r\nexport const uploadImageToS3 = async (\r\n  file: Express.Multer.File,\r\n  key: string\r\n): Promise<{ key: string; size: number; mimetype: string }> => {\r\n  try {\r\n    validateFile(file);\r\n\r\n    const command = new PutObjectCommand({\r\n      Bucket: BUCKET_NAME,\r\n      Key: key,\r\n      Body: file.buffer,\r\n      ContentType: file.mimetype,\r\n      Metadata: {\r\n        originalName: file.originalname,\r\n        uploadedBy: 'mussikon-system',\r\n        uploadedAt: new Date().toISOString(),\r\n      },\r\n    });\r\n\r\n    await s3Client.send(command);\r\n\r\n    console.log(\r\n      `[src/models/imagesModel.ts:uploadImageToS3] Imagen subida a idriveE2: ${key}`\r\n    );\r\n\r\n    return {\r\n      key,\r\n      size: file.size,\r\n      mimetype: file.mimetype,\r\n    };\r\n  } catch (error) {\r\n    logger.error('[src/models/imagesModel.ts:uploadImageToS3] Error al subir imagen a idriveE2:', error as Error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * Generar URL firmada para acceso a imagen\r\n */\r\nexport const generateSignedUrl = async (\r\n  key: string,\r\n  expiresIn: number = 3600\r\n): Promise<string> => {\r\n  try {\r\n    const command = new GetObjectCommand({\r\n      Bucket: BUCKET_NAME,\r\n      Key: key,\r\n    });\r\n\r\n    const signedUrl = await getSignedUrl(s3Client, command, { expiresIn });\r\n    return signedUrl;\r\n  } catch (error) {\r\n    logger.error('[src/models/imagesModel.ts:generateSignedUrl] Error al generar URL firmada:', error as Error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * Crear registro de imagen en Firestore\r\n */\r\nexport const createImageRecord = async (\r\n  imageData: Omit<Image, 'id' | 'createdAt' | 'updatedAt'>\r\n): Promise<Image> => {\r\n  try {\r\n    const now = new Date().toISOString();\r\n    const imageRef = db.collection('images').doc();\r\n\r\n    const image: Image = {\r\n      id: imageRef.id,\r\n      ...imageData,\r\n      createdAt: now,\r\n      updatedAt: now,\r\n    };\r\n\r\n    await imageRef.set(image);\r\n    console.log(\r\n      `[src/models/imagesModel.ts:createImageRecord] Registro de imagen creado en Firestore: ${image.id}`\r\n    );\r\n    return image;\r\n  } catch (error) {\r\n    logger.error('[src/models/imagesModel.ts:createImageRecord] Error al crear registro de imagen:', error as Error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * Subir imagen completa (idriveE2 + Firestore)\r\n */\r\nexport const uploadImage = async (\r\n  file: Express.Multer.File,\r\n  userId: string,\r\n  category: Image['category'],\r\n  metadata: {\r\n    description?: string;\r\n    tags?: string[];\r\n    isPublic?: boolean;\r\n    customMetadata?: Record<string, any>;\r\n  } = {}\r\n): Promise<Image> => {\r\n  try {\r\n    // Generar nombre \xFAnico para el archivo\r\n    const key = generateFileName(file.originalname, category, userId);\r\n\r\n    // Subir a idriveE2\r\n    const uploadResult = await uploadImageToS3(file, key);\r\n\r\n    // Generar URL firmada\r\n    const url = await generateSignedUrl(key);\r\n\r\n    // Crear registro en Firestore\r\n    const imageData: Omit<Image, 'id' | 'createdAt' | 'updatedAt'> = {\r\n      key,\r\n      url,\r\n      originalName: file.originalname,\r\n      fileName: key.split('/').pop() || file.originalname,\r\n      size: uploadResult.size,\r\n      mimetype: uploadResult.mimetype,\r\n      category,\r\n      userId,\r\n      description: metadata.description || '',\r\n      tags: metadata.tags || [],\r\n      metadata: metadata.customMetadata || {},\r\n      isPublic: metadata.isPublic !== undefined ? metadata.isPublic : true,\r\n      isActive: true,\r\n    };\r\n\r\n    const image = await createImageRecord(imageData);\r\n    console.log(\r\n      `[src/models/imagesModel.ts:uploadImage] Imagen subida exitosamente: ${image.id}`\r\n    );\r\n    return image;\r\n  } catch (error) {\r\n    logger.error('[src/models/imagesModel.ts:uploadImage] Error al subir imagen:', error as Error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * Obtener imagen por ID\r\n */\r\nexport const getImageById = async (imageId: string): Promise<Image | null> => {\r\n  try {\r\n    const imageDoc = await db.collection('images').doc(imageId).get();\r\n\r\n    if (!imageDoc.exists) {\r\n      return null;\r\n    }\r\n\r\n    const image = imageDoc.data() as Image;\r\n\r\n    // Regenerar URL firmada si es necesario\r\n    if (image.url && image.url.includes('expires=')) {\r\n      const expiresMatch = image.url.match(/expires=(\\d+)/);\r\n      if (expiresMatch) {\r\n        const expiresAt = parseInt(expiresMatch[1]);\r\n        const now = Math.floor(Date.now() / 1000);\r\n\r\n        if (expiresAt <= now + 300) {\r\n          // Regenerar si expira en menos de 5 minutos\r\n          image.url = await generateSignedUrl(image.key);\r\n          await imageDoc.ref.update({\r\n            url: image.url,\r\n            updatedAt: new Date().toISOString(),\r\n          });\r\n        }\r\n      }\r\n    } else {\r\n      // Si no tiene URL firmada, generarla\r\n      image.url = await generateSignedUrl(image.key);\r\n      await imageDoc.ref.update({\r\n        url: image.url,\r\n        updatedAt: new Date().toISOString(),\r\n      });\r\n    }\r\n\r\n    return image;\r\n  } catch (error) {\r\n    logger.error('[src/models/imagesModel.ts:getImageById] Error al obtener imagen:', error as Error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * Listar im\xE1genes con filtros\r\n */\r\nexport const listImages = async (\r\n  filters: ImageFilters = {}\r\n): Promise<Image[]> => {\r\n  try {\r\n    let query: any = db.collection('images');\r\n\r\n    // Aplicar filtros\r\n    if (filters.category) {\r\n      query = query.where('category', '==', filters.category);\r\n    }\r\n    if (filters.userId) {\r\n      query = query.where('userId', '==', filters.userId);\r\n    }\r\n    if (filters.isPublic !== undefined) {\r\n      query = query.where('isPublic', '==', filters.isPublic);\r\n    }\r\n    if (filters.isActive !== undefined) {\r\n      query = query.where('isActive', '==', filters.isActive);\r\n    }\r\n    if (filters.metadata) {\r\n      Object.entries(filters.metadata).forEach(([key, value]) => {\r\n        query = query.where(`metadata.${key}`, '==', value);\r\n      });\r\n    }\r\n\r\n    // Ordenar por fecha de creaci\xF3n (m\xE1s reciente primero)\r\n    query = query.orderBy('createdAt', 'desc');\r\n\r\n    // Aplicar l\xEDmites\r\n    if (filters.limit) {\r\n      query = query.limit(filters.limit);\r\n    }\r\n    if (filters.offset) {\r\n      query = query.offset(filters.offset);\r\n    }\r\n\r\n    const snapshot = await query.get();\r\n    const images = snapshot.docs.map((doc: any) => doc.data() as Image);\r\n\r\n    // Regenerar URLs firmadas si es necesario\r\n    const imagesWithUrls = await Promise.all(\r\n      images.map(async (image: Image) => {\r\n        try {\r\n          if (image.url && image.url.includes('expires=')) {\r\n            const expiresMatch = image.url.match(/expires=(\\d+)/);\r\n            if (expiresMatch) {\r\n              const expiresAt = parseInt(expiresMatch[1]);\r\n              const now = Math.floor(Date.now() / 1000);\r\n\r\n              if (expiresAt <= now + 300) {\r\n                // Regenerar si expira en menos de 5 minutos\r\n                image.url = await generateSignedUrl(image.key);\r\n                await db.collection('images').doc(image.id).update({\r\n                  url: image.url,\r\n                  updatedAt: new Date().toISOString(),\r\n                });\r\n              }\r\n            }\r\n          } else {\r\n            // Si no tiene URL firmada, generarla\r\n            image.url = await generateSignedUrl(image.key);\r\n            await db.collection('images').doc(image.id).update({\r\n              url: image.url,\r\n              updatedAt: new Date().toISOString(),\r\n            });\r\n          }\r\n          return image;\r\n        } catch (error) {\r\n          console.error(\r\n            `[src/models/imagesModel.ts:listImages] Error al regenerar URL para imagen ${image.id}:`,\r\n            error\r\n          );\r\n          return image;\r\n        }\r\n      })\r\n    );\r\n\r\n    console.log(\r\n      `[src/models/imagesModel.ts:listImages] ${imagesWithUrls.length} im\xE1genes encontradas`\r\n    );\r\n    return imagesWithUrls;\r\n  } catch (error) {\r\n    logger.error('[src/models/imagesModel.ts:listImages] Error al listar im\xE1genes:', error as Error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * Actualizar imagen\r\n */\r\nexport const updateImage = async (\r\n  imageId: string,\r\n  updateData: ImageUpdateRequest\r\n): Promise<Image> => {\r\n  try {\r\n    const imageRef = db.collection('images').doc(imageId);\r\n    const imageDoc = await imageRef.get();\r\n\r\n    if (!imageDoc.exists) {\r\n      throw new Error('Imagen no encontrada');\r\n    }\r\n\r\n    const updateFields: Partial<Image> = {\r\n      ...updateData,\r\n      updatedAt: new Date().toISOString(),\r\n    };\r\n\r\n    await imageRef.update(updateFields);\r\n\r\n    // Obtener imagen actualizada\r\n    const updatedDoc = await imageRef.get();\r\n    const updatedImage = updatedDoc.data() as Image;\r\n\r\n    console.log(\r\n      `[src/models/imagesModel.ts:updateImage] Imagen actualizada: ${imageId}`\r\n    );\r\n    return updatedImage;\r\n  } catch (error) {\r\n    logger.error('[src/models/imagesModel.ts:updateImage] Error al actualizar imagen:', error as Error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * Eliminar imagen (soft delete)\r\n */\r\nexport const deleteImage = async (\r\n  imageId: string,\r\n  userId: string\r\n): Promise<boolean> => {\r\n  try {\r\n    const imageRef = db.collection('images').doc(imageId);\r\n    const imageDoc = await imageRef.get();\r\n\r\n    if (!imageDoc.exists) {\r\n      throw new Error('Imagen no encontrada');\r\n    }\r\n\r\n    const image = imageDoc.data() as Image;\r\n\r\n    // Verificar permisos (solo el propietario o admin puede eliminar)\r\n    if (image.userId !== userId) {\r\n      // Verificar si el usuario es admin\r\n      const userDoc = await db.collection('users').doc(userId).get();\r\n      if (!userDoc.exists || userDoc.data()?.roll !== 'admin') {\r\n        throw new Error('No tienes permisos para eliminar esta imagen');\r\n      }\r\n    }\r\n\r\n    // Soft delete - marcar como inactiva\r\n    await imageRef.update({\r\n      isActive: false,\r\n      updatedAt: new Date().toISOString(),\r\n    });\r\n\r\n    console.log(\r\n      `[src/models/imagesModel.ts:deleteImage] Imagen marcada como eliminada: ${imageId}`\r\n    );\r\n    return true;\r\n  } catch (error) {\r\n    logger.error('[src/models/imagesModel.ts:deleteImage] Error al eliminar imagen:', error as Error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * Eliminar imagen de idriveE2 (hard delete)\r\n */\r\nexport const deleteImageFromS3 = async (key: string): Promise<boolean> => {\r\n  try {\r\n    const command = new DeleteObjectCommand({\r\n      Bucket: BUCKET_NAME,\r\n      Key: key,\r\n    });\r\n\r\n    await s3Client.send(command);\r\n    console.log(\r\n      `[src/models/imagesModel.ts:deleteImageFromS3] Imagen eliminada de idriveE2: ${key}`\r\n    );\r\n    return true;\r\n  } catch (error) {\r\n    logger.error('[src/models/imagesModel.ts:deleteImageFromS3] Error al eliminar imagen de idriveE2:', error as Error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * Obtener estad\xEDsticas de im\xE1genes\r\n */\r\nexport const getImageStats = async (): Promise<ImageStats> => {\r\n  try {\r\n    const snapshot = await db\r\n      .collection('images')\r\n      .where('isActive', '==', true)\r\n      .get();\r\n    const images = snapshot.docs.map(doc => doc.data() as Image);\r\n\r\n    const totalImages = images.length;\r\n    const totalSize = images.reduce((sum, img) => sum + img.size, 0);\r\n\r\n    const imagesByCategory: Record<string, number> = {};\r\n    const imagesByUser: Record<string, number> = {};\r\n\r\n    images.forEach(image => {\r\n      imagesByCategory[image.category] =\r\n        (imagesByCategory[image.category] || 0) + 1;\r\n      imagesByUser[image.userId] = (imagesByUser[image.userId] || 0) + 1;\r\n    });\r\n\r\n    const recentUploads = images\r\n      .sort(\r\n        (a, b) =>\r\n          new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime()\r\n      )\r\n      .slice(0, 10);\r\n\r\n    const stats: ImageStats = {\r\n      totalImages,\r\n      totalSize,\r\n      imagesByCategory,\r\n      imagesByUser,\r\n      recentUploads,\r\n    };\r\n\r\n    console.log(\r\n      `[src/models/imagesModel.ts:getImageStats] Estad\xEDsticas generadas: ${totalImages} im\xE1genes, ${totalSize} bytes`\r\n    );\r\n    return stats;\r\n  } catch (error) {\r\n    logger.error('[src/models/imagesModel.ts:getImageStats] Error al obtener estad\xEDsticas:', error as Error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * Obtener im\xE1genes de perfil de usuario\r\n */\r\nexport const getUserProfileImages = async (\r\n  userId: string\r\n): Promise<Image[]> => {\r\n  try {\r\n    return await listImages({\r\n      userId,\r\n      category: 'profile',\r\n      isActive: true,\r\n    });\r\n  } catch (error) {\r\n    logger.error('[src/models/imagesModel.ts:getUserProfileImages] Error al obtener im\xE1genes de perfil:', error as Error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * Obtener im\xE1genes de posts\r\n */\r\nexport const getPostImages = async (userId?: string): Promise<Image[]> => {\r\n  try {\r\n    const filters: ImageFilters = {\r\n      category: 'post',\r\n      isActive: true,\r\n      isPublic: true,\r\n    };\r\n\r\n    if (userId) {\r\n      filters.userId = userId;\r\n    }\r\n\r\n    return await listImages(filters);\r\n  } catch (error) {\r\n    logger.error('[src/models/imagesModel.ts:getPostImages] Error al obtener im\xE1genes de posts:', error as Error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * Obtener im\xE1genes de eventos\r\n */\r\nexport const getEventImages = async (eventId?: string): Promise<Image[]> => {\r\n  try {\r\n    const filters: ImageFilters = {\r\n      category: 'event',\r\n      isActive: true,\r\n    };\r\n\r\n    if (eventId) {\r\n      filters.metadata = { eventId };\r\n    }\r\n\r\n    return await listImages(filters);\r\n  } catch (error) {\r\n    logger.error('[src/models/imagesModel.ts:getEventImages] Error al obtener im\xE1genes de eventos:', error as Error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * Limpiar im\xE1genes expiradas (tareas de mantenimiento)\r\n */\r\nexport const cleanupExpiredImages = async (): Promise<number> => {\r\n  try {\r\n    const now = new Date();\r\n    const snapshot = await db\r\n      .collection('images')\r\n      .where('expiresAt', '<=', now.toISOString())\r\n      .where('isActive', '==', true)\r\n      .get();\r\n\r\n    let deletedCount = 0;\r\n\r\n    for (const doc of snapshot.docs) {\r\n      const image = doc.data() as Image;\r\n\r\n      // Eliminar de idriveE2\r\n      await deleteImageFromS3(image.key);\r\n\r\n      // Marcar como inactiva en Firestore\r\n      await doc.ref.update({\r\n        isActive: false,\r\n        updatedAt: now.toISOString(),\r\n      });\r\n\r\n      deletedCount++;\r\n    }\r\n\r\n    console.log(\r\n      `[src/models/imagesModel.ts:cleanupExpiredImages] ${deletedCount} im\xE1genes expiradas eliminadas`\r\n    );\r\n    return deletedCount;\r\n  } catch (error) {\r\n    logger.error('[src/models/imagesModel.ts:cleanupExpiredImages] Error al limpiar im\xE1genes expiradas:', error as Error);\r\n    throw error;\r\n  }\r\n};\r\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f29d035a99d07967b647fc7bcc0a7741bc06cd0d"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1g5xzar55g = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1g5xzar55g();
var __awaiter =
/* istanbul ignore next */
(cov_1g5xzar55g().s[0]++,
/* istanbul ignore next */
(cov_1g5xzar55g().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1g5xzar55g().b[0][1]++, this.__awaiter) ||
/* istanbul ignore next */
(cov_1g5xzar55g().b[0][2]++, function (thisArg, _arguments, P, generator) {
  /* istanbul ignore next */
  cov_1g5xzar55g().f[0]++;
  function adopt(value) {
    /* istanbul ignore next */
    cov_1g5xzar55g().f[1]++;
    cov_1g5xzar55g().s[1]++;
    return value instanceof P ?
    /* istanbul ignore next */
    (cov_1g5xzar55g().b[1][0]++, value) :
    /* istanbul ignore next */
    (cov_1g5xzar55g().b[1][1]++, new P(function (resolve) {
      /* istanbul ignore next */
      cov_1g5xzar55g().f[2]++;
      cov_1g5xzar55g().s[2]++;
      resolve(value);
    }));
  }
  /* istanbul ignore next */
  cov_1g5xzar55g().s[3]++;
  return new (
  /* istanbul ignore next */
  (cov_1g5xzar55g().b[2][0]++, P) ||
  /* istanbul ignore next */
  (cov_1g5xzar55g().b[2][1]++, P = Promise))(function (resolve, reject) {
    /* istanbul ignore next */
    cov_1g5xzar55g().f[3]++;
    function fulfilled(value) {
      /* istanbul ignore next */
      cov_1g5xzar55g().f[4]++;
      cov_1g5xzar55g().s[4]++;
      try {
        /* istanbul ignore next */
        cov_1g5xzar55g().s[5]++;
        step(generator.next(value));
      } catch (e) {
        /* istanbul ignore next */
        cov_1g5xzar55g().s[6]++;
        reject(e);
      }
    }
    function rejected(value) {
      /* istanbul ignore next */
      cov_1g5xzar55g().f[5]++;
      cov_1g5xzar55g().s[7]++;
      try {
        /* istanbul ignore next */
        cov_1g5xzar55g().s[8]++;
        step(generator["throw"](value));
      } catch (e) {
        /* istanbul ignore next */
        cov_1g5xzar55g().s[9]++;
        reject(e);
      }
    }
    function step(result) {
      /* istanbul ignore next */
      cov_1g5xzar55g().f[6]++;
      cov_1g5xzar55g().s[10]++;
      result.done ?
      /* istanbul ignore next */
      (cov_1g5xzar55g().b[3][0]++, resolve(result.value)) :
      /* istanbul ignore next */
      (cov_1g5xzar55g().b[3][1]++, adopt(result.value).then(fulfilled, rejected));
    }
    /* istanbul ignore next */
    cov_1g5xzar55g().s[11]++;
    step((generator = generator.apply(thisArg,
    /* istanbul ignore next */
    (cov_1g5xzar55g().b[4][0]++, _arguments) ||
    /* istanbul ignore next */
    (cov_1g5xzar55g().b[4][1]++, []))).next());
  });
}));
/* istanbul ignore next */
cov_1g5xzar55g().s[12]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1g5xzar55g().s[13]++;
exports.cleanupExpiredImages = exports.getEventImages = exports.getPostImages = exports.getUserProfileImages = exports.getImageStats = exports.deleteImageFromS3 = exports.deleteImage = exports.updateImage = exports.listImages = exports.getImageById = exports.uploadImage = exports.createImageRecord = exports.generateSignedUrl = exports.uploadImageToS3 = void 0;
const client_s3_1 =
/* istanbul ignore next */
(cov_1g5xzar55g().s[14]++, require("@aws-sdk/client-s3"));
const s3_request_presigner_1 =
/* istanbul ignore next */
(cov_1g5xzar55g().s[15]++, require("@aws-sdk/s3-request-presigner"));
const firebase_1 =
/* istanbul ignore next */
(cov_1g5xzar55g().s[16]++, require("../utils/firebase"));
const loggerService_1 =
/* istanbul ignore next */
(cov_1g5xzar55g().s[17]++, require("../services/loggerService"));
// Configuración de idriveE2
const s3Client =
/* istanbul ignore next */
(cov_1g5xzar55g().s[18]++, new client_s3_1.S3Client({
  region:
  /* istanbul ignore next */
  (cov_1g5xzar55g().b[5][0]++, process.env.IDRIVE_E2_REGION) ||
  /* istanbul ignore next */
  (cov_1g5xzar55g().b[5][1]++, 'us-east-1'),
  endpoint: process.env.IDRIVE_E2_ENDPOINT,
  credentials: {
    accessKeyId: process.env.IDRIVE_E2_ACCESS_KEY,
    secretAccessKey: process.env.IDRIVE_E2_SECRET_KEY
  },
  forcePathStyle: true
}));
const BUCKET_NAME =
/* istanbul ignore next */
(cov_1g5xzar55g().s[19]++, process.env.IDRIVE_E2_BUCKET_NAME);
// Configuración de validación
const MAX_FILE_SIZE =
/* istanbul ignore next */
(cov_1g5xzar55g().s[20]++, 10 * 1024 * 1024); // 10MB
const ALLOWED_MIME_TYPES =
/* istanbul ignore next */
(cov_1g5xzar55g().s[21]++, ['image/jpeg', 'image/png', 'image/gif', 'image/webp', 'image/svg+xml']);
/**
 * Validar archivo antes de subir
 */
/* istanbul ignore next */
cov_1g5xzar55g().s[22]++;
const validateFile = file => {
  /* istanbul ignore next */
  cov_1g5xzar55g().f[7]++;
  cov_1g5xzar55g().s[23]++;
  if (file.size > MAX_FILE_SIZE) {
    /* istanbul ignore next */
    cov_1g5xzar55g().b[6][0]++;
    cov_1g5xzar55g().s[24]++;
    throw new Error(`El archivo es demasiado grande. Máximo ${MAX_FILE_SIZE / 1024 / 1024}MB`);
  } else
  /* istanbul ignore next */
  {
    cov_1g5xzar55g().b[6][1]++;
  }
  cov_1g5xzar55g().s[25]++;
  if (!ALLOWED_MIME_TYPES.includes(file.mimetype)) {
    /* istanbul ignore next */
    cov_1g5xzar55g().b[7][0]++;
    cov_1g5xzar55g().s[26]++;
    throw new Error('Tipo de archivo no permitido. Solo se permiten imágenes (JPEG, PNG, GIF, WebP, SVG)');
  } else
  /* istanbul ignore next */
  {
    cov_1g5xzar55g().b[7][1]++;
  }
};
/**
 * Generar nombre único para el archivo
 */
/* istanbul ignore next */
cov_1g5xzar55g().s[27]++;
const generateFileName = (originalName, category, userId) => {
  /* istanbul ignore next */
  cov_1g5xzar55g().f[8]++;
  const timestamp =
  /* istanbul ignore next */
  (cov_1g5xzar55g().s[28]++, Date.now());
  const randomString =
  /* istanbul ignore next */
  (cov_1g5xzar55g().s[29]++, Math.random().toString(36).substring(2, 15));
  const extension =
  /* istanbul ignore next */
  (cov_1g5xzar55g().s[30]++, originalName.split('.').pop());
  /* istanbul ignore next */
  cov_1g5xzar55g().s[31]++;
  return `${category}/${userId}/${timestamp}_${randomString}.${extension}`;
};
/**
 * Subir imagen a idriveE2
 */
/* istanbul ignore next */
cov_1g5xzar55g().s[32]++;
const uploadImageToS3 = (file, key) => {
  /* istanbul ignore next */
  cov_1g5xzar55g().f[9]++;
  cov_1g5xzar55g().s[33]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1g5xzar55g().f[10]++;
    cov_1g5xzar55g().s[34]++;
    try {
      /* istanbul ignore next */
      cov_1g5xzar55g().s[35]++;
      validateFile(file);
      const command =
      /* istanbul ignore next */
      (cov_1g5xzar55g().s[36]++, new client_s3_1.PutObjectCommand({
        Bucket: BUCKET_NAME,
        Key: key,
        Body: file.buffer,
        ContentType: file.mimetype,
        Metadata: {
          originalName: file.originalname,
          uploadedBy: 'mussikon-system',
          uploadedAt: new Date().toISOString()
        }
      }));
      /* istanbul ignore next */
      cov_1g5xzar55g().s[37]++;
      yield s3Client.send(command);
      /* istanbul ignore next */
      cov_1g5xzar55g().s[38]++;
      console.log(`[src/models/imagesModel.ts:uploadImageToS3] Imagen subida a idriveE2: ${key}`);
      /* istanbul ignore next */
      cov_1g5xzar55g().s[39]++;
      return {
        key,
        size: file.size,
        mimetype: file.mimetype
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_1g5xzar55g().s[40]++;
      loggerService_1.logger.error('[src/models/imagesModel.ts:uploadImageToS3] Error al subir imagen a idriveE2:', error);
      /* istanbul ignore next */
      cov_1g5xzar55g().s[41]++;
      throw error;
    }
  });
};
/* istanbul ignore next */
cov_1g5xzar55g().s[42]++;
exports.uploadImageToS3 = uploadImageToS3;
/**
 * Generar URL firmada para acceso a imagen
 */
/* istanbul ignore next */
cov_1g5xzar55g().s[43]++;
const generateSignedUrl = (key_1, ...args_1) => {
  /* istanbul ignore next */
  cov_1g5xzar55g().f[11]++;
  cov_1g5xzar55g().s[44]++;
  return __awaiter(void 0, [key_1, ...args_1], void 0, function* (key, expiresIn =
  /* istanbul ignore next */
  (cov_1g5xzar55g().b[8][0]++, 3600)) {
    /* istanbul ignore next */
    cov_1g5xzar55g().f[12]++;
    cov_1g5xzar55g().s[45]++;
    try {
      const command =
      /* istanbul ignore next */
      (cov_1g5xzar55g().s[46]++, new client_s3_1.GetObjectCommand({
        Bucket: BUCKET_NAME,
        Key: key
      }));
      const signedUrl =
      /* istanbul ignore next */
      (cov_1g5xzar55g().s[47]++, yield (0, s3_request_presigner_1.getSignedUrl)(s3Client, command, {
        expiresIn
      }));
      /* istanbul ignore next */
      cov_1g5xzar55g().s[48]++;
      return signedUrl;
    } catch (error) {
      /* istanbul ignore next */
      cov_1g5xzar55g().s[49]++;
      loggerService_1.logger.error('[src/models/imagesModel.ts:generateSignedUrl] Error al generar URL firmada:', error);
      /* istanbul ignore next */
      cov_1g5xzar55g().s[50]++;
      throw error;
    }
  });
};
/* istanbul ignore next */
cov_1g5xzar55g().s[51]++;
exports.generateSignedUrl = generateSignedUrl;
/**
 * Crear registro de imagen en Firestore
 */
/* istanbul ignore next */
cov_1g5xzar55g().s[52]++;
const createImageRecord = imageData => {
  /* istanbul ignore next */
  cov_1g5xzar55g().f[13]++;
  cov_1g5xzar55g().s[53]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1g5xzar55g().f[14]++;
    cov_1g5xzar55g().s[54]++;
    try {
      const now =
      /* istanbul ignore next */
      (cov_1g5xzar55g().s[55]++, new Date().toISOString());
      const imageRef =
      /* istanbul ignore next */
      (cov_1g5xzar55g().s[56]++, firebase_1.db.collection('images').doc());
      const image =
      /* istanbul ignore next */
      (cov_1g5xzar55g().s[57]++, Object.assign(Object.assign({
        id: imageRef.id
      }, imageData), {
        createdAt: now,
        updatedAt: now
      }));
      /* istanbul ignore next */
      cov_1g5xzar55g().s[58]++;
      yield imageRef.set(image);
      /* istanbul ignore next */
      cov_1g5xzar55g().s[59]++;
      console.log(`[src/models/imagesModel.ts:createImageRecord] Registro de imagen creado en Firestore: ${image.id}`);
      /* istanbul ignore next */
      cov_1g5xzar55g().s[60]++;
      return image;
    } catch (error) {
      /* istanbul ignore next */
      cov_1g5xzar55g().s[61]++;
      loggerService_1.logger.error('[src/models/imagesModel.ts:createImageRecord] Error al crear registro de imagen:', error);
      /* istanbul ignore next */
      cov_1g5xzar55g().s[62]++;
      throw error;
    }
  });
};
/* istanbul ignore next */
cov_1g5xzar55g().s[63]++;
exports.createImageRecord = createImageRecord;
/**
 * Subir imagen completa (idriveE2 + Firestore)
 */
/* istanbul ignore next */
cov_1g5xzar55g().s[64]++;
const uploadImage = (file_1, userId_1, category_1, ...args_1) => {
  /* istanbul ignore next */
  cov_1g5xzar55g().f[15]++;
  cov_1g5xzar55g().s[65]++;
  return __awaiter(void 0, [file_1, userId_1, category_1, ...args_1], void 0, function* (file, userId, category, metadata =
  /* istanbul ignore next */
  (cov_1g5xzar55g().b[9][0]++, {})) {
    /* istanbul ignore next */
    cov_1g5xzar55g().f[16]++;
    cov_1g5xzar55g().s[66]++;
    try {
      // Generar nombre único para el archivo
      const key =
      /* istanbul ignore next */
      (cov_1g5xzar55g().s[67]++, generateFileName(file.originalname, category, userId));
      // Subir a idriveE2
      const uploadResult =
      /* istanbul ignore next */
      (cov_1g5xzar55g().s[68]++, yield (0, exports.uploadImageToS3)(file, key));
      // Generar URL firmada
      const url =
      /* istanbul ignore next */
      (cov_1g5xzar55g().s[69]++, yield (0, exports.generateSignedUrl)(key));
      // Crear registro en Firestore
      const imageData =
      /* istanbul ignore next */
      (cov_1g5xzar55g().s[70]++, {
        key,
        url,
        originalName: file.originalname,
        fileName:
        /* istanbul ignore next */
        (cov_1g5xzar55g().b[10][0]++, key.split('/').pop()) ||
        /* istanbul ignore next */
        (cov_1g5xzar55g().b[10][1]++, file.originalname),
        size: uploadResult.size,
        mimetype: uploadResult.mimetype,
        category,
        userId,
        description:
        /* istanbul ignore next */
        (cov_1g5xzar55g().b[11][0]++, metadata.description) ||
        /* istanbul ignore next */
        (cov_1g5xzar55g().b[11][1]++, ''),
        tags:
        /* istanbul ignore next */
        (cov_1g5xzar55g().b[12][0]++, metadata.tags) ||
        /* istanbul ignore next */
        (cov_1g5xzar55g().b[12][1]++, []),
        metadata:
        /* istanbul ignore next */
        (cov_1g5xzar55g().b[13][0]++, metadata.customMetadata) ||
        /* istanbul ignore next */
        (cov_1g5xzar55g().b[13][1]++, {}),
        isPublic: metadata.isPublic !== undefined ?
        /* istanbul ignore next */
        (cov_1g5xzar55g().b[14][0]++, metadata.isPublic) :
        /* istanbul ignore next */
        (cov_1g5xzar55g().b[14][1]++, true),
        isActive: true
      });
      const image =
      /* istanbul ignore next */
      (cov_1g5xzar55g().s[71]++, yield (0, exports.createImageRecord)(imageData));
      /* istanbul ignore next */
      cov_1g5xzar55g().s[72]++;
      console.log(`[src/models/imagesModel.ts:uploadImage] Imagen subida exitosamente: ${image.id}`);
      /* istanbul ignore next */
      cov_1g5xzar55g().s[73]++;
      return image;
    } catch (error) {
      /* istanbul ignore next */
      cov_1g5xzar55g().s[74]++;
      loggerService_1.logger.error('[src/models/imagesModel.ts:uploadImage] Error al subir imagen:', error);
      /* istanbul ignore next */
      cov_1g5xzar55g().s[75]++;
      throw error;
    }
  });
};
/* istanbul ignore next */
cov_1g5xzar55g().s[76]++;
exports.uploadImage = uploadImage;
/**
 * Obtener imagen por ID
 */
/* istanbul ignore next */
cov_1g5xzar55g().s[77]++;
const getImageById = imageId => {
  /* istanbul ignore next */
  cov_1g5xzar55g().f[17]++;
  cov_1g5xzar55g().s[78]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1g5xzar55g().f[18]++;
    cov_1g5xzar55g().s[79]++;
    try {
      const imageDoc =
      /* istanbul ignore next */
      (cov_1g5xzar55g().s[80]++, yield firebase_1.db.collection('images').doc(imageId).get());
      /* istanbul ignore next */
      cov_1g5xzar55g().s[81]++;
      if (!imageDoc.exists) {
        /* istanbul ignore next */
        cov_1g5xzar55g().b[15][0]++;
        cov_1g5xzar55g().s[82]++;
        return null;
      } else
      /* istanbul ignore next */
      {
        cov_1g5xzar55g().b[15][1]++;
      }
      const image =
      /* istanbul ignore next */
      (cov_1g5xzar55g().s[83]++, imageDoc.data());
      // Regenerar URL firmada si es necesario
      /* istanbul ignore next */
      cov_1g5xzar55g().s[84]++;
      if (
      /* istanbul ignore next */
      (cov_1g5xzar55g().b[17][0]++, image.url) &&
      /* istanbul ignore next */
      (cov_1g5xzar55g().b[17][1]++, image.url.includes('expires='))) {
        /* istanbul ignore next */
        cov_1g5xzar55g().b[16][0]++;
        const expiresMatch =
        /* istanbul ignore next */
        (cov_1g5xzar55g().s[85]++, image.url.match(/expires=(\d+)/));
        /* istanbul ignore next */
        cov_1g5xzar55g().s[86]++;
        if (expiresMatch) {
          /* istanbul ignore next */
          cov_1g5xzar55g().b[18][0]++;
          const expiresAt =
          /* istanbul ignore next */
          (cov_1g5xzar55g().s[87]++, parseInt(expiresMatch[1]));
          const now =
          /* istanbul ignore next */
          (cov_1g5xzar55g().s[88]++, Math.floor(Date.now() / 1000));
          /* istanbul ignore next */
          cov_1g5xzar55g().s[89]++;
          if (expiresAt <= now + 300) {
            /* istanbul ignore next */
            cov_1g5xzar55g().b[19][0]++;
            cov_1g5xzar55g().s[90]++;
            // Regenerar si expira en menos de 5 minutos
            image.url = yield (0, exports.generateSignedUrl)(image.key);
            /* istanbul ignore next */
            cov_1g5xzar55g().s[91]++;
            yield imageDoc.ref.update({
              url: image.url,
              updatedAt: new Date().toISOString()
            });
          } else
          /* istanbul ignore next */
          {
            cov_1g5xzar55g().b[19][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_1g5xzar55g().b[18][1]++;
        }
      } else {
        /* istanbul ignore next */
        cov_1g5xzar55g().b[16][1]++;
        cov_1g5xzar55g().s[92]++;
        // Si no tiene URL firmada, generarla
        image.url = yield (0, exports.generateSignedUrl)(image.key);
        /* istanbul ignore next */
        cov_1g5xzar55g().s[93]++;
        yield imageDoc.ref.update({
          url: image.url,
          updatedAt: new Date().toISOString()
        });
      }
      /* istanbul ignore next */
      cov_1g5xzar55g().s[94]++;
      return image;
    } catch (error) {
      /* istanbul ignore next */
      cov_1g5xzar55g().s[95]++;
      loggerService_1.logger.error('[src/models/imagesModel.ts:getImageById] Error al obtener imagen:', error);
      /* istanbul ignore next */
      cov_1g5xzar55g().s[96]++;
      throw error;
    }
  });
};
/* istanbul ignore next */
cov_1g5xzar55g().s[97]++;
exports.getImageById = getImageById;
/**
 * Listar imágenes con filtros
 */
/* istanbul ignore next */
cov_1g5xzar55g().s[98]++;
const listImages = (...args_1) => {
  /* istanbul ignore next */
  cov_1g5xzar55g().f[19]++;
  cov_1g5xzar55g().s[99]++;
  return __awaiter(void 0, [...args_1], void 0, function* (filters =
  /* istanbul ignore next */
  (cov_1g5xzar55g().b[20][0]++, {})) {
    /* istanbul ignore next */
    cov_1g5xzar55g().f[20]++;
    cov_1g5xzar55g().s[100]++;
    try {
      let query =
      /* istanbul ignore next */
      (cov_1g5xzar55g().s[101]++, firebase_1.db.collection('images'));
      // Aplicar filtros
      /* istanbul ignore next */
      cov_1g5xzar55g().s[102]++;
      if (filters.category) {
        /* istanbul ignore next */
        cov_1g5xzar55g().b[21][0]++;
        cov_1g5xzar55g().s[103]++;
        query = query.where('category', '==', filters.category);
      } else
      /* istanbul ignore next */
      {
        cov_1g5xzar55g().b[21][1]++;
      }
      cov_1g5xzar55g().s[104]++;
      if (filters.userId) {
        /* istanbul ignore next */
        cov_1g5xzar55g().b[22][0]++;
        cov_1g5xzar55g().s[105]++;
        query = query.where('userId', '==', filters.userId);
      } else
      /* istanbul ignore next */
      {
        cov_1g5xzar55g().b[22][1]++;
      }
      cov_1g5xzar55g().s[106]++;
      if (filters.isPublic !== undefined) {
        /* istanbul ignore next */
        cov_1g5xzar55g().b[23][0]++;
        cov_1g5xzar55g().s[107]++;
        query = query.where('isPublic', '==', filters.isPublic);
      } else
      /* istanbul ignore next */
      {
        cov_1g5xzar55g().b[23][1]++;
      }
      cov_1g5xzar55g().s[108]++;
      if (filters.isActive !== undefined) {
        /* istanbul ignore next */
        cov_1g5xzar55g().b[24][0]++;
        cov_1g5xzar55g().s[109]++;
        query = query.where('isActive', '==', filters.isActive);
      } else
      /* istanbul ignore next */
      {
        cov_1g5xzar55g().b[24][1]++;
      }
      cov_1g5xzar55g().s[110]++;
      if (filters.metadata) {
        /* istanbul ignore next */
        cov_1g5xzar55g().b[25][0]++;
        cov_1g5xzar55g().s[111]++;
        Object.entries(filters.metadata).forEach(([key, value]) => {
          /* istanbul ignore next */
          cov_1g5xzar55g().f[21]++;
          cov_1g5xzar55g().s[112]++;
          query = query.where(`metadata.${key}`, '==', value);
        });
      } else
      /* istanbul ignore next */
      {
        cov_1g5xzar55g().b[25][1]++;
      }
      // Ordenar por fecha de creación (más reciente primero)
      cov_1g5xzar55g().s[113]++;
      query = query.orderBy('createdAt', 'desc');
      // Aplicar límites
      /* istanbul ignore next */
      cov_1g5xzar55g().s[114]++;
      if (filters.limit) {
        /* istanbul ignore next */
        cov_1g5xzar55g().b[26][0]++;
        cov_1g5xzar55g().s[115]++;
        query = query.limit(filters.limit);
      } else
      /* istanbul ignore next */
      {
        cov_1g5xzar55g().b[26][1]++;
      }
      cov_1g5xzar55g().s[116]++;
      if (filters.offset) {
        /* istanbul ignore next */
        cov_1g5xzar55g().b[27][0]++;
        cov_1g5xzar55g().s[117]++;
        query = query.offset(filters.offset);
      } else
      /* istanbul ignore next */
      {
        cov_1g5xzar55g().b[27][1]++;
      }
      const snapshot =
      /* istanbul ignore next */
      (cov_1g5xzar55g().s[118]++, yield query.get());
      const images =
      /* istanbul ignore next */
      (cov_1g5xzar55g().s[119]++, snapshot.docs.map(doc => {
        /* istanbul ignore next */
        cov_1g5xzar55g().f[22]++;
        cov_1g5xzar55g().s[120]++;
        return doc.data();
      }));
      // Regenerar URLs firmadas si es necesario
      const imagesWithUrls =
      /* istanbul ignore next */
      (cov_1g5xzar55g().s[121]++, yield Promise.all(images.map(image => {
        /* istanbul ignore next */
        cov_1g5xzar55g().f[23]++;
        cov_1g5xzar55g().s[122]++;
        return __awaiter(void 0, void 0, void 0, function* () {
          /* istanbul ignore next */
          cov_1g5xzar55g().f[24]++;
          cov_1g5xzar55g().s[123]++;
          try {
            /* istanbul ignore next */
            cov_1g5xzar55g().s[124]++;
            if (
            /* istanbul ignore next */
            (cov_1g5xzar55g().b[29][0]++, image.url) &&
            /* istanbul ignore next */
            (cov_1g5xzar55g().b[29][1]++, image.url.includes('expires='))) {
              /* istanbul ignore next */
              cov_1g5xzar55g().b[28][0]++;
              const expiresMatch =
              /* istanbul ignore next */
              (cov_1g5xzar55g().s[125]++, image.url.match(/expires=(\d+)/));
              /* istanbul ignore next */
              cov_1g5xzar55g().s[126]++;
              if (expiresMatch) {
                /* istanbul ignore next */
                cov_1g5xzar55g().b[30][0]++;
                const expiresAt =
                /* istanbul ignore next */
                (cov_1g5xzar55g().s[127]++, parseInt(expiresMatch[1]));
                const now =
                /* istanbul ignore next */
                (cov_1g5xzar55g().s[128]++, Math.floor(Date.now() / 1000));
                /* istanbul ignore next */
                cov_1g5xzar55g().s[129]++;
                if (expiresAt <= now + 300) {
                  /* istanbul ignore next */
                  cov_1g5xzar55g().b[31][0]++;
                  cov_1g5xzar55g().s[130]++;
                  // Regenerar si expira en menos de 5 minutos
                  image.url = yield (0, exports.generateSignedUrl)(image.key);
                  /* istanbul ignore next */
                  cov_1g5xzar55g().s[131]++;
                  yield firebase_1.db.collection('images').doc(image.id).update({
                    url: image.url,
                    updatedAt: new Date().toISOString()
                  });
                } else
                /* istanbul ignore next */
                {
                  cov_1g5xzar55g().b[31][1]++;
                }
              } else
              /* istanbul ignore next */
              {
                cov_1g5xzar55g().b[30][1]++;
              }
            } else {
              /* istanbul ignore next */
              cov_1g5xzar55g().b[28][1]++;
              cov_1g5xzar55g().s[132]++;
              // Si no tiene URL firmada, generarla
              image.url = yield (0, exports.generateSignedUrl)(image.key);
              /* istanbul ignore next */
              cov_1g5xzar55g().s[133]++;
              yield firebase_1.db.collection('images').doc(image.id).update({
                url: image.url,
                updatedAt: new Date().toISOString()
              });
            }
            /* istanbul ignore next */
            cov_1g5xzar55g().s[134]++;
            return image;
          } catch (error) {
            /* istanbul ignore next */
            cov_1g5xzar55g().s[135]++;
            console.error(`[src/models/imagesModel.ts:listImages] Error al regenerar URL para imagen ${image.id}:`, error);
            /* istanbul ignore next */
            cov_1g5xzar55g().s[136]++;
            return image;
          }
        });
      })));
      /* istanbul ignore next */
      cov_1g5xzar55g().s[137]++;
      console.log(`[src/models/imagesModel.ts:listImages] ${imagesWithUrls.length} imágenes encontradas`);
      /* istanbul ignore next */
      cov_1g5xzar55g().s[138]++;
      return imagesWithUrls;
    } catch (error) {
      /* istanbul ignore next */
      cov_1g5xzar55g().s[139]++;
      loggerService_1.logger.error('[src/models/imagesModel.ts:listImages] Error al listar imágenes:', error);
      /* istanbul ignore next */
      cov_1g5xzar55g().s[140]++;
      throw error;
    }
  });
};
/* istanbul ignore next */
cov_1g5xzar55g().s[141]++;
exports.listImages = listImages;
/**
 * Actualizar imagen
 */
/* istanbul ignore next */
cov_1g5xzar55g().s[142]++;
const updateImage = (imageId, updateData) => {
  /* istanbul ignore next */
  cov_1g5xzar55g().f[25]++;
  cov_1g5xzar55g().s[143]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1g5xzar55g().f[26]++;
    cov_1g5xzar55g().s[144]++;
    try {
      const imageRef =
      /* istanbul ignore next */
      (cov_1g5xzar55g().s[145]++, firebase_1.db.collection('images').doc(imageId));
      const imageDoc =
      /* istanbul ignore next */
      (cov_1g5xzar55g().s[146]++, yield imageRef.get());
      /* istanbul ignore next */
      cov_1g5xzar55g().s[147]++;
      if (!imageDoc.exists) {
        /* istanbul ignore next */
        cov_1g5xzar55g().b[32][0]++;
        cov_1g5xzar55g().s[148]++;
        throw new Error('Imagen no encontrada');
      } else
      /* istanbul ignore next */
      {
        cov_1g5xzar55g().b[32][1]++;
      }
      const updateFields =
      /* istanbul ignore next */
      (cov_1g5xzar55g().s[149]++, Object.assign(Object.assign({}, updateData), {
        updatedAt: new Date().toISOString()
      }));
      /* istanbul ignore next */
      cov_1g5xzar55g().s[150]++;
      yield imageRef.update(updateFields);
      // Obtener imagen actualizada
      const updatedDoc =
      /* istanbul ignore next */
      (cov_1g5xzar55g().s[151]++, yield imageRef.get());
      const updatedImage =
      /* istanbul ignore next */
      (cov_1g5xzar55g().s[152]++, updatedDoc.data());
      /* istanbul ignore next */
      cov_1g5xzar55g().s[153]++;
      console.log(`[src/models/imagesModel.ts:updateImage] Imagen actualizada: ${imageId}`);
      /* istanbul ignore next */
      cov_1g5xzar55g().s[154]++;
      return updatedImage;
    } catch (error) {
      /* istanbul ignore next */
      cov_1g5xzar55g().s[155]++;
      loggerService_1.logger.error('[src/models/imagesModel.ts:updateImage] Error al actualizar imagen:', error);
      /* istanbul ignore next */
      cov_1g5xzar55g().s[156]++;
      throw error;
    }
  });
};
/* istanbul ignore next */
cov_1g5xzar55g().s[157]++;
exports.updateImage = updateImage;
/**
 * Eliminar imagen (soft delete)
 */
/* istanbul ignore next */
cov_1g5xzar55g().s[158]++;
const deleteImage = (imageId, userId) => {
  /* istanbul ignore next */
  cov_1g5xzar55g().f[27]++;
  cov_1g5xzar55g().s[159]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1g5xzar55g().f[28]++;
    var _a;
    /* istanbul ignore next */
    cov_1g5xzar55g().s[160]++;
    try {
      const imageRef =
      /* istanbul ignore next */
      (cov_1g5xzar55g().s[161]++, firebase_1.db.collection('images').doc(imageId));
      const imageDoc =
      /* istanbul ignore next */
      (cov_1g5xzar55g().s[162]++, yield imageRef.get());
      /* istanbul ignore next */
      cov_1g5xzar55g().s[163]++;
      if (!imageDoc.exists) {
        /* istanbul ignore next */
        cov_1g5xzar55g().b[33][0]++;
        cov_1g5xzar55g().s[164]++;
        throw new Error('Imagen no encontrada');
      } else
      /* istanbul ignore next */
      {
        cov_1g5xzar55g().b[33][1]++;
      }
      const image =
      /* istanbul ignore next */
      (cov_1g5xzar55g().s[165]++, imageDoc.data());
      // Verificar permisos (solo el propietario o admin puede eliminar)
      /* istanbul ignore next */
      cov_1g5xzar55g().s[166]++;
      if (image.userId !== userId) {
        /* istanbul ignore next */
        cov_1g5xzar55g().b[34][0]++;
        // Verificar si el usuario es admin
        const userDoc =
        /* istanbul ignore next */
        (cov_1g5xzar55g().s[167]++, yield firebase_1.db.collection('users').doc(userId).get());
        /* istanbul ignore next */
        cov_1g5xzar55g().s[168]++;
        if (
        /* istanbul ignore next */
        (cov_1g5xzar55g().b[36][0]++, !userDoc.exists) ||
        /* istanbul ignore next */
        (cov_1g5xzar55g().b[36][1]++, (
        /* istanbul ignore next */
        (cov_1g5xzar55g().b[38][0]++, (_a = userDoc.data()) === null) ||
        /* istanbul ignore next */
        (cov_1g5xzar55g().b[38][1]++, _a === void 0) ?
        /* istanbul ignore next */
        (cov_1g5xzar55g().b[37][0]++, void 0) :
        /* istanbul ignore next */
        (cov_1g5xzar55g().b[37][1]++, _a.roll)) !== 'admin')) {
          /* istanbul ignore next */
          cov_1g5xzar55g().b[35][0]++;
          cov_1g5xzar55g().s[169]++;
          throw new Error('No tienes permisos para eliminar esta imagen');
        } else
        /* istanbul ignore next */
        {
          cov_1g5xzar55g().b[35][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_1g5xzar55g().b[34][1]++;
      }
      // Soft delete - marcar como inactiva
      cov_1g5xzar55g().s[170]++;
      yield imageRef.update({
        isActive: false,
        updatedAt: new Date().toISOString()
      });
      /* istanbul ignore next */
      cov_1g5xzar55g().s[171]++;
      console.log(`[src/models/imagesModel.ts:deleteImage] Imagen marcada como eliminada: ${imageId}`);
      /* istanbul ignore next */
      cov_1g5xzar55g().s[172]++;
      return true;
    } catch (error) {
      /* istanbul ignore next */
      cov_1g5xzar55g().s[173]++;
      loggerService_1.logger.error('[src/models/imagesModel.ts:deleteImage] Error al eliminar imagen:', error);
      /* istanbul ignore next */
      cov_1g5xzar55g().s[174]++;
      throw error;
    }
  });
};
/* istanbul ignore next */
cov_1g5xzar55g().s[175]++;
exports.deleteImage = deleteImage;
/**
 * Eliminar imagen de idriveE2 (hard delete)
 */
/* istanbul ignore next */
cov_1g5xzar55g().s[176]++;
const deleteImageFromS3 = key => {
  /* istanbul ignore next */
  cov_1g5xzar55g().f[29]++;
  cov_1g5xzar55g().s[177]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1g5xzar55g().f[30]++;
    cov_1g5xzar55g().s[178]++;
    try {
      const command =
      /* istanbul ignore next */
      (cov_1g5xzar55g().s[179]++, new client_s3_1.DeleteObjectCommand({
        Bucket: BUCKET_NAME,
        Key: key
      }));
      /* istanbul ignore next */
      cov_1g5xzar55g().s[180]++;
      yield s3Client.send(command);
      /* istanbul ignore next */
      cov_1g5xzar55g().s[181]++;
      console.log(`[src/models/imagesModel.ts:deleteImageFromS3] Imagen eliminada de idriveE2: ${key}`);
      /* istanbul ignore next */
      cov_1g5xzar55g().s[182]++;
      return true;
    } catch (error) {
      /* istanbul ignore next */
      cov_1g5xzar55g().s[183]++;
      loggerService_1.logger.error('[src/models/imagesModel.ts:deleteImageFromS3] Error al eliminar imagen de idriveE2:', error);
      /* istanbul ignore next */
      cov_1g5xzar55g().s[184]++;
      throw error;
    }
  });
};
/* istanbul ignore next */
cov_1g5xzar55g().s[185]++;
exports.deleteImageFromS3 = deleteImageFromS3;
/**
 * Obtener estadísticas de imágenes
 */
/* istanbul ignore next */
cov_1g5xzar55g().s[186]++;
const getImageStats = () => {
  /* istanbul ignore next */
  cov_1g5xzar55g().f[31]++;
  cov_1g5xzar55g().s[187]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1g5xzar55g().f[32]++;
    cov_1g5xzar55g().s[188]++;
    try {
      const snapshot =
      /* istanbul ignore next */
      (cov_1g5xzar55g().s[189]++, yield firebase_1.db.collection('images').where('isActive', '==', true).get());
      const images =
      /* istanbul ignore next */
      (cov_1g5xzar55g().s[190]++, snapshot.docs.map(doc => {
        /* istanbul ignore next */
        cov_1g5xzar55g().f[33]++;
        cov_1g5xzar55g().s[191]++;
        return doc.data();
      }));
      const totalImages =
      /* istanbul ignore next */
      (cov_1g5xzar55g().s[192]++, images.length);
      const totalSize =
      /* istanbul ignore next */
      (cov_1g5xzar55g().s[193]++, images.reduce((sum, img) => {
        /* istanbul ignore next */
        cov_1g5xzar55g().f[34]++;
        cov_1g5xzar55g().s[194]++;
        return sum + img.size;
      }, 0));
      const imagesByCategory =
      /* istanbul ignore next */
      (cov_1g5xzar55g().s[195]++, {});
      const imagesByUser =
      /* istanbul ignore next */
      (cov_1g5xzar55g().s[196]++, {});
      /* istanbul ignore next */
      cov_1g5xzar55g().s[197]++;
      images.forEach(image => {
        /* istanbul ignore next */
        cov_1g5xzar55g().f[35]++;
        cov_1g5xzar55g().s[198]++;
        imagesByCategory[image.category] = (
        /* istanbul ignore next */
        (cov_1g5xzar55g().b[39][0]++, imagesByCategory[image.category]) ||
        /* istanbul ignore next */
        (cov_1g5xzar55g().b[39][1]++, 0)) + 1;
        /* istanbul ignore next */
        cov_1g5xzar55g().s[199]++;
        imagesByUser[image.userId] = (
        /* istanbul ignore next */
        (cov_1g5xzar55g().b[40][0]++, imagesByUser[image.userId]) ||
        /* istanbul ignore next */
        (cov_1g5xzar55g().b[40][1]++, 0)) + 1;
      });
      const recentUploads =
      /* istanbul ignore next */
      (cov_1g5xzar55g().s[200]++, images.sort((a, b) => {
        /* istanbul ignore next */
        cov_1g5xzar55g().f[36]++;
        cov_1g5xzar55g().s[201]++;
        return new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime();
      }).slice(0, 10));
      const stats =
      /* istanbul ignore next */
      (cov_1g5xzar55g().s[202]++, {
        totalImages,
        totalSize,
        imagesByCategory,
        imagesByUser,
        recentUploads
      });
      /* istanbul ignore next */
      cov_1g5xzar55g().s[203]++;
      console.log(`[src/models/imagesModel.ts:getImageStats] Estadísticas generadas: ${totalImages} imágenes, ${totalSize} bytes`);
      /* istanbul ignore next */
      cov_1g5xzar55g().s[204]++;
      return stats;
    } catch (error) {
      /* istanbul ignore next */
      cov_1g5xzar55g().s[205]++;
      loggerService_1.logger.error('[src/models/imagesModel.ts:getImageStats] Error al obtener estadísticas:', error);
      /* istanbul ignore next */
      cov_1g5xzar55g().s[206]++;
      throw error;
    }
  });
};
/* istanbul ignore next */
cov_1g5xzar55g().s[207]++;
exports.getImageStats = getImageStats;
/**
 * Obtener imágenes de perfil de usuario
 */
/* istanbul ignore next */
cov_1g5xzar55g().s[208]++;
const getUserProfileImages = userId => {
  /* istanbul ignore next */
  cov_1g5xzar55g().f[37]++;
  cov_1g5xzar55g().s[209]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1g5xzar55g().f[38]++;
    cov_1g5xzar55g().s[210]++;
    try {
      /* istanbul ignore next */
      cov_1g5xzar55g().s[211]++;
      return yield (0, exports.listImages)({
        userId,
        category: 'profile',
        isActive: true
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1g5xzar55g().s[212]++;
      loggerService_1.logger.error('[src/models/imagesModel.ts:getUserProfileImages] Error al obtener imágenes de perfil:', error);
      /* istanbul ignore next */
      cov_1g5xzar55g().s[213]++;
      throw error;
    }
  });
};
/* istanbul ignore next */
cov_1g5xzar55g().s[214]++;
exports.getUserProfileImages = getUserProfileImages;
/**
 * Obtener imágenes de posts
 */
/* istanbul ignore next */
cov_1g5xzar55g().s[215]++;
const getPostImages = userId => {
  /* istanbul ignore next */
  cov_1g5xzar55g().f[39]++;
  cov_1g5xzar55g().s[216]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1g5xzar55g().f[40]++;
    cov_1g5xzar55g().s[217]++;
    try {
      const filters =
      /* istanbul ignore next */
      (cov_1g5xzar55g().s[218]++, {
        category: 'post',
        isActive: true,
        isPublic: true
      });
      /* istanbul ignore next */
      cov_1g5xzar55g().s[219]++;
      if (userId) {
        /* istanbul ignore next */
        cov_1g5xzar55g().b[41][0]++;
        cov_1g5xzar55g().s[220]++;
        filters.userId = userId;
      } else
      /* istanbul ignore next */
      {
        cov_1g5xzar55g().b[41][1]++;
      }
      cov_1g5xzar55g().s[221]++;
      return yield (0, exports.listImages)(filters);
    } catch (error) {
      /* istanbul ignore next */
      cov_1g5xzar55g().s[222]++;
      loggerService_1.logger.error('[src/models/imagesModel.ts:getPostImages] Error al obtener imágenes de posts:', error);
      /* istanbul ignore next */
      cov_1g5xzar55g().s[223]++;
      throw error;
    }
  });
};
/* istanbul ignore next */
cov_1g5xzar55g().s[224]++;
exports.getPostImages = getPostImages;
/**
 * Obtener imágenes de eventos
 */
/* istanbul ignore next */
cov_1g5xzar55g().s[225]++;
const getEventImages = eventId => {
  /* istanbul ignore next */
  cov_1g5xzar55g().f[41]++;
  cov_1g5xzar55g().s[226]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1g5xzar55g().f[42]++;
    cov_1g5xzar55g().s[227]++;
    try {
      const filters =
      /* istanbul ignore next */
      (cov_1g5xzar55g().s[228]++, {
        category: 'event',
        isActive: true
      });
      /* istanbul ignore next */
      cov_1g5xzar55g().s[229]++;
      if (eventId) {
        /* istanbul ignore next */
        cov_1g5xzar55g().b[42][0]++;
        cov_1g5xzar55g().s[230]++;
        filters.metadata = {
          eventId
        };
      } else
      /* istanbul ignore next */
      {
        cov_1g5xzar55g().b[42][1]++;
      }
      cov_1g5xzar55g().s[231]++;
      return yield (0, exports.listImages)(filters);
    } catch (error) {
      /* istanbul ignore next */
      cov_1g5xzar55g().s[232]++;
      loggerService_1.logger.error('[src/models/imagesModel.ts:getEventImages] Error al obtener imágenes de eventos:', error);
      /* istanbul ignore next */
      cov_1g5xzar55g().s[233]++;
      throw error;
    }
  });
};
/* istanbul ignore next */
cov_1g5xzar55g().s[234]++;
exports.getEventImages = getEventImages;
/**
 * Limpiar imágenes expiradas (tareas de mantenimiento)
 */
/* istanbul ignore next */
cov_1g5xzar55g().s[235]++;
const cleanupExpiredImages = () => {
  /* istanbul ignore next */
  cov_1g5xzar55g().f[43]++;
  cov_1g5xzar55g().s[236]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1g5xzar55g().f[44]++;
    cov_1g5xzar55g().s[237]++;
    try {
      const now =
      /* istanbul ignore next */
      (cov_1g5xzar55g().s[238]++, new Date());
      const snapshot =
      /* istanbul ignore next */
      (cov_1g5xzar55g().s[239]++, yield firebase_1.db.collection('images').where('expiresAt', '<=', now.toISOString()).where('isActive', '==', true).get());
      let deletedCount =
      /* istanbul ignore next */
      (cov_1g5xzar55g().s[240]++, 0);
      /* istanbul ignore next */
      cov_1g5xzar55g().s[241]++;
      for (const doc of snapshot.docs) {
        const image =
        /* istanbul ignore next */
        (cov_1g5xzar55g().s[242]++, doc.data());
        // Eliminar de idriveE2
        /* istanbul ignore next */
        cov_1g5xzar55g().s[243]++;
        yield (0, exports.deleteImageFromS3)(image.key);
        // Marcar como inactiva en Firestore
        /* istanbul ignore next */
        cov_1g5xzar55g().s[244]++;
        yield doc.ref.update({
          isActive: false,
          updatedAt: now.toISOString()
        });
        /* istanbul ignore next */
        cov_1g5xzar55g().s[245]++;
        deletedCount++;
      }
      /* istanbul ignore next */
      cov_1g5xzar55g().s[246]++;
      console.log(`[src/models/imagesModel.ts:cleanupExpiredImages] ${deletedCount} imágenes expiradas eliminadas`);
      /* istanbul ignore next */
      cov_1g5xzar55g().s[247]++;
      return deletedCount;
    } catch (error) {
      /* istanbul ignore next */
      cov_1g5xzar55g().s[248]++;
      loggerService_1.logger.error('[src/models/imagesModel.ts:cleanupExpiredImages] Error al limpiar imágenes expiradas:', error);
      /* istanbul ignore next */
      cov_1g5xzar55g().s[249]++;
      throw error;
    }
  });
};
/* istanbul ignore next */
cov_1g5xzar55g().s[250]++;
exports.cleanupExpiredImages = cleanupExpiredImages;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMWc1eHphcjU1ZyIsImFjdHVhbENvdmVyYWdlIiwiY2xpZW50X3MzXzEiLCJzIiwicmVxdWlyZSIsInMzX3JlcXVlc3RfcHJlc2lnbmVyXzEiLCJmaXJlYmFzZV8xIiwibG9nZ2VyU2VydmljZV8xIiwiczNDbGllbnQiLCJTM0NsaWVudCIsInJlZ2lvbiIsImIiLCJwcm9jZXNzIiwiZW52IiwiSURSSVZFX0UyX1JFR0lPTiIsImVuZHBvaW50IiwiSURSSVZFX0UyX0VORFBPSU5UIiwiY3JlZGVudGlhbHMiLCJhY2Nlc3NLZXlJZCIsIklEUklWRV9FMl9BQ0NFU1NfS0VZIiwic2VjcmV0QWNjZXNzS2V5IiwiSURSSVZFX0UyX1NFQ1JFVF9LRVkiLCJmb3JjZVBhdGhTdHlsZSIsIkJVQ0tFVF9OQU1FIiwiSURSSVZFX0UyX0JVQ0tFVF9OQU1FIiwiTUFYX0ZJTEVfU0laRSIsIkFMTE9XRURfTUlNRV9UWVBFUyIsInZhbGlkYXRlRmlsZSIsImZpbGUiLCJmIiwic2l6ZSIsIkVycm9yIiwiaW5jbHVkZXMiLCJtaW1ldHlwZSIsImdlbmVyYXRlRmlsZU5hbWUiLCJvcmlnaW5hbE5hbWUiLCJjYXRlZ29yeSIsInVzZXJJZCIsInRpbWVzdGFtcCIsIkRhdGUiLCJub3ciLCJyYW5kb21TdHJpbmciLCJNYXRoIiwicmFuZG9tIiwidG9TdHJpbmciLCJzdWJzdHJpbmciLCJleHRlbnNpb24iLCJzcGxpdCIsInBvcCIsInVwbG9hZEltYWdlVG9TMyIsImtleSIsIl9fYXdhaXRlciIsImNvbW1hbmQiLCJQdXRPYmplY3RDb21tYW5kIiwiQnVja2V0IiwiS2V5IiwiQm9keSIsImJ1ZmZlciIsIkNvbnRlbnRUeXBlIiwiTWV0YWRhdGEiLCJvcmlnaW5hbG5hbWUiLCJ1cGxvYWRlZEJ5IiwidXBsb2FkZWRBdCIsInRvSVNPU3RyaW5nIiwic2VuZCIsImNvbnNvbGUiLCJsb2ciLCJlcnJvciIsImxvZ2dlciIsImV4cG9ydHMiLCJnZW5lcmF0ZVNpZ25lZFVybCIsImtleV8xIiwiYXJnc18xIiwiZXhwaXJlc0luIiwiR2V0T2JqZWN0Q29tbWFuZCIsInNpZ25lZFVybCIsImdldFNpZ25lZFVybCIsImNyZWF0ZUltYWdlUmVjb3JkIiwiaW1hZ2VEYXRhIiwiaW1hZ2VSZWYiLCJkYiIsImNvbGxlY3Rpb24iLCJkb2MiLCJpbWFnZSIsIk9iamVjdCIsImFzc2lnbiIsImlkIiwiY3JlYXRlZEF0IiwidXBkYXRlZEF0Iiwic2V0IiwidXBsb2FkSW1hZ2UiLCJmaWxlXzEiLCJ1c2VySWRfMSIsImNhdGVnb3J5XzEiLCJtZXRhZGF0YSIsInVwbG9hZFJlc3VsdCIsInVybCIsImZpbGVOYW1lIiwiZGVzY3JpcHRpb24iLCJ0YWdzIiwiY3VzdG9tTWV0YWRhdGEiLCJpc1B1YmxpYyIsInVuZGVmaW5lZCIsImlzQWN0aXZlIiwiZ2V0SW1hZ2VCeUlkIiwiaW1hZ2VJZCIsImltYWdlRG9jIiwiZ2V0IiwiZXhpc3RzIiwiZGF0YSIsImV4cGlyZXNNYXRjaCIsIm1hdGNoIiwiZXhwaXJlc0F0IiwicGFyc2VJbnQiLCJmbG9vciIsInJlZiIsInVwZGF0ZSIsImxpc3RJbWFnZXMiLCJmaWx0ZXJzIiwicXVlcnkiLCJ3aGVyZSIsImVudHJpZXMiLCJmb3JFYWNoIiwidmFsdWUiLCJvcmRlckJ5IiwibGltaXQiLCJvZmZzZXQiLCJzbmFwc2hvdCIsImltYWdlcyIsImRvY3MiLCJtYXAiLCJpbWFnZXNXaXRoVXJscyIsIlByb21pc2UiLCJhbGwiLCJsZW5ndGgiLCJ1cGRhdGVJbWFnZSIsInVwZGF0ZURhdGEiLCJ1cGRhdGVGaWVsZHMiLCJ1cGRhdGVkRG9jIiwidXBkYXRlZEltYWdlIiwiZGVsZXRlSW1hZ2UiLCJ1c2VyRG9jIiwiX2EiLCJyb2xsIiwiZGVsZXRlSW1hZ2VGcm9tUzMiLCJEZWxldGVPYmplY3RDb21tYW5kIiwiZ2V0SW1hZ2VTdGF0cyIsInRvdGFsSW1hZ2VzIiwidG90YWxTaXplIiwicmVkdWNlIiwic3VtIiwiaW1nIiwiaW1hZ2VzQnlDYXRlZ29yeSIsImltYWdlc0J5VXNlciIsInJlY2VudFVwbG9hZHMiLCJzb3J0IiwiYSIsImdldFRpbWUiLCJzbGljZSIsInN0YXRzIiwiZ2V0VXNlclByb2ZpbGVJbWFnZXMiLCJnZXRQb3N0SW1hZ2VzIiwiZ2V0RXZlbnRJbWFnZXMiLCJldmVudElkIiwiY2xlYW51cEV4cGlyZWRJbWFnZXMiLCJkZWxldGVkQ291bnQiXSwic291cmNlcyI6WyJDOlxcc3JjXFxBUFBfTXVzc2lrT25cXEFQUF9NdXNzaWtPbl9FeHByZXNzXFxzcmNcXG1vZGVsc1xcaW1hZ2VzTW9kZWwudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcclxuICBTM0NsaWVudCxcclxuICBQdXRPYmplY3RDb21tYW5kLFxyXG4gIERlbGV0ZU9iamVjdENvbW1hbmQsXHJcbiAgR2V0T2JqZWN0Q29tbWFuZCxcclxuICBMaXN0T2JqZWN0c1YyQ29tbWFuZCxcclxuICBDb3B5T2JqZWN0Q29tbWFuZCxcclxuICBIZWFkT2JqZWN0Q29tbWFuZCxcclxufSBmcm9tICdAYXdzLXNkay9jbGllbnQtczMnO1xyXG5pbXBvcnQgeyBnZXRTaWduZWRVcmwgfSBmcm9tICdAYXdzLXNkay9zMy1yZXF1ZXN0LXByZXNpZ25lcic7XHJcbmltcG9ydCB7XHJcbiAgSW1hZ2UsXHJcbiAgSW1hZ2VGaWx0ZXJzLFxyXG4gIEltYWdlU3RhdHMsXHJcbiAgSW1hZ2VVcGRhdGVSZXF1ZXN0LFxyXG59IGZyb20gJy4uL3V0aWxzL0RhdGFUeXBlcyc7XHJcbmltcG9ydCB7IGRiIH0gZnJvbSAnLi4vdXRpbHMvZmlyZWJhc2UnO1xyXG5pbXBvcnQgKiBhcyBhZG1pbiBmcm9tICdmaXJlYmFzZS1hZG1pbic7XHJcbmltcG9ydCB7IGxvZ2dlciB9IGZyb20gJy4uL3NlcnZpY2VzL2xvZ2dlclNlcnZpY2UnO1xyXG5cclxuLy8gQ29uZmlndXJhY2nDs24gZGUgaWRyaXZlRTJcclxuY29uc3QgczNDbGllbnQgPSBuZXcgUzNDbGllbnQoe1xyXG4gIHJlZ2lvbjogcHJvY2Vzcy5lbnYuSURSSVZFX0UyX1JFR0lPTiB8fCAndXMtZWFzdC0xJyxcclxuICBlbmRwb2ludDogcHJvY2Vzcy5lbnYuSURSSVZFX0UyX0VORFBPSU5ULFxyXG4gIGNyZWRlbnRpYWxzOiB7XHJcbiAgICBhY2Nlc3NLZXlJZDogcHJvY2Vzcy5lbnYuSURSSVZFX0UyX0FDQ0VTU19LRVkhLFxyXG4gICAgc2VjcmV0QWNjZXNzS2V5OiBwcm9jZXNzLmVudi5JRFJJVkVfRTJfU0VDUkVUX0tFWSEsXHJcbiAgfSxcclxuICBmb3JjZVBhdGhTdHlsZTogdHJ1ZSxcclxufSk7XHJcblxyXG5jb25zdCBCVUNLRVRfTkFNRSA9IHByb2Nlc3MuZW52LklEUklWRV9FMl9CVUNLRVRfTkFNRSE7XHJcblxyXG4vLyBDb25maWd1cmFjacOzbiBkZSB2YWxpZGFjacOzblxyXG5jb25zdCBNQVhfRklMRV9TSVpFID0gMTAgKiAxMDI0ICogMTAyNDsgLy8gMTBNQlxyXG5jb25zdCBBTExPV0VEX01JTUVfVFlQRVMgPSBbXHJcbiAgJ2ltYWdlL2pwZWcnLFxyXG4gICdpbWFnZS9wbmcnLFxyXG4gICdpbWFnZS9naWYnLFxyXG4gICdpbWFnZS93ZWJwJyxcclxuICAnaW1hZ2Uvc3ZnK3htbCcsXHJcbl07XHJcblxyXG4vKipcclxuICogVmFsaWRhciBhcmNoaXZvIGFudGVzIGRlIHN1YmlyXHJcbiAqL1xyXG5jb25zdCB2YWxpZGF0ZUZpbGUgPSAoZmlsZTogRXhwcmVzcy5NdWx0ZXIuRmlsZSk6IHZvaWQgPT4ge1xyXG4gIGlmIChmaWxlLnNpemUgPiBNQVhfRklMRV9TSVpFKSB7XHJcbiAgICB0aHJvdyBuZXcgRXJyb3IoXHJcbiAgICAgIGBFbCBhcmNoaXZvIGVzIGRlbWFzaWFkbyBncmFuZGUuIE3DoXhpbW8gJHtNQVhfRklMRV9TSVpFIC8gMTAyNCAvIDEwMjR9TUJgXHJcbiAgICApO1xyXG4gIH1cclxuXHJcbiAgaWYgKCFBTExPV0VEX01JTUVfVFlQRVMuaW5jbHVkZXMoZmlsZS5taW1ldHlwZSkpIHtcclxuICAgIHRocm93IG5ldyBFcnJvcihcclxuICAgICAgJ1RpcG8gZGUgYXJjaGl2byBubyBwZXJtaXRpZG8uIFNvbG8gc2UgcGVybWl0ZW4gaW3DoWdlbmVzIChKUEVHLCBQTkcsIEdJRiwgV2ViUCwgU1ZHKSdcclxuICAgICk7XHJcbiAgfVxyXG59O1xyXG5cclxuLyoqXHJcbiAqIEdlbmVyYXIgbm9tYnJlIMO6bmljbyBwYXJhIGVsIGFyY2hpdm9cclxuICovXHJcbmNvbnN0IGdlbmVyYXRlRmlsZU5hbWUgPSAoXHJcbiAgb3JpZ2luYWxOYW1lOiBzdHJpbmcsXHJcbiAgY2F0ZWdvcnk6IHN0cmluZyxcclxuICB1c2VySWQ6IHN0cmluZ1xyXG4pOiBzdHJpbmcgPT4ge1xyXG4gIGNvbnN0IHRpbWVzdGFtcCA9IERhdGUubm93KCk7XHJcbiAgY29uc3QgcmFuZG9tU3RyaW5nID0gTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyaW5nKDIsIDE1KTtcclxuICBjb25zdCBleHRlbnNpb24gPSBvcmlnaW5hbE5hbWUuc3BsaXQoJy4nKS5wb3AoKTtcclxuICByZXR1cm4gYCR7Y2F0ZWdvcnl9LyR7dXNlcklkfS8ke3RpbWVzdGFtcH1fJHtyYW5kb21TdHJpbmd9LiR7ZXh0ZW5zaW9ufWA7XHJcbn07XHJcblxyXG4vKipcclxuICogU3ViaXIgaW1hZ2VuIGEgaWRyaXZlRTJcclxuICovXHJcbmV4cG9ydCBjb25zdCB1cGxvYWRJbWFnZVRvUzMgPSBhc3luYyAoXHJcbiAgZmlsZTogRXhwcmVzcy5NdWx0ZXIuRmlsZSxcclxuICBrZXk6IHN0cmluZ1xyXG4pOiBQcm9taXNlPHsga2V5OiBzdHJpbmc7IHNpemU6IG51bWJlcjsgbWltZXR5cGU6IHN0cmluZyB9PiA9PiB7XHJcbiAgdHJ5IHtcclxuICAgIHZhbGlkYXRlRmlsZShmaWxlKTtcclxuXHJcbiAgICBjb25zdCBjb21tYW5kID0gbmV3IFB1dE9iamVjdENvbW1hbmQoe1xyXG4gICAgICBCdWNrZXQ6IEJVQ0tFVF9OQU1FLFxyXG4gICAgICBLZXk6IGtleSxcclxuICAgICAgQm9keTogZmlsZS5idWZmZXIsXHJcbiAgICAgIENvbnRlbnRUeXBlOiBmaWxlLm1pbWV0eXBlLFxyXG4gICAgICBNZXRhZGF0YToge1xyXG4gICAgICAgIG9yaWdpbmFsTmFtZTogZmlsZS5vcmlnaW5hbG5hbWUsXHJcbiAgICAgICAgdXBsb2FkZWRCeTogJ211c3Npa29uLXN5c3RlbScsXHJcbiAgICAgICAgdXBsb2FkZWRBdDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxyXG4gICAgICB9LFxyXG4gICAgfSk7XHJcblxyXG4gICAgYXdhaXQgczNDbGllbnQuc2VuZChjb21tYW5kKTtcclxuXHJcbiAgICBjb25zb2xlLmxvZyhcclxuICAgICAgYFtzcmMvbW9kZWxzL2ltYWdlc01vZGVsLnRzOnVwbG9hZEltYWdlVG9TM10gSW1hZ2VuIHN1YmlkYSBhIGlkcml2ZUUyOiAke2tleX1gXHJcbiAgICApO1xyXG5cclxuICAgIHJldHVybiB7XHJcbiAgICAgIGtleSxcclxuICAgICAgc2l6ZTogZmlsZS5zaXplLFxyXG4gICAgICBtaW1ldHlwZTogZmlsZS5taW1ldHlwZSxcclxuICAgIH07XHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGxvZ2dlci5lcnJvcignW3NyYy9tb2RlbHMvaW1hZ2VzTW9kZWwudHM6dXBsb2FkSW1hZ2VUb1MzXSBFcnJvciBhbCBzdWJpciBpbWFnZW4gYSBpZHJpdmVFMjonLCBlcnJvciBhcyBFcnJvcik7XHJcbiAgICB0aHJvdyBlcnJvcjtcclxuICB9XHJcbn07XHJcblxyXG4vKipcclxuICogR2VuZXJhciBVUkwgZmlybWFkYSBwYXJhIGFjY2VzbyBhIGltYWdlblxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IGdlbmVyYXRlU2lnbmVkVXJsID0gYXN5bmMgKFxyXG4gIGtleTogc3RyaW5nLFxyXG4gIGV4cGlyZXNJbjogbnVtYmVyID0gMzYwMFxyXG4pOiBQcm9taXNlPHN0cmluZz4gPT4ge1xyXG4gIHRyeSB7XHJcbiAgICBjb25zdCBjb21tYW5kID0gbmV3IEdldE9iamVjdENvbW1hbmQoe1xyXG4gICAgICBCdWNrZXQ6IEJVQ0tFVF9OQU1FLFxyXG4gICAgICBLZXk6IGtleSxcclxuICAgIH0pO1xyXG5cclxuICAgIGNvbnN0IHNpZ25lZFVybCA9IGF3YWl0IGdldFNpZ25lZFVybChzM0NsaWVudCwgY29tbWFuZCwgeyBleHBpcmVzSW4gfSk7XHJcbiAgICByZXR1cm4gc2lnbmVkVXJsO1xyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBsb2dnZXIuZXJyb3IoJ1tzcmMvbW9kZWxzL2ltYWdlc01vZGVsLnRzOmdlbmVyYXRlU2lnbmVkVXJsXSBFcnJvciBhbCBnZW5lcmFyIFVSTCBmaXJtYWRhOicsIGVycm9yIGFzIEVycm9yKTtcclxuICAgIHRocm93IGVycm9yO1xyXG4gIH1cclxufTtcclxuXHJcbi8qKlxyXG4gKiBDcmVhciByZWdpc3RybyBkZSBpbWFnZW4gZW4gRmlyZXN0b3JlXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgY3JlYXRlSW1hZ2VSZWNvcmQgPSBhc3luYyAoXHJcbiAgaW1hZ2VEYXRhOiBPbWl0PEltYWdlLCAnaWQnIHwgJ2NyZWF0ZWRBdCcgfCAndXBkYXRlZEF0Jz5cclxuKTogUHJvbWlzZTxJbWFnZT4gPT4ge1xyXG4gIHRyeSB7XHJcbiAgICBjb25zdCBub3cgPSBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCk7XHJcbiAgICBjb25zdCBpbWFnZVJlZiA9IGRiLmNvbGxlY3Rpb24oJ2ltYWdlcycpLmRvYygpO1xyXG5cclxuICAgIGNvbnN0IGltYWdlOiBJbWFnZSA9IHtcclxuICAgICAgaWQ6IGltYWdlUmVmLmlkLFxyXG4gICAgICAuLi5pbWFnZURhdGEsXHJcbiAgICAgIGNyZWF0ZWRBdDogbm93LFxyXG4gICAgICB1cGRhdGVkQXQ6IG5vdyxcclxuICAgIH07XHJcblxyXG4gICAgYXdhaXQgaW1hZ2VSZWYuc2V0KGltYWdlKTtcclxuICAgIGNvbnNvbGUubG9nKFxyXG4gICAgICBgW3NyYy9tb2RlbHMvaW1hZ2VzTW9kZWwudHM6Y3JlYXRlSW1hZ2VSZWNvcmRdIFJlZ2lzdHJvIGRlIGltYWdlbiBjcmVhZG8gZW4gRmlyZXN0b3JlOiAke2ltYWdlLmlkfWBcclxuICAgICk7XHJcbiAgICByZXR1cm4gaW1hZ2U7XHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGxvZ2dlci5lcnJvcignW3NyYy9tb2RlbHMvaW1hZ2VzTW9kZWwudHM6Y3JlYXRlSW1hZ2VSZWNvcmRdIEVycm9yIGFsIGNyZWFyIHJlZ2lzdHJvIGRlIGltYWdlbjonLCBlcnJvciBhcyBFcnJvcik7XHJcbiAgICB0aHJvdyBlcnJvcjtcclxuICB9XHJcbn07XHJcblxyXG4vKipcclxuICogU3ViaXIgaW1hZ2VuIGNvbXBsZXRhIChpZHJpdmVFMiArIEZpcmVzdG9yZSlcclxuICovXHJcbmV4cG9ydCBjb25zdCB1cGxvYWRJbWFnZSA9IGFzeW5jIChcclxuICBmaWxlOiBFeHByZXNzLk11bHRlci5GaWxlLFxyXG4gIHVzZXJJZDogc3RyaW5nLFxyXG4gIGNhdGVnb3J5OiBJbWFnZVsnY2F0ZWdvcnknXSxcclxuICBtZXRhZGF0YToge1xyXG4gICAgZGVzY3JpcHRpb24/OiBzdHJpbmc7XHJcbiAgICB0YWdzPzogc3RyaW5nW107XHJcbiAgICBpc1B1YmxpYz86IGJvb2xlYW47XHJcbiAgICBjdXN0b21NZXRhZGF0YT86IFJlY29yZDxzdHJpbmcsIGFueT47XHJcbiAgfSA9IHt9XHJcbik6IFByb21pc2U8SW1hZ2U+ID0+IHtcclxuICB0cnkge1xyXG4gICAgLy8gR2VuZXJhciBub21icmUgw7puaWNvIHBhcmEgZWwgYXJjaGl2b1xyXG4gICAgY29uc3Qga2V5ID0gZ2VuZXJhdGVGaWxlTmFtZShmaWxlLm9yaWdpbmFsbmFtZSwgY2F0ZWdvcnksIHVzZXJJZCk7XHJcblxyXG4gICAgLy8gU3ViaXIgYSBpZHJpdmVFMlxyXG4gICAgY29uc3QgdXBsb2FkUmVzdWx0ID0gYXdhaXQgdXBsb2FkSW1hZ2VUb1MzKGZpbGUsIGtleSk7XHJcblxyXG4gICAgLy8gR2VuZXJhciBVUkwgZmlybWFkYVxyXG4gICAgY29uc3QgdXJsID0gYXdhaXQgZ2VuZXJhdGVTaWduZWRVcmwoa2V5KTtcclxuXHJcbiAgICAvLyBDcmVhciByZWdpc3RybyBlbiBGaXJlc3RvcmVcclxuICAgIGNvbnN0IGltYWdlRGF0YTogT21pdDxJbWFnZSwgJ2lkJyB8ICdjcmVhdGVkQXQnIHwgJ3VwZGF0ZWRBdCc+ID0ge1xyXG4gICAgICBrZXksXHJcbiAgICAgIHVybCxcclxuICAgICAgb3JpZ2luYWxOYW1lOiBmaWxlLm9yaWdpbmFsbmFtZSxcclxuICAgICAgZmlsZU5hbWU6IGtleS5zcGxpdCgnLycpLnBvcCgpIHx8IGZpbGUub3JpZ2luYWxuYW1lLFxyXG4gICAgICBzaXplOiB1cGxvYWRSZXN1bHQuc2l6ZSxcclxuICAgICAgbWltZXR5cGU6IHVwbG9hZFJlc3VsdC5taW1ldHlwZSxcclxuICAgICAgY2F0ZWdvcnksXHJcbiAgICAgIHVzZXJJZCxcclxuICAgICAgZGVzY3JpcHRpb246IG1ldGFkYXRhLmRlc2NyaXB0aW9uIHx8ICcnLFxyXG4gICAgICB0YWdzOiBtZXRhZGF0YS50YWdzIHx8IFtdLFxyXG4gICAgICBtZXRhZGF0YTogbWV0YWRhdGEuY3VzdG9tTWV0YWRhdGEgfHwge30sXHJcbiAgICAgIGlzUHVibGljOiBtZXRhZGF0YS5pc1B1YmxpYyAhPT0gdW5kZWZpbmVkID8gbWV0YWRhdGEuaXNQdWJsaWMgOiB0cnVlLFxyXG4gICAgICBpc0FjdGl2ZTogdHJ1ZSxcclxuICAgIH07XHJcblxyXG4gICAgY29uc3QgaW1hZ2UgPSBhd2FpdCBjcmVhdGVJbWFnZVJlY29yZChpbWFnZURhdGEpO1xyXG4gICAgY29uc29sZS5sb2coXHJcbiAgICAgIGBbc3JjL21vZGVscy9pbWFnZXNNb2RlbC50czp1cGxvYWRJbWFnZV0gSW1hZ2VuIHN1YmlkYSBleGl0b3NhbWVudGU6ICR7aW1hZ2UuaWR9YFxyXG4gICAgKTtcclxuICAgIHJldHVybiBpbWFnZTtcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgbG9nZ2VyLmVycm9yKCdbc3JjL21vZGVscy9pbWFnZXNNb2RlbC50czp1cGxvYWRJbWFnZV0gRXJyb3IgYWwgc3ViaXIgaW1hZ2VuOicsIGVycm9yIGFzIEVycm9yKTtcclxuICAgIHRocm93IGVycm9yO1xyXG4gIH1cclxufTtcclxuXHJcbi8qKlxyXG4gKiBPYnRlbmVyIGltYWdlbiBwb3IgSURcclxuICovXHJcbmV4cG9ydCBjb25zdCBnZXRJbWFnZUJ5SWQgPSBhc3luYyAoaW1hZ2VJZDogc3RyaW5nKTogUHJvbWlzZTxJbWFnZSB8IG51bGw+ID0+IHtcclxuICB0cnkge1xyXG4gICAgY29uc3QgaW1hZ2VEb2MgPSBhd2FpdCBkYi5jb2xsZWN0aW9uKCdpbWFnZXMnKS5kb2MoaW1hZ2VJZCkuZ2V0KCk7XHJcblxyXG4gICAgaWYgKCFpbWFnZURvYy5leGlzdHMpIHtcclxuICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgaW1hZ2UgPSBpbWFnZURvYy5kYXRhKCkgYXMgSW1hZ2U7XHJcblxyXG4gICAgLy8gUmVnZW5lcmFyIFVSTCBmaXJtYWRhIHNpIGVzIG5lY2VzYXJpb1xyXG4gICAgaWYgKGltYWdlLnVybCAmJiBpbWFnZS51cmwuaW5jbHVkZXMoJ2V4cGlyZXM9JykpIHtcclxuICAgICAgY29uc3QgZXhwaXJlc01hdGNoID0gaW1hZ2UudXJsLm1hdGNoKC9leHBpcmVzPShcXGQrKS8pO1xyXG4gICAgICBpZiAoZXhwaXJlc01hdGNoKSB7XHJcbiAgICAgICAgY29uc3QgZXhwaXJlc0F0ID0gcGFyc2VJbnQoZXhwaXJlc01hdGNoWzFdKTtcclxuICAgICAgICBjb25zdCBub3cgPSBNYXRoLmZsb29yKERhdGUubm93KCkgLyAxMDAwKTtcclxuXHJcbiAgICAgICAgaWYgKGV4cGlyZXNBdCA8PSBub3cgKyAzMDApIHtcclxuICAgICAgICAgIC8vIFJlZ2VuZXJhciBzaSBleHBpcmEgZW4gbWVub3MgZGUgNSBtaW51dG9zXHJcbiAgICAgICAgICBpbWFnZS51cmwgPSBhd2FpdCBnZW5lcmF0ZVNpZ25lZFVybChpbWFnZS5rZXkpO1xyXG4gICAgICAgICAgYXdhaXQgaW1hZ2VEb2MucmVmLnVwZGF0ZSh7XHJcbiAgICAgICAgICAgIHVybDogaW1hZ2UudXJsLFxyXG4gICAgICAgICAgICB1cGRhdGVkQXQ6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSxcclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgLy8gU2kgbm8gdGllbmUgVVJMIGZpcm1hZGEsIGdlbmVyYXJsYVxyXG4gICAgICBpbWFnZS51cmwgPSBhd2FpdCBnZW5lcmF0ZVNpZ25lZFVybChpbWFnZS5rZXkpO1xyXG4gICAgICBhd2FpdCBpbWFnZURvYy5yZWYudXBkYXRlKHtcclxuICAgICAgICB1cmw6IGltYWdlLnVybCxcclxuICAgICAgICB1cGRhdGVkQXQ6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSxcclxuICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIGltYWdlO1xyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBsb2dnZXIuZXJyb3IoJ1tzcmMvbW9kZWxzL2ltYWdlc01vZGVsLnRzOmdldEltYWdlQnlJZF0gRXJyb3IgYWwgb2J0ZW5lciBpbWFnZW46JywgZXJyb3IgYXMgRXJyb3IpO1xyXG4gICAgdGhyb3cgZXJyb3I7XHJcbiAgfVxyXG59O1xyXG5cclxuLyoqXHJcbiAqIExpc3RhciBpbcOhZ2VuZXMgY29uIGZpbHRyb3NcclxuICovXHJcbmV4cG9ydCBjb25zdCBsaXN0SW1hZ2VzID0gYXN5bmMgKFxyXG4gIGZpbHRlcnM6IEltYWdlRmlsdGVycyA9IHt9XHJcbik6IFByb21pc2U8SW1hZ2VbXT4gPT4ge1xyXG4gIHRyeSB7XHJcbiAgICBsZXQgcXVlcnk6IGFueSA9IGRiLmNvbGxlY3Rpb24oJ2ltYWdlcycpO1xyXG5cclxuICAgIC8vIEFwbGljYXIgZmlsdHJvc1xyXG4gICAgaWYgKGZpbHRlcnMuY2F0ZWdvcnkpIHtcclxuICAgICAgcXVlcnkgPSBxdWVyeS53aGVyZSgnY2F0ZWdvcnknLCAnPT0nLCBmaWx0ZXJzLmNhdGVnb3J5KTtcclxuICAgIH1cclxuICAgIGlmIChmaWx0ZXJzLnVzZXJJZCkge1xyXG4gICAgICBxdWVyeSA9IHF1ZXJ5LndoZXJlKCd1c2VySWQnLCAnPT0nLCBmaWx0ZXJzLnVzZXJJZCk7XHJcbiAgICB9XHJcbiAgICBpZiAoZmlsdGVycy5pc1B1YmxpYyAhPT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgIHF1ZXJ5ID0gcXVlcnkud2hlcmUoJ2lzUHVibGljJywgJz09JywgZmlsdGVycy5pc1B1YmxpYyk7XHJcbiAgICB9XHJcbiAgICBpZiAoZmlsdGVycy5pc0FjdGl2ZSAhPT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgIHF1ZXJ5ID0gcXVlcnkud2hlcmUoJ2lzQWN0aXZlJywgJz09JywgZmlsdGVycy5pc0FjdGl2ZSk7XHJcbiAgICB9XHJcbiAgICBpZiAoZmlsdGVycy5tZXRhZGF0YSkge1xyXG4gICAgICBPYmplY3QuZW50cmllcyhmaWx0ZXJzLm1ldGFkYXRhKS5mb3JFYWNoKChba2V5LCB2YWx1ZV0pID0+IHtcclxuICAgICAgICBxdWVyeSA9IHF1ZXJ5LndoZXJlKGBtZXRhZGF0YS4ke2tleX1gLCAnPT0nLCB2YWx1ZSk7XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIE9yZGVuYXIgcG9yIGZlY2hhIGRlIGNyZWFjacOzbiAobcOhcyByZWNpZW50ZSBwcmltZXJvKVxyXG4gICAgcXVlcnkgPSBxdWVyeS5vcmRlckJ5KCdjcmVhdGVkQXQnLCAnZGVzYycpO1xyXG5cclxuICAgIC8vIEFwbGljYXIgbMOtbWl0ZXNcclxuICAgIGlmIChmaWx0ZXJzLmxpbWl0KSB7XHJcbiAgICAgIHF1ZXJ5ID0gcXVlcnkubGltaXQoZmlsdGVycy5saW1pdCk7XHJcbiAgICB9XHJcbiAgICBpZiAoZmlsdGVycy5vZmZzZXQpIHtcclxuICAgICAgcXVlcnkgPSBxdWVyeS5vZmZzZXQoZmlsdGVycy5vZmZzZXQpO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IHNuYXBzaG90ID0gYXdhaXQgcXVlcnkuZ2V0KCk7XHJcbiAgICBjb25zdCBpbWFnZXMgPSBzbmFwc2hvdC5kb2NzLm1hcCgoZG9jOiBhbnkpID0+IGRvYy5kYXRhKCkgYXMgSW1hZ2UpO1xyXG5cclxuICAgIC8vIFJlZ2VuZXJhciBVUkxzIGZpcm1hZGFzIHNpIGVzIG5lY2VzYXJpb1xyXG4gICAgY29uc3QgaW1hZ2VzV2l0aFVybHMgPSBhd2FpdCBQcm9taXNlLmFsbChcclxuICAgICAgaW1hZ2VzLm1hcChhc3luYyAoaW1hZ2U6IEltYWdlKSA9PiB7XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgIGlmIChpbWFnZS51cmwgJiYgaW1hZ2UudXJsLmluY2x1ZGVzKCdleHBpcmVzPScpKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IGV4cGlyZXNNYXRjaCA9IGltYWdlLnVybC5tYXRjaCgvZXhwaXJlcz0oXFxkKykvKTtcclxuICAgICAgICAgICAgaWYgKGV4cGlyZXNNYXRjaCkge1xyXG4gICAgICAgICAgICAgIGNvbnN0IGV4cGlyZXNBdCA9IHBhcnNlSW50KGV4cGlyZXNNYXRjaFsxXSk7XHJcbiAgICAgICAgICAgICAgY29uc3Qgbm93ID0gTWF0aC5mbG9vcihEYXRlLm5vdygpIC8gMTAwMCk7XHJcblxyXG4gICAgICAgICAgICAgIGlmIChleHBpcmVzQXQgPD0gbm93ICsgMzAwKSB7XHJcbiAgICAgICAgICAgICAgICAvLyBSZWdlbmVyYXIgc2kgZXhwaXJhIGVuIG1lbm9zIGRlIDUgbWludXRvc1xyXG4gICAgICAgICAgICAgICAgaW1hZ2UudXJsID0gYXdhaXQgZ2VuZXJhdGVTaWduZWRVcmwoaW1hZ2Uua2V5KTtcclxuICAgICAgICAgICAgICAgIGF3YWl0IGRiLmNvbGxlY3Rpb24oJ2ltYWdlcycpLmRvYyhpbWFnZS5pZCkudXBkYXRlKHtcclxuICAgICAgICAgICAgICAgICAgdXJsOiBpbWFnZS51cmwsXHJcbiAgICAgICAgICAgICAgICAgIHVwZGF0ZWRBdDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAvLyBTaSBubyB0aWVuZSBVUkwgZmlybWFkYSwgZ2VuZXJhcmxhXHJcbiAgICAgICAgICAgIGltYWdlLnVybCA9IGF3YWl0IGdlbmVyYXRlU2lnbmVkVXJsKGltYWdlLmtleSk7XHJcbiAgICAgICAgICAgIGF3YWl0IGRiLmNvbGxlY3Rpb24oJ2ltYWdlcycpLmRvYyhpbWFnZS5pZCkudXBkYXRlKHtcclxuICAgICAgICAgICAgICB1cmw6IGltYWdlLnVybCxcclxuICAgICAgICAgICAgICB1cGRhdGVkQXQ6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSxcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICByZXR1cm4gaW1hZ2U7XHJcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXHJcbiAgICAgICAgICAgIGBbc3JjL21vZGVscy9pbWFnZXNNb2RlbC50czpsaXN0SW1hZ2VzXSBFcnJvciBhbCByZWdlbmVyYXIgVVJMIHBhcmEgaW1hZ2VuICR7aW1hZ2UuaWR9OmAsXHJcbiAgICAgICAgICAgIGVycm9yXHJcbiAgICAgICAgICApO1xyXG4gICAgICAgICAgcmV0dXJuIGltYWdlO1xyXG4gICAgICAgIH1cclxuICAgICAgfSlcclxuICAgICk7XHJcblxyXG4gICAgY29uc29sZS5sb2coXHJcbiAgICAgIGBbc3JjL21vZGVscy9pbWFnZXNNb2RlbC50czpsaXN0SW1hZ2VzXSAke2ltYWdlc1dpdGhVcmxzLmxlbmd0aH0gaW3DoWdlbmVzIGVuY29udHJhZGFzYFxyXG4gICAgKTtcclxuICAgIHJldHVybiBpbWFnZXNXaXRoVXJscztcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgbG9nZ2VyLmVycm9yKCdbc3JjL21vZGVscy9pbWFnZXNNb2RlbC50czpsaXN0SW1hZ2VzXSBFcnJvciBhbCBsaXN0YXIgaW3DoWdlbmVzOicsIGVycm9yIGFzIEVycm9yKTtcclxuICAgIHRocm93IGVycm9yO1xyXG4gIH1cclxufTtcclxuXHJcbi8qKlxyXG4gKiBBY3R1YWxpemFyIGltYWdlblxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IHVwZGF0ZUltYWdlID0gYXN5bmMgKFxyXG4gIGltYWdlSWQ6IHN0cmluZyxcclxuICB1cGRhdGVEYXRhOiBJbWFnZVVwZGF0ZVJlcXVlc3RcclxuKTogUHJvbWlzZTxJbWFnZT4gPT4ge1xyXG4gIHRyeSB7XHJcbiAgICBjb25zdCBpbWFnZVJlZiA9IGRiLmNvbGxlY3Rpb24oJ2ltYWdlcycpLmRvYyhpbWFnZUlkKTtcclxuICAgIGNvbnN0IGltYWdlRG9jID0gYXdhaXQgaW1hZ2VSZWYuZ2V0KCk7XHJcblxyXG4gICAgaWYgKCFpbWFnZURvYy5leGlzdHMpIHtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbWFnZW4gbm8gZW5jb250cmFkYScpO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IHVwZGF0ZUZpZWxkczogUGFydGlhbDxJbWFnZT4gPSB7XHJcbiAgICAgIC4uLnVwZGF0ZURhdGEsXHJcbiAgICAgIHVwZGF0ZWRBdDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxyXG4gICAgfTtcclxuXHJcbiAgICBhd2FpdCBpbWFnZVJlZi51cGRhdGUodXBkYXRlRmllbGRzKTtcclxuXHJcbiAgICAvLyBPYnRlbmVyIGltYWdlbiBhY3R1YWxpemFkYVxyXG4gICAgY29uc3QgdXBkYXRlZERvYyA9IGF3YWl0IGltYWdlUmVmLmdldCgpO1xyXG4gICAgY29uc3QgdXBkYXRlZEltYWdlID0gdXBkYXRlZERvYy5kYXRhKCkgYXMgSW1hZ2U7XHJcblxyXG4gICAgY29uc29sZS5sb2coXHJcbiAgICAgIGBbc3JjL21vZGVscy9pbWFnZXNNb2RlbC50czp1cGRhdGVJbWFnZV0gSW1hZ2VuIGFjdHVhbGl6YWRhOiAke2ltYWdlSWR9YFxyXG4gICAgKTtcclxuICAgIHJldHVybiB1cGRhdGVkSW1hZ2U7XHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGxvZ2dlci5lcnJvcignW3NyYy9tb2RlbHMvaW1hZ2VzTW9kZWwudHM6dXBkYXRlSW1hZ2VdIEVycm9yIGFsIGFjdHVhbGl6YXIgaW1hZ2VuOicsIGVycm9yIGFzIEVycm9yKTtcclxuICAgIHRocm93IGVycm9yO1xyXG4gIH1cclxufTtcclxuXHJcbi8qKlxyXG4gKiBFbGltaW5hciBpbWFnZW4gKHNvZnQgZGVsZXRlKVxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IGRlbGV0ZUltYWdlID0gYXN5bmMgKFxyXG4gIGltYWdlSWQ6IHN0cmluZyxcclxuICB1c2VySWQ6IHN0cmluZ1xyXG4pOiBQcm9taXNlPGJvb2xlYW4+ID0+IHtcclxuICB0cnkge1xyXG4gICAgY29uc3QgaW1hZ2VSZWYgPSBkYi5jb2xsZWN0aW9uKCdpbWFnZXMnKS5kb2MoaW1hZ2VJZCk7XHJcbiAgICBjb25zdCBpbWFnZURvYyA9IGF3YWl0IGltYWdlUmVmLmdldCgpO1xyXG5cclxuICAgIGlmICghaW1hZ2VEb2MuZXhpc3RzKSB7XHJcbiAgICAgIHRocm93IG5ldyBFcnJvcignSW1hZ2VuIG5vIGVuY29udHJhZGEnKTtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBpbWFnZSA9IGltYWdlRG9jLmRhdGEoKSBhcyBJbWFnZTtcclxuXHJcbiAgICAvLyBWZXJpZmljYXIgcGVybWlzb3MgKHNvbG8gZWwgcHJvcGlldGFyaW8gbyBhZG1pbiBwdWVkZSBlbGltaW5hcilcclxuICAgIGlmIChpbWFnZS51c2VySWQgIT09IHVzZXJJZCkge1xyXG4gICAgICAvLyBWZXJpZmljYXIgc2kgZWwgdXN1YXJpbyBlcyBhZG1pblxyXG4gICAgICBjb25zdCB1c2VyRG9jID0gYXdhaXQgZGIuY29sbGVjdGlvbigndXNlcnMnKS5kb2ModXNlcklkKS5nZXQoKTtcclxuICAgICAgaWYgKCF1c2VyRG9jLmV4aXN0cyB8fCB1c2VyRG9jLmRhdGEoKT8ucm9sbCAhPT0gJ2FkbWluJykge1xyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcignTm8gdGllbmVzIHBlcm1pc29zIHBhcmEgZWxpbWluYXIgZXN0YSBpbWFnZW4nKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8vIFNvZnQgZGVsZXRlIC0gbWFyY2FyIGNvbW8gaW5hY3RpdmFcclxuICAgIGF3YWl0IGltYWdlUmVmLnVwZGF0ZSh7XHJcbiAgICAgIGlzQWN0aXZlOiBmYWxzZSxcclxuICAgICAgdXBkYXRlZEF0OiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksXHJcbiAgICB9KTtcclxuXHJcbiAgICBjb25zb2xlLmxvZyhcclxuICAgICAgYFtzcmMvbW9kZWxzL2ltYWdlc01vZGVsLnRzOmRlbGV0ZUltYWdlXSBJbWFnZW4gbWFyY2FkYSBjb21vIGVsaW1pbmFkYTogJHtpbWFnZUlkfWBcclxuICAgICk7XHJcbiAgICByZXR1cm4gdHJ1ZTtcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgbG9nZ2VyLmVycm9yKCdbc3JjL21vZGVscy9pbWFnZXNNb2RlbC50czpkZWxldGVJbWFnZV0gRXJyb3IgYWwgZWxpbWluYXIgaW1hZ2VuOicsIGVycm9yIGFzIEVycm9yKTtcclxuICAgIHRocm93IGVycm9yO1xyXG4gIH1cclxufTtcclxuXHJcbi8qKlxyXG4gKiBFbGltaW5hciBpbWFnZW4gZGUgaWRyaXZlRTIgKGhhcmQgZGVsZXRlKVxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IGRlbGV0ZUltYWdlRnJvbVMzID0gYXN5bmMgKGtleTogc3RyaW5nKTogUHJvbWlzZTxib29sZWFuPiA9PiB7XHJcbiAgdHJ5IHtcclxuICAgIGNvbnN0IGNvbW1hbmQgPSBuZXcgRGVsZXRlT2JqZWN0Q29tbWFuZCh7XHJcbiAgICAgIEJ1Y2tldDogQlVDS0VUX05BTUUsXHJcbiAgICAgIEtleToga2V5LFxyXG4gICAgfSk7XHJcblxyXG4gICAgYXdhaXQgczNDbGllbnQuc2VuZChjb21tYW5kKTtcclxuICAgIGNvbnNvbGUubG9nKFxyXG4gICAgICBgW3NyYy9tb2RlbHMvaW1hZ2VzTW9kZWwudHM6ZGVsZXRlSW1hZ2VGcm9tUzNdIEltYWdlbiBlbGltaW5hZGEgZGUgaWRyaXZlRTI6ICR7a2V5fWBcclxuICAgICk7XHJcbiAgICByZXR1cm4gdHJ1ZTtcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgbG9nZ2VyLmVycm9yKCdbc3JjL21vZGVscy9pbWFnZXNNb2RlbC50czpkZWxldGVJbWFnZUZyb21TM10gRXJyb3IgYWwgZWxpbWluYXIgaW1hZ2VuIGRlIGlkcml2ZUUyOicsIGVycm9yIGFzIEVycm9yKTtcclxuICAgIHRocm93IGVycm9yO1xyXG4gIH1cclxufTtcclxuXHJcbi8qKlxyXG4gKiBPYnRlbmVyIGVzdGFkw61zdGljYXMgZGUgaW3DoWdlbmVzXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgZ2V0SW1hZ2VTdGF0cyA9IGFzeW5jICgpOiBQcm9taXNlPEltYWdlU3RhdHM+ID0+IHtcclxuICB0cnkge1xyXG4gICAgY29uc3Qgc25hcHNob3QgPSBhd2FpdCBkYlxyXG4gICAgICAuY29sbGVjdGlvbignaW1hZ2VzJylcclxuICAgICAgLndoZXJlKCdpc0FjdGl2ZScsICc9PScsIHRydWUpXHJcbiAgICAgIC5nZXQoKTtcclxuICAgIGNvbnN0IGltYWdlcyA9IHNuYXBzaG90LmRvY3MubWFwKGRvYyA9PiBkb2MuZGF0YSgpIGFzIEltYWdlKTtcclxuXHJcbiAgICBjb25zdCB0b3RhbEltYWdlcyA9IGltYWdlcy5sZW5ndGg7XHJcbiAgICBjb25zdCB0b3RhbFNpemUgPSBpbWFnZXMucmVkdWNlKChzdW0sIGltZykgPT4gc3VtICsgaW1nLnNpemUsIDApO1xyXG5cclxuICAgIGNvbnN0IGltYWdlc0J5Q2F0ZWdvcnk6IFJlY29yZDxzdHJpbmcsIG51bWJlcj4gPSB7fTtcclxuICAgIGNvbnN0IGltYWdlc0J5VXNlcjogUmVjb3JkPHN0cmluZywgbnVtYmVyPiA9IHt9O1xyXG5cclxuICAgIGltYWdlcy5mb3JFYWNoKGltYWdlID0+IHtcclxuICAgICAgaW1hZ2VzQnlDYXRlZ29yeVtpbWFnZS5jYXRlZ29yeV0gPVxyXG4gICAgICAgIChpbWFnZXNCeUNhdGVnb3J5W2ltYWdlLmNhdGVnb3J5XSB8fCAwKSArIDE7XHJcbiAgICAgIGltYWdlc0J5VXNlcltpbWFnZS51c2VySWRdID0gKGltYWdlc0J5VXNlcltpbWFnZS51c2VySWRdIHx8IDApICsgMTtcclxuICAgIH0pO1xyXG5cclxuICAgIGNvbnN0IHJlY2VudFVwbG9hZHMgPSBpbWFnZXNcclxuICAgICAgLnNvcnQoXHJcbiAgICAgICAgKGEsIGIpID0+XHJcbiAgICAgICAgICBuZXcgRGF0ZShiLmNyZWF0ZWRBdCkuZ2V0VGltZSgpIC0gbmV3IERhdGUoYS5jcmVhdGVkQXQpLmdldFRpbWUoKVxyXG4gICAgICApXHJcbiAgICAgIC5zbGljZSgwLCAxMCk7XHJcblxyXG4gICAgY29uc3Qgc3RhdHM6IEltYWdlU3RhdHMgPSB7XHJcbiAgICAgIHRvdGFsSW1hZ2VzLFxyXG4gICAgICB0b3RhbFNpemUsXHJcbiAgICAgIGltYWdlc0J5Q2F0ZWdvcnksXHJcbiAgICAgIGltYWdlc0J5VXNlcixcclxuICAgICAgcmVjZW50VXBsb2FkcyxcclxuICAgIH07XHJcblxyXG4gICAgY29uc29sZS5sb2coXHJcbiAgICAgIGBbc3JjL21vZGVscy9pbWFnZXNNb2RlbC50czpnZXRJbWFnZVN0YXRzXSBFc3RhZMOtc3RpY2FzIGdlbmVyYWRhczogJHt0b3RhbEltYWdlc30gaW3DoWdlbmVzLCAke3RvdGFsU2l6ZX0gYnl0ZXNgXHJcbiAgICApO1xyXG4gICAgcmV0dXJuIHN0YXRzO1xyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBsb2dnZXIuZXJyb3IoJ1tzcmMvbW9kZWxzL2ltYWdlc01vZGVsLnRzOmdldEltYWdlU3RhdHNdIEVycm9yIGFsIG9idGVuZXIgZXN0YWTDrXN0aWNhczonLCBlcnJvciBhcyBFcnJvcik7XHJcbiAgICB0aHJvdyBlcnJvcjtcclxuICB9XHJcbn07XHJcblxyXG4vKipcclxuICogT2J0ZW5lciBpbcOhZ2VuZXMgZGUgcGVyZmlsIGRlIHVzdWFyaW9cclxuICovXHJcbmV4cG9ydCBjb25zdCBnZXRVc2VyUHJvZmlsZUltYWdlcyA9IGFzeW5jIChcclxuICB1c2VySWQ6IHN0cmluZ1xyXG4pOiBQcm9taXNlPEltYWdlW10+ID0+IHtcclxuICB0cnkge1xyXG4gICAgcmV0dXJuIGF3YWl0IGxpc3RJbWFnZXMoe1xyXG4gICAgICB1c2VySWQsXHJcbiAgICAgIGNhdGVnb3J5OiAncHJvZmlsZScsXHJcbiAgICAgIGlzQWN0aXZlOiB0cnVlLFxyXG4gICAgfSk7XHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGxvZ2dlci5lcnJvcignW3NyYy9tb2RlbHMvaW1hZ2VzTW9kZWwudHM6Z2V0VXNlclByb2ZpbGVJbWFnZXNdIEVycm9yIGFsIG9idGVuZXIgaW3DoWdlbmVzIGRlIHBlcmZpbDonLCBlcnJvciBhcyBFcnJvcik7XHJcbiAgICB0aHJvdyBlcnJvcjtcclxuICB9XHJcbn07XHJcblxyXG4vKipcclxuICogT2J0ZW5lciBpbcOhZ2VuZXMgZGUgcG9zdHNcclxuICovXHJcbmV4cG9ydCBjb25zdCBnZXRQb3N0SW1hZ2VzID0gYXN5bmMgKHVzZXJJZD86IHN0cmluZyk6IFByb21pc2U8SW1hZ2VbXT4gPT4ge1xyXG4gIHRyeSB7XHJcbiAgICBjb25zdCBmaWx0ZXJzOiBJbWFnZUZpbHRlcnMgPSB7XHJcbiAgICAgIGNhdGVnb3J5OiAncG9zdCcsXHJcbiAgICAgIGlzQWN0aXZlOiB0cnVlLFxyXG4gICAgICBpc1B1YmxpYzogdHJ1ZSxcclxuICAgIH07XHJcblxyXG4gICAgaWYgKHVzZXJJZCkge1xyXG4gICAgICBmaWx0ZXJzLnVzZXJJZCA9IHVzZXJJZDtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gYXdhaXQgbGlzdEltYWdlcyhmaWx0ZXJzKTtcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgbG9nZ2VyLmVycm9yKCdbc3JjL21vZGVscy9pbWFnZXNNb2RlbC50czpnZXRQb3N0SW1hZ2VzXSBFcnJvciBhbCBvYnRlbmVyIGltw6FnZW5lcyBkZSBwb3N0czonLCBlcnJvciBhcyBFcnJvcik7XHJcbiAgICB0aHJvdyBlcnJvcjtcclxuICB9XHJcbn07XHJcblxyXG4vKipcclxuICogT2J0ZW5lciBpbcOhZ2VuZXMgZGUgZXZlbnRvc1xyXG4gKi9cclxuZXhwb3J0IGNvbnN0IGdldEV2ZW50SW1hZ2VzID0gYXN5bmMgKGV2ZW50SWQ/OiBzdHJpbmcpOiBQcm9taXNlPEltYWdlW10+ID0+IHtcclxuICB0cnkge1xyXG4gICAgY29uc3QgZmlsdGVyczogSW1hZ2VGaWx0ZXJzID0ge1xyXG4gICAgICBjYXRlZ29yeTogJ2V2ZW50JyxcclxuICAgICAgaXNBY3RpdmU6IHRydWUsXHJcbiAgICB9O1xyXG5cclxuICAgIGlmIChldmVudElkKSB7XHJcbiAgICAgIGZpbHRlcnMubWV0YWRhdGEgPSB7IGV2ZW50SWQgfTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gYXdhaXQgbGlzdEltYWdlcyhmaWx0ZXJzKTtcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgbG9nZ2VyLmVycm9yKCdbc3JjL21vZGVscy9pbWFnZXNNb2RlbC50czpnZXRFdmVudEltYWdlc10gRXJyb3IgYWwgb2J0ZW5lciBpbcOhZ2VuZXMgZGUgZXZlbnRvczonLCBlcnJvciBhcyBFcnJvcik7XHJcbiAgICB0aHJvdyBlcnJvcjtcclxuICB9XHJcbn07XHJcblxyXG4vKipcclxuICogTGltcGlhciBpbcOhZ2VuZXMgZXhwaXJhZGFzICh0YXJlYXMgZGUgbWFudGVuaW1pZW50bylcclxuICovXHJcbmV4cG9ydCBjb25zdCBjbGVhbnVwRXhwaXJlZEltYWdlcyA9IGFzeW5jICgpOiBQcm9taXNlPG51bWJlcj4gPT4ge1xyXG4gIHRyeSB7XHJcbiAgICBjb25zdCBub3cgPSBuZXcgRGF0ZSgpO1xyXG4gICAgY29uc3Qgc25hcHNob3QgPSBhd2FpdCBkYlxyXG4gICAgICAuY29sbGVjdGlvbignaW1hZ2VzJylcclxuICAgICAgLndoZXJlKCdleHBpcmVzQXQnLCAnPD0nLCBub3cudG9JU09TdHJpbmcoKSlcclxuICAgICAgLndoZXJlKCdpc0FjdGl2ZScsICc9PScsIHRydWUpXHJcbiAgICAgIC5nZXQoKTtcclxuXHJcbiAgICBsZXQgZGVsZXRlZENvdW50ID0gMDtcclxuXHJcbiAgICBmb3IgKGNvbnN0IGRvYyBvZiBzbmFwc2hvdC5kb2NzKSB7XHJcbiAgICAgIGNvbnN0IGltYWdlID0gZG9jLmRhdGEoKSBhcyBJbWFnZTtcclxuXHJcbiAgICAgIC8vIEVsaW1pbmFyIGRlIGlkcml2ZUUyXHJcbiAgICAgIGF3YWl0IGRlbGV0ZUltYWdlRnJvbVMzKGltYWdlLmtleSk7XHJcblxyXG4gICAgICAvLyBNYXJjYXIgY29tbyBpbmFjdGl2YSBlbiBGaXJlc3RvcmVcclxuICAgICAgYXdhaXQgZG9jLnJlZi51cGRhdGUoe1xyXG4gICAgICAgIGlzQWN0aXZlOiBmYWxzZSxcclxuICAgICAgICB1cGRhdGVkQXQ6IG5vdy50b0lTT1N0cmluZygpLFxyXG4gICAgICB9KTtcclxuXHJcbiAgICAgIGRlbGV0ZWRDb3VudCsrO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnNvbGUubG9nKFxyXG4gICAgICBgW3NyYy9tb2RlbHMvaW1hZ2VzTW9kZWwudHM6Y2xlYW51cEV4cGlyZWRJbWFnZXNdICR7ZGVsZXRlZENvdW50fSBpbcOhZ2VuZXMgZXhwaXJhZGFzIGVsaW1pbmFkYXNgXHJcbiAgICApO1xyXG4gICAgcmV0dXJuIGRlbGV0ZWRDb3VudDtcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgbG9nZ2VyLmVycm9yKCdbc3JjL21vZGVscy9pbWFnZXNNb2RlbC50czpjbGVhbnVwRXhwaXJlZEltYWdlc10gRXJyb3IgYWwgbGltcGlhciBpbcOhZ2VuZXMgZXhwaXJhZGFzOicsIGVycm9yIGFzIEVycm9yKTtcclxuICAgIHRocm93IGVycm9yO1xyXG4gIH1cclxufTtcclxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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