{"file":"C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\__tests__\\setup.ts","mappings":"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","names":[],"sources":["C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\__tests__\\setup.ts"],"sourcesContent":["// Jest setup file for MussikOn API tests\r\nimport dotenv from 'dotenv';\r\nimport { logger } from '../services/loggerService';\r\n\r\n// Load environment variables for testing\r\ndotenv.config({ path: '.env.test' });\r\n\r\n// Mock Firebase Admin\r\njest.mock('firebase-admin', () => ({\r\n  initializeApp: jest.fn(),\r\n  getApps: jest.fn(() => []),\r\n  getApp: jest.fn(),\r\n  apps: [], // Agregar esta propiedad\r\n  credential: {\r\n    cert: jest.fn()\r\n  },\r\n  auth: jest.fn(() => ({\r\n    verifyIdToken: jest.fn(),\r\n    createCustomToken: jest.fn(),\r\n    getUser: jest.fn(),\r\n    getUserByEmail: jest.fn(),\r\n    listUsers: jest.fn(),\r\n    createUser: jest.fn(),\r\n    updateUser: jest.fn(),\r\n    deleteUser: jest.fn(),\r\n    setCustomUserClaims: jest.fn()\r\n  })),\r\n  firestore: jest.fn(() => ({\r\n    collection: jest.fn(() => ({\r\n      doc: jest.fn(() => ({\r\n        get: jest.fn(),\r\n        set: jest.fn(),\r\n        update: jest.fn(),\r\n        delete: jest.fn()\r\n      })),\r\n      where: jest.fn(() => ({\r\n        get: jest.fn(),\r\n        orderBy: jest.fn(() => ({\r\n          get: jest.fn(),\r\n          limit: jest.fn(() => ({\r\n            get: jest.fn()\r\n          }))\r\n        }))\r\n      })),\r\n      orderBy: jest.fn(() => ({\r\n        get: jest.fn(),\r\n        limit: jest.fn(() => ({\r\n          get: jest.fn()\r\n        }))\r\n      })),\r\n      limit: jest.fn(() => ({\r\n        get: jest.fn()\r\n      })),\r\n      get: jest.fn()\r\n    }))\r\n  })),\r\n  getFirestore: jest.fn(() => ({\r\n    collection: jest.fn(() => ({\r\n      doc: jest.fn(() => ({\r\n        get: jest.fn(),\r\n        set: jest.fn(),\r\n        update: jest.fn(),\r\n        delete: jest.fn()\r\n      })),\r\n      where: jest.fn(() => ({\r\n        get: jest.fn(),\r\n        orderBy: jest.fn(() => ({\r\n          get: jest.fn(),\r\n          limit: jest.fn(() => ({\r\n            get: jest.fn()\r\n          }))\r\n        }))\r\n      })),\r\n      orderBy: jest.fn(() => ({\r\n        get: jest.fn(),\r\n        limit: jest.fn(() => ({\r\n          get: jest.fn()\r\n        }))\r\n      })),\r\n      limit: jest.fn(() => ({\r\n        get: jest.fn()\r\n      })),\r\n      get: jest.fn()\r\n    }))\r\n  }))\r\n}));\r\n\r\n// Global test setup\r\nbeforeAll(() => {\r\n  // Setup any global test configuration\r\n  logger.info('Setting up test environment...', { context: 'TestSetup' });\r\n  \r\n  // Mock console methods to reduce noise in tests\r\n  jest.spyOn(console, 'log').mockImplementation(() => {});\r\n  jest.spyOn(console, 'info').mockImplementation(() => {});\r\n  jest.spyOn(console, 'warn').mockImplementation(() => {});\r\n  jest.spyOn(console, 'error').mockImplementation(() => {});\r\n});\r\n\r\nafterAll(() => {\r\n  // Cleanup after all tests\r\n  logger.info('Cleaning up test environment...', { context: 'TestSetup' });\r\n  \r\n  // Restore console methods\r\n  jest.restoreAllMocks();\r\n});\r\n\r\n// Global test utilities\r\nexport const createMockRequest = (overrides: any = {}) => ({\r\n  body: {},\r\n  params: {},\r\n  query: {},\r\n  headers: {},\r\n  user: null,\r\n  ...overrides\r\n});\r\n\r\nexport const createMockResponse = () => {\r\n  const res: any = {};\r\n  res.status = jest.fn().mockReturnValue(res);\r\n  res.json = jest.fn().mockReturnValue(res);\r\n  res.send = jest.fn().mockReturnValue(res);\r\n  res.end = jest.fn().mockReturnValue(res);\r\n  return res;\r\n};\r\n\r\n// Mock middleware\r\nexport const mockAuthMiddleware = (req: any, res: any, next: any) => {\r\n  req.user = {\r\n    id: 'test-user-id',\r\n    email: 'test@example.com',\r\n    role: 'usuario'\r\n  };\r\n  next();\r\n};\r\n\r\n// Mock error handler\r\nexport const mockErrorHandler = (err: any, req: any, res: any, next: any) => {\r\n  res.status(500).json({\r\n    success: false,\r\n    message: err.message || 'Internal server error'\r\n  });\r\n}; "],"version":3}