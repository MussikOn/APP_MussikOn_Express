{"version":3,"names":["cov_2k13j4brki","actualCoverage","express_1","s","require","advancedSearchController_1","authMiddleware_1","requireRole_1","router","Router","advancedSearchController","AdvancedSearchController","post","authMiddleware","requireRole","req","res","f","__awaiter","searchAvailableMusicians","checkMusicianAvailability","updateMusicianStatus","musicianHeartbeat","get","getDailyAvailability","calculateMusicianRate","exports","default"],"sources":["C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\routes\\advancedSearchRoutes.ts"],"sourcesContent":["import { Router } from 'express';\r\nimport { AdvancedSearchController } from '../controllers/advancedSearchController';\r\nimport { authMiddleware } from '../middleware/authMiddleware';\r\nimport { requireRole } from '../middleware/requireRole';\r\n\r\nconst router = Router();\r\nconst advancedSearchController = new AdvancedSearchController();\r\n\r\n/**\r\n * @swagger\r\n * /api/advanced-search/musicians:\r\n *   post:\r\n *     summary: Búsqueda avanzada de músicos con verificación de disponibilidad\r\n *     tags: [Advanced Search]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             type: object\r\n *             required:\r\n *               - eventType\r\n *               - instrument\r\n *               - location\r\n *               - eventDate\r\n *               - duration\r\n *             properties:\r\n *               eventType:\r\n *                 type: string\r\n *                 description: Tipo de evento\r\n *                 example: \"wedding\"\r\n *               instrument:\r\n *                 type: string\r\n *                 description: Instrumento requerido\r\n *                 example: \"guitarra\"\r\n *               location:\r\n *                 type: string\r\n *                 description: Ubicación del evento\r\n *                 example: \"Madrid\"\r\n *               eventDate:\r\n *                 type: string\r\n *                 format: date-time\r\n *                 description: Fecha y hora del evento\r\n *                 example: \"2024-12-25T20:00:00Z\"\r\n *               duration:\r\n *                 type: number\r\n *                 description: Duración en minutos\r\n *                 example: 120\r\n *               budget:\r\n *                 type: object\r\n *                 properties:\r\n *                   min:\r\n *                     type: number\r\n *                     example: 100\r\n *                   max:\r\n *                     type: number\r\n *                     example: 500\r\n *               isUrgent:\r\n *                 type: boolean\r\n *                 default: false\r\n *               radius:\r\n *                 type: number\r\n *                 default: 50\r\n *                 description: Radio de búsqueda en km\r\n *     responses:\r\n *       200:\r\n *         description: Búsqueda completada exitosamente\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 data:\r\n *                   type: object\r\n *                   properties:\r\n *                     availableMusicians:\r\n *                       type: array\r\n *                       items:\r\n *                         type: object\r\n *                     unavailableMusicians:\r\n *                       type: array\r\n *                       items:\r\n *                         type: object\r\n *                     totalFound:\r\n *                       type: number\r\n *                     availableCount:\r\n *                       type: number\r\n *                     unavailableCount:\r\n *                       type: number\r\n *       400:\r\n *         description: Parámetros inválidos\r\n *       401:\r\n *         description: No autorizado\r\n *       500:\r\n *         description: Error interno del servidor\r\n */\r\nrouter.post('/musicians', \r\n  authMiddleware, \r\n  requireRole(['eventCreator', 'usuario', 'adminJunior', 'adminMidLevel', 'adminSenior', 'superAdmin']),\r\n  async (req, res) => {\r\n    await advancedSearchController.searchAvailableMusicians(req, res);\r\n  }\r\n);\r\n\r\n/**\r\n * @swagger\r\n * /api/advanced-search/check-availability:\r\n *   post:\r\n *     summary: Verificar disponibilidad específica de un músico\r\n *     tags: [Advanced Search]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             type: object\r\n *             required:\r\n *               - musicianId\r\n *               - eventDate\r\n *               - duration\r\n *             properties:\r\n *               musicianId:\r\n *                 type: string\r\n *                 description: ID del músico\r\n *               eventDate:\r\n *                 type: string\r\n *                 format: date-time\r\n *                 description: Fecha y hora del evento\r\n *               duration:\r\n *                 type: number\r\n *                 description: Duración en minutos\r\n *               location:\r\n *                 type: string\r\n *                 description: Ubicación del evento\r\n *     responses:\r\n *       200:\r\n *         description: Verificación completada\r\n *       400:\r\n *         description: Parámetros inválidos\r\n *       404:\r\n *         description: Músico no encontrado\r\n *       500:\r\n *         description: Error interno del servidor\r\n */\r\nrouter.post('/check-availability',\r\n  authMiddleware,\r\n  requireRole(['eventCreator', 'usuario', 'adminJunior', 'adminMidLevel', 'adminSenior', 'superAdmin']),\r\n  async (req, res) => {\r\n    await advancedSearchController.checkMusicianAvailability(req, res);\r\n  }\r\n);\r\n\r\n/**\r\n * @swagger\r\n * /api/advanced-search/update-status/{musicianId}:\r\n *   post:\r\n *     summary: Actualizar estado del músico\r\n *     tags: [Advanced Search]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     parameters:\r\n *       - in: path\r\n *         name: musicianId\r\n *         required: true\r\n *         schema:\r\n *           type: string\r\n *         description: ID del músico\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             type: object\r\n *             properties:\r\n *               isOnline:\r\n *                 type: boolean\r\n *                 description: Estado online/offline\r\n *               currentLocation:\r\n *                 type: object\r\n *                 properties:\r\n *                   latitude:\r\n *                     type: number\r\n *                   longitude:\r\n *                     type: number\r\n *                   address:\r\n *                     type: string\r\n *               availability:\r\n *                 type: object\r\n *                 properties:\r\n *                   isAvailable:\r\n *                     type: boolean\r\n *                   availableFrom:\r\n *                     type: string\r\n *                     format: date-time\r\n *                   availableTo:\r\n *                     type: string\r\n *                     format: date-time\r\n *                   maxDistance:\r\n *                     type: number\r\n *     responses:\r\n *       200:\r\n *         description: Estado actualizado exitosamente\r\n *       400:\r\n *         description: Parámetros inválidos\r\n *       500:\r\n *         description: Error interno del servidor\r\n */\r\nrouter.post('/update-status/:musicianId',\r\n  authMiddleware,\r\n  requireRole(['musico', 'adminJunior', 'adminMidLevel', 'adminSenior', 'superAdmin']),\r\n  async (req, res) => {\r\n    await advancedSearchController.updateMusicianStatus(req, res);\r\n  }\r\n);\r\n\r\n/**\r\n * @swagger\r\n * /api/advanced-search/heartbeat/{musicianId}:\r\n *   post:\r\n *     summary: Heartbeat para mantener estado online\r\n *     tags: [Advanced Search]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     parameters:\r\n *       - in: path\r\n *         name: musicianId\r\n *         required: true\r\n *         schema:\r\n *           type: string\r\n *         description: ID del músico\r\n *     requestBody:\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             type: object\r\n *             properties:\r\n *               location:\r\n *                 type: object\r\n *                 properties:\r\n *                   latitude:\r\n *                     type: number\r\n *                   longitude:\r\n *                     type: number\r\n *     responses:\r\n *       200:\r\n *         description: Heartbeat registrado correctamente\r\n *       400:\r\n *         description: Parámetros inválidos\r\n *       500:\r\n *         description: Error interno del servidor\r\n */\r\nrouter.post('/heartbeat/:musicianId',\r\n  authMiddleware,\r\n  requireRole(['musico']),\r\n  async (req, res) => {\r\n    await advancedSearchController.musicianHeartbeat(req, res);\r\n  }\r\n);\r\n\r\n/**\r\n * @swagger\r\n * /api/advanced-search/daily-availability/{musicianId}:\r\n *   get:\r\n *     summary: Obtener disponibilidad diaria del músico\r\n *     tags: [Advanced Search]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     parameters:\r\n *       - in: path\r\n *         name: musicianId\r\n *         required: true\r\n *         schema:\r\n *           type: string\r\n *         description: ID del músico\r\n *       - in: query\r\n *         name: date\r\n *         schema:\r\n *           type: string\r\n *           format: date\r\n *         description: Fecha para consultar disponibilidad (opcional, por defecto hoy)\r\n *     responses:\r\n *       200:\r\n *         description: Disponibilidad obtenida exitosamente\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 data:\r\n *                   type: object\r\n *                   properties:\r\n *                     date:\r\n *                       type: string\r\n *                       format: date\r\n *                     busySlots:\r\n *                       type: array\r\n *                       items:\r\n *                         type: object\r\n *                     availableSlots:\r\n *                       type: array\r\n *                       items:\r\n *                         type: object\r\n *       400:\r\n *         description: Parámetros inválidos\r\n *       500:\r\n *         description: Error interno del servidor\r\n */\r\nrouter.get('/daily-availability/:musicianId',\r\n  authMiddleware,\r\n  requireRole(['musico', 'eventCreator', 'usuario', 'adminJunior', 'adminMidLevel', 'adminSenior', 'superAdmin']),\r\n  async (req, res) => {\r\n    await advancedSearchController.getDailyAvailability(req, res);\r\n  }\r\n);\r\n\r\n/**\r\n * @swagger\r\n * /api/advanced-search/calculate-rate:\r\n *   post:\r\n *     summary: Calcular tarifa para un músico\r\n *     tags: [Advanced Search]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             type: object\r\n *             required:\r\n *               - musicianId\r\n *               - eventType\r\n *               - duration\r\n *               - location\r\n *               - eventDate\r\n *               - instrument\r\n *             properties:\r\n *               musicianId:\r\n *                 type: string\r\n *                 description: ID del músico\r\n *               eventType:\r\n *                 type: string\r\n *                 description: Tipo de evento\r\n *                 example: \"wedding\"\r\n *               duration:\r\n *                 type: number\r\n *                 description: Duración en minutos\r\n *                 example: 120\r\n *               location:\r\n *                 type: string\r\n *                 description: Ubicación del evento\r\n *                 example: \"Madrid\"\r\n *               eventDate:\r\n *                 type: string\r\n *                 format: date-time\r\n *                 description: Fecha y hora del evento\r\n *                 example: \"2024-12-25T20:00:00Z\"\r\n *               instrument:\r\n *                 type: string\r\n *                 description: Instrumento\r\n *                 example: \"guitarra\"\r\n *               isUrgent:\r\n *                 type: boolean\r\n *                 default: false\r\n *     responses:\r\n *       200:\r\n *         description: Tarifa calculada exitosamente\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 data:\r\n *                   type: object\r\n *                   properties:\r\n *                     baseRate:\r\n *                       type: number\r\n *                     finalRate:\r\n *                       type: number\r\n *                     breakdown:\r\n *                       type: array\r\n *                       items:\r\n *                         type: object\r\n *                     factors:\r\n *                       type: object\r\n *                     recommendations:\r\n *                       type: object\r\n *       400:\r\n *         description: Parámetros inválidos\r\n *       500:\r\n *         description: Error interno del servidor\r\n */\r\nrouter.post('/calculate-rate',\r\n  authMiddleware,\r\n  requireRole(['eventCreator', 'usuario', 'adminJunior', 'adminMidLevel', 'adminSenior', 'superAdmin']),\r\n  async (req, res) => {\r\n    await advancedSearchController.calculateMusicianRate(req, res);\r\n  }\r\n);\r\n\r\nexport default router; "],"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","ignoreList":[]}