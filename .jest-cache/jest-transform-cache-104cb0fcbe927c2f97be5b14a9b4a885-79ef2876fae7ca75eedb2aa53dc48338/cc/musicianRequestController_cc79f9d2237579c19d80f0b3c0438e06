fb33945907047352e1b3915556cd39f6
"use strict";

/* istanbul ignore next */
function cov_1hzrf74vqw() {
  var path = "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\controllers\\musicianRequestController.ts";
  var hash = "05a457d73c610315576de93b525867643e6a5e89";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\controllers\\musicianRequestController.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 16
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 28
        },
        end: {
          line: 3,
          column: 110
        }
      },
      "2": {
        start: {
          line: 3,
          column: 91
        },
        end: {
          line: 3,
          column: 106
        }
      },
      "3": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "4": {
        start: {
          line: 5,
          column: 36
        },
        end: {
          line: 5,
          column: 97
        }
      },
      "5": {
        start: {
          line: 5,
          column: 42
        },
        end: {
          line: 5,
          column: 70
        }
      },
      "6": {
        start: {
          line: 5,
          column: 85
        },
        end: {
          line: 5,
          column: 95
        }
      },
      "7": {
        start: {
          line: 6,
          column: 35
        },
        end: {
          line: 6,
          column: 100
        }
      },
      "8": {
        start: {
          line: 6,
          column: 41
        },
        end: {
          line: 6,
          column: 73
        }
      },
      "9": {
        start: {
          line: 6,
          column: 88
        },
        end: {
          line: 6,
          column: 98
        }
      },
      "10": {
        start: {
          line: 7,
          column: 32
        },
        end: {
          line: 7,
          column: 116
        }
      },
      "11": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 78
        }
      },
      "12": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 62
        }
      },
      "13": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 207
        }
      },
      "14": {
        start: {
          line: 13,
          column: 19
        },
        end: {
          line: 13,
          column: 47
        }
      },
      "15": {
        start: {
          line: 17,
          column: 26
        },
        end: {
          line: 20,
          column: 1
        }
      },
      "16": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 18,
          column: 13
        }
      },
      "17": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 19,
          column: 19
        }
      },
      "18": {
        start: {
          line: 21,
          column: 0
        },
        end: {
          line: 21,
          column: 46
        }
      },
      "19": {
        start: {
          line: 23,
          column: 22
        },
        end: {
          line: 45,
          column: 2
        }
      },
      "20": {
        start: {
          line: 23,
          column: 36
        },
        end: {
          line: 45,
          column: 2
        }
      },
      "21": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 44,
          column: 5
        }
      },
      "22": {
        start: {
          line: 25,
          column: 105
        },
        end: {
          line: 25,
          column: 113
        }
      },
      "23": {
        start: {
          line: 26,
          column: 27
        },
        end: {
          line: 35,
          column: 9
        }
      },
      "24": {
        start: {
          line: 36,
          column: 23
        },
        end: {
          line: 36,
          column: 194
        }
      },
      "25": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 39,
          column: 87
        }
      },
      "26": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 39,
          column: 87
        }
      },
      "27": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 115
        }
      },
      "28": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 82
        }
      },
      "29": {
        start: {
          line: 46,
          column: 0
        },
        end: {
          line: 46,
          column: 38
        }
      },
      "30": {
        start: {
          line: 48,
          column: 22
        },
        end: {
          line: 77,
          column: 2
        }
      },
      "31": {
        start: {
          line: 48,
          column: 36
        },
        end: {
          line: 77,
          column: 2
        }
      },
      "32": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 76,
          column: 5
        }
      },
      "33": {
        start: {
          line: 50,
          column: 42
        },
        end: {
          line: 50,
          column: 50
        }
      },
      "34": {
        start: {
          line: 51,
          column: 23
        },
        end: {
          line: 51,
          column: 82
        }
      },
      "35": {
        start: {
          line: 52,
          column: 20
        },
        end: {
          line: 52,
          column: 38
        }
      },
      "36": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 56,
          column: 9
        }
      },
      "37": {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 54,
          column: 71
        }
      },
      "38": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 55,
          column: 19
        }
      },
      "39": {
        start: {
          line: 57,
          column: 21
        },
        end: {
          line: 57,
          column: 31
        }
      },
      "40": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 61,
          column: 9
        }
      },
      "41": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 59,
          column: 83
        }
      },
      "42": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 60,
          column: 19
        }
      },
      "43": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 66,
          column: 11
        }
      },
      "44": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 71,
          column: 9
        }
      },
      "45": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 69,
          column: 86
        }
      },
      "46": {
        start: {
          line: 70,
          column: 12
        },
        end: {
          line: 70,
          column: 61
        }
      },
      "47": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 72,
          column: 36
        }
      },
      "48": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 75,
          column: 84
        }
      },
      "49": {
        start: {
          line: 78,
          column: 0
        },
        end: {
          line: 78,
          column: 38
        }
      },
      "50": {
        start: {
          line: 80,
          column: 22
        },
        end: {
          line: 99,
          column: 2
        }
      },
      "51": {
        start: {
          line: 80,
          column: 36
        },
        end: {
          line: 99,
          column: 2
        }
      },
      "52": {
        start: {
          line: 81,
          column: 4
        },
        end: {
          line: 98,
          column: 5
        }
      },
      "53": {
        start: {
          line: 82,
          column: 30
        },
        end: {
          line: 82,
          column: 38
        }
      },
      "54": {
        start: {
          line: 83,
          column: 23
        },
        end: {
          line: 83,
          column: 82
        }
      },
      "55": {
        start: {
          line: 84,
          column: 20
        },
        end: {
          line: 84,
          column: 38
        }
      },
      "56": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 88,
          column: 9
        }
      },
      "57": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 86,
          column: 71
        }
      },
      "58": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 87,
          column: 19
        }
      },
      "59": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 89,
          column: 76
        }
      },
      "60": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 91,
          column: 56
        }
      },
      "61": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 91,
          column: 56
        }
      },
      "62": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 92,
          column: 36
        }
      },
      "63": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 97,
          column: 74
        }
      },
      "64": {
        start: {
          line: 100,
          column: 0
        },
        end: {
          line: 100,
          column: 38
        }
      },
      "65": {
        start: {
          line: 102,
          column: 25
        },
        end: {
          line: 115,
          column: 2
        }
      },
      "66": {
        start: {
          line: 102,
          column: 39
        },
        end: {
          line: 115,
          column: 2
        }
      },
      "67": {
        start: {
          line: 103,
          column: 4
        },
        end: {
          line: 114,
          column: 5
        }
      },
      "68": {
        start: {
          line: 104,
          column: 23
        },
        end: {
          line: 104,
          column: 33
        }
      },
      "69": {
        start: {
          line: 105,
          column: 20
        },
        end: {
          line: 105,
          column: 84
        }
      },
      "70": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 109,
          column: 9
        }
      },
      "71": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 107,
          column: 71
        }
      },
      "72": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 108,
          column: 19
        }
      },
      "73": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 110,
          column: 29
        }
      },
      "74": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 113,
          column: 83
        }
      },
      "75": {
        start: {
          line: 116,
          column: 0
        },
        end: {
          line: 116,
          column: 44
        }
      },
      "76": {
        start: {
          line: 118,
          column: 23
        },
        end: {
          line: 131,
          column: 2
        }
      },
      "77": {
        start: {
          line: 118,
          column: 37
        },
        end: {
          line: 131,
          column: 2
        }
      },
      "78": {
        start: {
          line: 119,
          column: 4
        },
        end: {
          line: 130,
          column: 5
        }
      },
      "79": {
        start: {
          line: 120,
          column: 23
        },
        end: {
          line: 120,
          column: 33
        }
      },
      "80": {
        start: {
          line: 121,
          column: 20
        },
        end: {
          line: 121,
          column: 84
        }
      },
      "81": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 125,
          column: 9
        }
      },
      "82": {
        start: {
          line: 123,
          column: 12
        },
        end: {
          line: 123,
          column: 71
        }
      },
      "83": {
        start: {
          line: 124,
          column: 12
        },
        end: {
          line: 124,
          column: 19
        }
      },
      "84": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 126,
          column: 72
        }
      },
      "85": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 129,
          column: 84
        }
      },
      "86": {
        start: {
          line: 132,
          column: 0
        },
        end: {
          line: 132,
          column: 40
        }
      },
      "87": {
        start: {
          line: 134,
          column: 22
        },
        end: {
          line: 154,
          column: 2
        }
      },
      "88": {
        start: {
          line: 134,
          column: 36
        },
        end: {
          line: 154,
          column: 2
        }
      },
      "89": {
        start: {
          line: 135,
          column: 4
        },
        end: {
          line: 153,
          column: 5
        }
      },
      "90": {
        start: {
          line: 136,
          column: 23
        },
        end: {
          line: 136,
          column: 33
        }
      },
      "91": {
        start: {
          line: 137,
          column: 27
        },
        end: {
          line: 137,
          column: 35
        }
      },
      "92": {
        start: {
          line: 138,
          column: 23
        },
        end: {
          line: 138,
          column: 75
        }
      },
      "93": {
        start: {
          line: 139,
          column: 20
        },
        end: {
          line: 139,
          column: 38
        }
      },
      "94": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 143,
          column: 9
        }
      },
      "95": {
        start: {
          line: 141,
          column: 12
        },
        end: {
          line: 141,
          column: 71
        }
      },
      "96": {
        start: {
          line: 142,
          column: 12
        },
        end: {
          line: 142,
          column: 19
        }
      },
      "97": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 144,
          column: 101
        }
      },
      "98": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 147,
          column: 85
        }
      },
      "99": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 152,
          column: 76
        }
      },
      "100": {
        start: {
          line: 155,
          column: 0
        },
        end: {
          line: 155,
          column: 38
        }
      },
      "101": {
        start: {
          line: 157,
          column: 22
        },
        end: {
          line: 176,
          column: 2
        }
      },
      "102": {
        start: {
          line: 157,
          column: 36
        },
        end: {
          line: 176,
          column: 2
        }
      },
      "103": {
        start: {
          line: 158,
          column: 4
        },
        end: {
          line: 175,
          column: 5
        }
      },
      "104": {
        start: {
          line: 159,
          column: 23
        },
        end: {
          line: 159,
          column: 33
        }
      },
      "105": {
        start: {
          line: 160,
          column: 23
        },
        end: {
          line: 160,
          column: 75
        }
      },
      "106": {
        start: {
          line: 161,
          column: 20
        },
        end: {
          line: 161,
          column: 38
        }
      },
      "107": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 165,
          column: 9
        }
      },
      "108": {
        start: {
          line: 163,
          column: 12
        },
        end: {
          line: 163,
          column: 71
        }
      },
      "109": {
        start: {
          line: 164,
          column: 12
        },
        end: {
          line: 164,
          column: 19
        }
      },
      "110": {
        start: {
          line: 166,
          column: 8
        },
        end: {
          line: 166,
          column: 30
        }
      },
      "111": {
        start: {
          line: 167,
          column: 8
        },
        end: {
          line: 169,
          column: 83
        }
      },
      "112": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 174,
          column: 74
        }
      },
      "113": {
        start: {
          line: 177,
          column: 0
        },
        end: {
          line: 177,
          column: 38
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 2,
            column: 45
          }
        },
        loc: {
          start: {
            line: 2,
            column: 89
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "adopt",
        decl: {
          start: {
            line: 3,
            column: 13
          },
          end: {
            line: 3,
            column: 18
          }
        },
        loc: {
          start: {
            line: 3,
            column: 26
          },
          end: {
            line: 3,
            column: 112
          }
        },
        line: 3
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 3,
            column: 70
          },
          end: {
            line: 3,
            column: 71
          }
        },
        loc: {
          start: {
            line: 3,
            column: 89
          },
          end: {
            line: 3,
            column: 108
          }
        },
        line: 3
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 4,
            column: 36
          },
          end: {
            line: 4,
            column: 37
          }
        },
        loc: {
          start: {
            line: 4,
            column: 63
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 4
      },
      "4": {
        name: "fulfilled",
        decl: {
          start: {
            line: 5,
            column: 17
          },
          end: {
            line: 5,
            column: 26
          }
        },
        loc: {
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 99
          }
        },
        line: 5
      },
      "5": {
        name: "rejected",
        decl: {
          start: {
            line: 6,
            column: 17
          },
          end: {
            line: 6,
            column: 25
          }
        },
        loc: {
          start: {
            line: 6,
            column: 33
          },
          end: {
            line: 6,
            column: 102
          }
        },
        line: 6
      },
      "6": {
        name: "step",
        decl: {
          start: {
            line: 7,
            column: 17
          },
          end: {
            line: 7,
            column: 21
          }
        },
        loc: {
          start: {
            line: 7,
            column: 30
          },
          end: {
            line: 7,
            column: 118
          }
        },
        line: 7
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 17,
            column: 26
          },
          end: {
            line: 17,
            column: 27
          }
        },
        loc: {
          start: {
            line: 17,
            column: 43
          },
          end: {
            line: 20,
            column: 1
          }
        },
        line: 17
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 23,
            column: 22
          },
          end: {
            line: 23,
            column: 23
          }
        },
        loc: {
          start: {
            line: 23,
            column: 36
          },
          end: {
            line: 45,
            column: 2
          }
        },
        line: 23
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 23,
            column: 70
          },
          end: {
            line: 23,
            column: 71
          }
        },
        loc: {
          start: {
            line: 23,
            column: 83
          },
          end: {
            line: 45,
            column: 1
          }
        },
        line: 23
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 48,
            column: 22
          },
          end: {
            line: 48,
            column: 23
          }
        },
        loc: {
          start: {
            line: 48,
            column: 36
          },
          end: {
            line: 77,
            column: 2
          }
        },
        line: 48
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 48,
            column: 70
          },
          end: {
            line: 48,
            column: 71
          }
        },
        loc: {
          start: {
            line: 48,
            column: 83
          },
          end: {
            line: 77,
            column: 1
          }
        },
        line: 48
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 80,
            column: 22
          },
          end: {
            line: 80,
            column: 23
          }
        },
        loc: {
          start: {
            line: 80,
            column: 36
          },
          end: {
            line: 99,
            column: 2
          }
        },
        line: 80
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 80,
            column: 70
          },
          end: {
            line: 80,
            column: 71
          }
        },
        loc: {
          start: {
            line: 80,
            column: 83
          },
          end: {
            line: 99,
            column: 1
          }
        },
        line: 80
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 102,
            column: 25
          },
          end: {
            line: 102,
            column: 26
          }
        },
        loc: {
          start: {
            line: 102,
            column: 39
          },
          end: {
            line: 115,
            column: 2
          }
        },
        line: 102
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 102,
            column: 73
          },
          end: {
            line: 102,
            column: 74
          }
        },
        loc: {
          start: {
            line: 102,
            column: 86
          },
          end: {
            line: 115,
            column: 1
          }
        },
        line: 102
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 118,
            column: 23
          },
          end: {
            line: 118,
            column: 24
          }
        },
        loc: {
          start: {
            line: 118,
            column: 37
          },
          end: {
            line: 131,
            column: 2
          }
        },
        line: 118
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 118,
            column: 71
          },
          end: {
            line: 118,
            column: 72
          }
        },
        loc: {
          start: {
            line: 118,
            column: 84
          },
          end: {
            line: 131,
            column: 1
          }
        },
        line: 118
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 134,
            column: 22
          },
          end: {
            line: 134,
            column: 23
          }
        },
        loc: {
          start: {
            line: 134,
            column: 36
          },
          end: {
            line: 154,
            column: 2
          }
        },
        line: 134
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 134,
            column: 70
          },
          end: {
            line: 134,
            column: 71
          }
        },
        loc: {
          start: {
            line: 134,
            column: 83
          },
          end: {
            line: 154,
            column: 1
          }
        },
        line: 134
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 157,
            column: 22
          },
          end: {
            line: 157,
            column: 23
          }
        },
        loc: {
          start: {
            line: 157,
            column: 36
          },
          end: {
            line: 176,
            column: 2
          }
        },
        line: 157
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 157,
            column: 70
          },
          end: {
            line: 157,
            column: 71
          }
        },
        loc: {
          start: {
            line: 157,
            column: 83
          },
          end: {
            line: 176,
            column: 1
          }
        },
        line: 157
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 16
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 17
          },
          end: {
            line: 2,
            column: 21
          }
        }, {
          start: {
            line: 2,
            column: 25
          },
          end: {
            line: 2,
            column: 39
          }
        }, {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 35
          },
          end: {
            line: 3,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 56
          },
          end: {
            line: 3,
            column: 61
          }
        }, {
          start: {
            line: 3,
            column: 64
          },
          end: {
            line: 3,
            column: 109
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 17
          }
        }, {
          start: {
            line: 4,
            column: 22
          },
          end: {
            line: 4,
            column: 33
          }
        }],
        line: 4
      },
      "3": {
        loc: {
          start: {
            line: 7,
            column: 32
          },
          end: {
            line: 7,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 7,
            column: 46
          },
          end: {
            line: 7,
            column: 67
          }
        }, {
          start: {
            line: 7,
            column: 70
          },
          end: {
            line: 7,
            column: 115
          }
        }],
        line: 7
      },
      "4": {
        loc: {
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 61
          }
        }, {
          start: {
            line: 8,
            column: 65
          },
          end: {
            line: 8,
            column: 67
          }
        }],
        line: 8
      },
      "5": {
        loc: {
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 39,
            column: 87
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 39,
            column: 87
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "6": {
        loc: {
          start: {
            line: 53,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 53
      },
      "7": {
        loc: {
          start: {
            line: 58,
            column: 8
          },
          end: {
            line: 61,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 58,
            column: 8
          },
          end: {
            line: 61,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 58
      },
      "8": {
        loc: {
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 71,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 71,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 68
      },
      "9": {
        loc: {
          start: {
            line: 85,
            column: 8
          },
          end: {
            line: 88,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 85,
            column: 8
          },
          end: {
            line: 88,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 85
      },
      "10": {
        loc: {
          start: {
            line: 90,
            column: 8
          },
          end: {
            line: 91,
            column: 56
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 90,
            column: 8
          },
          end: {
            line: 91,
            column: 56
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 90
      },
      "11": {
        loc: {
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 109,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 109,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 106
      },
      "12": {
        loc: {
          start: {
            line: 122,
            column: 8
          },
          end: {
            line: 125,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 122,
            column: 8
          },
          end: {
            line: 125,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 122
      },
      "13": {
        loc: {
          start: {
            line: 140,
            column: 8
          },
          end: {
            line: 143,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 140,
            column: 8
          },
          end: {
            line: 143,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 140
      },
      "14": {
        loc: {
          start: {
            line: 162,
            column: 8
          },
          end: {
            line: 165,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 162,
            column: 8
          },
          end: {
            line: 165,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 162
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\controllers\\musicianRequestController.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\controllers\\musicianRequestController.ts"],
      sourcesContent: ["import { Request, Response } from 'express';\r\nimport { db } from '../utils/firebase';\r\nimport { MusicianRequest } from '../models/musicianRequestModel';\r\nimport { Server } from 'socket.io';\r\n\r\n// Asume que tienes acceso a la instancia de io y users (mapa de usuarios conectados)\r\nlet io: Server;\r\nlet users: Record<string, string>;\r\nexport const setSocketInstance = (\r\n  _io: Server,\r\n  _users: Record<string, string>\r\n) => {\r\n  io = _io;\r\n  users = _users;\r\n};\r\n\r\n// Crear solicitud de m\xFAsico\r\nexport const createRequest = async (req: Request, res: Response) => {\r\n  try {\r\n    const {\r\n      userId,\r\n      eventType,\r\n      date,\r\n      startTime,\r\n      endTime,\r\n      location,\r\n      instrument,\r\n      budget,\r\n      comments,\r\n    } = req.body;\r\n    const newRequest: Omit<\r\n      MusicianRequest,\r\n      'id' | 'status' | 'createdAt' | 'updatedAt'\r\n    > = {\r\n      userId,\r\n      eventType,\r\n      date,\r\n      time: `${startTime} - ${endTime}`,\r\n      location,\r\n      instrument,\r\n      budget,\r\n      comments,\r\n    };\r\n    const docRef = await db.collection('musicianRequests').add({\r\n      ...newRequest,\r\n      status: 'pendiente',\r\n      createdAt: new Date(),\r\n      updatedAt: new Date(),\r\n    });\r\n    // Emitir evento socket a m\xFAsicos conectados\r\n    if (io) io.emit('new_event_request', { id: docRef.id, ...newRequest });\r\n    res.status(201).json({ id: docRef.id, ...newRequest, status: 'pendiente' });\r\n  } catch (err) {\r\n    res.status(500).json({ error: 'Error al crear solicitud', details: err });\r\n  }\r\n};\r\n\r\n// Aceptar solicitud (solo el primero la toma)\r\nexport const acceptRequest = async (req: Request, res: Response) => {\r\n  try {\r\n    const { requestId, musicianId } = req.body;\r\n    const docRef = db.collection('musicianRequests').doc(requestId);\r\n    const doc = await docRef.get();\r\n    if (!doc.exists) {\r\n      res.status(404).json({ error: 'Solicitud no encontrada' });\r\n      return;\r\n    }\r\n    const data = doc.data() as MusicianRequest;\r\n    if (data.status !== 'pendiente') {\r\n      res.status(400).json({ error: 'Solicitud ya tomada o no disponible' });\r\n      return;\r\n    }\r\n    await docRef.update({\r\n      status: 'asignada',\r\n      assignedMusicianId: musicianId,\r\n      updatedAt: new Date(),\r\n    });\r\n    // Emitir evento a usuario y m\xFAsicos\r\n    if (io) {\r\n      io.emit('musician_accepted', { requestId, musician: { id: musicianId } });\r\n      io.emit('musician_request_taken', { requestId });\r\n    }\r\n    res.json({ success: true });\r\n  } catch (err) {\r\n    res.status(500).json({ error: 'Error al aceptar solicitud', details: err });\r\n  }\r\n};\r\n\r\n// Cancelar solicitud\r\nexport const cancelRequest = async (req: Request, res: Response) => {\r\n  try {\r\n    const { requestId } = req.body;\r\n    const docRef = db.collection('musicianRequests').doc(requestId);\r\n    const doc = await docRef.get();\r\n    if (!doc.exists) {\r\n      res.status(404).json({ error: 'Solicitud no encontrada' });\r\n      return;\r\n    }\r\n    await docRef.update({ status: 'cancelada', updatedAt: new Date() });\r\n    if (io) io.emit('request_cancelled', { requestId });\r\n    res.json({ success: true });\r\n  } catch (err) {\r\n    res\r\n      .status(500)\r\n      .json({ error: 'Error al cancelar solicitud', details: err });\r\n  }\r\n};\r\n\r\n// Consultar estado de solicitud\r\nexport const getRequestStatus = async (req: Request, res: Response) => {\r\n  try {\r\n    const { id } = req.params;\r\n    const doc = await db.collection('musicianRequests').doc(id).get();\r\n    if (!doc.exists) {\r\n      res.status(404).json({ error: 'Solicitud no encontrada' });\r\n      return;\r\n    }\r\n    res.json(doc.data());\r\n  } catch (err) {\r\n    res.status(500).json({ error: 'Error al consultar estado', details: err });\r\n  }\r\n};\r\n\r\n// Obtener solicitud por ID\r\nexport const getRequestById = async (req: Request, res: Response) => {\r\n  try {\r\n    const { id } = req.params;\r\n    const doc = await db.collection('musicianRequests').doc(id).get();\r\n    if (!doc.exists) {\r\n      res.status(404).json({ error: 'Solicitud no encontrada' });\r\n      return;\r\n    }\r\n    res.status(200).json({ id: doc.id, ...doc.data() });\r\n  } catch (err) {\r\n    res.status(500).json({ error: 'Error al obtener solicitud', details: err });\r\n  }\r\n};\r\n\r\n// Actualizar solicitud\r\nexport const updateRequest = async (req: Request, res: Response) => {\r\n  try {\r\n    const { id } = req.params;\r\n    const updateData = req.body;\r\n    const docRef = db.collection('musicianRequests').doc(id);\r\n    const doc = await docRef.get();\r\n    if (!doc.exists) {\r\n      res.status(404).json({ error: 'Solicitud no encontrada' });\r\n      return;\r\n    }\r\n    await docRef.update({ ...updateData, updatedAt: new Date() });\r\n    res\r\n      .status(200)\r\n      .json({ success: true, message: 'Solicitud actualizada correctamente' });\r\n  } catch (err) {\r\n    res\r\n      .status(500)\r\n      .json({ error: 'Error al actualizar solicitud', details: err });\r\n  }\r\n};\r\n\r\n// Eliminar solicitud\r\nexport const deleteRequest = async (req: Request, res: Response) => {\r\n  try {\r\n    const { id } = req.params;\r\n    const docRef = db.collection('musicianRequests').doc(id);\r\n    const doc = await docRef.get();\r\n    if (!doc.exists) {\r\n      res.status(404).json({ error: 'Solicitud no encontrada' });\r\n      return;\r\n    }\r\n    await docRef.delete();\r\n    res\r\n      .status(200)\r\n      .json({ success: true, message: 'Solicitud eliminada correctamente' });\r\n  } catch (err) {\r\n    res\r\n      .status(500)\r\n      .json({ error: 'Error al eliminar solicitud', details: err });\r\n  }\r\n};\r\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "05a457d73c610315576de93b525867643e6a5e89"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1hzrf74vqw = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1hzrf74vqw();
var __awaiter =
/* istanbul ignore next */
(cov_1hzrf74vqw().s[0]++,
/* istanbul ignore next */
(cov_1hzrf74vqw().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1hzrf74vqw().b[0][1]++, this.__awaiter) ||
/* istanbul ignore next */
(cov_1hzrf74vqw().b[0][2]++, function (thisArg, _arguments, P, generator) {
  /* istanbul ignore next */
  cov_1hzrf74vqw().f[0]++;
  function adopt(value) {
    /* istanbul ignore next */
    cov_1hzrf74vqw().f[1]++;
    cov_1hzrf74vqw().s[1]++;
    return value instanceof P ?
    /* istanbul ignore next */
    (cov_1hzrf74vqw().b[1][0]++, value) :
    /* istanbul ignore next */
    (cov_1hzrf74vqw().b[1][1]++, new P(function (resolve) {
      /* istanbul ignore next */
      cov_1hzrf74vqw().f[2]++;
      cov_1hzrf74vqw().s[2]++;
      resolve(value);
    }));
  }
  /* istanbul ignore next */
  cov_1hzrf74vqw().s[3]++;
  return new (
  /* istanbul ignore next */
  (cov_1hzrf74vqw().b[2][0]++, P) ||
  /* istanbul ignore next */
  (cov_1hzrf74vqw().b[2][1]++, P = Promise))(function (resolve, reject) {
    /* istanbul ignore next */
    cov_1hzrf74vqw().f[3]++;
    function fulfilled(value) {
      /* istanbul ignore next */
      cov_1hzrf74vqw().f[4]++;
      cov_1hzrf74vqw().s[4]++;
      try {
        /* istanbul ignore next */
        cov_1hzrf74vqw().s[5]++;
        step(generator.next(value));
      } catch (e) {
        /* istanbul ignore next */
        cov_1hzrf74vqw().s[6]++;
        reject(e);
      }
    }
    function rejected(value) {
      /* istanbul ignore next */
      cov_1hzrf74vqw().f[5]++;
      cov_1hzrf74vqw().s[7]++;
      try {
        /* istanbul ignore next */
        cov_1hzrf74vqw().s[8]++;
        step(generator["throw"](value));
      } catch (e) {
        /* istanbul ignore next */
        cov_1hzrf74vqw().s[9]++;
        reject(e);
      }
    }
    function step(result) {
      /* istanbul ignore next */
      cov_1hzrf74vqw().f[6]++;
      cov_1hzrf74vqw().s[10]++;
      result.done ?
      /* istanbul ignore next */
      (cov_1hzrf74vqw().b[3][0]++, resolve(result.value)) :
      /* istanbul ignore next */
      (cov_1hzrf74vqw().b[3][1]++, adopt(result.value).then(fulfilled, rejected));
    }
    /* istanbul ignore next */
    cov_1hzrf74vqw().s[11]++;
    step((generator = generator.apply(thisArg,
    /* istanbul ignore next */
    (cov_1hzrf74vqw().b[4][0]++, _arguments) ||
    /* istanbul ignore next */
    (cov_1hzrf74vqw().b[4][1]++, []))).next());
  });
}));
/* istanbul ignore next */
cov_1hzrf74vqw().s[12]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1hzrf74vqw().s[13]++;
exports.deleteRequest = exports.updateRequest = exports.getRequestById = exports.getRequestStatus = exports.cancelRequest = exports.acceptRequest = exports.createRequest = exports.setSocketInstance = void 0;
const firebase_1 =
/* istanbul ignore next */
(cov_1hzrf74vqw().s[14]++, require("../utils/firebase"));
// Asume que tienes acceso a la instancia de io y users (mapa de usuarios conectados)
let io;
let users;
/* istanbul ignore next */
cov_1hzrf74vqw().s[15]++;
const setSocketInstance = (_io, _users) => {
  /* istanbul ignore next */
  cov_1hzrf74vqw().f[7]++;
  cov_1hzrf74vqw().s[16]++;
  io = _io;
  /* istanbul ignore next */
  cov_1hzrf74vqw().s[17]++;
  users = _users;
};
/* istanbul ignore next */
cov_1hzrf74vqw().s[18]++;
exports.setSocketInstance = setSocketInstance;
// Crear solicitud de músico
/* istanbul ignore next */
cov_1hzrf74vqw().s[19]++;
const createRequest = (req, res) => {
  /* istanbul ignore next */
  cov_1hzrf74vqw().f[8]++;
  cov_1hzrf74vqw().s[20]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1hzrf74vqw().f[9]++;
    cov_1hzrf74vqw().s[21]++;
    try {
      const {
        userId,
        eventType,
        date,
        startTime,
        endTime,
        location,
        instrument,
        budget,
        comments
      } =
      /* istanbul ignore next */
      (cov_1hzrf74vqw().s[22]++, req.body);
      const newRequest =
      /* istanbul ignore next */
      (cov_1hzrf74vqw().s[23]++, {
        userId,
        eventType,
        date,
        time: `${startTime} - ${endTime}`,
        location,
        instrument,
        budget,
        comments
      });
      const docRef =
      /* istanbul ignore next */
      (cov_1hzrf74vqw().s[24]++, yield firebase_1.db.collection('musicianRequests').add(Object.assign(Object.assign({}, newRequest), {
        status: 'pendiente',
        createdAt: new Date(),
        updatedAt: new Date()
      })));
      // Emitir evento socket a músicos conectados
      /* istanbul ignore next */
      cov_1hzrf74vqw().s[25]++;
      if (io) {
        /* istanbul ignore next */
        cov_1hzrf74vqw().b[5][0]++;
        cov_1hzrf74vqw().s[26]++;
        io.emit('new_event_request', Object.assign({
          id: docRef.id
        }, newRequest));
      } else
      /* istanbul ignore next */
      {
        cov_1hzrf74vqw().b[5][1]++;
      }
      cov_1hzrf74vqw().s[27]++;
      res.status(201).json(Object.assign(Object.assign({
        id: docRef.id
      }, newRequest), {
        status: 'pendiente'
      }));
    } catch (err) {
      /* istanbul ignore next */
      cov_1hzrf74vqw().s[28]++;
      res.status(500).json({
        error: 'Error al crear solicitud',
        details: err
      });
    }
  });
};
/* istanbul ignore next */
cov_1hzrf74vqw().s[29]++;
exports.createRequest = createRequest;
// Aceptar solicitud (solo el primero la toma)
/* istanbul ignore next */
cov_1hzrf74vqw().s[30]++;
const acceptRequest = (req, res) => {
  /* istanbul ignore next */
  cov_1hzrf74vqw().f[10]++;
  cov_1hzrf74vqw().s[31]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1hzrf74vqw().f[11]++;
    cov_1hzrf74vqw().s[32]++;
    try {
      const {
        requestId,
        musicianId
      } =
      /* istanbul ignore next */
      (cov_1hzrf74vqw().s[33]++, req.body);
      const docRef =
      /* istanbul ignore next */
      (cov_1hzrf74vqw().s[34]++, firebase_1.db.collection('musicianRequests').doc(requestId));
      const doc =
      /* istanbul ignore next */
      (cov_1hzrf74vqw().s[35]++, yield docRef.get());
      /* istanbul ignore next */
      cov_1hzrf74vqw().s[36]++;
      if (!doc.exists) {
        /* istanbul ignore next */
        cov_1hzrf74vqw().b[6][0]++;
        cov_1hzrf74vqw().s[37]++;
        res.status(404).json({
          error: 'Solicitud no encontrada'
        });
        /* istanbul ignore next */
        cov_1hzrf74vqw().s[38]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1hzrf74vqw().b[6][1]++;
      }
      const data =
      /* istanbul ignore next */
      (cov_1hzrf74vqw().s[39]++, doc.data());
      /* istanbul ignore next */
      cov_1hzrf74vqw().s[40]++;
      if (data.status !== 'pendiente') {
        /* istanbul ignore next */
        cov_1hzrf74vqw().b[7][0]++;
        cov_1hzrf74vqw().s[41]++;
        res.status(400).json({
          error: 'Solicitud ya tomada o no disponible'
        });
        /* istanbul ignore next */
        cov_1hzrf74vqw().s[42]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1hzrf74vqw().b[7][1]++;
      }
      cov_1hzrf74vqw().s[43]++;
      yield docRef.update({
        status: 'asignada',
        assignedMusicianId: musicianId,
        updatedAt: new Date()
      });
      // Emitir evento a usuario y músicos
      /* istanbul ignore next */
      cov_1hzrf74vqw().s[44]++;
      if (io) {
        /* istanbul ignore next */
        cov_1hzrf74vqw().b[8][0]++;
        cov_1hzrf74vqw().s[45]++;
        io.emit('musician_accepted', {
          requestId,
          musician: {
            id: musicianId
          }
        });
        /* istanbul ignore next */
        cov_1hzrf74vqw().s[46]++;
        io.emit('musician_request_taken', {
          requestId
        });
      } else
      /* istanbul ignore next */
      {
        cov_1hzrf74vqw().b[8][1]++;
      }
      cov_1hzrf74vqw().s[47]++;
      res.json({
        success: true
      });
    } catch (err) {
      /* istanbul ignore next */
      cov_1hzrf74vqw().s[48]++;
      res.status(500).json({
        error: 'Error al aceptar solicitud',
        details: err
      });
    }
  });
};
/* istanbul ignore next */
cov_1hzrf74vqw().s[49]++;
exports.acceptRequest = acceptRequest;
// Cancelar solicitud
/* istanbul ignore next */
cov_1hzrf74vqw().s[50]++;
const cancelRequest = (req, res) => {
  /* istanbul ignore next */
  cov_1hzrf74vqw().f[12]++;
  cov_1hzrf74vqw().s[51]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1hzrf74vqw().f[13]++;
    cov_1hzrf74vqw().s[52]++;
    try {
      const {
        requestId
      } =
      /* istanbul ignore next */
      (cov_1hzrf74vqw().s[53]++, req.body);
      const docRef =
      /* istanbul ignore next */
      (cov_1hzrf74vqw().s[54]++, firebase_1.db.collection('musicianRequests').doc(requestId));
      const doc =
      /* istanbul ignore next */
      (cov_1hzrf74vqw().s[55]++, yield docRef.get());
      /* istanbul ignore next */
      cov_1hzrf74vqw().s[56]++;
      if (!doc.exists) {
        /* istanbul ignore next */
        cov_1hzrf74vqw().b[9][0]++;
        cov_1hzrf74vqw().s[57]++;
        res.status(404).json({
          error: 'Solicitud no encontrada'
        });
        /* istanbul ignore next */
        cov_1hzrf74vqw().s[58]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1hzrf74vqw().b[9][1]++;
      }
      cov_1hzrf74vqw().s[59]++;
      yield docRef.update({
        status: 'cancelada',
        updatedAt: new Date()
      });
      /* istanbul ignore next */
      cov_1hzrf74vqw().s[60]++;
      if (io) {
        /* istanbul ignore next */
        cov_1hzrf74vqw().b[10][0]++;
        cov_1hzrf74vqw().s[61]++;
        io.emit('request_cancelled', {
          requestId
        });
      } else
      /* istanbul ignore next */
      {
        cov_1hzrf74vqw().b[10][1]++;
      }
      cov_1hzrf74vqw().s[62]++;
      res.json({
        success: true
      });
    } catch (err) {
      /* istanbul ignore next */
      cov_1hzrf74vqw().s[63]++;
      res.status(500).json({
        error: 'Error al cancelar solicitud',
        details: err
      });
    }
  });
};
/* istanbul ignore next */
cov_1hzrf74vqw().s[64]++;
exports.cancelRequest = cancelRequest;
// Consultar estado de solicitud
/* istanbul ignore next */
cov_1hzrf74vqw().s[65]++;
const getRequestStatus = (req, res) => {
  /* istanbul ignore next */
  cov_1hzrf74vqw().f[14]++;
  cov_1hzrf74vqw().s[66]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1hzrf74vqw().f[15]++;
    cov_1hzrf74vqw().s[67]++;
    try {
      const {
        id
      } =
      /* istanbul ignore next */
      (cov_1hzrf74vqw().s[68]++, req.params);
      const doc =
      /* istanbul ignore next */
      (cov_1hzrf74vqw().s[69]++, yield firebase_1.db.collection('musicianRequests').doc(id).get());
      /* istanbul ignore next */
      cov_1hzrf74vqw().s[70]++;
      if (!doc.exists) {
        /* istanbul ignore next */
        cov_1hzrf74vqw().b[11][0]++;
        cov_1hzrf74vqw().s[71]++;
        res.status(404).json({
          error: 'Solicitud no encontrada'
        });
        /* istanbul ignore next */
        cov_1hzrf74vqw().s[72]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1hzrf74vqw().b[11][1]++;
      }
      cov_1hzrf74vqw().s[73]++;
      res.json(doc.data());
    } catch (err) {
      /* istanbul ignore next */
      cov_1hzrf74vqw().s[74]++;
      res.status(500).json({
        error: 'Error al consultar estado',
        details: err
      });
    }
  });
};
/* istanbul ignore next */
cov_1hzrf74vqw().s[75]++;
exports.getRequestStatus = getRequestStatus;
// Obtener solicitud por ID
/* istanbul ignore next */
cov_1hzrf74vqw().s[76]++;
const getRequestById = (req, res) => {
  /* istanbul ignore next */
  cov_1hzrf74vqw().f[16]++;
  cov_1hzrf74vqw().s[77]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1hzrf74vqw().f[17]++;
    cov_1hzrf74vqw().s[78]++;
    try {
      const {
        id
      } =
      /* istanbul ignore next */
      (cov_1hzrf74vqw().s[79]++, req.params);
      const doc =
      /* istanbul ignore next */
      (cov_1hzrf74vqw().s[80]++, yield firebase_1.db.collection('musicianRequests').doc(id).get());
      /* istanbul ignore next */
      cov_1hzrf74vqw().s[81]++;
      if (!doc.exists) {
        /* istanbul ignore next */
        cov_1hzrf74vqw().b[12][0]++;
        cov_1hzrf74vqw().s[82]++;
        res.status(404).json({
          error: 'Solicitud no encontrada'
        });
        /* istanbul ignore next */
        cov_1hzrf74vqw().s[83]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1hzrf74vqw().b[12][1]++;
      }
      cov_1hzrf74vqw().s[84]++;
      res.status(200).json(Object.assign({
        id: doc.id
      }, doc.data()));
    } catch (err) {
      /* istanbul ignore next */
      cov_1hzrf74vqw().s[85]++;
      res.status(500).json({
        error: 'Error al obtener solicitud',
        details: err
      });
    }
  });
};
/* istanbul ignore next */
cov_1hzrf74vqw().s[86]++;
exports.getRequestById = getRequestById;
// Actualizar solicitud
/* istanbul ignore next */
cov_1hzrf74vqw().s[87]++;
const updateRequest = (req, res) => {
  /* istanbul ignore next */
  cov_1hzrf74vqw().f[18]++;
  cov_1hzrf74vqw().s[88]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1hzrf74vqw().f[19]++;
    cov_1hzrf74vqw().s[89]++;
    try {
      const {
        id
      } =
      /* istanbul ignore next */
      (cov_1hzrf74vqw().s[90]++, req.params);
      const updateData =
      /* istanbul ignore next */
      (cov_1hzrf74vqw().s[91]++, req.body);
      const docRef =
      /* istanbul ignore next */
      (cov_1hzrf74vqw().s[92]++, firebase_1.db.collection('musicianRequests').doc(id));
      const doc =
      /* istanbul ignore next */
      (cov_1hzrf74vqw().s[93]++, yield docRef.get());
      /* istanbul ignore next */
      cov_1hzrf74vqw().s[94]++;
      if (!doc.exists) {
        /* istanbul ignore next */
        cov_1hzrf74vqw().b[13][0]++;
        cov_1hzrf74vqw().s[95]++;
        res.status(404).json({
          error: 'Solicitud no encontrada'
        });
        /* istanbul ignore next */
        cov_1hzrf74vqw().s[96]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1hzrf74vqw().b[13][1]++;
      }
      cov_1hzrf74vqw().s[97]++;
      yield docRef.update(Object.assign(Object.assign({}, updateData), {
        updatedAt: new Date()
      }));
      /* istanbul ignore next */
      cov_1hzrf74vqw().s[98]++;
      res.status(200).json({
        success: true,
        message: 'Solicitud actualizada correctamente'
      });
    } catch (err) {
      /* istanbul ignore next */
      cov_1hzrf74vqw().s[99]++;
      res.status(500).json({
        error: 'Error al actualizar solicitud',
        details: err
      });
    }
  });
};
/* istanbul ignore next */
cov_1hzrf74vqw().s[100]++;
exports.updateRequest = updateRequest;
// Eliminar solicitud
/* istanbul ignore next */
cov_1hzrf74vqw().s[101]++;
const deleteRequest = (req, res) => {
  /* istanbul ignore next */
  cov_1hzrf74vqw().f[20]++;
  cov_1hzrf74vqw().s[102]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1hzrf74vqw().f[21]++;
    cov_1hzrf74vqw().s[103]++;
    try {
      const {
        id
      } =
      /* istanbul ignore next */
      (cov_1hzrf74vqw().s[104]++, req.params);
      const docRef =
      /* istanbul ignore next */
      (cov_1hzrf74vqw().s[105]++, firebase_1.db.collection('musicianRequests').doc(id));
      const doc =
      /* istanbul ignore next */
      (cov_1hzrf74vqw().s[106]++, yield docRef.get());
      /* istanbul ignore next */
      cov_1hzrf74vqw().s[107]++;
      if (!doc.exists) {
        /* istanbul ignore next */
        cov_1hzrf74vqw().b[14][0]++;
        cov_1hzrf74vqw().s[108]++;
        res.status(404).json({
          error: 'Solicitud no encontrada'
        });
        /* istanbul ignore next */
        cov_1hzrf74vqw().s[109]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1hzrf74vqw().b[14][1]++;
      }
      cov_1hzrf74vqw().s[110]++;
      yield docRef.delete();
      /* istanbul ignore next */
      cov_1hzrf74vqw().s[111]++;
      res.status(200).json({
        success: true,
        message: 'Solicitud eliminada correctamente'
      });
    } catch (err) {
      /* istanbul ignore next */
      cov_1hzrf74vqw().s[112]++;
      res.status(500).json({
        error: 'Error al eliminar solicitud',
        details: err
      });
    }
  });
};
/* istanbul ignore next */
cov_1hzrf74vqw().s[113]++;
exports.deleteRequest = deleteRequest;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,