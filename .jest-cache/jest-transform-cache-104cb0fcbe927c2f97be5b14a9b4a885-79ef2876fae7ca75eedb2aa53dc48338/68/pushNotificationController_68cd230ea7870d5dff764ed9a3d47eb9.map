{"version":3,"names":["cov_wyzfij6rm","actualCoverage","errorHandler_1","s","require","pushNotificationService_1","loggerService_1","exports","savePushSubscription","asyncHandler","req","res","f","__awaiter","endpoint","keys","body","userId","b","_a","user","status","json","success","error","message","code","subscription","pushNotificationService","saveSubscription","isActive","logger","info","metadata","subscriptionId","id","data","getUserPushSubscriptions","subscriptions","getUserSubscriptions","deletePushSubscription","params","deleteSubscription","sendNotificationToUser","notification","title","notificationTitle","sendBulkNotification","bulkRequest","templateId","customNotification","userIds","userRoles","result","failed","createNotificationTemplate","template","name","createdTemplate","getNotificationTemplate","getActiveTemplates","templates","updateNotificationTemplate","updates","updatedTemplate","deleteNotificationTemplate","getNotificationStats","stats","getVapidPublicKey","publicKey","testPushNotification","testNotification","icon","badge","tag","url","type","requireInteraction","priority","category"],"sources":["C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\controllers\\pushNotificationController.ts"],"sourcesContent":["import { Request, Response } from 'express';\r\nimport { asyncHandler } from '../middleware/errorHandler';\r\nimport { pushNotificationService } from '../services/pushNotificationService';\r\nimport { logger } from '../services/loggerService';\r\nimport { requireRole } from '../middleware/requireRole';\r\n\r\n/**\r\n * Guardar suscripción push de un usuario\r\n */\r\nexport const savePushSubscription = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const { endpoint, keys } = req.body;\r\n    const userId = req.user?.userId;\r\n\r\n    if (!userId) {\r\n      return res.status(401).json({\r\n        success: false,\r\n        error: {\r\n          message: 'Usuario no autenticado',\r\n          code: 'UNAUTHORIZED',\r\n        },\r\n      });\r\n    }\r\n\r\n    if (!endpoint || !keys) {\r\n      return res.status(400).json({\r\n        success: false,\r\n        error: {\r\n          message: 'Endpoint y keys son requeridos',\r\n          code: 'VALIDATION_ERROR',\r\n        },\r\n      });\r\n    }\r\n\r\n    const subscription = await pushNotificationService.saveSubscription(\r\n      userId,\r\n      {\r\n        endpoint,\r\n        keys,\r\n        isActive: true,\r\n      }\r\n    );\r\n\r\n    logger.info('Suscripción push guardada', {\r\n      metadata: { userId, subscriptionId: subscription.id },\r\n    });\r\n\r\n    res.status(201).json({\r\n      success: true,\r\n      data: subscription,\r\n      message: 'Suscripción push guardada exitosamente',\r\n    });\r\n  }\r\n);\r\n\r\n/**\r\n * Obtener suscripciones de un usuario\r\n */\r\nexport const getUserPushSubscriptions = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const userId = req.user?.userId;\r\n\r\n    if (!userId) {\r\n      return res.status(401).json({\r\n        success: false,\r\n        error: {\r\n          message: 'Usuario no autenticado',\r\n          code: 'UNAUTHORIZED',\r\n        },\r\n      });\r\n    }\r\n\r\n    const subscriptions = await pushNotificationService.getUserSubscriptions();\r\n\r\n    res.json({\r\n      success: true,\r\n      data: subscriptions,\r\n      message: 'Suscripciones obtenidas exitosamente',\r\n    });\r\n  }\r\n);\r\n\r\n/**\r\n * Eliminar suscripción push\r\n */\r\nexport const deletePushSubscription = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const { subscriptionId } = req.params;\r\n    const userId = req.user?.userId;\r\n\r\n    if (!userId) {\r\n      return res.status(401).json({\r\n        success: false,\r\n        error: {\r\n          message: 'Usuario no autenticado',\r\n          code: 'UNAUTHORIZED',\r\n        },\r\n      });\r\n    }\r\n\r\n    await pushNotificationService.deleteSubscription(subscriptionId);\r\n\r\n    logger.info('Suscripción push eliminada', {\r\n      metadata: { userId, subscriptionId },\r\n    });\r\n\r\n    res.json({\r\n      success: true,\r\n      message: 'Suscripción push eliminada exitosamente',\r\n    });\r\n  }\r\n);\r\n\r\n/**\r\n * Enviar notificación push a un usuario específico\r\n */\r\nexport const sendNotificationToUser = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const { userId } = req.params;\r\n    const notification = req.body;\r\n\r\n    if (!notification.title || !notification.body) {\r\n      return res.status(400).json({\r\n        success: false,\r\n        error: {\r\n          message: 'Título y cuerpo de la notificación son requeridos',\r\n          code: 'VALIDATION_ERROR',\r\n        },\r\n      });\r\n    }\r\n\r\n    await pushNotificationService.sendNotificationToUser(userId, notification);\r\n\r\n    logger.info('Notificación push enviada a usuario', {\r\n      metadata: { userId, notificationTitle: notification.title },\r\n    });\r\n\r\n    res.json({\r\n      success: true,\r\n      message: 'Notificación push enviada exitosamente',\r\n    });\r\n  }\r\n);\r\n\r\n/**\r\n * Enviar notificación masiva\r\n */\r\nexport const sendBulkNotification = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const bulkRequest = req.body;\r\n\r\n    if (!bulkRequest.templateId && !bulkRequest.customNotification) {\r\n      return res.status(400).json({\r\n        success: false,\r\n        error: {\r\n          message: 'Debe especificar un template o notificación personalizada',\r\n          code: 'VALIDATION_ERROR',\r\n        },\r\n      });\r\n    }\r\n\r\n    if (!bulkRequest.userIds && !bulkRequest.userRoles) {\r\n      return res.status(400).json({\r\n        success: false,\r\n        error: {\r\n          message:\r\n            'Debe especificar usuarios o roles para enviar la notificación',\r\n          code: 'VALIDATION_ERROR',\r\n        },\r\n      });\r\n    }\r\n\r\n    const result =\r\n      await pushNotificationService.sendBulkNotification(bulkRequest);\r\n\r\n    if (result) {\r\n      logger.info('Notificación masiva enviada', {\r\n        metadata: { success: result.success, failed: result.failed },\r\n      });\r\n\r\n      res.json({\r\n        success: true,\r\n        data: result,\r\n        message: `Notificación masiva enviada: ${result.success} exitosas, ${result.failed} fallidas`,\r\n      });\r\n    } else {\r\n      logger.error('Error enviando notificación masiva');\r\n      res.status(500).json({\r\n        success: false,\r\n        error: {\r\n          message: 'Error enviando notificación masiva',\r\n          code: 'INTERNAL_ERROR',\r\n        },\r\n      });\r\n    }\r\n  }\r\n);\r\n\r\n/**\r\n * Crear template de notificación\r\n */\r\nexport const createNotificationTemplate = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const template = req.body;\r\n\r\n    if (!template.name || !template.title || !template.body) {\r\n      return res.status(400).json({\r\n        success: false,\r\n        error: {\r\n          message: 'Nombre, título y cuerpo del template son requeridos',\r\n          code: 'VALIDATION_ERROR',\r\n        },\r\n      });\r\n    }\r\n\r\n    const createdTemplate =\r\n      await pushNotificationService.createNotificationTemplate(template);\r\n\r\n    if (createdTemplate) {\r\n      logger.info('Template de notificación creado', {\r\n        metadata: {\r\n          templateId: createdTemplate.id,\r\n          name: createdTemplate.name,\r\n        },\r\n      });\r\n\r\n      res.status(201).json({\r\n        success: true,\r\n        data: createdTemplate,\r\n        message: 'Template de notificación creado exitosamente',\r\n      });\r\n    } else {\r\n      logger.error('Error creando template de notificación');\r\n      res.status(500).json({\r\n        success: false,\r\n        error: {\r\n          message: 'Error creando template de notificación',\r\n          code: 'INTERNAL_ERROR',\r\n        },\r\n      });\r\n    }\r\n  }\r\n);\r\n\r\n/**\r\n * Obtener template de notificación\r\n */\r\nexport const getNotificationTemplate = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const { templateId } = req.params;\r\n\r\n    const template =\r\n      await pushNotificationService.getNotificationTemplate(templateId);\r\n\r\n    res.json({\r\n      success: true,\r\n      data: template,\r\n      message: 'Template obtenido exitosamente',\r\n    });\r\n  }\r\n);\r\n\r\n/**\r\n * Obtener todos los templates activos\r\n */\r\nexport const getActiveTemplates = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const templates = await pushNotificationService.getActiveTemplates();\r\n\r\n    res.json({\r\n      success: true,\r\n      data: templates,\r\n      message: 'Templates obtenidos exitosamente',\r\n    });\r\n  }\r\n);\r\n\r\n/**\r\n * Actualizar template de notificación\r\n */\r\nexport const updateNotificationTemplate = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const { templateId } = req.params;\r\n    const updates = req.body;\r\n\r\n    const updatedTemplate =\r\n      await pushNotificationService.updateNotificationTemplate(\r\n        templateId,\r\n        updates\r\n      );\r\n\r\n    logger.info('Template de notificación actualizado', {\r\n      metadata: { templateId },\r\n    });\r\n\r\n    res.json({\r\n      success: true,\r\n      data: updatedTemplate,\r\n      message: 'Template actualizado exitosamente',\r\n    });\r\n  }\r\n);\r\n\r\n/**\r\n * Eliminar template de notificación\r\n */\r\nexport const deleteNotificationTemplate = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const { templateId } = req.params;\r\n\r\n    await pushNotificationService.deleteNotificationTemplate(templateId);\r\n\r\n    logger.info('Template de notificación eliminado', {\r\n      metadata: { templateId },\r\n    });\r\n\r\n    res.json({\r\n      success: true,\r\n      message: 'Template eliminado exitosamente',\r\n    });\r\n  }\r\n);\r\n\r\n/**\r\n * Obtener estadísticas de notificaciones\r\n */\r\nexport const getNotificationStats = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const stats = await pushNotificationService.getNotificationStats();\r\n\r\n    res.json({\r\n      success: true,\r\n      data: stats,\r\n      message: 'Estadísticas obtenidas exitosamente',\r\n    });\r\n  }\r\n);\r\n\r\n/**\r\n * Obtener VAPID public key\r\n */\r\nexport const getVapidPublicKey = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const publicKey = pushNotificationService.getVapidPublicKey();\r\n\r\n    res.json({\r\n      success: true,\r\n      data: { publicKey },\r\n      message: 'VAPID public key obtenida exitosamente',\r\n    });\r\n  }\r\n);\r\n\r\n/**\r\n * Probar notificación push (solo para desarrollo)\r\n */\r\nexport const testPushNotification = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const userId = req.user?.userId;\r\n\r\n    if (!userId) {\r\n      return res.status(401).json({\r\n        success: false,\r\n        error: {\r\n          message: 'Usuario no autenticado',\r\n          code: 'UNAUTHORIZED',\r\n        },\r\n      });\r\n    }\r\n\r\n    const testNotification = {\r\n      title: '🔔 Notificación de Prueba',\r\n      body: 'Esta es una notificación de prueba del sistema MussikOn',\r\n      icon: '/icon-192x192.png',\r\n      badge: '/badge-72x72.png',\r\n      tag: 'test-notification',\r\n      data: {\r\n        url: '/dashboard',\r\n        type: 'test',\r\n      },\r\n      requireInteraction: true,\r\n      priority: 'high' as const,\r\n      category: 'test',\r\n      type: 'test',\r\n    };\r\n\r\n    await pushNotificationService.sendNotificationToUser(\r\n      userId,\r\n      testNotification\r\n    );\r\n\r\n    logger.info('Notificación de prueba enviada', {\r\n      metadata: { userId },\r\n    });\r\n\r\n    res.json({\r\n      success: true,\r\n      message: 'Notificación de prueba enviada exitosamente',\r\n    });\r\n  }\r\n);\r\n"],"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","ignoreList":[]}