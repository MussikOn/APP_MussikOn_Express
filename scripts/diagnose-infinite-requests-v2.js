const axios = require('axios');

console.log('üîç Diagn√≥stico Avanzado de Consultas Infinitas - Versi√≥n 2');
console.log('========================================================');

async function testEndpoints() {
    const baseURL = 'http://192.168.54.11:3001';
    
    console.log('\nüìä Probando endpoints de im√°genes...');
    
    try {
        // Probar endpoint de estad√≠sticas
        console.log('\n1. Probando /imgs/stats/public...');
        const statsResponse = await axios.get(`${baseURL}/imgs/stats/public`);
        console.log('‚úÖ Estad√≠sticas p√∫blicas:', statsResponse.data);
        
        // Probar endpoint de im√°genes
        console.log('\n2. Probando /imgs/all/public...');
        const imagesResponse = await axios.get(`${baseURL}/imgs/all/public`);
        console.log('‚úÖ Im√°genes p√∫blicas:', imagesResponse.data);
        
        // Probar endpoint de verificaci√≥n
        console.log('\n3. Probando /imgs/verify/public...');
        const verifyResponse = await axios.get(`${baseURL}/imgs/verify/public`);
        console.log('‚úÖ Verificaci√≥n p√∫blica:', verifyResponse.data);
        
    } catch (error) {
        console.error('‚ùå Error probando endpoints:', error.message);
    }
}

async function checkServerStatus() {
    const baseURL = 'http://192.168.54.11:3001';
    
    console.log('\nüñ•Ô∏è Verificando estado del servidor...');
    
    try {
        const response = await axios.get(`${baseURL}/`);
        console.log('‚úÖ Servidor respondiendo correctamente');
    } catch (error) {
        console.error('‚ùå Error conectando al servidor:', error.message);
    }
}

async function main() {
    await checkServerStatus();
    await testEndpoints();
    
    console.log('\nüìã INSTRUCCIONES PARA EL USUARIO:');
    console.log('==================================');
    console.log('1. Abre el navegador y ve a: http://192.168.54.11:3001/images-admin.html');
    console.log('2. Abre las herramientas de desarrollador (F12)');
    console.log('3. Ve a la pesta√±a "Console"');
    console.log('4. Observa los logs que aparecen');
    console.log('5. Busca patrones como:');
    console.log('   - üìä [timestamp] Cargando estad√≠sticas... (Ejecuci√≥n #X)');
    console.log('   - üñºÔ∏è [timestamp] Cargando im√°genes... (Ejecuci√≥n #X)');
    console.log('6. Si ves n√∫meros que aumentan constantemente, hay consultas infinitas');
    console.log('7. Si solo ves ejecuci√≥n #1 y #2, est√° funcionando correctamente');
    console.log('\nüîß SOLUCIONES APLICADAS:');
    console.log('- Auto-refresh completamente deshabilitado');
    console.log('- Logs detallados con timestamps y contadores');
    console.log('- Stack traces para identificar el origen de las llamadas');
    console.log('- Control de inicializaci√≥n √∫nica');
    
    console.log('\n‚ö†Ô∏è Si el problema persiste:');
    console.log('1. Limpia el cach√© del navegador (Ctrl+Shift+R)');
    console.log('2. Cierra todas las pesta√±as del panel de im√°genes');
    console.log('3. Verifica que no haya m√∫ltiples pesta√±as abiertas');
    console.log('4. Revisa si hay extensiones del navegador interfiriendo');
}

main().catch(console.error); 