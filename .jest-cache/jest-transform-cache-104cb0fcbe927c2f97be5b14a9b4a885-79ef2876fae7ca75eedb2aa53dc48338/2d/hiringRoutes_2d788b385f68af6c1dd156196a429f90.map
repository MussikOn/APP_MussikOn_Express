{"version":3,"names":["express_1","cov_1phwg88amk","s","require","hiringController_1","authMiddleware_1","router","Router","hiringController","HiringController","post","authMiddleware","createHiringRequest","get","getHiringRequestById","put","updateHiringRequestStatus","getHiringRequestsByUser","addMessage","markMessagesAsRead","getHiringStats","exports","default"],"sources":["C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\routes\\hiringRoutes.ts"],"sourcesContent":["import { Router } from 'express';\r\nimport { HiringController } from '../controllers/hiringController';\r\nimport { authMiddleware } from '../middleware/authMiddleware';\r\n\r\nconst router = Router();\r\nconst hiringController = new HiringController();\r\n\r\n/**\r\n * @swagger\r\n * components:\r\n *   schemas:\r\n *     HiringRequest:\r\n *       type: object\r\n *       properties:\r\n *         id:\r\n *           type: string\r\n *           description: ID único de la solicitud\r\n *         eventId:\r\n *           type: string\r\n *           description: ID del evento\r\n *         eventCreatorId:\r\n *           type: string\r\n *           description: ID del creador del evento\r\n *         musicianId:\r\n *           type: string\r\n *           description: ID del músico\r\n *         status:\r\n *           type: string\r\n *           enum: [pending, accepted, rejected, cancelled, completed]\r\n *           description: Estado de la solicitud\r\n *         requestDate:\r\n *           type: string\r\n *           format: date-time\r\n *           description: Fecha de la solicitud\r\n *         responseDate:\r\n *           type: string\r\n *           format: date-time\r\n *           description: Fecha de respuesta\r\n *         eventDetails:\r\n *           type: object\r\n *           properties:\r\n *             title:\r\n *               type: string\r\n *               description: Título del evento\r\n *             date:\r\n *               type: string\r\n *               format: date-time\r\n *               description: Fecha del evento\r\n *             duration:\r\n *               type: number\r\n *               description: Duración en minutos\r\n *             location:\r\n *               type: object\r\n *               properties:\r\n *                 address:\r\n *                   type: string\r\n *                   description: Dirección del evento\r\n *                 coordinates:\r\n *                   type: object\r\n *                   properties:\r\n *                     lat:\r\n *                       type: number\r\n *                       description: Latitud\r\n *                     lng:\r\n *                       type: number\r\n *                       description: Longitud\r\n *             budget:\r\n *               type: number\r\n *               description: Presupuesto del evento\r\n *             description:\r\n *               type: string\r\n *               description: Descripción del evento\r\n *         musicianDetails:\r\n *           type: object\r\n *           properties:\r\n *             name:\r\n *               type: string\r\n *               description: Nombre del músico\r\n *             instruments:\r\n *               type: array\r\n *               items:\r\n *                 type: string\r\n *               description: Instrumentos que toca\r\n *             hourlyRate:\r\n *               type: number\r\n *               description: Tarifa por hora\r\n *             rating:\r\n *               type: number\r\n *               description: Calificación del músico\r\n *         terms:\r\n *           type: object\r\n *           properties:\r\n *             agreedPrice:\r\n *               type: number\r\n *               description: Precio acordado\r\n *             paymentTerms:\r\n *               type: string\r\n *               description: Términos de pago\r\n *             specialRequirements:\r\n *               type: string\r\n *               description: Requisitos especiales\r\n *         communication:\r\n *           type: object\r\n *           properties:\r\n *             messages:\r\n *               type: array\r\n *               items:\r\n *                 $ref: '#/components/schemas/Message'\r\n *             lastActivity:\r\n *               type: string\r\n *               format: date-time\r\n *         createdAt:\r\n *           type: string\r\n *           format: date-time\r\n *         updatedAt:\r\n *           type: string\r\n *           format: date-time\r\n *     \r\n *     Message:\r\n *       type: object\r\n *       properties:\r\n *         id:\r\n *           type: string\r\n *           description: ID único del mensaje\r\n *         senderId:\r\n *           type: string\r\n *           description: ID del remitente\r\n *         senderType:\r\n *           type: string\r\n *           enum: [eventCreator, musician]\r\n *           description: Tipo de remitente\r\n *         content:\r\n *           type: string\r\n *           description: Contenido del mensaje\r\n *         timestamp:\r\n *           type: string\r\n *           format: date-time\r\n *           description: Fecha y hora del mensaje\r\n *         isRead:\r\n *           type: boolean\r\n *           description: Si el mensaje ha sido leído\r\n *     \r\n *     HiringRequestCreate:\r\n *       type: object\r\n *       required:\r\n *         - eventId\r\n *         - musicianId\r\n *         - eventDetails\r\n *         - terms\r\n *       properties:\r\n *         eventId:\r\n *           type: string\r\n *           description: ID del evento\r\n *         musicianId:\r\n *           type: string\r\n *           description: ID del músico\r\n *         eventDetails:\r\n *           type: object\r\n *           required:\r\n *             - title\r\n *             - date\r\n *             - duration\r\n *             - location\r\n *             - budget\r\n *             - description\r\n *           properties:\r\n *             title:\r\n *               type: string\r\n *               description: Título del evento\r\n *             date:\r\n *               type: string\r\n *               format: date-time\r\n *               description: Fecha del evento\r\n *             duration:\r\n *               type: number\r\n *               description: Duración en minutos\r\n *             location:\r\n *               type: object\r\n *               required:\r\n *                 - address\r\n *                 - coordinates\r\n *               properties:\r\n *                 address:\r\n *                   type: string\r\n *                   description: Dirección del evento\r\n *                 coordinates:\r\n *                   type: object\r\n *                   required:\r\n *                     - lat\r\n *                     - lng\r\n *                   properties:\r\n *                     lat:\r\n *                       type: number\r\n *                       description: Latitud\r\n *                     lng:\r\n *                       type: number\r\n *                       description: Longitud\r\n *             budget:\r\n *               type: number\r\n *               description: Presupuesto del evento\r\n *             description:\r\n *               type: string\r\n *               description: Descripción del evento\r\n *         terms:\r\n *           type: object\r\n *           required:\r\n *             - agreedPrice\r\n *             - paymentTerms\r\n *           properties:\r\n *             agreedPrice:\r\n *               type: number\r\n *               description: Precio acordado\r\n *             paymentTerms:\r\n *               type: string\r\n *               description: Términos de pago\r\n *             specialRequirements:\r\n *               type: string\r\n *               description: Requisitos especiales\r\n *     \r\n *     HiringStats:\r\n *       type: object\r\n *       properties:\r\n *         total:\r\n *           type: number\r\n *           description: Total de solicitudes\r\n *         pending:\r\n *           type: number\r\n *           description: Solicitudes pendientes\r\n *         accepted:\r\n *           type: number\r\n *           description: Solicitudes aceptadas\r\n *         rejected:\r\n *           type: number\r\n *           description: Solicitudes rechazadas\r\n *         completed:\r\n *           type: number\r\n *           description: Solicitudes completadas\r\n *         cancelled:\r\n *           type: number\r\n *           description: Solicitudes canceladas\r\n */\r\n\r\n/**\r\n * @swagger\r\n * /hiring/create:\r\n *   post:\r\n *     summary: Crear una nueva solicitud de contratación\r\n *     description: Permite a un creador de eventos solicitar un músico para su evento\r\n *     tags: [Hiring]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             $ref: '#/components/schemas/HiringRequestCreate'\r\n *     responses:\r\n *       201:\r\n *         description: Solicitud creada exitosamente\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 message:\r\n *                   type: string\r\n *                 data:\r\n *                   $ref: '#/components/schemas/HiringRequest'\r\n *       400:\r\n *         description: Error en los datos de entrada\r\n *       401:\r\n *         description: No autorizado\r\n *       403:\r\n *         description: Solo creadores de eventos pueden crear solicitudes\r\n */\r\nrouter.post('/create', authMiddleware, hiringController.createHiringRequest);\r\n\r\n/**\r\n * @swagger\r\n * /hiring/{requestId}:\r\n *   get:\r\n *     summary: Obtener una solicitud de contratación por ID\r\n *     description: Obtiene los detalles de una solicitud de contratación específica\r\n *     tags: [Hiring]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     parameters:\r\n *       - in: path\r\n *         name: requestId\r\n *         required: true\r\n *         schema:\r\n *           type: string\r\n *         description: ID de la solicitud de contratación\r\n *     responses:\r\n *       200:\r\n *         description: Solicitud obtenida exitosamente\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 data:\r\n *                   $ref: '#/components/schemas/HiringRequest'\r\n *       401:\r\n *         description: No autorizado\r\n *       403:\r\n *         description: No tienes permisos para ver esta solicitud\r\n *       404:\r\n *         description: Solicitud no encontrada\r\n */\r\nrouter.get('/:requestId', authMiddleware, hiringController.getHiringRequestById);\r\n\r\n/**\r\n * @swagger\r\n * /hiring/{requestId}/status:\r\n *   put:\r\n *     summary: Actualizar el estado de una solicitud de contratación\r\n *     description: Permite actualizar el estado de una solicitud (aceptar, rechazar, cancelar, completar)\r\n *     tags: [Hiring]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     parameters:\r\n *       - in: path\r\n *         name: requestId\r\n *         required: true\r\n *         schema:\r\n *           type: string\r\n *         description: ID de la solicitud de contratación\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             type: object\r\n *             required:\r\n *               - status\r\n *             properties:\r\n *               status:\r\n *                 type: string\r\n *                 enum: [pending, accepted, rejected, cancelled, completed]\r\n *                 description: Nuevo estado de la solicitud\r\n *     responses:\r\n *       200:\r\n *         description: Estado actualizado exitosamente\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 message:\r\n *                   type: string\r\n *                 data:\r\n *                   $ref: '#/components/schemas/HiringRequest'\r\n *       400:\r\n *         description: Error en los datos de entrada o transición de estado inválida\r\n *       401:\r\n *         description: No autorizado\r\n *       403:\r\n *         description: No tienes permisos para actualizar esta solicitud\r\n *       404:\r\n *         description: Solicitud no encontrada\r\n */\r\nrouter.put('/:requestId/status', authMiddleware, hiringController.updateHiringRequestStatus);\r\n\r\n/**\r\n * @swagger\r\n * /hiring/user:\r\n *   get:\r\n *     summary: Obtener solicitudes de contratación del usuario\r\n *     description: Obtiene todas las solicitudes de contratación del usuario autenticado\r\n *     tags: [Hiring]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     parameters:\r\n *       - in: query\r\n *         name: status\r\n *         schema:\r\n *           type: string\r\n *           enum: [pending, accepted, rejected, cancelled, completed]\r\n *         description: Filtrar por estado (opcional)\r\n *     responses:\r\n *       200:\r\n *         description: Solicitudes obtenidas exitosamente\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 data:\r\n *                   type: array\r\n *                   items:\r\n *                     $ref: '#/components/schemas/HiringRequest'\r\n *                 count:\r\n *                   type: number\r\n *                   description: Número total de solicitudes\r\n *       401:\r\n *         description: No autorizado\r\n *       400:\r\n *         description: Rol de usuario inválido\r\n */\r\nrouter.get('/user', authMiddleware, hiringController.getHiringRequestsByUser);\r\n\r\n/**\r\n * @swagger\r\n * /hiring/{requestId}/messages:\r\n *   post:\r\n *     summary: Agregar mensaje a una solicitud de contratación\r\n *     description: Permite enviar un mensaje en el chat de una solicitud de contratación\r\n *     tags: [Hiring]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     parameters:\r\n *       - in: path\r\n *         name: requestId\r\n *         required: true\r\n *         schema:\r\n *           type: string\r\n *         description: ID de la solicitud de contratación\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             type: object\r\n *             required:\r\n *               - content\r\n *             properties:\r\n *               content:\r\n *                 type: string\r\n *                 description: Contenido del mensaje\r\n *     responses:\r\n *       201:\r\n *         description: Mensaje enviado exitosamente\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 message:\r\n *                   type: string\r\n *                 data:\r\n *                   $ref: '#/components/schemas/Message'\r\n *       400:\r\n *         description: Error en los datos de entrada\r\n *       401:\r\n *         description: No autorizado\r\n *       403:\r\n *         description: No tienes permisos para enviar mensajes en esta solicitud\r\n *       404:\r\n *         description: Solicitud no encontrada\r\n */\r\nrouter.post('/:requestId/messages', authMiddleware, hiringController.addMessage);\r\n\r\n/**\r\n * @swagger\r\n * /hiring/{requestId}/messages/read:\r\n *   put:\r\n *     summary: Marcar mensajes como leídos\r\n *     description: Marca todos los mensajes de una solicitud como leídos para el usuario\r\n *     tags: [Hiring]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     parameters:\r\n *       - in: path\r\n *         name: requestId\r\n *         required: true\r\n *         schema:\r\n *           type: string\r\n *         description: ID de la solicitud de contratación\r\n *     responses:\r\n *       200:\r\n *         description: Mensajes marcados como leídos exitosamente\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 message:\r\n *                   type: string\r\n *       401:\r\n *         description: No autorizado\r\n *       403:\r\n *         description: No tienes permisos para marcar mensajes como leídos\r\n *       404:\r\n *         description: Solicitud no encontrada\r\n */\r\nrouter.put('/:requestId/messages/read', authMiddleware, hiringController.markMessagesAsRead);\r\n\r\n/**\r\n * @swagger\r\n * /hiring/stats:\r\n *   get:\r\n *     summary: Obtener estadísticas de contratación\r\n *     description: Obtiene estadísticas de las solicitudes de contratación del usuario\r\n *     tags: [Hiring]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     responses:\r\n *       200:\r\n *         description: Estadísticas obtenidas exitosamente\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 data:\r\n *                   $ref: '#/components/schemas/HiringStats'\r\n *       401:\r\n *         description: No autorizado\r\n *       400:\r\n *         description: Rol de usuario inválido\r\n */\r\nrouter.get('/stats', authMiddleware, hiringController.getHiringStats);\r\n\r\nexport default router; "],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAAA,SAAA;AAAA;AAAA,CAAAC,cAAA,GAAAC,CAAA,OAAAC,OAAA;AACA,MAAAC,kBAAA;AAAA;AAAA,CAAAH,cAAA,GAAAC,CAAA,OAAAC,OAAA;AACA,MAAAE,gBAAA;AAAA;AAAA,CAAAJ,cAAA,GAAAC,CAAA,OAAAC,OAAA;AAEA,MAAMG,MAAM;AAAA;AAAA,CAAAL,cAAA,GAAAC,CAAA,OAAG,IAAAF,SAAA,CAAAO,MAAM,GAAE;AACvB,MAAMC,gBAAgB;AAAA;AAAA,CAAAP,cAAA,GAAAC,CAAA,OAAG,IAAIE,kBAAA,CAAAK,gBAAgB,EAAE;AAE/C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2OA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAAR,cAAA,GAAAC,CAAA;AAoCAI,MAAM,CAACI,IAAI,CAAC,SAAS,EAAEL,gBAAA,CAAAM,cAAc,EAAEH,gBAAgB,CAACI,mBAAmB,CAAC;AAE5E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAAX,cAAA,GAAAC,CAAA;AAmCAI,MAAM,CAACO,GAAG,CAAC,aAAa,EAAER,gBAAA,CAAAM,cAAc,EAAEH,gBAAgB,CAACM,oBAAoB,CAAC;AAEhF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAAb,cAAA,GAAAC,CAAA;AAoDAI,MAAM,CAACS,GAAG,CAAC,oBAAoB,EAAEV,gBAAA,CAAAM,cAAc,EAAEH,gBAAgB,CAACQ,yBAAyB,CAAC;AAE5F;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAAf,cAAA,GAAAC,CAAA;AAsCAI,MAAM,CAACO,GAAG,CAAC,OAAO,EAAER,gBAAA,CAAAM,cAAc,EAAEH,gBAAgB,CAACS,uBAAuB,CAAC;AAE7E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAAhB,cAAA,GAAAC,CAAA;AAmDAI,MAAM,CAACI,IAAI,CAAC,sBAAsB,EAAEL,gBAAA,CAAAM,cAAc,EAAEH,gBAAgB,CAACU,UAAU,CAAC;AAEhF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAAjB,cAAA,GAAAC,CAAA;AAmCAI,MAAM,CAACS,GAAG,CAAC,2BAA2B,EAAEV,gBAAA,CAAAM,cAAc,EAAEH,gBAAgB,CAACW,kBAAkB,CAAC;AAE5F;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAAlB,cAAA,GAAAC,CAAA;AA0BAI,MAAM,CAACO,GAAG,CAAC,QAAQ,EAAER,gBAAA,CAAAM,cAAc,EAAEH,gBAAgB,CAACY,cAAc,CAAC;AAAC;AAAAnB,cAAA,GAAAC,CAAA;AAEtEmB,OAAA,CAAAC,OAAA,GAAehB,MAAM","ignoreList":[]}