3110eccca58ff5f0876249879638a3c9
"use strict";

/* istanbul ignore next */
function cov_1itfmk3x2n() {
  var path = "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\routes\\paymentRoutes.ts";
  var hash = "8e3354f9d0a6db3204c2f2ecb927bcd69e6df497";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\routes\\paymentRoutes.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 18
        },
        end: {
          line: 3,
          column: 36
        }
      },
      "2": {
        start: {
          line: 4,
          column: 25
        },
        end: {
          line: 4,
          column: 64
        }
      },
      "3": {
        start: {
          line: 5,
          column: 22
        },
        end: {
          line: 5,
          column: 58
        }
      },
      "4": {
        start: {
          line: 6,
          column: 31
        },
        end: {
          line: 6,
          column: 76
        }
      },
      "5": {
        start: {
          line: 7,
          column: 28
        },
        end: {
          line: 7,
          column: 71
        }
      },
      "6": {
        start: {
          line: 8,
          column: 15
        },
        end: {
          line: 8,
          column: 39
        }
      },
      "7": {
        start: {
          line: 9,
          column: 15
        },
        end: {
          line: 9,
          column: 38
        }
      },
      "8": {
        start: {
          line: 140,
          column: 0
        },
        end: {
          line: 140,
          column: 177
        }
      },
      "9": {
        start: {
          line: 168,
          column: 0
        },
        end: {
          line: 168,
          column: 105
        }
      },
      "10": {
        start: {
          line: 201,
          column: 0
        },
        end: {
          line: 201,
          column: 136
        }
      },
      "11": {
        start: {
          line: 235,
          column: 0
        },
        end: {
          line: 235,
          column: 177
        }
      },
      "12": {
        start: {
          line: 276,
          column: 0
        },
        end: {
          line: 276,
          column: 167
        }
      },
      "13": {
        start: {
          line: 310,
          column: 0
        },
        end: {
          line: 310,
          column: 166
        }
      },
      "14": {
        start: {
          line: 357,
          column: 0
        },
        end: {
          line: 357,
          column: 100
        }
      },
      "15": {
        start: {
          line: 404,
          column: 0
        },
        end: {
          line: 404,
          column: 122
        }
      },
      "16": {
        start: {
          line: 438,
          column: 0
        },
        end: {
          line: 438,
          column: 165
        }
      },
      "17": {
        start: {
          line: 506,
          column: 0
        },
        end: {
          line: 506,
          column: 159
        }
      },
      "18": {
        start: {
          line: 543,
          column: 0
        },
        end: {
          line: 543,
          column: 149
        }
      },
      "19": {
        start: {
          line: 582,
          column: 0
        },
        end: {
          line: 582,
          column: 74
        }
      },
      "20": {
        start: {
          line: 583,
          column: 0
        },
        end: {
          line: 583,
          column: 25
        }
      }
    },
    fnMap: {},
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0
    },
    f: {},
    b: {},
    inputSourceMap: {
      file: "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\routes\\paymentRoutes.ts",
      mappings: ";;AAAA,qCAAiC;AACjC,iEAA8D;AAC9D,2DAAwD;AACxD,6EAA8D;AAC9D,wEAa0C;AAC1C,wCAOuB;AAEvB,MAAM,MAAM,GAAG,IAAA,gBAAM,GAAE,CAAC;AAExB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAgGG;AAEH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAgCG;AACH,MAAM,CAAC,IAAI,CACT,UAAU,EACV,+BAAc,EACd,IAAA,+BAAQ,EAAC,6BAAsB,CAAC,EAChC,iDAA6B,CAC9B,CAAC;AAEF;;;;;;;;;;;;;;;;;;;;;;;;;;GA0BG;AACH,MAAM,CAAC,GAAG,CAAC,UAAU,EAAE,+BAAc,EAAE,+CAA2B,CAAC,CAAC;AAEpE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA+BG;AACH,MAAM,CAAC,GAAG,CACR,mCAAmC,EACnC,+BAAc,EACd,qDAAiC,CAClC,CAAC;AAEF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAgCG;AACH,MAAM,CAAC,IAAI,CACT,UAAU,EACV,+BAAc,EACd,IAAA,+BAAQ,EAAC,6BAAsB,CAAC,EAChC,iDAA6B,CAC9B,CAAC;AAEF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAuCG;AACH,MAAM,CAAC,IAAI,CACT,UAAU,EACV,+BAAc,EACd,IAAA,+BAAQ,EAAC,wBAAiB,CAAC,EAC3B,4CAAwB,CACzB,CAAC;AAEF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAgCG;AACH,MAAM,CAAC,IAAI,CACT,WAAW,EACX,+BAAc,EACd,IAAA,+BAAQ,EAAC,uBAAgB,CAAC,EAC1B,2CAAuB,CACxB,CAAC;AAEF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA6CG;AACH,MAAM,CAAC,GAAG,CAAC,WAAW,EAAE,+BAAc,EAAE,yCAAqB,CAAC,CAAC;AAE/D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA6CG;AACH,MAAM,CAAC,IAAI,CACT,0BAA0B,EAC1B,+BAAc,EACd,+CAA2B,CAC5B,CAAC;AAEF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAgCG;AACH,MAAM,CAAC,IAAI,CACT,UAAU,EACV,+BAAc,EACd,IAAA,+BAAQ,EAAC,uBAAgB,CAAC,EAC1B,2CAAuB,CACxB,CAAC;AAEF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAkEG;AACH,MAAM,CAAC,GAAG,CACR,QAAQ,EACR,+BAAc,EACd,IAAA,yBAAW,EAAC,CAAC,OAAO,EAAE,aAAa,CAAC,CAAC,EACrC,6CAAyB,CAC1B,CAAC;AAEF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAmCG;AACH,MAAM,CAAC,IAAI,CACT,WAAW,EACX,IAAA,+BAAQ,EAAC,+BAAwB,CAAC,EAClC,mDAA+B,CAChC,CAAC;AAEF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAqCG;AACH,MAAM,CAAC,GAAG,CAAC,WAAW,EAAE,gDAA4B,CAAC,CAAC;AAEtD,kBAAe,MAAM,CAAC",
      names: [],
      sources: ["C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\routes\\paymentRoutes.ts"],
      sourcesContent: ["import { Router } from 'express';\r\nimport { authMiddleware } from '../middleware/authMiddleware';\r\nimport { requireRole } from '../middleware/requireRole';\r\nimport { validate } from '../middleware/validationMiddleware';\r\nimport {\r\n  createPaymentMethodController,\r\n  getPaymentMethodsController,\r\n  setDefaultPaymentMethodController,\r\n  createPaymentIntentController,\r\n  processPaymentController,\r\n  createInvoiceController,\r\n  getInvoicesController,\r\n  markInvoiceAsPaidController,\r\n  processRefundController,\r\n  getPaymentStatsController,\r\n  validatePaymentMethodController,\r\n  getPaymentGatewaysController,\r\n} from '../controllers/paymentController';\r\nimport {\r\n  createPaymentMethodDTO,\r\n  createPaymentIntentDTO,\r\n  createInvoiceDTO,\r\n  processPaymentDTO,\r\n  processRefundDTO,\r\n  validatePaymentMethodDTO,\r\n} from '../utils/dtos';\r\n\r\nconst router = Router();\r\n\r\n/**\r\n * @swagger\r\n * components:\r\n *   schemas:\r\n *     PaymentMethod:\r\n *       type: object\r\n *       properties:\r\n *         id:\r\n *           type: string\r\n *         userId:\r\n *           type: string\r\n *         type:\r\n *           type: string\r\n *           enum: [card, bank_account, paypal]\r\n *         last4:\r\n *           type: string\r\n *         brand:\r\n *           type: string\r\n *         isDefault:\r\n *           type: boolean\r\n *         createdAt:\r\n *           type: string\r\n *           format: date-time\r\n *     PaymentIntent:\r\n *       type: object\r\n *       properties:\r\n *         id:\r\n *           type: string\r\n *         userId:\r\n *           type: string\r\n *         amount:\r\n *           type: number\r\n *         currency:\r\n *           type: string\r\n *         status:\r\n *           type: string\r\n *           enum: [pending, processing, succeeded, failed, canceled]\r\n *         description:\r\n *           type: string\r\n *         metadata:\r\n *           type: object\r\n *         createdAt:\r\n *           type: string\r\n *           format: date-time\r\n *     Invoice:\r\n *       type: object\r\n *       properties:\r\n *         id:\r\n *           type: string\r\n *         userId:\r\n *           type: string\r\n *         items:\r\n *           type: array\r\n *           items:\r\n *             type: object\r\n *             properties:\r\n *               description:\r\n *                 type: string\r\n *               quantity:\r\n *                 type: number\r\n *               unitPrice:\r\n *                 type: number\r\n *               total:\r\n *                 type: number\r\n *         subtotal:\r\n *           type: number\r\n *         tax:\r\n *           type: number\r\n *         total:\r\n *           type: number\r\n *         status:\r\n *           type: string\r\n *           enum: [draft, sent, paid, overdue, canceled]\r\n *         dueDate:\r\n *           type: string\r\n *           format: date-time\r\n *         createdAt:\r\n *           type: string\r\n *           format: date-time\r\n *     Refund:\r\n *       type: object\r\n *       properties:\r\n *         id:\r\n *           type: string\r\n *         paymentIntentId:\r\n *           type: string\r\n *         amount:\r\n *           type: number\r\n *         reason:\r\n *           type: string\r\n *         status:\r\n *           type: string\r\n *           enum: [pending, succeeded, failed]\r\n *         createdAt:\r\n *           type: string\r\n *           format: date-time\r\n */\r\n\r\n/**\r\n * @swagger\r\n * /api/payments/methods:\r\n *   post:\r\n *     summary: Crear m\xE9todo de pago\r\n *     tags: [Payments]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             $ref: '#/components/schemas/CreatePaymentMethodDTO'\r\n *     responses:\r\n *       201:\r\n *         description: M\xE9todo de pago creado exitosamente\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 data:\r\n *                   $ref: '#/components/schemas/PaymentMethod'\r\n *                 message:\r\n *                   type: string\r\n *       400:\r\n *         description: Datos inv\xE1lidos\r\n *       401:\r\n *         description: No autorizado\r\n */\r\nrouter.post(\r\n  '/methods',\r\n  authMiddleware,\r\n  validate(createPaymentMethodDTO),\r\n  createPaymentMethodController\r\n);\r\n\r\n/**\r\n * @swagger\r\n * /api/payments/methods:\r\n *   get:\r\n *     summary: Obtener m\xE9todos de pago del usuario\r\n *     tags: [Payments]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     responses:\r\n *       200:\r\n *         description: M\xE9todos de pago obtenidos exitosamente\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 data:\r\n *                   type: array\r\n *                   items:\r\n *                     $ref: '#/components/schemas/PaymentMethod'\r\n *                 message:\r\n *                   type: string\r\n *       401:\r\n *         description: No autorizado\r\n */\r\nrouter.get('/methods', authMiddleware, getPaymentMethodsController);\r\n\r\n/**\r\n * @swagger\r\n * /api/payments/methods/{paymentMethodId}/default:\r\n *   put:\r\n *     summary: Establecer m\xE9todo de pago por defecto\r\n *     tags: [Payments]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     parameters:\r\n *       - in: path\r\n *         name: paymentMethodId\r\n *         required: true\r\n *         schema:\r\n *           type: string\r\n *         description: ID del m\xE9todo de pago\r\n *     responses:\r\n *       200:\r\n *         description: M\xE9todo de pago por defecto actualizado exitosamente\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 message:\r\n *                   type: string\r\n *       401:\r\n *         description: No autorizado\r\n *       404:\r\n *         description: M\xE9todo de pago no encontrado\r\n */\r\nrouter.put(\r\n  '/methods/:paymentMethodId/default',\r\n  authMiddleware,\r\n  setDefaultPaymentMethodController\r\n);\r\n\r\n/**\r\n * @swagger\r\n * /api/payments/intents:\r\n *   post:\r\n *     summary: Crear intent de pago\r\n *     tags: [Payments]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             $ref: '#/components/schemas/CreatePaymentIntentDTO'\r\n *     responses:\r\n *       201:\r\n *         description: Intent de pago creado exitosamente\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 data:\r\n *                   $ref: '#/components/schemas/PaymentIntent'\r\n *                 message:\r\n *                   type: string\r\n *       400:\r\n *         description: Datos inv\xE1lidos\r\n *       401:\r\n *         description: No autorizado\r\n */\r\nrouter.post(\r\n  '/intents',\r\n  authMiddleware,\r\n  validate(createPaymentIntentDTO),\r\n  createPaymentIntentController\r\n);\r\n\r\n/**\r\n * @swagger\r\n * /api/payments/process:\r\n *   post:\r\n *     summary: Procesar pago\r\n *     tags: [Payments]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             $ref: '#/components/schemas/ProcessPaymentDTO'\r\n *     responses:\r\n *       200:\r\n *         description: Pago procesado exitosamente\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 data:\r\n *                   type: object\r\n *                   properties:\r\n *                     success:\r\n *                       type: boolean\r\n *                     transactionId:\r\n *                       type: string\r\n *                     amount:\r\n *                       type: number\r\n *                 message:\r\n *                   type: string\r\n *       400:\r\n *         description: Datos inv\xE1lidos\r\n *       401:\r\n *         description: No autorizado\r\n */\r\nrouter.post(\r\n  '/process',\r\n  authMiddleware,\r\n  validate(processPaymentDTO),\r\n  processPaymentController\r\n);\r\n\r\n/**\r\n * @swagger\r\n * /api/payments/invoices:\r\n *   post:\r\n *     summary: Crear factura\r\n *     tags: [Payments]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             $ref: '#/components/schemas/CreateInvoiceDTO'\r\n *     responses:\r\n *       201:\r\n *         description: Factura creada exitosamente\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 data:\r\n *                   $ref: '#/components/schemas/Invoice'\r\n *                 message:\r\n *                   type: string\r\n *       400:\r\n *         description: Datos inv\xE1lidos\r\n *       401:\r\n *         description: No autorizado\r\n */\r\nrouter.post(\r\n  '/invoices',\r\n  authMiddleware,\r\n  validate(createInvoiceDTO),\r\n  createInvoiceController\r\n);\r\n\r\n/**\r\n * @swagger\r\n * /api/payments/invoices:\r\n *   get:\r\n *     summary: Obtener facturas del usuario\r\n *     tags: [Payments]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     parameters:\r\n *       - in: query\r\n *         name: status\r\n *         schema:\r\n *           type: string\r\n *           enum: [draft, sent, paid, overdue, canceled]\r\n *         description: Filtrar por estado\r\n *       - in: query\r\n *         name: limit\r\n *         schema:\r\n *           type: integer\r\n *           default: 10\r\n *         description: N\xFAmero de resultados por p\xE1gina\r\n *       - in: query\r\n *         name: offset\r\n *         schema:\r\n *           type: integer\r\n *           default: 0\r\n *         description: N\xFAmero de resultados a omitir\r\n *     responses:\r\n *       200:\r\n *         description: Facturas obtenidas exitosamente\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 data:\r\n *                   type: array\r\n *                   items:\r\n *                     $ref: '#/components/schemas/Invoice'\r\n *                 message:\r\n *                   type: string\r\n *       401:\r\n *         description: No autorizado\r\n */\r\nrouter.get('/invoices', authMiddleware, getInvoicesController);\r\n\r\n/**\r\n * @swagger\r\n * /api/payments/invoices/{invoiceId}/pay:\r\n *   post:\r\n *     summary: Marcar factura como pagada\r\n *     tags: [Payments]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     parameters:\r\n *       - in: path\r\n *         name: invoiceId\r\n *         required: true\r\n *         schema:\r\n *           type: string\r\n *         description: ID de la factura\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             type: object\r\n *             required:\r\n *               - paymentMethodId\r\n *             properties:\r\n *               paymentMethodId:\r\n *                 type: string\r\n *                 description: ID del m\xE9todo de pago a usar\r\n *     responses:\r\n *       200:\r\n *         description: Factura marcada como pagada exitosamente\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 data:\r\n *                   $ref: '#/components/schemas/PaymentIntent'\r\n *                 message:\r\n *                   type: string\r\n *       401:\r\n *         description: No autorizado\r\n *       404:\r\n *         description: Factura no encontrada\r\n */\r\nrouter.post(\r\n  '/invoices/:invoiceId/pay',\r\n  authMiddleware,\r\n  markInvoiceAsPaidController\r\n);\r\n\r\n/**\r\n * @swagger\r\n * /api/payments/refunds:\r\n *   post:\r\n *     summary: Procesar reembolso\r\n *     tags: [Payments]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             $ref: '#/components/schemas/ProcessRefundDTO'\r\n *     responses:\r\n *       200:\r\n *         description: Reembolso procesado exitosamente\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 data:\r\n *                   $ref: '#/components/schemas/Refund'\r\n *                 message:\r\n *                   type: string\r\n *       400:\r\n *         description: Datos inv\xE1lidos\r\n *       401:\r\n *         description: No autorizado\r\n */\r\nrouter.post(\r\n  '/refunds',\r\n  authMiddleware,\r\n  validate(processRefundDTO),\r\n  processRefundController\r\n);\r\n\r\n/**\r\n * @swagger\r\n * /api/payments/stats:\r\n *   get:\r\n *     summary: Obtener estad\xEDsticas de pagos (solo admin)\r\n *     tags: [Payments]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     parameters:\r\n *       - in: query\r\n *         name: startDate\r\n *         schema:\r\n *           type: string\r\n *           format: date\r\n *         description: Fecha de inicio (YYYY-MM-DD)\r\n *       - in: query\r\n *         name: endDate\r\n *         schema:\r\n *           type: string\r\n *           format: date\r\n *         description: Fecha de fin (YYYY-MM-DD)\r\n *       - in: query\r\n *         name: groupBy\r\n *         schema:\r\n *           type: string\r\n *           enum: [day, week, month]\r\n *           default: day\r\n *         description: Agrupaci\xF3n de estad\xEDsticas\r\n *     responses:\r\n *       200:\r\n *         description: Estad\xEDsticas de pagos obtenidas exitosamente\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 data:\r\n *                   type: object\r\n *                   properties:\r\n *                     totalRevenue:\r\n *                       type: number\r\n *                     totalTransactions:\r\n *                       type: number\r\n *                     averageTransaction:\r\n *                       type: number\r\n *                     successRate:\r\n *                       type: number\r\n *                     trends:\r\n *                       type: array\r\n *                       items:\r\n *                         type: object\r\n *                         properties:\r\n *                           date:\r\n *                             type: string\r\n *                           revenue:\r\n *                             type: number\r\n *                           transactions:\r\n *                             type: number\r\n *                 message:\r\n *                   type: string\r\n *       401:\r\n *         description: No autorizado\r\n *       403:\r\n *         description: Acceso denegado\r\n */\r\nrouter.get(\r\n  '/stats',\r\n  authMiddleware,\r\n  requireRole(['admin', 'super_admin']),\r\n  getPaymentStatsController\r\n);\r\n\r\n/**\r\n * @swagger\r\n * /api/payments/validate:\r\n *   post:\r\n *     summary: Validar m\xE9todo de pago\r\n *     tags: [Payments]\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             $ref: '#/components/schemas/ValidatePaymentMethodDTO'\r\n *     responses:\r\n *       200:\r\n *         description: Validaci\xF3n completada\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 data:\r\n *                   type: object\r\n *                   properties:\r\n *                     isValid:\r\n *                       type: boolean\r\n *                     errors:\r\n *                       type: array\r\n *                       items:\r\n *                         type: string\r\n *                 message:\r\n *                   type: string\r\n *       400:\r\n *         description: Datos inv\xE1lidos\r\n */\r\nrouter.post(\r\n  '/validate',\r\n  validate(validatePaymentMethodDTO),\r\n  validatePaymentMethodController\r\n);\r\n\r\n/**\r\n * @swagger\r\n * /api/payments/gateways:\r\n *   get:\r\n *     summary: Obtener gateways de pago disponibles\r\n *     tags: [Payments]\r\n *     responses:\r\n *       200:\r\n *         description: Gateways de pago obtenidos exitosamente\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 data:\r\n *                   type: array\r\n *                   items:\r\n *                     type: object\r\n *                     properties:\r\n *                       id:\r\n *                         type: string\r\n *                       name:\r\n *                         type: string\r\n *                       description:\r\n *                         type: string\r\n *                       supportedCurrencies:\r\n *                         type: array\r\n *                         items:\r\n *                           type: string\r\n *                       fees:\r\n *                         type: object\r\n *                       isActive:\r\n *                         type: boolean\r\n *                 message:\r\n *                   type: string\r\n */\r\nrouter.get('/gateways', getPaymentGatewaysController);\r\n\r\nexport default router;\r\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "8e3354f9d0a6db3204c2f2ecb927bcd69e6df497"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1itfmk3x2n = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1itfmk3x2n();
cov_1itfmk3x2n().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const express_1 =
/* istanbul ignore next */
(cov_1itfmk3x2n().s[1]++, require("express"));
const authMiddleware_1 =
/* istanbul ignore next */
(cov_1itfmk3x2n().s[2]++, require("../middleware/authMiddleware"));
const requireRole_1 =
/* istanbul ignore next */
(cov_1itfmk3x2n().s[3]++, require("../middleware/requireRole"));
const validationMiddleware_1 =
/* istanbul ignore next */
(cov_1itfmk3x2n().s[4]++, require("../middleware/validationMiddleware"));
const paymentController_1 =
/* istanbul ignore next */
(cov_1itfmk3x2n().s[5]++, require("../controllers/paymentController"));
const dtos_1 =
/* istanbul ignore next */
(cov_1itfmk3x2n().s[6]++, require("../utils/dtos"));
const router =
/* istanbul ignore next */
(cov_1itfmk3x2n().s[7]++, (0, express_1.Router)());
/**
 * @swagger
 * components:
 *   schemas:
 *     PaymentMethod:
 *       type: object
 *       properties:
 *         id:
 *           type: string
 *         userId:
 *           type: string
 *         type:
 *           type: string
 *           enum: [card, bank_account, paypal]
 *         last4:
 *           type: string
 *         brand:
 *           type: string
 *         isDefault:
 *           type: boolean
 *         createdAt:
 *           type: string
 *           format: date-time
 *     PaymentIntent:
 *       type: object
 *       properties:
 *         id:
 *           type: string
 *         userId:
 *           type: string
 *         amount:
 *           type: number
 *         currency:
 *           type: string
 *         status:
 *           type: string
 *           enum: [pending, processing, succeeded, failed, canceled]
 *         description:
 *           type: string
 *         metadata:
 *           type: object
 *         createdAt:
 *           type: string
 *           format: date-time
 *     Invoice:
 *       type: object
 *       properties:
 *         id:
 *           type: string
 *         userId:
 *           type: string
 *         items:
 *           type: array
 *           items:
 *             type: object
 *             properties:
 *               description:
 *                 type: string
 *               quantity:
 *                 type: number
 *               unitPrice:
 *                 type: number
 *               total:
 *                 type: number
 *         subtotal:
 *           type: number
 *         tax:
 *           type: number
 *         total:
 *           type: number
 *         status:
 *           type: string
 *           enum: [draft, sent, paid, overdue, canceled]
 *         dueDate:
 *           type: string
 *           format: date-time
 *         createdAt:
 *           type: string
 *           format: date-time
 *     Refund:
 *       type: object
 *       properties:
 *         id:
 *           type: string
 *         paymentIntentId:
 *           type: string
 *         amount:
 *           type: number
 *         reason:
 *           type: string
 *         status:
 *           type: string
 *           enum: [pending, succeeded, failed]
 *         createdAt:
 *           type: string
 *           format: date-time
 */
/**
 * @swagger
 * /api/payments/methods:
 *   post:
 *     summary: Crear método de pago
 *     tags: [Payments]
 *     security:
 *       - bearerAuth: []
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             $ref: '#/components/schemas/CreatePaymentMethodDTO'
 *     responses:
 *       201:
 *         description: Método de pago creado exitosamente
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 data:
 *                   $ref: '#/components/schemas/PaymentMethod'
 *                 message:
 *                   type: string
 *       400:
 *         description: Datos inválidos
 *       401:
 *         description: No autorizado
 */
/* istanbul ignore next */
cov_1itfmk3x2n().s[8]++;
router.post('/methods', authMiddleware_1.authMiddleware, (0, validationMiddleware_1.validate)(dtos_1.createPaymentMethodDTO), paymentController_1.createPaymentMethodController);
/**
 * @swagger
 * /api/payments/methods:
 *   get:
 *     summary: Obtener métodos de pago del usuario
 *     tags: [Payments]
 *     security:
 *       - bearerAuth: []
 *     responses:
 *       200:
 *         description: Métodos de pago obtenidos exitosamente
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 data:
 *                   type: array
 *                   items:
 *                     $ref: '#/components/schemas/PaymentMethod'
 *                 message:
 *                   type: string
 *       401:
 *         description: No autorizado
 */
/* istanbul ignore next */
cov_1itfmk3x2n().s[9]++;
router.get('/methods', authMiddleware_1.authMiddleware, paymentController_1.getPaymentMethodsController);
/**
 * @swagger
 * /api/payments/methods/{paymentMethodId}/default:
 *   put:
 *     summary: Establecer método de pago por defecto
 *     tags: [Payments]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: path
 *         name: paymentMethodId
 *         required: true
 *         schema:
 *           type: string
 *         description: ID del método de pago
 *     responses:
 *       200:
 *         description: Método de pago por defecto actualizado exitosamente
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 message:
 *                   type: string
 *       401:
 *         description: No autorizado
 *       404:
 *         description: Método de pago no encontrado
 */
/* istanbul ignore next */
cov_1itfmk3x2n().s[10]++;
router.put('/methods/:paymentMethodId/default', authMiddleware_1.authMiddleware, paymentController_1.setDefaultPaymentMethodController);
/**
 * @swagger
 * /api/payments/intents:
 *   post:
 *     summary: Crear intent de pago
 *     tags: [Payments]
 *     security:
 *       - bearerAuth: []
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             $ref: '#/components/schemas/CreatePaymentIntentDTO'
 *     responses:
 *       201:
 *         description: Intent de pago creado exitosamente
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 data:
 *                   $ref: '#/components/schemas/PaymentIntent'
 *                 message:
 *                   type: string
 *       400:
 *         description: Datos inválidos
 *       401:
 *         description: No autorizado
 */
/* istanbul ignore next */
cov_1itfmk3x2n().s[11]++;
router.post('/intents', authMiddleware_1.authMiddleware, (0, validationMiddleware_1.validate)(dtos_1.createPaymentIntentDTO), paymentController_1.createPaymentIntentController);
/**
 * @swagger
 * /api/payments/process:
 *   post:
 *     summary: Procesar pago
 *     tags: [Payments]
 *     security:
 *       - bearerAuth: []
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             $ref: '#/components/schemas/ProcessPaymentDTO'
 *     responses:
 *       200:
 *         description: Pago procesado exitosamente
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 data:
 *                   type: object
 *                   properties:
 *                     success:
 *                       type: boolean
 *                     transactionId:
 *                       type: string
 *                     amount:
 *                       type: number
 *                 message:
 *                   type: string
 *       400:
 *         description: Datos inválidos
 *       401:
 *         description: No autorizado
 */
/* istanbul ignore next */
cov_1itfmk3x2n().s[12]++;
router.post('/process', authMiddleware_1.authMiddleware, (0, validationMiddleware_1.validate)(dtos_1.processPaymentDTO), paymentController_1.processPaymentController);
/**
 * @swagger
 * /api/payments/invoices:
 *   post:
 *     summary: Crear factura
 *     tags: [Payments]
 *     security:
 *       - bearerAuth: []
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             $ref: '#/components/schemas/CreateInvoiceDTO'
 *     responses:
 *       201:
 *         description: Factura creada exitosamente
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 data:
 *                   $ref: '#/components/schemas/Invoice'
 *                 message:
 *                   type: string
 *       400:
 *         description: Datos inválidos
 *       401:
 *         description: No autorizado
 */
/* istanbul ignore next */
cov_1itfmk3x2n().s[13]++;
router.post('/invoices', authMiddleware_1.authMiddleware, (0, validationMiddleware_1.validate)(dtos_1.createInvoiceDTO), paymentController_1.createInvoiceController);
/**
 * @swagger
 * /api/payments/invoices:
 *   get:
 *     summary: Obtener facturas del usuario
 *     tags: [Payments]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: query
 *         name: status
 *         schema:
 *           type: string
 *           enum: [draft, sent, paid, overdue, canceled]
 *         description: Filtrar por estado
 *       - in: query
 *         name: limit
 *         schema:
 *           type: integer
 *           default: 10
 *         description: Número de resultados por página
 *       - in: query
 *         name: offset
 *         schema:
 *           type: integer
 *           default: 0
 *         description: Número de resultados a omitir
 *     responses:
 *       200:
 *         description: Facturas obtenidas exitosamente
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 data:
 *                   type: array
 *                   items:
 *                     $ref: '#/components/schemas/Invoice'
 *                 message:
 *                   type: string
 *       401:
 *         description: No autorizado
 */
/* istanbul ignore next */
cov_1itfmk3x2n().s[14]++;
router.get('/invoices', authMiddleware_1.authMiddleware, paymentController_1.getInvoicesController);
/**
 * @swagger
 * /api/payments/invoices/{invoiceId}/pay:
 *   post:
 *     summary: Marcar factura como pagada
 *     tags: [Payments]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: path
 *         name: invoiceId
 *         required: true
 *         schema:
 *           type: string
 *         description: ID de la factura
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             type: object
 *             required:
 *               - paymentMethodId
 *             properties:
 *               paymentMethodId:
 *                 type: string
 *                 description: ID del método de pago a usar
 *     responses:
 *       200:
 *         description: Factura marcada como pagada exitosamente
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 data:
 *                   $ref: '#/components/schemas/PaymentIntent'
 *                 message:
 *                   type: string
 *       401:
 *         description: No autorizado
 *       404:
 *         description: Factura no encontrada
 */
/* istanbul ignore next */
cov_1itfmk3x2n().s[15]++;
router.post('/invoices/:invoiceId/pay', authMiddleware_1.authMiddleware, paymentController_1.markInvoiceAsPaidController);
/**
 * @swagger
 * /api/payments/refunds:
 *   post:
 *     summary: Procesar reembolso
 *     tags: [Payments]
 *     security:
 *       - bearerAuth: []
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             $ref: '#/components/schemas/ProcessRefundDTO'
 *     responses:
 *       200:
 *         description: Reembolso procesado exitosamente
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 data:
 *                   $ref: '#/components/schemas/Refund'
 *                 message:
 *                   type: string
 *       400:
 *         description: Datos inválidos
 *       401:
 *         description: No autorizado
 */
/* istanbul ignore next */
cov_1itfmk3x2n().s[16]++;
router.post('/refunds', authMiddleware_1.authMiddleware, (0, validationMiddleware_1.validate)(dtos_1.processRefundDTO), paymentController_1.processRefundController);
/**
 * @swagger
 * /api/payments/stats:
 *   get:
 *     summary: Obtener estadísticas de pagos (solo admin)
 *     tags: [Payments]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: query
 *         name: startDate
 *         schema:
 *           type: string
 *           format: date
 *         description: Fecha de inicio (YYYY-MM-DD)
 *       - in: query
 *         name: endDate
 *         schema:
 *           type: string
 *           format: date
 *         description: Fecha de fin (YYYY-MM-DD)
 *       - in: query
 *         name: groupBy
 *         schema:
 *           type: string
 *           enum: [day, week, month]
 *           default: day
 *         description: Agrupación de estadísticas
 *     responses:
 *       200:
 *         description: Estadísticas de pagos obtenidas exitosamente
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 data:
 *                   type: object
 *                   properties:
 *                     totalRevenue:
 *                       type: number
 *                     totalTransactions:
 *                       type: number
 *                     averageTransaction:
 *                       type: number
 *                     successRate:
 *                       type: number
 *                     trends:
 *                       type: array
 *                       items:
 *                         type: object
 *                         properties:
 *                           date:
 *                             type: string
 *                           revenue:
 *                             type: number
 *                           transactions:
 *                             type: number
 *                 message:
 *                   type: string
 *       401:
 *         description: No autorizado
 *       403:
 *         description: Acceso denegado
 */
/* istanbul ignore next */
cov_1itfmk3x2n().s[17]++;
router.get('/stats', authMiddleware_1.authMiddleware, (0, requireRole_1.requireRole)(['admin', 'super_admin']), paymentController_1.getPaymentStatsController);
/**
 * @swagger
 * /api/payments/validate:
 *   post:
 *     summary: Validar método de pago
 *     tags: [Payments]
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             $ref: '#/components/schemas/ValidatePaymentMethodDTO'
 *     responses:
 *       200:
 *         description: Validación completada
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 data:
 *                   type: object
 *                   properties:
 *                     isValid:
 *                       type: boolean
 *                     errors:
 *                       type: array
 *                       items:
 *                         type: string
 *                 message:
 *                   type: string
 *       400:
 *         description: Datos inválidos
 */
/* istanbul ignore next */
cov_1itfmk3x2n().s[18]++;
router.post('/validate', (0, validationMiddleware_1.validate)(dtos_1.validatePaymentMethodDTO), paymentController_1.validatePaymentMethodController);
/**
 * @swagger
 * /api/payments/gateways:
 *   get:
 *     summary: Obtener gateways de pago disponibles
 *     tags: [Payments]
 *     responses:
 *       200:
 *         description: Gateways de pago obtenidos exitosamente
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 data:
 *                   type: array
 *                   items:
 *                     type: object
 *                     properties:
 *                       id:
 *                         type: string
 *                       name:
 *                         type: string
 *                       description:
 *                         type: string
 *                       supportedCurrencies:
 *                         type: array
 *                         items:
 *                           type: string
 *                       fees:
 *                         type: object
 *                       isActive:
 *                         type: boolean
 *                 message:
 *                   type: string
 */
/* istanbul ignore next */
cov_1itfmk3x2n().s[19]++;
router.get('/gateways', paymentController_1.getPaymentGatewaysController);
/* istanbul ignore next */
cov_1itfmk3x2n().s[20]++;
exports.default = router;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,