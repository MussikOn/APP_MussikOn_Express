{"version":3,"names":["express_1","cov_1ney3o1q32","s","require","musicianRequestController_1","router","Router","post","createRequest","get","getRequestById","put","updateRequest","delete","deleteRequest","exports","default"],"sources":["C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\routes\\musicianRequestRoutes.ts"],"sourcesContent":["import { Router } from 'express';\r\nimport {\r\n  createRequest,\r\n  acceptRequest,\r\n  cancelRequest,\r\n  getRequestStatus,\r\n  getRequestById,\r\n  updateRequest,\r\n  deleteRequest,\r\n} from '../controllers/musicianRequestController';\r\n\r\nconst router = Router();\r\n\r\n/**\r\n * @swagger\r\n * tags:\r\n *   name: MusicianRequests\r\n *   description: Endpoints para solicitudes directas de músicos - CRUD completo implementado\r\n */\r\n\r\n/**\r\n * @swagger\r\n * components:\r\n *   schemas:\r\n *     MusicianRequest:\r\n *       type: object\r\n *       properties:\r\n *         id:\r\n *           type: string\r\n *           description: ID único de la solicitud\r\n *         userId:\r\n *           type: string\r\n *           description: ID del usuario que crea la solicitud\r\n *         eventType:\r\n *           type: string\r\n *           enum: [concierto, boda, culto, evento_corporativo, festival, fiesta_privada, graduacion, cumpleanos, otro]\r\n *           description: Tipo de evento\r\n *         date:\r\n *           type: string\r\n *           format: date\r\n *           description: Fecha del evento (YYYY-MM-DD)\r\n *         time:\r\n *           type: string\r\n *           description: Hora del evento (HH:MM)\r\n *         location:\r\n *           type: string\r\n *           description: Ubicación del evento\r\n *         instrument:\r\n *           type: string\r\n *           enum: [guitarra, piano, bajo, bateria, saxofon, trompeta, violin, canto, teclado, flauta, otro]\r\n *           description: Instrumento requerido\r\n *         budget:\r\n *           type: number\r\n *           description: Presupuesto disponible\r\n *         status:\r\n *           type: string\r\n *           enum: [pendiente, asignada, cancelada, completada, no_asignada]\r\n *           description: Estado de la solicitud\r\n *         assignedMusicianId:\r\n *           type: string\r\n *           description: ID del músico asignado\r\n *         description:\r\n *           type: string\r\n *           description: Descripción adicional del evento\r\n *         requirements:\r\n *           type: string\r\n *           description: Requisitos específicos\r\n *         contactPhone:\r\n *           type: string\r\n *           description: Teléfono de contacto\r\n *         contactEmail:\r\n *           type: string\r\n *           description: Email de contacto\r\n *         createdAt:\r\n *           type: string\r\n *           format: date-time\r\n *           description: Fecha de creación\r\n *         updatedAt:\r\n *           type: string\r\n *           format: date-time\r\n *           description: Fecha de última actualización\r\n */\r\n\r\n/**\r\n * @swagger\r\n * /musician-requests:\r\n *   post:\r\n *     tags: [MusicianRequests]\r\n *     summary: Crear solicitud de músico\r\n *     description: Crea una nueva solicitud de músico para un evento\r\n *     security:\r\n *       - bearerAuth: []\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             type: object\r\n *             required:\r\n *               - eventType\r\n *               - date\r\n *               - time\r\n *               - location\r\n *               - instrument\r\n *               - budget\r\n *             properties:\r\n *               eventType:\r\n *                 type: string\r\n *                 enum: [concierto, boda, culto, evento_corporativo, festival, fiesta_privada, graduacion, cumpleanos, otro]\r\n *                 example: \"boda\"\r\n *               date:\r\n *                 type: string\r\n *                 format: date\r\n *                 example: \"2024-12-25\"\r\n *               time:\r\n *                 type: string\r\n *                 example: \"18:00\"\r\n *               location:\r\n *                 type: string\r\n *                 example: \"Salón de Eventos ABC\"\r\n *               instrument:\r\n *                 type: string\r\n *                 enum: [guitarra, piano, bajo, bateria, saxofon, trompeta, violin, canto, teclado, flauta, otro]\r\n *                 example: \"piano\"\r\n *               budget:\r\n *                 type: number\r\n *                 example: 50000\r\n *               description:\r\n *                 type: string\r\n *                 example: \"Necesitamos un pianista para ceremonia y recepción\"\r\n *               requirements:\r\n *                 type: string\r\n *                 example: \"Repertorio romántico y clásico\"\r\n *               contactPhone:\r\n *                 type: string\r\n *                 example: \"+1234567890\"\r\n *               contactEmail:\r\n *                 type: string\r\n *                 example: \"organizador@evento.com\"\r\n *     responses:\r\n *       201:\r\n *         description: Solicitud creada exitosamente\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                   example: true\r\n *                 message:\r\n *                   type: string\r\n *                   example: \"Solicitud creada correctamente\"\r\n *                 data:\r\n *                   $ref: '#/components/schemas/MusicianRequest'\r\n *       400:\r\n *         description: Datos de entrada inválidos\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 error:\r\n *                   type: string\r\n *                   example: \"Datos de entrada inválidos\"\r\n *       401:\r\n *         description: No autorizado\r\n *       500:\r\n *         description: Error interno del servidor\r\n */\r\nrouter.post('/', createRequest);\r\n\r\n/**\r\n * @swagger\r\n * /musician-requests/{id}:\r\n *   get:\r\n *     tags: [MusicianRequests]\r\n *     summary: Obtener solicitud por ID\r\n *     description: Obtiene una solicitud específica por su ID\r\n *     security:\r\n *       - bearerAuth: []\r\n *     parameters:\r\n *       - in: path\r\n *         name: id\r\n *         schema:\r\n *           type: string\r\n *         required: true\r\n *         description: ID de la solicitud\r\n *         example: \"request_123456\"\r\n *     responses:\r\n *       200:\r\n *         description: Solicitud encontrada\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               $ref: '#/components/schemas/MusicianRequest'\r\n *       404:\r\n *         description: Solicitud no encontrada\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 error:\r\n *                   type: string\r\n *                   example: \"Solicitud no encontrada\"\r\n *       500:\r\n *         description: Error interno del servidor\r\n */\r\n\r\n/**\r\n * @swagger\r\n * /musician-requests/{id}:\r\n *   put:\r\n *     tags: [MusicianRequests]\r\n *     summary: Actualizar solicitud\r\n *     description: Actualiza una solicitud existente\r\n *     security:\r\n *       - bearerAuth: []\r\n *     parameters:\r\n *       - in: path\r\n *         name: id\r\n *         schema:\r\n *           type: string\r\n *         required: true\r\n *         description: ID de la solicitud\r\n *         example: \"request_123456\"\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             type: object\r\n *             properties:\r\n *               date:\r\n *                 type: string\r\n *                 format: date\r\n *                 example: \"2024-12-26\"\r\n *               time:\r\n *                 type: string\r\n *                 example: \"19:00\"\r\n *               location:\r\n *                 type: string\r\n *                 example: \"Salón de Eventos XYZ\"\r\n *               budget:\r\n *                 type: number\r\n *                 example: 60000\r\n *               description:\r\n *                 type: string\r\n *                 example: \"Actualización: Necesitamos un pianista para ceremonia, recepción y baile\"\r\n *               requirements:\r\n *                 type: string\r\n *                 example: \"Repertorio actualizado\"\r\n *     responses:\r\n *       200:\r\n *         description: Solicitud actualizada exitosamente\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                   example: true\r\n *                 message:\r\n *                   type: string\r\n *                   example: \"Solicitud actualizada correctamente\"\r\n *                 data:\r\n *                   type: object\r\n *                   properties:\r\n *                     id:\r\n *                       type: string\r\n *                       example: \"request_123456\"\r\n *                     updatedAt:\r\n *                       type: string\r\n *                       format: date-time\r\n *                       example: \"2024-01-15T11:45:00Z\"\r\n *       404:\r\n *         description: Solicitud no encontrada\r\n *       500:\r\n *         description: Error interno del servidor\r\n */\r\n\r\n/**\r\n * @swagger\r\n * /musician-requests/{id}:\r\n *   delete:\r\n *     tags: [MusicianRequests]\r\n *     summary: Eliminar solicitud\r\n *     description: Elimina una solicitud específica\r\n *     security:\r\n *       - bearerAuth: []\r\n *     parameters:\r\n *       - in: path\r\n *         name: id\r\n *         schema:\r\n *           type: string\r\n *         required: true\r\n *         description: ID de la solicitud\r\n *         example: \"request_123456\"\r\n *     responses:\r\n *       200:\r\n *         description: Solicitud eliminada exitosamente\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                   example: true\r\n *                 message:\r\n *                   type: string\r\n *                   example: \"Solicitud eliminada correctamente\"\r\n *       404:\r\n *         description: Solicitud no encontrada\r\n *       500:\r\n *         description: Error interno del servidor\r\n */\r\n\r\n/**\r\n * @swagger\r\n * /musician-requests/accept:\r\n *   post:\r\n *     tags: [MusicianRequests]\r\n *     summary: Aceptar solicitud de músico\r\n *     description: Permite a un músico aceptar una solicitud disponible\r\n *     security:\r\n *       - bearerAuth: []\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             type: object\r\n *             required:\r\n *               - requestId\r\n *               - musicianId\r\n *             properties:\r\n *               requestId:\r\n *                 type: string\r\n *                 description: ID de la solicitud\r\n *                 example: \"request_123456\"\r\n *               musicianId:\r\n *                 type: string\r\n *                 description: ID del músico que acepta\r\n *                 example: \"musician_456\"\r\n *               message:\r\n *                 type: string\r\n *                 description: Mensaje opcional del músico\r\n *                 example: \"Estoy disponible para tocar en tu boda\"\r\n *     responses:\r\n *       200:\r\n *         description: Solicitud aceptada exitosamente\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                   example: true\r\n *                 message:\r\n *                   type: string\r\n *                   example: \"Solicitud aceptada correctamente\"\r\n *                 data:\r\n *                   type: object\r\n *                   properties:\r\n *                     requestId:\r\n *                       type: string\r\n *                       example: \"request_123456\"\r\n *                     musicianId:\r\n *                       type: string\r\n *                       example: \"musician_456\"\r\n *                     status:\r\n *                       type: string\r\n *                       example: \"asignada\"\r\n *                     assignedAt:\r\n *                       type: string\r\n *                       format: date-time\r\n *                       example: \"2024-01-15T12:00:00Z\"\r\n *       400:\r\n *         description: Solicitud ya asignada o no disponible\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 error:\r\n *                   type: string\r\n *                   example: \"La solicitud ya ha sido asignada a otro músico\"\r\n *       404:\r\n *         description: Solicitud no encontrada\r\n *       500:\r\n *         description: Error interno del servidor\r\n */\r\n\r\n/**\r\n * @swagger\r\n * /musician-requests/cancel:\r\n *   post:\r\n *     tags: [MusicianRequests]\r\n *     summary: Cancelar solicitud de músico\r\n *     description: Cancela una solicitud (solo el creador o admin)\r\n *     security:\r\n *       - bearerAuth: []\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             type: object\r\n *             required:\r\n *               - requestId\r\n *             properties:\r\n *               requestId:\r\n *                 type: string\r\n *                 description: ID de la solicitud\r\n *                 example: \"request_123456\"\r\n *               reason:\r\n *                 type: string\r\n *                 description: Razón de la cancelación\r\n *                 example: \"Evento cancelado por el cliente\"\r\n *     responses:\r\n *       200:\r\n *         description: Solicitud cancelada exitosamente\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                   example: true\r\n *                 message:\r\n *                   type: string\r\n *                   example: \"Solicitud cancelada correctamente\"\r\n *                 data:\r\n *                   type: object\r\n *                   properties:\r\n *                     requestId:\r\n *                       type: string\r\n *                       example: \"request_123456\"\r\n *                     status:\r\n *                       type: string\r\n *                       example: \"cancelada\"\r\n *                     cancelledAt:\r\n *                       type: string\r\n *                       format: date-time\r\n *                       example: \"2024-01-15T13:00:00Z\"\r\n *                     reason:\r\n *                       type: string\r\n *                       example: \"Evento cancelado por el cliente\"\r\n *       404:\r\n *         description: Solicitud no encontrada\r\n *       500:\r\n *         description: Error interno del servidor\r\n */\r\n\r\n/**\r\n * @swagger\r\n * /musician-requests/{id}/status:\r\n *   get:\r\n *     tags: [MusicianRequests]\r\n *     summary: Consultar estado de solicitud\r\n *     description: Obtiene solo el estado actual de una solicitud\r\n *     security:\r\n *       - bearerAuth: []\r\n *     parameters:\r\n *       - in: path\r\n *         name: id\r\n *         schema:\r\n *           type: string\r\n *         required: true\r\n *         description: ID de la solicitud\r\n *         example: \"request_123456\"\r\n *     responses:\r\n *       200:\r\n *         description: Estado de la solicitud\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 id:\r\n *                   type: string\r\n *                   example: \"request_123456\"\r\n *                 status:\r\n *                   type: string\r\n *                   enum: [pendiente, asignada, cancelada, completada, no_asignada]\r\n *                   example: \"asignada\"\r\n *                 assignedMusicianId:\r\n *                   type: string\r\n *                   example: \"musician_456\"\r\n *                 assignedAt:\r\n *                   type: string\r\n *                   format: date-time\r\n *                   example: \"2024-01-15T12:00:00Z\"\r\n *       404:\r\n *         description: Solicitud no encontrada\r\n *       500:\r\n *         description: Error interno del servidor\r\n */\r\n\r\n// CRUD completo\r\nrouter.get('/:id', getRequestById);\r\nrouter.put('/:id', updateRequest);\r\nrouter.delete('/:id', deleteRequest);\r\n\r\nexport default router;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAAA,SAAA;AAAA;AAAA,CAAAC,cAAA,GAAAC,CAAA,OAAAC,OAAA;AACA,MAAAC,2BAAA;AAAA;AAAA,CAAAH,cAAA,GAAAC,CAAA,OAAAC,OAAA;AAUA,MAAME,MAAM;AAAA;AAAA,CAAAJ,cAAA,GAAAC,CAAA,OAAG,IAAAF,SAAA,CAAAM,MAAM,GAAE;AAEvB;;;;;;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+DA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAAL,cAAA,GAAAC,CAAA;AAuFAG,MAAM,CAACE,IAAI,CAAC,GAAG,EAAEH,2BAAA,CAAAI,aAAa,CAAC;AAE/B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6EA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8DA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CA;AAAA;AAAAP,cAAA,GAAAC,CAAA;AACAG,MAAM,CAACI,GAAG,CAAC,MAAM,EAAEL,2BAAA,CAAAM,cAAc,CAAC;AAAC;AAAAT,cAAA,GAAAC,CAAA;AACnCG,MAAM,CAACM,GAAG,CAAC,MAAM,EAAEP,2BAAA,CAAAQ,aAAa,CAAC;AAAC;AAAAX,cAAA,GAAAC,CAAA;AAClCG,MAAM,CAACQ,MAAM,CAAC,MAAM,EAAET,2BAAA,CAAAU,aAAa,CAAC;AAAC;AAAAb,cAAA,GAAAC,CAAA;AAErCa,OAAA,CAAAC,OAAA,GAAeX,MAAM","ignoreList":[]}