f0050e001a40b7d51d2fd267fbd00d33
"use strict";

/* istanbul ignore next */
function cov_866s1yfvi() {
  var path = "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\middleware\\authMiddleware.ts";
  var hash = "bac04b3556d8f3b7df8aa4502d5a0c14b62081c3";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\middleware\\authMiddleware.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 40
        }
      },
      "4": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 7,
          column: 34
        }
      },
      "5": {
        start: {
          line: 8,
          column: 23
        },
        end: {
          line: 8,
          column: 63
        }
      },
      "6": {
        start: {
          line: 9,
          column: 14
        },
        end: {
          line: 9,
          column: 34
        }
      },
      "7": {
        start: {
          line: 11,
          column: 23
        },
        end: {
          line: 11,
          column: 48
        }
      },
      "8": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 15,
          column: 5
        }
      },
      "9": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 68
        }
      },
      "10": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 15
        }
      },
      "11": {
        start: {
          line: 16,
          column: 18
        },
        end: {
          line: 16,
          column: 42
        }
      },
      "12": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 25,
          column: 5
        }
      },
      "13": {
        start: {
          line: 18,
          column: 24
        },
        end: {
          line: 18,
          column: 80
        }
      },
      "14": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 27
        }
      },
      "15": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 15
        }
      },
      "16": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 71
        }
      },
      "17": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 38,
          column: 6
        }
      },
      "18": {
        start: {
          line: 33,
          column: 21
        },
        end: {
          line: 33,
          column: 29
        }
      },
      "19": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 36,
          column: 9
        }
      },
      "20": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 35,
          column: 85
        }
      },
      "21": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 15
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "authMiddleware",
        decl: {
          start: {
            line: 10,
            column: 9
          },
          end: {
            line: 10,
            column: 23
          }
        },
        loc: {
          start: {
            line: 10,
            column: 40
          },
          end: {
            line: 26,
            column: 1
          }
        },
        line: 10
      },
      "2": {
        name: "requireRole",
        decl: {
          start: {
            line: 31,
            column: 9
          },
          end: {
            line: 31,
            column: 20
          }
        },
        loc: {
          start: {
            line: 31,
            column: 31
          },
          end: {
            line: 39,
            column: 1
          }
        },
        line: 31
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 32,
            column: 11
          },
          end: {
            line: 32,
            column: 12
          }
        },
        loc: {
          start: {
            line: 32,
            column: 31
          },
          end: {
            line: 38,
            column: 5
          }
        },
        line: 32
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 12
      },
      "4": {
        loc: {
          start: {
            line: 12,
            column: 8
          },
          end: {
            line: 12,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 12,
            column: 8
          },
          end: {
            line: 12,
            column: 19
          }
        }, {
          start: {
            line: 12,
            column: 23
          },
          end: {
            line: 12,
            column: 56
          }
        }],
        line: 12
      },
      "5": {
        loc: {
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 36,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 36,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 34
      },
      "6": {
        loc: {
          start: {
            line: 34,
            column: 12
          },
          end: {
            line: 34,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 12
          },
          end: {
            line: 34,
            column: 17
          }
        }, {
          start: {
            line: 34,
            column: 21
          },
          end: {
            line: 34,
            column: 47
          }
        }],
        line: 34
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\middleware\\authMiddleware.ts",
      mappings: ";;;;;AAIA,wCAsBC;AAMD,kCAQC;AAvCD,gEAA+B;AAC/B,mCAAyC;AAEzC,SAAgB,cAAc,CAC5B,GAAY,EACZ,GAAa,EACb,IAAkB;IAElB,MAAM,UAAU,GAAG,GAAG,CAAC,OAAO,CAAC,aAAa,CAAC;IAE7C,IAAI,CAAC,UAAU,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE,CAAC;QACrD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,wBAAwB,EAAE,CAAC,CAAC;QAC5D,OAAO;IACT,CAAC;IAED,MAAM,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAEvC,IAAI,CAAC;QACH,MAAM,OAAO,GAAG,sBAAG,CAAC,MAAM,CAAC,KAAK,EAAE,kBAAY,CAAC,CAAC;QAChD,8CAA8C;QAC7C,GAAW,CAAC,IAAI,GAAG,OAAO,CAAC;QAC5B,IAAI,EAAE,CAAC;IACT,CAAC;IAAC,OAAO,GAAG,EAAE,CAAC;QACb,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,2BAA2B,EAAE,CAAC,CAAC;IACjE,CAAC;AACH,CAAC;AAED;;;GAGG;AACH,SAAgB,WAAW,CAAC,GAAG,KAAe;IAC5C,OAAO,CAAC,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;QACzD,MAAM,IAAI,GAAI,GAAW,CAAC,IAAI,CAAC;QAC/B,IAAI,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;YACxC,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,kCAAkC,EAAE,CAAC,CAAC;QAC3E,CAAC;QACD,IAAI,EAAE,CAAC;IACT,CAAC,CAAC;AACJ,CAAC",
      names: [],
      sources: ["C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\middleware\\authMiddleware.ts"],
      sourcesContent: ["import { Request, Response, NextFunction } from 'express';\r\nimport jwt from 'jsonwebtoken';\r\nimport { TOKEN_SECRET } from '../../ENV';\r\n\r\nexport function authMiddleware(\r\n  req: Request,\r\n  res: Response,\r\n  next: NextFunction\r\n): void {\r\n  const authHeader = req.headers.authorization;\r\n\r\n  if (!authHeader || !authHeader.startsWith('Bearer ')) {\r\n    res.status(401).json({ message: 'Token no proporcionado' });\r\n    return;\r\n  }\r\n\r\n  const token = authHeader.split(' ')[1];\r\n\r\n  try {\r\n    const decoded = jwt.verify(token, TOKEN_SECRET);\r\n    // Agregar el usuario decodificado en req.user\r\n    (req as any).user = decoded;\r\n    next();\r\n  } catch (err) {\r\n    res.status(401).json({ message: 'Token inv\xE1lido o expirado' });\r\n  }\r\n}\r\n\r\n/**\r\n * Middleware para validar el rol del usuario.\r\n * @param roles Roles permitidos para acceder al endpoint\r\n */\r\nexport function requireRole(...roles: string[]) {\r\n  return (req: Request, res: Response, next: NextFunction) => {\r\n    const user = (req as any).user;\r\n    if (!user || !roles.includes(user.roll)) {\r\n      return res.status(403).json({ msg: 'No autorizado. Rol insuficiente.' });\r\n    }\r\n    next();\r\n  };\r\n}\r\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "bac04b3556d8f3b7df8aa4502d5a0c14b62081c3"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_866s1yfvi = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_866s1yfvi();
var __importDefault =
/* istanbul ignore next */
(cov_866s1yfvi().s[0]++,
/* istanbul ignore next */
(cov_866s1yfvi().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_866s1yfvi().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_866s1yfvi().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_866s1yfvi().f[0]++;
  cov_866s1yfvi().s[1]++;
  return /* istanbul ignore next */(cov_866s1yfvi().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_866s1yfvi().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_866s1yfvi().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_866s1yfvi().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_866s1yfvi().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_866s1yfvi().s[3]++;
exports.authMiddleware = authMiddleware;
/* istanbul ignore next */
cov_866s1yfvi().s[4]++;
exports.requireRole = requireRole;
const jsonwebtoken_1 =
/* istanbul ignore next */
(cov_866s1yfvi().s[5]++, __importDefault(require("jsonwebtoken")));
const ENV_1 =
/* istanbul ignore next */
(cov_866s1yfvi().s[6]++, require("../../ENV"));
function authMiddleware(req, res, next) {
  /* istanbul ignore next */
  cov_866s1yfvi().f[1]++;
  const authHeader =
  /* istanbul ignore next */
  (cov_866s1yfvi().s[7]++, req.headers.authorization);
  /* istanbul ignore next */
  cov_866s1yfvi().s[8]++;
  if (
  /* istanbul ignore next */
  (cov_866s1yfvi().b[4][0]++, !authHeader) ||
  /* istanbul ignore next */
  (cov_866s1yfvi().b[4][1]++, !authHeader.startsWith('Bearer '))) {
    /* istanbul ignore next */
    cov_866s1yfvi().b[3][0]++;
    cov_866s1yfvi().s[9]++;
    res.status(401).json({
      message: 'Token no proporcionado'
    });
    /* istanbul ignore next */
    cov_866s1yfvi().s[10]++;
    return;
  } else
  /* istanbul ignore next */
  {
    cov_866s1yfvi().b[3][1]++;
  }
  const token =
  /* istanbul ignore next */
  (cov_866s1yfvi().s[11]++, authHeader.split(' ')[1]);
  /* istanbul ignore next */
  cov_866s1yfvi().s[12]++;
  try {
    const decoded =
    /* istanbul ignore next */
    (cov_866s1yfvi().s[13]++, jsonwebtoken_1.default.verify(token, ENV_1.TOKEN_SECRET));
    // Agregar el usuario decodificado en req.user
    /* istanbul ignore next */
    cov_866s1yfvi().s[14]++;
    req.user = decoded;
    /* istanbul ignore next */
    cov_866s1yfvi().s[15]++;
    next();
  } catch (err) {
    /* istanbul ignore next */
    cov_866s1yfvi().s[16]++;
    res.status(401).json({
      message: 'Token inválido o expirado'
    });
  }
}
/**
 * Middleware para validar el rol del usuario.
 * @param roles Roles permitidos para acceder al endpoint
 */
function requireRole(...roles) {
  /* istanbul ignore next */
  cov_866s1yfvi().f[2]++;
  cov_866s1yfvi().s[17]++;
  return (req, res, next) => {
    /* istanbul ignore next */
    cov_866s1yfvi().f[3]++;
    const user =
    /* istanbul ignore next */
    (cov_866s1yfvi().s[18]++, req.user);
    /* istanbul ignore next */
    cov_866s1yfvi().s[19]++;
    if (
    /* istanbul ignore next */
    (cov_866s1yfvi().b[6][0]++, !user) ||
    /* istanbul ignore next */
    (cov_866s1yfvi().b[6][1]++, !roles.includes(user.roll))) {
      /* istanbul ignore next */
      cov_866s1yfvi().b[5][0]++;
      cov_866s1yfvi().s[20]++;
      return res.status(403).json({
        msg: 'No autorizado. Rol insuficiente.'
      });
    } else
    /* istanbul ignore next */
    {
      cov_866s1yfvi().b[5][1]++;
    }
    cov_866s1yfvi().s[21]++;
    next();
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfODY2czF5ZnZpIiwiYWN0dWFsQ292ZXJhZ2UiLCJleHBvcnRzIiwiYXV0aE1pZGRsZXdhcmUiLCJzIiwicmVxdWlyZVJvbGUiLCJqc29ud2VidG9rZW5fMSIsIl9faW1wb3J0RGVmYXVsdCIsInJlcXVpcmUiLCJFTlZfMSIsInJlcSIsInJlcyIsIm5leHQiLCJmIiwiYXV0aEhlYWRlciIsImhlYWRlcnMiLCJhdXRob3JpemF0aW9uIiwiYiIsInN0YXJ0c1dpdGgiLCJzdGF0dXMiLCJqc29uIiwibWVzc2FnZSIsInRva2VuIiwic3BsaXQiLCJkZWNvZGVkIiwiZGVmYXVsdCIsInZlcmlmeSIsIlRPS0VOX1NFQ1JFVCIsInVzZXIiLCJlcnIiLCJyb2xlcyIsImluY2x1ZGVzIiwicm9sbCIsIm1zZyJdLCJzb3VyY2VzIjpbIkM6XFxzcmNcXEFQUF9NdXNzaWtPblxcQVBQX011c3Npa09uX0V4cHJlc3NcXHNyY1xcbWlkZGxld2FyZVxcYXV0aE1pZGRsZXdhcmUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUmVxdWVzdCwgUmVzcG9uc2UsIE5leHRGdW5jdGlvbiB9IGZyb20gJ2V4cHJlc3MnO1xyXG5pbXBvcnQgand0IGZyb20gJ2pzb253ZWJ0b2tlbic7XHJcbmltcG9ydCB7IFRPS0VOX1NFQ1JFVCB9IGZyb20gJy4uLy4uL0VOVic7XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gYXV0aE1pZGRsZXdhcmUoXHJcbiAgcmVxOiBSZXF1ZXN0LFxyXG4gIHJlczogUmVzcG9uc2UsXHJcbiAgbmV4dDogTmV4dEZ1bmN0aW9uXHJcbik6IHZvaWQge1xyXG4gIGNvbnN0IGF1dGhIZWFkZXIgPSByZXEuaGVhZGVycy5hdXRob3JpemF0aW9uO1xyXG5cclxuICBpZiAoIWF1dGhIZWFkZXIgfHwgIWF1dGhIZWFkZXIuc3RhcnRzV2l0aCgnQmVhcmVyICcpKSB7XHJcbiAgICByZXMuc3RhdHVzKDQwMSkuanNvbih7IG1lc3NhZ2U6ICdUb2tlbiBubyBwcm9wb3JjaW9uYWRvJyB9KTtcclxuICAgIHJldHVybjtcclxuICB9XHJcblxyXG4gIGNvbnN0IHRva2VuID0gYXV0aEhlYWRlci5zcGxpdCgnICcpWzFdO1xyXG5cclxuICB0cnkge1xyXG4gICAgY29uc3QgZGVjb2RlZCA9IGp3dC52ZXJpZnkodG9rZW4sIFRPS0VOX1NFQ1JFVCk7XHJcbiAgICAvLyBBZ3JlZ2FyIGVsIHVzdWFyaW8gZGVjb2RpZmljYWRvIGVuIHJlcS51c2VyXHJcbiAgICAocmVxIGFzIGFueSkudXNlciA9IGRlY29kZWQ7XHJcbiAgICBuZXh0KCk7XHJcbiAgfSBjYXRjaCAoZXJyKSB7XHJcbiAgICByZXMuc3RhdHVzKDQwMSkuanNvbih7IG1lc3NhZ2U6ICdUb2tlbiBpbnbDoWxpZG8gbyBleHBpcmFkbycgfSk7XHJcbiAgfVxyXG59XHJcblxyXG4vKipcclxuICogTWlkZGxld2FyZSBwYXJhIHZhbGlkYXIgZWwgcm9sIGRlbCB1c3VhcmlvLlxyXG4gKiBAcGFyYW0gcm9sZXMgUm9sZXMgcGVybWl0aWRvcyBwYXJhIGFjY2VkZXIgYWwgZW5kcG9pbnRcclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiByZXF1aXJlUm9sZSguLi5yb2xlczogc3RyaW5nW10pIHtcclxuICByZXR1cm4gKHJlcTogUmVxdWVzdCwgcmVzOiBSZXNwb25zZSwgbmV4dDogTmV4dEZ1bmN0aW9uKSA9PiB7XHJcbiAgICBjb25zdCB1c2VyID0gKHJlcSBhcyBhbnkpLnVzZXI7XHJcbiAgICBpZiAoIXVzZXIgfHwgIXJvbGVzLmluY2x1ZGVzKHVzZXIucm9sbCkpIHtcclxuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAzKS5qc29uKHsgbXNnOiAnTm8gYXV0b3JpemFkby4gUm9sIGluc3VmaWNpZW50ZS4nIH0pO1xyXG4gICAgfVxyXG4gICAgbmV4dCgpO1xyXG4gIH07XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBZ0JRO0lBQUFBLGFBQUEsWUFBQUEsQ0FBQTtNQUFBLE9BQUFDLGNBQUE7SUFBQTtFQUFBO0VBQUEsT0FBQUEsY0FBQTtBQUFBO0FBQUFELGFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQVpSRSxPQUFBLENBQUFDLGNBQUEsR0FBQUEsY0FBQTtBQXNCQztBQUFBSCxhQUFBLEdBQUFJLENBQUE7QUFNREYsT0FBQSxDQUFBRyxXQUFBLEdBQUFBLFdBQUE7QUEvQkEsTUFBQUMsY0FBQTtBQUFBO0FBQUEsQ0FBQU4sYUFBQSxHQUFBSSxDQUFBLE9BQUFHLGVBQUEsQ0FBQUMsT0FBQTtBQUNBLE1BQUFDLEtBQUE7QUFBQTtBQUFBLENBQUFULGFBQUEsR0FBQUksQ0FBQSxP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