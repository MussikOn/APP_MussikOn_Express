2dad00b992f1d0a92b6123ff8a8d2586
"use strict";

/* istanbul ignore next */
function cov_ov0h048uh() {
  var path = "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\services\\pushNotificationService.ts";
  var hash = "0b4b84eabcd63ae0e8d3776daeabafbd2f711b85";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\services\\pushNotificationService.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 16
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 28
        },
        end: {
          line: 3,
          column: 110
        }
      },
      "2": {
        start: {
          line: 3,
          column: 91
        },
        end: {
          line: 3,
          column: 106
        }
      },
      "3": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "4": {
        start: {
          line: 5,
          column: 36
        },
        end: {
          line: 5,
          column: 97
        }
      },
      "5": {
        start: {
          line: 5,
          column: 42
        },
        end: {
          line: 5,
          column: 70
        }
      },
      "6": {
        start: {
          line: 5,
          column: 85
        },
        end: {
          line: 5,
          column: 95
        }
      },
      "7": {
        start: {
          line: 6,
          column: 35
        },
        end: {
          line: 6,
          column: 100
        }
      },
      "8": {
        start: {
          line: 6,
          column: 41
        },
        end: {
          line: 6,
          column: 73
        }
      },
      "9": {
        start: {
          line: 6,
          column: 88
        },
        end: {
          line: 6,
          column: 98
        }
      },
      "10": {
        start: {
          line: 7,
          column: 32
        },
        end: {
          line: 7,
          column: 116
        }
      },
      "11": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 78
        }
      },
      "12": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 62
        }
      },
      "13": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 75
        }
      },
      "14": {
        start: {
          line: 13,
          column: 26
        },
        end: {
          line: 13,
          column: 52
        }
      },
      "15": {
        start: {
          line: 14,
          column: 24
        },
        end: {
          line: 14,
          column: 60
        }
      },
      "16": {
        start: {
          line: 16,
          column: 13
        },
        end: {
          line: 16,
          column: 41
        }
      },
      "17": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 31
        }
      },
      "18": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 35,
          column: 11
        }
      },
      "19": {
        start: {
          line: 24,
          column: 12
        },
        end: {
          line: 34,
          column: 13
        }
      },
      "20": {
        start: {
          line: 25,
          column: 33
        },
        end: {
          line: 25,
          column: 74
        }
      },
      "21": {
        start: {
          line: 26,
          column: 29
        },
        end: {
          line: 26,
          column: 50
        }
      },
      "22": {
        start: {
          line: 27,
          column: 16
        },
        end: {
          line: 27,
          column: 28
        }
      },
      "23": {
        start: {
          line: 30,
          column: 16
        },
        end: {
          line: 33,
          column: 18
        }
      },
      "24": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 56,
          column: 11
        }
      },
      "25": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 55,
          column: 13
        }
      },
      "26": {
        start: {
          line: 40,
          column: 33
        },
        end: {
          line: 46,
          column: 18
        }
      },
      "27": {
        start: {
          line: 47,
          column: 29
        },
        end: {
          line: 47,
          column: 50
        }
      },
      "28": {
        start: {
          line: 48,
          column: 16
        },
        end: {
          line: 48,
          column: 28
        }
      },
      "29": {
        start: {
          line: 51,
          column: 16
        },
        end: {
          line: 54,
          column: 18
        }
      },
      "30": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 73,
          column: 11
        }
      },
      "31": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 72,
          column: 13
        }
      },
      "32": {
        start: {
          line: 61,
          column: 33
        },
        end: {
          line: 63,
          column: 18
        }
      },
      "33": {
        start: {
          line: 64,
          column: 29
        },
        end: {
          line: 64,
          column: 50
        }
      },
      "34": {
        start: {
          line: 65,
          column: 16
        },
        end: {
          line: 65,
          column: 28
        }
      },
      "35": {
        start: {
          line: 68,
          column: 16
        },
        end: {
          line: 71,
          column: 18
        }
      },
      "36": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 94,
          column: 11
        }
      },
      "37": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 93,
          column: 13
        }
      },
      "38": {
        start: {
          line: 78,
          column: 33
        },
        end: {
          line: 84,
          column: 18
        }
      },
      "39": {
        start: {
          line: 85,
          column: 29
        },
        end: {
          line: 85,
          column: 50
        }
      },
      "40": {
        start: {
          line: 86,
          column: 16
        },
        end: {
          line: 86,
          column: 28
        }
      },
      "41": {
        start: {
          line: 89,
          column: 16
        },
        end: {
          line: 92,
          column: 18
        }
      },
      "42": {
        start: {
          line: 97,
          column: 19
        },
        end: {
          line: 97,
          column: 35
        }
      },
      "43": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 104,
          column: 35
        }
      },
      "44": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 105,
          column: 33
        }
      },
      "45": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 106,
          column: 35
        }
      },
      "46": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 131,
          column: 11
        }
      },
      "47": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 130,
          column: 13
        }
      },
      "48": {
        start: {
          line: 114,
          column: 16
        },
        end: {
          line: 115,
          column: 32
        }
      },
      "49": {
        start: {
          line: 115,
          column: 20
        },
        end: {
          line: 115,
          column: 32
        }
      },
      "50": {
        start: {
          line: 117,
          column: 16
        },
        end: {
          line: 119,
          column: 17
        }
      },
      "51": {
        start: {
          line: 118,
          column: 20
        },
        end: {
          line: 118,
          column: 103
        }
      },
      "52": {
        start: {
          line: 121,
          column: 16
        },
        end: {
          line: 121,
          column: 42
        }
      },
      "53": {
        start: {
          line: 123,
          column: 16
        },
        end: {
          line: 123,
          column: 51
        }
      },
      "54": {
        start: {
          line: 124,
          column: 16
        },
        end: {
          line: 124,
          column: 42
        }
      },
      "55": {
        start: {
          line: 125,
          column: 16
        },
        end: {
          line: 125,
          column: 28
        }
      },
      "56": {
        start: {
          line: 128,
          column: 16
        },
        end: {
          line: 128,
          column: 100
        }
      },
      "57": {
        start: {
          line: 129,
          column: 16
        },
        end: {
          line: 129,
          column: 29
        }
      },
      "58": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 139,
          column: 38
        }
      },
      "59": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 147,
          column: 9
        }
      },
      "60": {
        start: {
          line: 146,
          column: 12
        },
        end: {
          line: 146,
          column: 68
        }
      },
      "61": {
        start: {
          line: 148,
          column: 27
        },
        end: {
          line: 148,
          column: 50
        }
      },
      "62": {
        start: {
          line: 149,
          column: 8
        },
        end: {
          line: 153,
          column: 10
        }
      },
      "63": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 171,
          column: 11
        }
      },
      "64": {
        start: {
          line: 160,
          column: 12
        },
        end: {
          line: 170,
          column: 13
        }
      },
      "65": {
        start: {
          line: 161,
          column: 16
        },
        end: {
          line: 163,
          column: 17
        }
      },
      "66": {
        start: {
          line: 162,
          column: 20
        },
        end: {
          line: 162,
          column: 83
        }
      },
      "67": {
        start: {
          line: 164,
          column: 35
        },
        end: {
          line: 164,
          column: 73
        }
      },
      "68": {
        start: {
          line: 165,
          column: 16
        },
        end: {
          line: 165,
          column: 48
        }
      },
      "69": {
        start: {
          line: 168,
          column: 16
        },
        end: {
          line: 168,
          column: 82
        }
      },
      "70": {
        start: {
          line: 169,
          column: 16
        },
        end: {
          line: 169,
          column: 29
        }
      },
      "71": {
        start: {
          line: 177,
          column: 8
        },
        end: {
          line: 191,
          column: 11
        }
      },
      "72": {
        start: {
          line: 178,
          column: 12
        },
        end: {
          line: 190,
          column: 13
        }
      },
      "73": {
        start: {
          line: 179,
          column: 33
        },
        end: {
          line: 179,
          column: 86
        }
      },
      "74": {
        start: {
          line: 180,
          column: 16
        },
        end: {
          line: 185,
          column: 17
        }
      },
      "75": {
        start: {
          line: 181,
          column: 20
        },
        end: {
          line: 181,
          column: 71
        }
      },
      "76": {
        start: {
          line: 184,
          column: 20
        },
        end: {
          line: 184,
          column: 71
        }
      },
      "77": {
        start: {
          line: 188,
          column: 16
        },
        end: {
          line: 188,
          column: 81
        }
      },
      "78": {
        start: {
          line: 189,
          column: 16
        },
        end: {
          line: 189,
          column: 28
        }
      },
      "79": {
        start: {
          line: 197,
          column: 8
        },
        end: {
          line: 206,
          column: 11
        }
      },
      "80": {
        start: {
          line: 198,
          column: 12
        },
        end: {
          line: 205,
          column: 13
        }
      },
      "81": {
        start: {
          line: 199,
          column: 16
        },
        end: {
          line: 199,
          column: 85
        }
      },
      "82": {
        start: {
          line: 200,
          column: 16
        },
        end: {
          line: 200,
          column: 115
        }
      },
      "83": {
        start: {
          line: 203,
          column: 16
        },
        end: {
          line: 203,
          column: 89
        }
      },
      "84": {
        start: {
          line: 204,
          column: 16
        },
        end: {
          line: 204,
          column: 28
        }
      },
      "85": {
        start: {
          line: 212,
          column: 8
        },
        end: {
          line: 259,
          column: 11
        }
      },
      "86": {
        start: {
          line: 213,
          column: 12
        },
        end: {
          line: 258,
          column: 13
        }
      },
      "87": {
        start: {
          line: 214,
          column: 16
        },
        end: {
          line: 216,
          column: 17
        }
      },
      "88": {
        start: {
          line: 215,
          column: 20
        },
        end: {
          line: 215,
          column: 44
        }
      },
      "89": {
        start: {
          line: 217,
          column: 16
        },
        end: {
          line: 219,
          column: 17
        }
      },
      "90": {
        start: {
          line: 218,
          column: 20
        },
        end: {
          line: 218,
          column: 63
        }
      },
      "91": {
        start: {
          line: 220,
          column: 16
        },
        end: {
          line: 222,
          column: 17
        }
      },
      "92": {
        start: {
          line: 221,
          column: 20
        },
        end: {
          line: 221,
          column: 68
        }
      },
      "93": {
        start: {
          line: 224,
          column: 35
        },
        end: {
          line: 224,
          column: 61
        }
      },
      "94": {
        start: {
          line: 225,
          column: 16
        },
        end: {
          line: 230,
          column: 17
        }
      },
      "95": {
        start: {
          line: 226,
          column: 36
        },
        end: {
          line: 226,
          column: 66
        }
      },
      "96": {
        start: {
          line: 227,
          column: 20
        },
        end: {
          line: 229,
          column: 21
        }
      },
      "97": {
        start: {
          line: 228,
          column: 24
        },
        end: {
          line: 228,
          column: 78
        }
      },
      "98": {
        start: {
          line: 232,
          column: 35
        },
        end: {
          line: 232,
          column: 88
        }
      },
      "99": {
        start: {
          line: 233,
          column: 16
        },
        end: {
          line: 238,
          column: 17
        }
      },
      "100": {
        start: {
          line: 234,
          column: 20
        },
        end: {
          line: 237,
          column: 23
        }
      },
      "101": {
        start: {
          line: 240,
          column: 41
        },
        end: {
          line: 246,
          column: 17
        }
      },
      "102": {
        start: {
          line: 247,
          column: 33
        },
        end: {
          line: 247,
          column: 108
        }
      },
      "103": {
        start: {
          line: 248,
          column: 16
        },
        end: {
          line: 253,
          column: 17
        }
      },
      "104": {
        start: {
          line: 249,
          column: 20
        },
        end: {
          line: 249,
          column: 41
        }
      },
      "105": {
        start: {
          line: 252,
          column: 20
        },
        end: {
          line: 252,
          column: 81
        }
      },
      "106": {
        start: {
          line: 256,
          column: 16
        },
        end: {
          line: 256,
          column: 99
        }
      },
      "107": {
        start: {
          line: 257,
          column: 16
        },
        end: {
          line: 257,
          column: 28
        }
      },
      "108": {
        start: {
          line: 265,
          column: 8
        },
        end: {
          line: 274,
          column: 11
        }
      },
      "109": {
        start: {
          line: 266,
          column: 12
        },
        end: {
          line: 273,
          column: 13
        }
      },
      "110": {
        start: {
          line: 267,
          column: 33
        },
        end: {
          line: 267,
          column: 90
        }
      },
      "111": {
        start: {
          line: 268,
          column: 16
        },
        end: {
          line: 268,
          column: 78
        }
      },
      "112": {
        start: {
          line: 271,
          column: 16
        },
        end: {
          line: 271,
          column: 87
        }
      },
      "113": {
        start: {
          line: 272,
          column: 16
        },
        end: {
          line: 272,
          column: 26
        }
      },
      "114": {
        start: {
          line: 280,
          column: 8
        },
        end: {
          line: 292,
          column: 11
        }
      },
      "115": {
        start: {
          line: 281,
          column: 12
        },
        end: {
          line: 291,
          column: 13
        }
      },
      "116": {
        start: {
          line: 282,
          column: 33
        },
        end: {
          line: 282,
          column: 136
        }
      },
      "117": {
        start: {
          line: 283,
          column: 16
        },
        end: {
          line: 285,
          column: 17
        }
      },
      "118": {
        start: {
          line: 284,
          column: 20
        },
        end: {
          line: 284,
          column: 41
        }
      },
      "119": {
        start: {
          line: 286,
          column: 16
        },
        end: {
          line: 286,
          column: 63
        }
      },
      "120": {
        start: {
          line: 289,
          column: 16
        },
        end: {
          line: 289,
          column: 84
        }
      },
      "121": {
        start: {
          line: 290,
          column: 16
        },
        end: {
          line: 290,
          column: 28
        }
      },
      "122": {
        start: {
          line: 298,
          column: 8
        },
        end: {
          line: 298,
          column: 35
        }
      },
      "123": {
        start: {
          line: 304,
          column: 8
        },
        end: {
          line: 323,
          column: 11
        }
      },
      "124": {
        start: {
          line: 305,
          column: 12
        },
        end: {
          line: 322,
          column: 13
        }
      },
      "125": {
        start: {
          line: 306,
          column: 33
        },
        end: {
          line: 306,
          column: 110
        }
      },
      "126": {
        start: {
          line: 307,
          column: 16
        },
        end: {
          line: 316,
          column: 17
        }
      },
      "127": {
        start: {
          line: 309,
          column: 20
        },
        end: {
          line: 314,
          column: 21
        }
      },
      "128": {
        start: {
          line: 310,
          column: 45
        },
        end: {
          line: 310,
          column: 98
        }
      },
      "129": {
        start: {
          line: 311,
          column: 24
        },
        end: {
          line: 313,
          column: 25
        }
      },
      "130": {
        start: {
          line: 312,
          column: 28
        },
        end: {
          line: 312,
          column: 61
        }
      },
      "131": {
        start: {
          line: 315,
          column: 20
        },
        end: {
          line: 315,
          column: 32
        }
      },
      "132": {
        start: {
          line: 317,
          column: 16
        },
        end: {
          line: 317,
          column: 29
        }
      },
      "133": {
        start: {
          line: 320,
          column: 16
        },
        end: {
          line: 320,
          column: 85
        }
      },
      "134": {
        start: {
          line: 321,
          column: 16
        },
        end: {
          line: 321,
          column: 29
        }
      },
      "135": {
        start: {
          line: 329,
          column: 8
        },
        end: {
          line: 396,
          column: 11
        }
      },
      "136": {
        start: {
          line: 330,
          column: 12
        },
        end: {
          line: 395,
          column: 13
        }
      },
      "137": {
        start: {
          line: 332,
          column: 38
        },
        end: {
          line: 332,
          column: 71
        }
      },
      "138": {
        start: {
          line: 333,
          column: 42
        },
        end: {
          line: 333,
          column: 108
        }
      },
      "139": {
        start: {
          line: 333,
          column: 70
        },
        end: {
          line: 333,
          column: 107
        }
      },
      "140": {
        start: {
          line: 334,
          column: 16
        },
        end: {
          line: 337,
          column: 17
        }
      },
      "141": {
        start: {
          line: 335,
          column: 20
        },
        end: {
          line: 335,
          column: 90
        }
      },
      "142": {
        start: {
          line: 336,
          column: 20
        },
        end: {
          line: 336,
          column: 33
        }
      },
      "143": {
        start: {
          line: 339,
          column: 33
        },
        end: {
          line: 350,
          column: 19
        }
      },
      "144": {
        start: {
          line: 339,
          column: 72
        },
        end: {
          line: 350,
          column: 17
        }
      },
      "145": {
        start: {
          line: 352,
          column: 31
        },
        end: {
          line: 352,
          column: 68
        }
      },
      "146": {
        start: {
          line: 353,
          column: 32
        },
        end: {
          line: 353,
          column: 34
        }
      },
      "147": {
        start: {
          line: 354,
          column: 16
        },
        end: {
          line: 362,
          column: 17
        }
      },
      "148": {
        start: {
          line: 355,
          column: 20
        },
        end: {
          line: 361,
          column: 21
        }
      },
      "149": {
        start: {
          line: 356,
          column: 44
        },
        end: {
          line: 356,
          column: 88
        }
      },
      "150": {
        start: {
          line: 357,
          column: 24
        },
        end: {
          line: 357,
          column: 53
        }
      },
      "151": {
        start: {
          line: 360,
          column: 24
        },
        end: {
          line: 360,
          column: 103
        }
      },
      "152": {
        start: {
          line: 364,
          column: 35
        },
        end: {
          line: 366,
          column: 45
        }
      },
      "153": {
        start: {
          line: 365,
          column: 38
        },
        end: {
          line: 365,
          column: 63
        }
      },
      "154": {
        start: {
          line: 366,
          column: 35
        },
        end: {
          line: 366,
          column: 44
        }
      },
      "155": {
        start: {
          line: 367,
          column: 16
        },
        end: {
          line: 383,
          column: 17
        }
      },
      "156": {
        start: {
          line: 368,
          column: 44
        },
        end: {
          line: 368,
          column: 92
        }
      },
      "157": {
        start: {
          line: 369,
          column: 20
        },
        end: {
          line: 382,
          column: 21
        }
      },
      "158": {
        start: {
          line: 370,
          column: 24
        },
        end: {
          line: 381,
          column: 25
        }
      },
      "159": {
        start: {
          line: 371,
          column: 45
        },
        end: {
          line: 371,
          column: 95
        }
      },
      "160": {
        start: {
          line: 372,
          column: 28
        },
        end: {
          line: 377,
          column: 29
        }
      },
      "161": {
        start: {
          line: 373,
          column: 48
        },
        end: {
          line: 373,
          column: 67
        }
      },
      "162": {
        start: {
          line: 374,
          column: 32
        },
        end: {
          line: 376,
          column: 33
        }
      },
      "163": {
        start: {
          line: 375,
          column: 36
        },
        end: {
          line: 375,
          column: 106
        }
      },
      "164": {
        start: {
          line: 380,
          column: 28
        },
        end: {
          line: 380,
          column: 95
        }
      },
      "165": {
        start: {
          line: 384,
          column: 16
        },
        end: {
          line: 389,
          column: 25
        }
      },
      "166": {
        start: {
          line: 390,
          column: 16
        },
        end: {
          line: 390,
          column: 28
        }
      },
      "167": {
        start: {
          line: 393,
          column: 16
        },
        end: {
          line: 393,
          column: 83
        }
      },
      "168": {
        start: {
          line: 394,
          column: 16
        },
        end: {
          line: 394,
          column: 29
        }
      },
      "169": {
        start: {
          line: 402,
          column: 8
        },
        end: {
          line: 458,
          column: 11
        }
      },
      "170": {
        start: {
          line: 403,
          column: 12
        },
        end: {
          line: 457,
          column: 13
        }
      },
      "171": {
        start: {
          line: 405,
          column: 41
        },
        end: {
          line: 405,
          column: 74
        }
      },
      "172": {
        start: {
          line: 406,
          column: 44
        },
        end: {
          line: 406,
          column: 128
        }
      },
      "173": {
        start: {
          line: 406,
          column: 75
        },
        end: {
          line: 406,
          column: 127
        }
      },
      "174": {
        start: {
          line: 407,
          column: 16
        },
        end: {
          line: 410,
          column: 17
        }
      },
      "175": {
        start: {
          line: 408,
          column: 20
        },
        end: {
          line: 408,
          column: 96
        }
      },
      "176": {
        start: {
          line: 409,
          column: 20
        },
        end: {
          line: 409,
          column: 74
        }
      },
      "177": {
        start: {
          line: 412,
          column: 33
        },
        end: {
          line: 421,
          column: 19
        }
      },
      "178": {
        start: {
          line: 412,
          column: 74
        },
        end: {
          line: 421,
          column: 17
        }
      },
      "179": {
        start: {
          line: 423,
          column: 31
        },
        end: {
          line: 423,
          column: 68
        }
      },
      "180": {
        start: {
          line: 424,
          column: 32
        },
        end: {
          line: 424,
          column: 34
        }
      },
      "181": {
        start: {
          line: 425,
          column: 35
        },
        end: {
          line: 425,
          column: 36
        }
      },
      "182": {
        start: {
          line: 426,
          column: 34
        },
        end: {
          line: 426,
          column: 35
        }
      },
      "183": {
        start: {
          line: 427,
          column: 16
        },
        end: {
          line: 445,
          column: 17
        }
      },
      "184": {
        start: {
          line: 428,
          column: 20
        },
        end: {
          line: 444,
          column: 21
        }
      },
      "185": {
        start: {
          line: 429,
          column: 44
        },
        end: {
          line: 429,
          column: 88
        }
      },
      "186": {
        start: {
          line: 430,
          column: 24
        },
        end: {
          line: 430,
          column: 53
        }
      },
      "187": {
        start: {
          line: 432,
          column: 24
        },
        end: {
          line: 439,
          column: 27
        }
      },
      "188": {
        start: {
          line: 433,
          column: 28
        },
        end: {
          line: 438,
          column: 29
        }
      },
      "189": {
        start: {
          line: 434,
          column: 32
        },
        end: {
          line: 434,
          column: 47
        }
      },
      "190": {
        start: {
          line: 437,
          column: 32
        },
        end: {
          line: 437,
          column: 46
        }
      },
      "191": {
        start: {
          line: 442,
          column: 24
        },
        end: {
          line: 442,
          column: 111
        }
      },
      "192": {
        start: {
          line: 443,
          column: 24
        },
        end: {
          line: 443,
          column: 52
        }
      },
      "193": {
        start: {
          line: 446,
          column: 16
        },
        end: {
          line: 451,
          column: 25
        }
      },
      "194": {
        start: {
          line: 452,
          column: 16
        },
        end: {
          line: 452,
          column: 70
        }
      },
      "195": {
        start: {
          line: 455,
          column: 16
        },
        end: {
          line: 455,
          column: 91
        }
      },
      "196": {
        start: {
          line: 456,
          column: 16
        },
        end: {
          line: 456,
          column: 28
        }
      },
      "197": {
        start: {
          line: 464,
          column: 8
        },
        end: {
          line: 473,
          column: 11
        }
      },
      "198": {
        start: {
          line: 465,
          column: 12
        },
        end: {
          line: 472,
          column: 13
        }
      },
      "199": {
        start: {
          line: 466,
          column: 33
        },
        end: {
          line: 466,
          column: 97
        }
      },
      "200": {
        start: {
          line: 467,
          column: 16
        },
        end: {
          line: 467,
          column: 80
        }
      },
      "201": {
        start: {
          line: 470,
          column: 16
        },
        end: {
          line: 470,
          column: 79
        }
      },
      "202": {
        start: {
          line: 471,
          column: 16
        },
        end: {
          line: 471,
          column: 28
        }
      },
      "203": {
        start: {
          line: 479,
          column: 8
        },
        end: {
          line: 488,
          column: 11
        }
      },
      "204": {
        start: {
          line: 480,
          column: 12
        },
        end: {
          line: 487,
          column: 13
        }
      },
      "205": {
        start: {
          line: 481,
          column: 33
        },
        end: {
          line: 481,
          column: 86
        }
      },
      "206": {
        start: {
          line: 482,
          column: 16
        },
        end: {
          line: 482,
          column: 78
        }
      },
      "207": {
        start: {
          line: 485,
          column: 16
        },
        end: {
          line: 485,
          column: 83
        }
      },
      "208": {
        start: {
          line: 486,
          column: 16
        },
        end: {
          line: 486,
          column: 26
        }
      },
      "209": {
        start: {
          line: 494,
          column: 8
        },
        end: {
          line: 503,
          column: 11
        }
      },
      "210": {
        start: {
          line: 495,
          column: 12
        },
        end: {
          line: 502,
          column: 13
        }
      },
      "211": {
        start: {
          line: 496,
          column: 33
        },
        end: {
          line: 496,
          column: 100
        }
      },
      "212": {
        start: {
          line: 497,
          column: 16
        },
        end: {
          line: 497,
          column: 80
        }
      },
      "213": {
        start: {
          line: 500,
          column: 16
        },
        end: {
          line: 500,
          column: 82
        }
      },
      "214": {
        start: {
          line: 501,
          column: 16
        },
        end: {
          line: 501,
          column: 28
        }
      },
      "215": {
        start: {
          line: 509,
          column: 8
        },
        end: {
          line: 518,
          column: 11
        }
      },
      "216": {
        start: {
          line: 510,
          column: 12
        },
        end: {
          line: 517,
          column: 13
        }
      },
      "217": {
        start: {
          line: 511,
          column: 33
        },
        end: {
          line: 511,
          column: 109
        }
      },
      "218": {
        start: {
          line: 512,
          column: 16
        },
        end: {
          line: 512,
          column: 80
        }
      },
      "219": {
        start: {
          line: 515,
          column: 16
        },
        end: {
          line: 515,
          column: 84
        }
      },
      "220": {
        start: {
          line: 516,
          column: 16
        },
        end: {
          line: 516,
          column: 28
        }
      },
      "221": {
        start: {
          line: 524,
          column: 8
        },
        end: {
          line: 533,
          column: 11
        }
      },
      "222": {
        start: {
          line: 525,
          column: 12
        },
        end: {
          line: 532,
          column: 13
        }
      },
      "223": {
        start: {
          line: 526,
          column: 33
        },
        end: {
          line: 526,
          column: 103
        }
      },
      "224": {
        start: {
          line: 527,
          column: 16
        },
        end: {
          line: 527,
          column: 40
        }
      },
      "225": {
        start: {
          line: 530,
          column: 16
        },
        end: {
          line: 530,
          column: 82
        }
      },
      "226": {
        start: {
          line: 531,
          column: 16
        },
        end: {
          line: 531,
          column: 29
        }
      },
      "227": {
        start: {
          line: 539,
          column: 8
        },
        end: {
          line: 548,
          column: 11
        }
      },
      "228": {
        start: {
          line: 540,
          column: 12
        },
        end: {
          line: 547,
          column: 13
        }
      },
      "229": {
        start: {
          line: 541,
          column: 33
        },
        end: {
          line: 541,
          column: 82
        }
      },
      "230": {
        start: {
          line: 542,
          column: 16
        },
        end: {
          line: 542,
          column: 80
        }
      },
      "231": {
        start: {
          line: 545,
          column: 16
        },
        end: {
          line: 545,
          column: 86
        }
      },
      "232": {
        start: {
          line: 546,
          column: 16
        },
        end: {
          line: 546,
          column: 28
        }
      },
      "233": {
        start: {
          line: 554,
          column: 8
        },
        end: {
          line: 604,
          column: 11
        }
      },
      "234": {
        start: {
          line: 555,
          column: 12
        },
        end: {
          line: 603,
          column: 13
        }
      },
      "235": {
        start: {
          line: 557,
          column: 38
        },
        end: {
          line: 557,
          column: 71
        }
      },
      "236": {
        start: {
          line: 558,
          column: 44
        },
        end: {
          line: 558,
          column: 85
        }
      },
      "237": {
        start: {
          line: 558,
          column: 72
        },
        end: {
          line: 558,
          column: 84
        }
      },
      "238": {
        start: {
          line: 559,
          column: 16
        },
        end: {
          line: 562,
          column: 17
        }
      },
      "239": {
        start: {
          line: 560,
          column: 20
        },
        end: {
          line: 560,
          column: 99
        }
      },
      "240": {
        start: {
          line: 561,
          column: 20
        },
        end: {
          line: 561,
          column: 33
        }
      },
      "241": {
        start: {
          line: 564,
          column: 36
        },
        end: {
          line: 576,
          column: 17
        }
      },
      "242": {
        start: {
          line: 578,
          column: 31
        },
        end: {
          line: 578,
          column: 73
        }
      },
      "243": {
        start: {
          line: 579,
          column: 16
        },
        end: {
          line: 597,
          column: 17
        }
      },
      "244": {
        start: {
          line: 580,
          column: 20
        },
        end: {
          line: 596,
          column: 21
        }
      },
      "245": {
        start: {
          line: 581,
          column: 40
        },
        end: {
          line: 581,
          column: 84
        }
      },
      "246": {
        start: {
          line: 583,
          column: 39
        },
        end: {
          line: 583,
          column: 49
        }
      },
      "247": {
        start: {
          line: 584,
          column: 24
        },
        end: {
          line: 591,
          column: 25
        }
      },
      "248": {
        start: {
          line: 585,
          column: 28
        },
        end: {
          line: 585,
          column: 105
        }
      },
      "249": {
        start: {
          line: 586,
          column: 28
        },
        end: {
          line: 586,
          column: 40
        }
      },
      "250": {
        start: {
          line: 589,
          column: 28
        },
        end: {
          line: 589,
          column: 128
        }
      },
      "251": {
        start: {
          line: 590,
          column: 28
        },
        end: {
          line: 590,
          column: 41
        }
      },
      "252": {
        start: {
          line: 594,
          column: 24
        },
        end: {
          line: 594,
          column: 104
        }
      },
      "253": {
        start: {
          line: 595,
          column: 24
        },
        end: {
          line: 595,
          column: 37
        }
      },
      "254": {
        start: {
          line: 598,
          column: 16
        },
        end: {
          line: 598,
          column: 29
        }
      },
      "255": {
        start: {
          line: 601,
          column: 16
        },
        end: {
          line: 601,
          column: 94
        }
      },
      "256": {
        start: {
          line: 602,
          column: 16
        },
        end: {
          line: 602,
          column: 29
        }
      },
      "257": {
        start: {
          line: 610,
          column: 8
        },
        end: {
          line: 613,
          column: 9
        }
      },
      "258": {
        start: {
          line: 611,
          column: 12
        },
        end: {
          line: 611,
          column: 67
        }
      },
      "259": {
        start: {
          line: 612,
          column: 12
        },
        end: {
          line: 612,
          column: 19
        }
      },
      "260": {
        start: {
          line: 614,
          column: 8
        },
        end: {
          line: 616,
          column: 9
        }
      },
      "261": {
        start: {
          line: 615,
          column: 12
        },
        end: {
          line: 615,
          column: 148
        }
      },
      "262": {
        start: {
          line: 622,
          column: 24
        },
        end: {
          line: 622,
          column: 71
        }
      },
      "263": {
        start: {
          line: 623,
          column: 23
        },
        end: {
          line: 625,
          column: 31
        }
      },
      "264": {
        start: {
          line: 626,
          column: 24
        },
        end: {
          line: 626,
          column: 43
        }
      },
      "265": {
        start: {
          line: 627,
          column: 28
        },
        end: {
          line: 627,
          column: 58
        }
      },
      "266": {
        start: {
          line: 628,
          column: 8
        },
        end: {
          line: 630,
          column: 9
        }
      },
      "267": {
        start: {
          line: 628,
          column: 21
        },
        end: {
          line: 628,
          column: 22
        }
      },
      "268": {
        start: {
          line: 629,
          column: 12
        },
        end: {
          line: 629,
          column: 51
        }
      },
      "269": {
        start: {
          line: 631,
          column: 8
        },
        end: {
          line: 631,
          column: 27
        }
      },
      "270": {
        start: {
          line: 637,
          column: 22
        },
        end: {
          line: 637,
          column: 44
        }
      },
      "271": {
        start: {
          line: 638,
          column: 21
        },
        end: {
          line: 638,
          column: 23
        }
      },
      "272": {
        start: {
          line: 639,
          column: 8
        },
        end: {
          line: 641,
          column: 9
        }
      },
      "273": {
        start: {
          line: 639,
          column: 21
        },
        end: {
          line: 639,
          column: 22
        }
      },
      "274": {
        start: {
          line: 640,
          column: 12
        },
        end: {
          line: 640,
          column: 52
        }
      },
      "275": {
        start: {
          line: 642,
          column: 8
        },
        end: {
          line: 642,
          column: 35
        }
      },
      "276": {
        start: {
          line: 648,
          column: 8
        },
        end: {
          line: 677,
          column: 11
        }
      },
      "277": {
        start: {
          line: 649,
          column: 12
        },
        end: {
          line: 657,
          column: 13
        }
      },
      "278": {
        start: {
          line: 650,
          column: 33
        },
        end: {
          line: 650,
          column: 85
        }
      },
      "279": {
        start: {
          line: 651,
          column: 16
        },
        end: {
          line: 653,
          column: 17
        }
      },
      "280": {
        start: {
          line: 652,
          column: 20
        },
        end: {
          line: 652,
          column: 41
        }
      },
      "281": {
        start: {
          line: 656,
          column: 16
        },
        end: {
          line: 656,
          column: 87
        }
      },
      "282": {
        start: {
          line: 659,
          column: 12
        },
        end: {
          line: 676,
          column: 14
        }
      },
      "283": {
        start: {
          line: 683,
          column: 8
        },
        end: {
          line: 692,
          column: 11
        }
      },
      "284": {
        start: {
          line: 684,
          column: 12
        },
        end: {
          line: 691,
          column: 13
        }
      },
      "285": {
        start: {
          line: 685,
          column: 33
        },
        end: {
          line: 685,
          column: 95
        }
      },
      "286": {
        start: {
          line: 686,
          column: 16
        },
        end: {
          line: 686,
          column: 40
        }
      },
      "287": {
        start: {
          line: 689,
          column: 16
        },
        end: {
          line: 689,
          column: 89
        }
      },
      "288": {
        start: {
          line: 690,
          column: 16
        },
        end: {
          line: 690,
          column: 29
        }
      },
      "289": {
        start: {
          line: 698,
          column: 8
        },
        end: {
          line: 699,
          column: 25
        }
      },
      "290": {
        start: {
          line: 699,
          column: 12
        },
        end: {
          line: 699,
          column: 25
        }
      },
      "291": {
        start: {
          line: 700,
          column: 20
        },
        end: {
          line: 700,
          column: 30
        }
      },
      "292": {
        start: {
          line: 701,
          column: 28
        },
        end: {
          line: 701,
          column: 66
        }
      },
      "293": {
        start: {
          line: 702,
          column: 41
        },
        end: {
          line: 704,
          column: 24
        }
      },
      "294": {
        start: {
          line: 705,
          column: 37
        },
        end: {
          line: 707,
          column: 24
        }
      },
      "295": {
        start: {
          line: 708,
          column: 26
        },
        end: {
          line: 708,
          column: 54
        }
      },
      "296": {
        start: {
          line: 709,
          column: 24
        },
        end: {
          line: 709,
          column: 48
        }
      },
      "297": {
        start: {
          line: 710,
          column: 8
        },
        end: {
          line: 716,
          column: 9
        }
      },
      "298": {
        start: {
          line: 711,
          column: 12
        },
        end: {
          line: 711,
          column: 70
        }
      },
      "299": {
        start: {
          line: 715,
          column: 12
        },
        end: {
          line: 715,
          column: 70
        }
      },
      "300": {
        start: {
          line: 719,
          column: 0
        },
        end: {
          line: 719,
          column: 58
        }
      },
      "301": {
        start: {
          line: 721,
          column: 0
        },
        end: {
          line: 721,
          column: 64
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 2,
            column: 45
          }
        },
        loc: {
          start: {
            line: 2,
            column: 89
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "adopt",
        decl: {
          start: {
            line: 3,
            column: 13
          },
          end: {
            line: 3,
            column: 18
          }
        },
        loc: {
          start: {
            line: 3,
            column: 26
          },
          end: {
            line: 3,
            column: 112
          }
        },
        line: 3
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 3,
            column: 70
          },
          end: {
            line: 3,
            column: 71
          }
        },
        loc: {
          start: {
            line: 3,
            column: 89
          },
          end: {
            line: 3,
            column: 108
          }
        },
        line: 3
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 4,
            column: 36
          },
          end: {
            line: 4,
            column: 37
          }
        },
        loc: {
          start: {
            line: 4,
            column: 63
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 4
      },
      "4": {
        name: "fulfilled",
        decl: {
          start: {
            line: 5,
            column: 17
          },
          end: {
            line: 5,
            column: 26
          }
        },
        loc: {
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 99
          }
        },
        line: 5
      },
      "5": {
        name: "rejected",
        decl: {
          start: {
            line: 6,
            column: 17
          },
          end: {
            line: 6,
            column: 25
          }
        },
        loc: {
          start: {
            line: 6,
            column: 33
          },
          end: {
            line: 6,
            column: 102
          }
        },
        line: 6
      },
      "6": {
        name: "step",
        decl: {
          start: {
            line: 7,
            column: 17
          },
          end: {
            line: 7,
            column: 21
          }
        },
        loc: {
          start: {
            line: 7,
            column: 30
          },
          end: {
            line: 7,
            column: 118
          }
        },
        line: 7
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 34
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 18
          },
          end: {
            line: 36,
            column: 5
          }
        },
        line: 22
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 23,
            column: 47
          },
          end: {
            line: 23,
            column: 48
          }
        },
        loc: {
          start: {
            line: 23,
            column: 60
          },
          end: {
            line: 35,
            column: 9
          }
        },
        line: 23
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        },
        loc: {
          start: {
            line: 37,
            column: 25
          },
          end: {
            line: 57,
            column: 5
          }
        },
        line: 37
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 38,
            column: 47
          },
          end: {
            line: 38,
            column: 48
          }
        },
        loc: {
          start: {
            line: 38,
            column: 60
          },
          end: {
            line: 56,
            column: 9
          }
        },
        line: 38
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 58,
            column: 4
          },
          end: {
            line: 58,
            column: 5
          }
        },
        loc: {
          start: {
            line: 58,
            column: 21
          },
          end: {
            line: 74,
            column: 5
          }
        },
        line: 58
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 59,
            column: 47
          },
          end: {
            line: 59,
            column: 48
          }
        },
        loc: {
          start: {
            line: 59,
            column: 60
          },
          end: {
            line: 73,
            column: 9
          }
        },
        line: 59
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 75,
            column: 4
          },
          end: {
            line: 75,
            column: 5
          }
        },
        loc: {
          start: {
            line: 75,
            column: 24
          },
          end: {
            line: 95,
            column: 5
          }
        },
        line: 75
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 76,
            column: 47
          },
          end: {
            line: 76,
            column: 48
          }
        },
        loc: {
          start: {
            line: 76,
            column: 60
          },
          end: {
            line: 94,
            column: 9
          }
        },
        line: 76
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 103,
            column: 4
          },
          end: {
            line: 103,
            column: 5
          }
        },
        loc: {
          start: {
            line: 103,
            column: 18
          },
          end: {
            line: 107,
            column: 5
          }
        },
        line: 103
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 111,
            column: 4
          },
          end: {
            line: 111,
            column: 5
          }
        },
        loc: {
          start: {
            line: 111,
            column: 17
          },
          end: {
            line: 132,
            column: 5
          }
        },
        line: 111
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 112,
            column: 47
          },
          end: {
            line: 112,
            column: 48
          }
        },
        loc: {
          start: {
            line: 112,
            column: 60
          },
          end: {
            line: 131,
            column: 9
          }
        },
        line: 112
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 136,
            column: 4
          },
          end: {
            line: 136,
            column: 5
          }
        },
        loc: {
          start: {
            line: 136,
            column: 18
          },
          end: {
            line: 140,
            column: 5
          }
        },
        line: 136
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 144,
            column: 4
          },
          end: {
            line: 144,
            column: 5
          }
        },
        loc: {
          start: {
            line: 144,
            column: 26
          },
          end: {
            line: 154,
            column: 5
          }
        },
        line: 144
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 158,
            column: 4
          },
          end: {
            line: 158,
            column: 5
          }
        },
        loc: {
          start: {
            line: 158,
            column: 24
          },
          end: {
            line: 172,
            column: 5
          }
        },
        line: 158
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 159,
            column: 47
          },
          end: {
            line: 159,
            column: 48
          }
        },
        loc: {
          start: {
            line: 159,
            column: 60
          },
          end: {
            line: 171,
            column: 9
          }
        },
        line: 159
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 176,
            column: 4
          },
          end: {
            line: 176,
            column: 5
          }
        },
        loc: {
          start: {
            line: 176,
            column: 19
          },
          end: {
            line: 192,
            column: 5
          }
        },
        line: 176
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 177,
            column: 47
          },
          end: {
            line: 177,
            column: 48
          }
        },
        loc: {
          start: {
            line: 177,
            column: 60
          },
          end: {
            line: 191,
            column: 9
          }
        },
        line: 177
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 196,
            column: 4
          },
          end: {
            line: 196,
            column: 5
          }
        },
        loc: {
          start: {
            line: 196,
            column: 28
          },
          end: {
            line: 207,
            column: 5
          }
        },
        line: 196
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 197,
            column: 47
          },
          end: {
            line: 197,
            column: 48
          }
        },
        loc: {
          start: {
            line: 197,
            column: 60
          },
          end: {
            line: 206,
            column: 9
          }
        },
        line: 197
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 211,
            column: 4
          },
          end: {
            line: 211,
            column: 5
          }
        },
        loc: {
          start: {
            line: 211,
            column: 35
          },
          end: {
            line: 260,
            column: 5
          }
        },
        line: 211
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 212,
            column: 47
          },
          end: {
            line: 212,
            column: 48
          }
        },
        loc: {
          start: {
            line: 212,
            column: 60
          },
          end: {
            line: 259,
            column: 9
          }
        },
        line: 212
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 264,
            column: 4
          },
          end: {
            line: 264,
            column: 5
          }
        },
        loc: {
          start: {
            line: 264,
            column: 27
          },
          end: {
            line: 275,
            column: 5
          }
        },
        line: 264
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 265,
            column: 47
          },
          end: {
            line: 265,
            column: 48
          }
        },
        loc: {
          start: {
            line: 265,
            column: 60
          },
          end: {
            line: 274,
            column: 9
          }
        },
        line: 265
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 279,
            column: 4
          },
          end: {
            line: 279,
            column: 5
          }
        },
        loc: {
          start: {
            line: 279,
            column: 47
          },
          end: {
            line: 293,
            column: 5
          }
        },
        line: 279
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 280,
            column: 47
          },
          end: {
            line: 280,
            column: 48
          }
        },
        loc: {
          start: {
            line: 280,
            column: 60
          },
          end: {
            line: 292,
            column: 9
          }
        },
        line: 280
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 297,
            column: 4
          },
          end: {
            line: 297,
            column: 5
          }
        },
        loc: {
          start: {
            line: 297,
            column: 24
          },
          end: {
            line: 299,
            column: 5
          }
        },
        line: 297
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 303,
            column: 4
          },
          end: {
            line: 303,
            column: 5
          }
        },
        loc: {
          start: {
            line: 303,
            column: 39
          },
          end: {
            line: 324,
            column: 5
          }
        },
        line: 303
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 304,
            column: 47
          },
          end: {
            line: 304,
            column: 48
          }
        },
        loc: {
          start: {
            line: 304,
            column: 60
          },
          end: {
            line: 323,
            column: 9
          }
        },
        line: 304
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 328,
            column: 4
          },
          end: {
            line: 328,
            column: 5
          }
        },
        loc: {
          start: {
            line: 328,
            column: 49
          },
          end: {
            line: 397,
            column: 5
          }
        },
        line: 328
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 329,
            column: 47
          },
          end: {
            line: 329,
            column: 48
          }
        },
        loc: {
          start: {
            line: 329,
            column: 60
          },
          end: {
            line: 396,
            column: 9
          }
        },
        line: 329
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 333,
            column: 63
          },
          end: {
            line: 333,
            column: 64
          }
        },
        loc: {
          start: {
            line: 333,
            column: 70
          },
          end: {
            line: 333,
            column: 107
          }
        },
        line: 333
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 339,
            column: 55
          },
          end: {
            line: 339,
            column: 56
          }
        },
        loc: {
          start: {
            line: 339,
            column: 72
          },
          end: {
            line: 350,
            column: 17
          }
        },
        line: 339
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 365,
            column: 28
          },
          end: {
            line: 365,
            column: 29
          }
        },
        loc: {
          start: {
            line: 365,
            column: 38
          },
          end: {
            line: 365,
            column: 63
          }
        },
        line: 365
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 366,
            column: 25
          },
          end: {
            line: 366,
            column: 26
          }
        },
        loc: {
          start: {
            line: 366,
            column: 35
          },
          end: {
            line: 366,
            column: 44
          }
        },
        line: 366
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 401,
            column: 4
          },
          end: {
            line: 401,
            column: 5
          }
        },
        loc: {
          start: {
            line: 401,
            column: 34
          },
          end: {
            line: 459,
            column: 5
          }
        },
        line: 401
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 402,
            column: 47
          },
          end: {
            line: 402,
            column: 48
          }
        },
        loc: {
          start: {
            line: 402,
            column: 60
          },
          end: {
            line: 458,
            column: 9
          }
        },
        line: 402
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 406,
            column: 68
          },
          end: {
            line: 406,
            column: 69
          }
        },
        loc: {
          start: {
            line: 406,
            column: 75
          },
          end: {
            line: 406,
            column: 127
          }
        },
        line: 406
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 412,
            column: 57
          },
          end: {
            line: 412,
            column: 58
          }
        },
        loc: {
          start: {
            line: 412,
            column: 74
          },
          end: {
            line: 421,
            column: 17
          }
        },
        line: 412
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 432,
            column: 44
          },
          end: {
            line: 432,
            column: 45
          }
        },
        loc: {
          start: {
            line: 432,
            column: 54
          },
          end: {
            line: 439,
            column: 25
          }
        },
        line: 432
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 463,
            column: 4
          },
          end: {
            line: 463,
            column: 5
          }
        },
        loc: {
          start: {
            line: 463,
            column: 41
          },
          end: {
            line: 474,
            column: 5
          }
        },
        line: 463
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 464,
            column: 47
          },
          end: {
            line: 464,
            column: 48
          }
        },
        loc: {
          start: {
            line: 464,
            column: 60
          },
          end: {
            line: 473,
            column: 9
          }
        },
        line: 464
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 478,
            column: 4
          },
          end: {
            line: 478,
            column: 5
          }
        },
        loc: {
          start: {
            line: 478,
            column: 25
          },
          end: {
            line: 489,
            column: 5
          }
        },
        line: 478
      },
      "50": {
        name: "(anonymous_50)",
        decl: {
          start: {
            line: 479,
            column: 47
          },
          end: {
            line: 479,
            column: 48
          }
        },
        loc: {
          start: {
            line: 479,
            column: 60
          },
          end: {
            line: 488,
            column: 9
          }
        },
        line: 479
      },
      "51": {
        name: "(anonymous_51)",
        decl: {
          start: {
            line: 493,
            column: 4
          },
          end: {
            line: 493,
            column: 5
          }
        },
        loc: {
          start: {
            line: 493,
            column: 40
          },
          end: {
            line: 504,
            column: 5
          }
        },
        line: 493
      },
      "52": {
        name: "(anonymous_52)",
        decl: {
          start: {
            line: 494,
            column: 47
          },
          end: {
            line: 494,
            column: 48
          }
        },
        loc: {
          start: {
            line: 494,
            column: 60
          },
          end: {
            line: 503,
            column: 9
          }
        },
        line: 494
      },
      "53": {
        name: "(anonymous_53)",
        decl: {
          start: {
            line: 508,
            column: 4
          },
          end: {
            line: 508,
            column: 5
          }
        },
        loc: {
          start: {
            line: 508,
            column: 52
          },
          end: {
            line: 519,
            column: 5
          }
        },
        line: 508
      },
      "54": {
        name: "(anonymous_54)",
        decl: {
          start: {
            line: 509,
            column: 47
          },
          end: {
            line: 509,
            column: 48
          }
        },
        loc: {
          start: {
            line: 509,
            column: 60
          },
          end: {
            line: 518,
            column: 9
          }
        },
        line: 509
      },
      "55": {
        name: "(anonymous_55)",
        decl: {
          start: {
            line: 523,
            column: 4
          },
          end: {
            line: 523,
            column: 5
          }
        },
        loc: {
          start: {
            line: 523,
            column: 43
          },
          end: {
            line: 534,
            column: 5
          }
        },
        line: 523
      },
      "56": {
        name: "(anonymous_56)",
        decl: {
          start: {
            line: 524,
            column: 47
          },
          end: {
            line: 524,
            column: 48
          }
        },
        loc: {
          start: {
            line: 524,
            column: 60
          },
          end: {
            line: 533,
            column: 9
          }
        },
        line: 524
      },
      "57": {
        name: "(anonymous_57)",
        decl: {
          start: {
            line: 538,
            column: 4
          },
          end: {
            line: 538,
            column: 5
          }
        },
        loc: {
          start: {
            line: 538,
            column: 27
          },
          end: {
            line: 549,
            column: 5
          }
        },
        line: 538
      },
      "58": {
        name: "(anonymous_58)",
        decl: {
          start: {
            line: 539,
            column: 47
          },
          end: {
            line: 539,
            column: 48
          }
        },
        loc: {
          start: {
            line: 539,
            column: 60
          },
          end: {
            line: 548,
            column: 9
          }
        },
        line: 539
      },
      "59": {
        name: "(anonymous_59)",
        decl: {
          start: {
            line: 553,
            column: 4
          },
          end: {
            line: 553,
            column: 5
          }
        },
        loc: {
          start: {
            line: 553,
            column: 27
          },
          end: {
            line: 605,
            column: 5
          }
        },
        line: 553
      },
      "60": {
        name: "(anonymous_60)",
        decl: {
          start: {
            line: 554,
            column: 47
          },
          end: {
            line: 554,
            column: 48
          }
        },
        loc: {
          start: {
            line: 554,
            column: 60
          },
          end: {
            line: 604,
            column: 9
          }
        },
        line: 554
      },
      "61": {
        name: "(anonymous_61)",
        decl: {
          start: {
            line: 558,
            column: 65
          },
          end: {
            line: 558,
            column: 66
          }
        },
        loc: {
          start: {
            line: 558,
            column: 72
          },
          end: {
            line: 558,
            column: 84
          }
        },
        line: 558
      },
      "62": {
        name: "(anonymous_62)",
        decl: {
          start: {
            line: 609,
            column: 4
          },
          end: {
            line: 609,
            column: 5
          }
        },
        loc: {
          start: {
            line: 609,
            column: 47
          },
          end: {
            line: 617,
            column: 5
          }
        },
        line: 609
      },
      "63": {
        name: "(anonymous_63)",
        decl: {
          start: {
            line: 621,
            column: 4
          },
          end: {
            line: 621,
            column: 5
          }
        },
        loc: {
          start: {
            line: 621,
            column: 40
          },
          end: {
            line: 632,
            column: 5
          }
        },
        line: 621
      },
      "64": {
        name: "(anonymous_64)",
        decl: {
          start: {
            line: 636,
            column: 4
          },
          end: {
            line: 636,
            column: 5
          }
        },
        loc: {
          start: {
            line: 636,
            column: 32
          },
          end: {
            line: 643,
            column: 5
          }
        },
        line: 636
      },
      "65": {
        name: "(anonymous_65)",
        decl: {
          start: {
            line: 647,
            column: 4
          },
          end: {
            line: 647,
            column: 5
          }
        },
        loc: {
          start: {
            line: 647,
            column: 30
          },
          end: {
            line: 678,
            column: 5
          }
        },
        line: 647
      },
      "66": {
        name: "(anonymous_66)",
        decl: {
          start: {
            line: 648,
            column: 47
          },
          end: {
            line: 648,
            column: 48
          }
        },
        loc: {
          start: {
            line: 648,
            column: 60
          },
          end: {
            line: 677,
            column: 9
          }
        },
        line: 648
      },
      "67": {
        name: "(anonymous_67)",
        decl: {
          start: {
            line: 682,
            column: 4
          },
          end: {
            line: 682,
            column: 5
          }
        },
        loc: {
          start: {
            line: 682,
            column: 41
          },
          end: {
            line: 693,
            column: 5
          }
        },
        line: 682
      },
      "68": {
        name: "(anonymous_68)",
        decl: {
          start: {
            line: 683,
            column: 47
          },
          end: {
            line: 683,
            column: 48
          }
        },
        loc: {
          start: {
            line: 683,
            column: 60
          },
          end: {
            line: 692,
            column: 9
          }
        },
        line: 683
      },
      "69": {
        name: "(anonymous_69)",
        decl: {
          start: {
            line: 697,
            column: 4
          },
          end: {
            line: 697,
            column: 5
          }
        },
        loc: {
          start: {
            line: 697,
            column: 29
          },
          end: {
            line: 717,
            column: 5
          }
        },
        line: 697
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 16
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 17
          },
          end: {
            line: 2,
            column: 21
          }
        }, {
          start: {
            line: 2,
            column: 25
          },
          end: {
            line: 2,
            column: 39
          }
        }, {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 35
          },
          end: {
            line: 3,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 56
          },
          end: {
            line: 3,
            column: 61
          }
        }, {
          start: {
            line: 3,
            column: 64
          },
          end: {
            line: 3,
            column: 109
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 17
          }
        }, {
          start: {
            line: 4,
            column: 22
          },
          end: {
            line: 4,
            column: 33
          }
        }],
        line: 4
      },
      "3": {
        loc: {
          start: {
            line: 7,
            column: 32
          },
          end: {
            line: 7,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 7,
            column: 46
          },
          end: {
            line: 7,
            column: 67
          }
        }, {
          start: {
            line: 7,
            column: 70
          },
          end: {
            line: 7,
            column: 115
          }
        }],
        line: 7
      },
      "4": {
        loc: {
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 61
          }
        }, {
          start: {
            line: 8,
            column: 65
          },
          end: {
            line: 8,
            column: 67
          }
        }],
        line: 8
      },
      "5": {
        loc: {
          start: {
            line: 19,
            column: 16
          },
          end: {
            line: 19,
            column: 32
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 19,
            column: 26
          },
          end: {
            line: 19,
            column: 32
          }
        }],
        line: 19
      },
      "6": {
        loc: {
          start: {
            line: 32,
            column: 27
          },
          end: {
            line: 32,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 32,
            column: 52
          },
          end: {
            line: 32,
            column: 65
          }
        }, {
          start: {
            line: 32,
            column: 68
          },
          end: {
            line: 32,
            column: 83
          }
        }],
        line: 32
      },
      "7": {
        loc: {
          start: {
            line: 53,
            column: 27
          },
          end: {
            line: 53,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 53,
            column: 52
          },
          end: {
            line: 53,
            column: 65
          }
        }, {
          start: {
            line: 53,
            column: 68
          },
          end: {
            line: 53,
            column: 83
          }
        }],
        line: 53
      },
      "8": {
        loc: {
          start: {
            line: 70,
            column: 27
          },
          end: {
            line: 70,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 70,
            column: 52
          },
          end: {
            line: 70,
            column: 65
          }
        }, {
          start: {
            line: 70,
            column: 68
          },
          end: {
            line: 70,
            column: 83
          }
        }],
        line: 70
      },
      "9": {
        loc: {
          start: {
            line: 91,
            column: 27
          },
          end: {
            line: 91,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 91,
            column: 52
          },
          end: {
            line: 91,
            column: 65
          }
        }, {
          start: {
            line: 91,
            column: 68
          },
          end: {
            line: 91,
            column: 83
          }
        }],
        line: 91
      },
      "10": {
        loc: {
          start: {
            line: 114,
            column: 16
          },
          end: {
            line: 115,
            column: 32
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 114,
            column: 16
          },
          end: {
            line: 115,
            column: 32
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 114
      },
      "11": {
        loc: {
          start: {
            line: 117,
            column: 16
          },
          end: {
            line: 119,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 117,
            column: 16
          },
          end: {
            line: 119,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 117
      },
      "12": {
        loc: {
          start: {
            line: 137,
            column: 16
          },
          end: {
            line: 139,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 137,
            column: 16
          },
          end: {
            line: 137,
            column: 44
          }
        }, {
          start: {
            line: 138,
            column: 12
          },
          end: {
            line: 138,
            column: 35
          }
        }, {
          start: {
            line: 139,
            column: 12
          },
          end: {
            line: 139,
            column: 36
          }
        }],
        line: 137
      },
      "13": {
        loc: {
          start: {
            line: 145,
            column: 8
          },
          end: {
            line: 147,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 145,
            column: 8
          },
          end: {
            line: 147,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 145
      },
      "14": {
        loc: {
          start: {
            line: 161,
            column: 16
          },
          end: {
            line: 163,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 161,
            column: 16
          },
          end: {
            line: 163,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 161
      },
      "15": {
        loc: {
          start: {
            line: 180,
            column: 16
          },
          end: {
            line: 185,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 180,
            column: 16
          },
          end: {
            line: 185,
            column: 17
          }
        }, {
          start: {
            line: 183,
            column: 21
          },
          end: {
            line: 185,
            column: 17
          }
        }],
        line: 180
      },
      "16": {
        loc: {
          start: {
            line: 180,
            column: 20
          },
          end: {
            line: 180,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 180,
            column: 20
          },
          end: {
            line: 180,
            column: 36
          }
        }, {
          start: {
            line: 180,
            column: 40
          },
          end: {
            line: 180,
            column: 53
          }
        }],
        line: 180
      },
      "17": {
        loc: {
          start: {
            line: 214,
            column: 16
          },
          end: {
            line: 216,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 214,
            column: 16
          },
          end: {
            line: 216,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 214
      },
      "18": {
        loc: {
          start: {
            line: 217,
            column: 16
          },
          end: {
            line: 219,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 217,
            column: 16
          },
          end: {
            line: 219,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 217
      },
      "19": {
        loc: {
          start: {
            line: 220,
            column: 16
          },
          end: {
            line: 222,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 220,
            column: 16
          },
          end: {
            line: 222,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 220
      },
      "20": {
        loc: {
          start: {
            line: 225,
            column: 16
          },
          end: {
            line: 230,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 225,
            column: 16
          },
          end: {
            line: 230,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 225
      },
      "21": {
        loc: {
          start: {
            line: 227,
            column: 20
          },
          end: {
            line: 229,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 227,
            column: 20
          },
          end: {
            line: 229,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 227
      },
      "22": {
        loc: {
          start: {
            line: 233,
            column: 16
          },
          end: {
            line: 238,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 233,
            column: 16
          },
          end: {
            line: 238,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 233
      },
      "23": {
        loc: {
          start: {
            line: 248,
            column: 16
          },
          end: {
            line: 253,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 248,
            column: 16
          },
          end: {
            line: 253,
            column: 17
          }
        }, {
          start: {
            line: 251,
            column: 21
          },
          end: {
            line: 253,
            column: 17
          }
        }],
        line: 248
      },
      "24": {
        loc: {
          start: {
            line: 248,
            column: 20
          },
          end: {
            line: 248,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 248,
            column: 20
          },
          end: {
            line: 248,
            column: 36
          }
        }, {
          start: {
            line: 248,
            column: 40
          },
          end: {
            line: 248,
            column: 53
          }
        }],
        line: 248
      },
      "25": {
        loc: {
          start: {
            line: 268,
            column: 23
          },
          end: {
            line: 268,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 268,
            column: 59
          },
          end: {
            line: 268,
            column: 72
          }
        }, {
          start: {
            line: 268,
            column: 75
          },
          end: {
            line: 268,
            column: 77
          }
        }],
        line: 268
      },
      "26": {
        loc: {
          start: {
            line: 268,
            column: 23
          },
          end: {
            line: 268,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 268,
            column: 23
          },
          end: {
            line: 268,
            column: 39
          }
        }, {
          start: {
            line: 268,
            column: 43
          },
          end: {
            line: 268,
            column: 56
          }
        }],
        line: 268
      },
      "27": {
        loc: {
          start: {
            line: 283,
            column: 16
          },
          end: {
            line: 285,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 283,
            column: 16
          },
          end: {
            line: 285,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 283
      },
      "28": {
        loc: {
          start: {
            line: 283,
            column: 20
          },
          end: {
            line: 283,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 283,
            column: 20
          },
          end: {
            line: 283,
            column: 36
          }
        }, {
          start: {
            line: 283,
            column: 40
          },
          end: {
            line: 283,
            column: 53
          }
        }],
        line: 283
      },
      "29": {
        loc: {
          start: {
            line: 307,
            column: 16
          },
          end: {
            line: 316,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 307,
            column: 16
          },
          end: {
            line: 316,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 307
      },
      "30": {
        loc: {
          start: {
            line: 309,
            column: 20
          },
          end: {
            line: 314,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 309,
            column: 20
          },
          end: {
            line: 314,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 309
      },
      "31": {
        loc: {
          start: {
            line: 311,
            column: 24
          },
          end: {
            line: 313,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 311,
            column: 24
          },
          end: {
            line: 313,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 311
      },
      "32": {
        loc: {
          start: {
            line: 333,
            column: 70
          },
          end: {
            line: 333,
            column: 107
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 333,
            column: 70
          },
          end: {
            line: 333,
            column: 91
          }
        }, {
          start: {
            line: 333,
            column: 95
          },
          end: {
            line: 333,
            column: 107
          }
        }],
        line: 333
      },
      "33": {
        loc: {
          start: {
            line: 334,
            column: 16
          },
          end: {
            line: 337,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 334,
            column: 16
          },
          end: {
            line: 337,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 334
      },
      "34": {
        loc: {
          start: {
            line: 344,
            column: 26
          },
          end: {
            line: 344,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 344,
            column: 26
          },
          end: {
            line: 344,
            column: 43
          }
        }, {
          start: {
            line: 344,
            column: 47
          },
          end: {
            line: 344,
            column: 49
          }
        }],
        line: 344
      },
      "35": {
        loc: {
          start: {
            line: 345,
            column: 30
          },
          end: {
            line: 347,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 345,
            column: 31
          },
          end: {
            line: 347,
            column: 47
          }
        }, {
          start: {
            line: 347,
            column: 52
          },
          end: {
            line: 347,
            column: 58
          }
        }],
        line: 345
      },
      "36": {
        loc: {
          start: {
            line: 345,
            column: 31
          },
          end: {
            line: 347,
            column: 47
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 346,
            column: 26
          },
          end: {
            line: 346,
            column: 35
          }
        }, {
          start: {
            line: 347,
            column: 26
          },
          end: {
            line: 347,
            column: 47
          }
        }],
        line: 345
      },
      "37": {
        loc: {
          start: {
            line: 349,
            column: 31
          },
          end: {
            line: 349,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 349,
            column: 31
          },
          end: {
            line: 349,
            column: 52
          }
        }, {
          start: {
            line: 349,
            column: 56
          },
          end: {
            line: 349,
            column: 65
          }
        }],
        line: 349
      },
      "38": {
        loc: {
          start: {
            line: 367,
            column: 16
          },
          end: {
            line: 383,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 367,
            column: 16
          },
          end: {
            line: 383,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 367
      },
      "39": {
        loc: {
          start: {
            line: 374,
            column: 32
          },
          end: {
            line: 376,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 374,
            column: 32
          },
          end: {
            line: 376,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 374
      },
      "40": {
        loc: {
          start: {
            line: 406,
            column: 75
          },
          end: {
            line: 406,
            column: 127
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 406,
            column: 75
          },
          end: {
            line: 406,
            column: 111
          }
        }, {
          start: {
            line: 406,
            column: 115
          },
          end: {
            line: 406,
            column: 127
          }
        }],
        line: 406
      },
      "41": {
        loc: {
          start: {
            line: 407,
            column: 16
          },
          end: {
            line: 410,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 407,
            column: 16
          },
          end: {
            line: 410,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 407
      },
      "42": {
        loc: {
          start: {
            line: 417,
            column: 26
          },
          end: {
            line: 417,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 417,
            column: 26
          },
          end: {
            line: 417,
            column: 38
          }
        }, {
          start: {
            line: 417,
            column: 42
          },
          end: {
            line: 417,
            column: 44
          }
        }],
        line: 417
      },
      "43": {
        loc: {
          start: {
            line: 420,
            column: 31
          },
          end: {
            line: 420,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 420,
            column: 31
          },
          end: {
            line: 420,
            column: 47
          }
        }, {
          start: {
            line: 420,
            column: 51
          },
          end: {
            line: 420,
            column: 60
          }
        }],
        line: 420
      },
      "44": {
        loc: {
          start: {
            line: 433,
            column: 28
          },
          end: {
            line: 438,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 433,
            column: 28
          },
          end: {
            line: 438,
            column: 29
          }
        }, {
          start: {
            line: 436,
            column: 33
          },
          end: {
            line: 438,
            column: 29
          }
        }],
        line: 433
      },
      "45": {
        loc: {
          start: {
            line: 467,
            column: 23
          },
          end: {
            line: 467,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 467,
            column: 59
          },
          end: {
            line: 467,
            column: 72
          }
        }, {
          start: {
            line: 467,
            column: 75
          },
          end: {
            line: 467,
            column: 79
          }
        }],
        line: 467
      },
      "46": {
        loc: {
          start: {
            line: 467,
            column: 23
          },
          end: {
            line: 467,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 467,
            column: 23
          },
          end: {
            line: 467,
            column: 39
          }
        }, {
          start: {
            line: 467,
            column: 43
          },
          end: {
            line: 467,
            column: 56
          }
        }],
        line: 467
      },
      "47": {
        loc: {
          start: {
            line: 482,
            column: 23
          },
          end: {
            line: 482,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 482,
            column: 59
          },
          end: {
            line: 482,
            column: 72
          }
        }, {
          start: {
            line: 482,
            column: 75
          },
          end: {
            line: 482,
            column: 77
          }
        }],
        line: 482
      },
      "48": {
        loc: {
          start: {
            line: 482,
            column: 23
          },
          end: {
            line: 482,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 482,
            column: 23
          },
          end: {
            line: 482,
            column: 39
          }
        }, {
          start: {
            line: 482,
            column: 43
          },
          end: {
            line: 482,
            column: 56
          }
        }],
        line: 482
      },
      "49": {
        loc: {
          start: {
            line: 497,
            column: 23
          },
          end: {
            line: 497,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 497,
            column: 59
          },
          end: {
            line: 497,
            column: 72
          }
        }, {
          start: {
            line: 497,
            column: 75
          },
          end: {
            line: 497,
            column: 79
          }
        }],
        line: 497
      },
      "50": {
        loc: {
          start: {
            line: 497,
            column: 23
          },
          end: {
            line: 497,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 497,
            column: 23
          },
          end: {
            line: 497,
            column: 39
          }
        }, {
          start: {
            line: 497,
            column: 43
          },
          end: {
            line: 497,
            column: 56
          }
        }],
        line: 497
      },
      "51": {
        loc: {
          start: {
            line: 512,
            column: 23
          },
          end: {
            line: 512,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 512,
            column: 59
          },
          end: {
            line: 512,
            column: 72
          }
        }, {
          start: {
            line: 512,
            column: 75
          },
          end: {
            line: 512,
            column: 79
          }
        }],
        line: 512
      },
      "52": {
        loc: {
          start: {
            line: 512,
            column: 23
          },
          end: {
            line: 512,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 512,
            column: 23
          },
          end: {
            line: 512,
            column: 39
          }
        }, {
          start: {
            line: 512,
            column: 43
          },
          end: {
            line: 512,
            column: 56
          }
        }],
        line: 512
      },
      "53": {
        loc: {
          start: {
            line: 542,
            column: 23
          },
          end: {
            line: 542,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 542,
            column: 59
          },
          end: {
            line: 542,
            column: 72
          }
        }, {
          start: {
            line: 542,
            column: 75
          },
          end: {
            line: 542,
            column: 79
          }
        }],
        line: 542
      },
      "54": {
        loc: {
          start: {
            line: 542,
            column: 23
          },
          end: {
            line: 542,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 542,
            column: 23
          },
          end: {
            line: 542,
            column: 39
          }
        }, {
          start: {
            line: 542,
            column: 43
          },
          end: {
            line: 542,
            column: 56
          }
        }],
        line: 542
      },
      "55": {
        loc: {
          start: {
            line: 559,
            column: 16
          },
          end: {
            line: 562,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 559,
            column: 16
          },
          end: {
            line: 562,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 559
      },
      "56": {
        loc: {
          start: {
            line: 584,
            column: 24
          },
          end: {
            line: 591,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 584,
            column: 24
          },
          end: {
            line: 591,
            column: 25
          }
        }, {
          start: {
            line: 588,
            column: 29
          },
          end: {
            line: 591,
            column: 25
          }
        }],
        line: 584
      },
      "57": {
        loc: {
          start: {
            line: 609,
            column: 33
          },
          end: {
            line: 609,
            column: 45
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 609,
            column: 43
          },
          end: {
            line: 609,
            column: 45
          }
        }],
        line: 609
      },
      "58": {
        loc: {
          start: {
            line: 610,
            column: 8
          },
          end: {
            line: 613,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 610,
            column: 8
          },
          end: {
            line: 613,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 610
      },
      "59": {
        loc: {
          start: {
            line: 614,
            column: 8
          },
          end: {
            line: 616,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 614,
            column: 8
          },
          end: {
            line: 616,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 614
      },
      "60": {
        loc: {
          start: {
            line: 651,
            column: 16
          },
          end: {
            line: 653,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 651,
            column: 16
          },
          end: {
            line: 653,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 651
      },
      "61": {
        loc: {
          start: {
            line: 651,
            column: 20
          },
          end: {
            line: 651,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 651,
            column: 20
          },
          end: {
            line: 651,
            column: 36
          }
        }, {
          start: {
            line: 651,
            column: 40
          },
          end: {
            line: 651,
            column: 53
          }
        }],
        line: 651
      },
      "62": {
        loc: {
          start: {
            line: 698,
            column: 8
          },
          end: {
            line: 699,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 698,
            column: 8
          },
          end: {
            line: 699,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 698
      },
      "63": {
        loc: {
          start: {
            line: 710,
            column: 8
          },
          end: {
            line: 716,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 710,
            column: 8
          },
          end: {
            line: 716,
            column: 9
          }
        }, {
          start: {
            line: 713,
            column: 13
          },
          end: {
            line: 716,
            column: 9
          }
        }],
        line: 710
      },
      "64": {
        loc: {
          start: {
            line: 711,
            column: 19
          },
          end: {
            line: 711,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 711,
            column: 19
          },
          end: {
            line: 711,
            column: 43
          }
        }, {
          start: {
            line: 711,
            column: 47
          },
          end: {
            line: 711,
            column: 69
          }
        }],
        line: 711
      },
      "65": {
        loc: {
          start: {
            line: 715,
            column: 19
          },
          end: {
            line: 715,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 715,
            column: 19
          },
          end: {
            line: 715,
            column: 43
          }
        }, {
          start: {
            line: 715,
            column: 47
          },
          end: {
            line: 715,
            column: 69
          }
        }],
        line: 715
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0,
      "259": 0,
      "260": 0,
      "261": 0,
      "262": 0,
      "263": 0,
      "264": 0,
      "265": 0,
      "266": 0,
      "267": 0,
      "268": 0,
      "269": 0,
      "270": 0,
      "271": 0,
      "272": 0,
      "273": 0,
      "274": 0,
      "275": 0,
      "276": 0,
      "277": 0,
      "278": 0,
      "279": 0,
      "280": 0,
      "281": 0,
      "282": 0,
      "283": 0,
      "284": 0,
      "285": 0,
      "286": 0,
      "287": 0,
      "288": 0,
      "289": 0,
      "290": 0,
      "291": 0,
      "292": 0,
      "293": 0,
      "294": 0,
      "295": 0,
      "296": 0,
      "297": 0,
      "298": 0,
      "299": 0,
      "300": 0,
      "301": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\services\\pushNotificationService.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\services\\pushNotificationService.ts"],
      sourcesContent: ["import { Expo, ExpoPushMessage } from 'expo-server-sdk';\r\nimport { logger } from '../services/loggerService';\r\n\r\n// Inicializar Expo SDK\r\nconst expo = new Expo();\r\n\r\n// Tipos para notificaciones push\r\nexport interface PushSubscription {\r\n  id: string;\r\n  endpoint: string;\r\n  keys: {\r\n    p256dh: string;\r\n    auth: string;\r\n  };\r\n  userId: string;\r\n  isActive: boolean;\r\n  createdAt: Date;\r\n  updatedAt: Date;\r\n}\r\n\r\nexport interface PushNotification {\r\n  id: string;\r\n  userId: string;\r\n  title: string;\r\n  body: string;\r\n  icon?: string;\r\n  badge?: string;\r\n  tag?: string;\r\n  data?: Record<string, any>;\r\n  requireInteraction?: boolean;\r\n  priority?: 'high' | 'normal' | 'low';\r\n  timestamp: Date;\r\n  read: boolean;\r\n  category: string;\r\n  type: string;\r\n}\r\n\r\nexport interface NotificationTemplate {\r\n  id: string;\r\n  name: string;\r\n  title: string;\r\n  body: string;\r\n  icon?: string;\r\n  badge?: string;\r\n  tag?: string;\r\n  data?: Record<string, any>;\r\n  category: string;\r\n  type: string;\r\n  isActive: boolean;\r\n  createdAt: Date;\r\n  updatedAt: Date;\r\n}\r\n\r\nexport interface BulkNotificationRequest {\r\n  userIds: string[];\r\n  templateId?: string;\r\n  title: string;\r\n  body: string;\r\n  data?: Record<string, any>;\r\n  category?: string;\r\n  type?: string;\r\n}\r\n\r\nexport interface NotificationStats {\r\n  totalSent: number;\r\n  totalDelivered: number;\r\n  totalFailed: number;\r\n  totalRead: number;\r\n  averageDeliveryTime: number;\r\n  successRate: number;\r\n}\r\n\r\nexport interface NotificationSettings {\r\n  enabled: boolean;\r\n  categories: Record<string, boolean>;\r\n  quietHours: {\r\n    enabled: boolean;\r\n    startTime: string;\r\n    endTime: string;\r\n  };\r\n  sound: boolean;\r\n  vibration: boolean;\r\n}\r\n\r\nexport interface PushNotificationApiResponse<T = any> {\r\n  success: boolean;\r\n  data?: T;\r\n  error?: string;\r\n  message?: string;\r\n}\r\n\r\nexport interface PushNotificationError {\r\n  code: string;\r\n  message: string;\r\n  details?: any;\r\n}\r\n\r\nexport interface NotificationPermission {\r\n  granted: boolean;\r\n  denied: boolean;\r\n  default: boolean;\r\n}\r\n\r\n// Servicio API b\xE1sico\r\nclass ApiService {\r\n  private baseUrl: string;\r\n\r\n  constructor(baseUrl: string = '/api') {\r\n    this.baseUrl = baseUrl;\r\n  }\r\n\r\n  async get<T>(endpoint: string): Promise<PushNotificationApiResponse<T>> {\r\n    try {\r\n      const response = await fetch(`${this.baseUrl}${endpoint}`);\r\n      const data = await response.json();\r\n      return data;\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error instanceof Error ? error.message : 'Unknown error',\r\n      };\r\n    }\r\n  }\r\n\r\n  async post<T>(\r\n    endpoint: string,\r\n    body: any\r\n  ): Promise<PushNotificationApiResponse<T>> {\r\n    try {\r\n      const response = await fetch(`${this.baseUrl}${endpoint}`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(body),\r\n      });\r\n      const data = await response.json();\r\n      return data;\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error instanceof Error ? error.message : 'Unknown error',\r\n      };\r\n    }\r\n  }\r\n\r\n  async delete<T>(endpoint: string): Promise<PushNotificationApiResponse<T>> {\r\n    try {\r\n      const response = await fetch(`${this.baseUrl}${endpoint}`, {\r\n        method: 'DELETE',\r\n      });\r\n      const data = await response.json();\r\n      return data;\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error instanceof Error ? error.message : 'Unknown error',\r\n      };\r\n    }\r\n  }\r\n\r\n  async put<T>(\r\n    endpoint: string,\r\n    body: any\r\n  ): Promise<PushNotificationApiResponse<T>> {\r\n    try {\r\n      const response = await fetch(`${this.baseUrl}${endpoint}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(body),\r\n      });\r\n      const data = await response.json();\r\n      return data;\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error instanceof Error ? error.message : 'Unknown error',\r\n      };\r\n    }\r\n  }\r\n}\r\n\r\nconst apiService = new ApiService();\r\n\r\n/**\r\n * Servicio completo para manejo de notificaciones push\r\n * Integra con el backend y maneja la suscripci\xF3n del dispositivo\r\n */\r\nexport class PushNotificationService {\r\n  private vapidPublicKey: string | null = null;\r\n  private registration: ServiceWorkerRegistration | null = null;\r\n  private isInitialized = false;\r\n\r\n  /**\r\n   * Inicializar el servicio de notificaciones push\r\n   */\r\n  async initialize(): Promise<boolean> {\r\n    try {\r\n      if (this.isInitialized) return true;\r\n\r\n      // Verificar soporte\r\n      if (!this.isSupported()) {\r\n        throw new Error(\r\n          'Las notificaciones push no est\xE1n soportadas en este dispositivo'\r\n        );\r\n      }\r\n\r\n      // Obtener VAPID key del backend\r\n      await this.loadVapidKey();\r\n\r\n      // Registrar Service Worker\r\n      await this.registerServiceWorker();\r\n\r\n      this.isInitialized = true;\r\n      return true;\r\n    } catch (error) {\r\n      logger.error('Error inicializando PushNotificationService:', error as Error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Verificar si las notificaciones push est\xE1n soportadas\r\n   */\r\n  isSupported(): boolean {\r\n    return (\r\n      'serviceWorker' in navigator &&\r\n      'PushManager' in window &&\r\n      'Notification' in window\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Obtener el estado actual del permiso\r\n   */\r\n  getPermissionStatus(): NotificationPermission {\r\n    if (!('Notification' in window)) {\r\n      return { granted: false, denied: false, default: true };\r\n    }\r\n\r\n    const permission = Notification.permission;\r\n    return {\r\n      granted: permission === 'granted',\r\n      denied: permission === 'denied',\r\n      default: permission === 'default',\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Solicitar permiso para notificaciones\r\n   */\r\n  async requestPermission(): Promise<boolean> {\r\n    try {\r\n      if (!this.isSupported()) {\r\n        throw new Error('Las notificaciones push no est\xE1n soportadas');\r\n      }\r\n\r\n      const permission = await Notification.requestPermission();\r\n      return permission === 'granted';\r\n    } catch (error) {\r\n      logger.error('Error solicitando permiso:', error as Error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Cargar VAPID key del backend\r\n   */\r\n  private async loadVapidKey(): Promise<void> {\r\n    try {\r\n      const response = await apiService.get<{ vapidPublicKey: string }>(\r\n        '/push-notifications/vapid-key'\r\n      );\r\n      if (response.success && response.data) {\r\n        this.vapidPublicKey = response.data.vapidPublicKey;\r\n      } else {\r\n        throw new Error('No se pudo obtener la VAPID key');\r\n      }\r\n    } catch (error) {\r\n      logger.error('Error cargando VAPID key:', error as Error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Registrar Service Worker\r\n   */\r\n  private async registerServiceWorker(): Promise<void> {\r\n    try {\r\n      this.registration = await navigator.serviceWorker.register('/sw.js');\r\n      logger.info('Service Worker registrado:', { metadata: { id: this.registration  } });\r\n    } catch (error) {\r\n      logger.error('Error registrando Service Worker:', error as Error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Suscribirse a notificaciones push\r\n   */\r\n  async subscribeToPushNotifications(): Promise<PushSubscription | null> {\r\n    try {\r\n      if (!this.isInitialized) {\r\n        await this.initialize();\r\n      }\r\n\r\n      if (!this.vapidPublicKey) {\r\n        throw new Error('VAPID key no disponible');\r\n      }\r\n\r\n      if (!this.registration) {\r\n        throw new Error('Service Worker no registrado');\r\n      }\r\n\r\n      // Verificar permiso\r\n      const permission = this.getPermissionStatus();\r\n      if (!permission.granted) {\r\n        const granted = await this.requestPermission();\r\n        if (!granted) {\r\n          throw new Error('Permiso de notificaciones denegado');\r\n        }\r\n      }\r\n\r\n      // Obtener suscripci\xF3n existente o crear nueva\r\n      let subscription = await this.registration.pushManager.getSubscription();\r\n\r\n      if (!subscription) {\r\n        subscription = await this.registration.pushManager.subscribe({\r\n          userVisibleOnly: true,\r\n          applicationServerKey: this.urlBase64ToUint8Array(this.vapidPublicKey),\r\n        });\r\n      }\r\n\r\n      // Guardar suscripci\xF3n en el backend\r\n      const subscriptionData = {\r\n        endpoint: subscription.endpoint,\r\n        keys: {\r\n          p256dh: this.arrayBufferToBase64(subscription.getKey('p256dh')!),\r\n          auth: this.arrayBufferToBase64(subscription.getKey('auth')!),\r\n        },\r\n      };\r\n\r\n      const response = await apiService.post<PushSubscription>(\r\n        '/push-notifications/subscription',\r\n        subscriptionData\r\n      );\r\n\r\n      if (response.success && response.data) {\r\n        return response.data;\r\n      } else {\r\n        throw new Error('Error guardando suscripci\xF3n en el backend');\r\n      }\r\n    } catch (error) {\r\n      logger.error('Error suscribi\xE9ndose a notificaciones push:', error as Error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Obtener suscripciones del usuario\r\n   */\r\n  async getUserSubscriptions(): Promise<PushSubscription[]> {\r\n    try {\r\n      const response = await apiService.get<PushSubscription[]>(\r\n        '/push-notifications/subscriptions'\r\n      );\r\n      return response.success && response.data ? response.data : [];\r\n    } catch (error) {\r\n      logger.error('Error obteniendo suscripciones:', error as Error);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Guardar suscripci\xF3n push\r\n   */\r\n  async saveSubscription(\r\n    userId: string,\r\n    subscriptionData: {\r\n      endpoint: string;\r\n      keys: { p256dh: string; auth: string };\r\n      isActive: boolean;\r\n    }\r\n  ): Promise<PushSubscription> {\r\n    try {\r\n      const response = await apiService.post<PushSubscription>(\r\n        '/push-notifications/subscriptions',\r\n        {\r\n          userId,\r\n          ...subscriptionData,\r\n        }\r\n      );\r\n      if (response.success && response.data) {\r\n        return response.data;\r\n      }\r\n      throw new Error('Error guardando suscripci\xF3n');\r\n    } catch (error) {\r\n      logger.error('Error guardando suscripci\xF3n:', error as Error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Obtener VAPID public key\r\n   */\r\n  getVapidPublicKey(): string | null {\r\n    return this.vapidPublicKey;\r\n  }\r\n\r\n  /**\r\n   * Eliminar suscripci\xF3n\r\n   */\r\n  async deleteSubscription(subscriptionId: string): Promise<boolean> {\r\n    try {\r\n      const response = await apiService.delete(\r\n        `/push-notifications/subscription/${subscriptionId}`\r\n      );\r\n\r\n      if (response.success) {\r\n        // Tambi\xE9n eliminar suscripci\xF3n local si existe\r\n        if (this.registration) {\r\n          const subscription =\r\n            await this.registration.pushManager.getSubscription();\r\n          if (subscription) {\r\n            await subscription.unsubscribe();\r\n          }\r\n        }\r\n        return true;\r\n      }\r\n      return false;\r\n    } catch (error) {\r\n      logger.error('Error eliminando suscripci\xF3n:', error as Error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Enviar notificaci\xF3n a usuario espec\xEDfico usando Expo\r\n   */\r\n  async sendNotificationToUser(\r\n    userId: string,\r\n    notification: Omit<PushNotification, 'id' | 'userId' | 'timestamp' | 'read'>\r\n  ): Promise<boolean> {\r\n    try {\r\n      // Obtener suscripciones del usuario\r\n      const subscriptions = await this.getUserSubscriptions();\r\n      const userSubscriptions = subscriptions.filter(\r\n        sub => sub.userId === userId && sub.isActive\r\n      );\r\n\r\n      if (userSubscriptions.length === 0) {\r\n        console.log(`No hay suscripciones activas para el usuario ${userId}`);\r\n        return false;\r\n      }\r\n\r\n      // Crear mensajes para Expo\r\n      const messages: ExpoPushMessage[] = userSubscriptions.map(\r\n        subscription => ({\r\n          to: subscription.endpoint,\r\n          sound: 'default',\r\n          title: notification.title,\r\n          body: notification.body,\r\n          data: notification.data || {},\r\n          priority:\r\n            (notification.priority === 'low'\r\n              ? 'default'\r\n              : notification.priority) || 'high',\r\n          badge: 1,\r\n          channelId: notification.category || 'default',\r\n        })\r\n      );\r\n\r\n      // Enviar notificaciones usando Expo\r\n      const chunks = expo.chunkPushNotifications(messages);\r\n      const tickets = [];\r\n\r\n      for (const chunk of chunks) {\r\n        try {\r\n          const ticketChunk = await expo.sendPushNotificationsAsync(chunk);\r\n          tickets.push(...ticketChunk);\r\n        } catch (error) {\r\n          logger.error('Error enviando chunk de notificaciones:', error as Error);\r\n        }\r\n      }\r\n\r\n      // Verificar tickets para errores\r\n      const receiptIds = tickets\r\n        .filter(ticket => ticket.status === 'error')\r\n        .map(ticket => (ticket as any).id);\r\n\r\n      if (receiptIds.length > 0) {\r\n        const receiptIdChunks =\r\n          expo.chunkPushNotificationReceiptIds(receiptIds);\r\n        for (const chunk of receiptIdChunks) {\r\n          try {\r\n            const receipts = await expo.getPushNotificationReceiptsAsync(chunk);\r\n            for (const receiptId in receipts) {\r\n              const receipt = receipts[receiptId];\r\n              if (receipt.status === 'error') {\r\n                console.error(\r\n                  `Error en notificaci\xF3n ${receiptId}:`,\r\n                  receipt.message\r\n                );\r\n              }\r\n            }\r\n          } catch (error) {\r\n            logger.error('Error verificando receipts:', error as Error);\r\n          }\r\n        }\r\n      }\r\n\r\n      logger.info('Notificaci\xF3n enviada exitosamente', { metadata: {\r\n        userId,\r\n        title: notification.title,\r\n        ticketsSent: tickets.length,\r\n        errors: receiptIds.length,\r\n      } });\r\n\r\n      return true;\r\n    } catch (error) {\r\n      logger.error('Error enviando notificaci\xF3n', error as Error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Enviar notificaci\xF3n masiva usando Expo\r\n   */\r\n  async sendBulkNotification(\r\n    request: BulkNotificationRequest\r\n  ): Promise<{ success: number; failed: number } | null> {\r\n    try {\r\n      // Obtener todas las suscripciones activas\r\n      const allSubscriptions = await this.getUserSubscriptions();\r\n      const targetSubscriptions = allSubscriptions.filter(\r\n        sub => request.userIds.includes(sub.userId) && sub.isActive\r\n      );\r\n\r\n      if (targetSubscriptions.length === 0) {\r\n        console.log(\r\n          'No hay suscripciones activas para los usuarios especificados'\r\n        );\r\n        return { success: 0, failed: request.userIds.length };\r\n      }\r\n\r\n      // Crear mensajes para Expo\r\n      const messages: ExpoPushMessage[] = targetSubscriptions.map(\r\n        subscription => ({\r\n          to: subscription.endpoint,\r\n          sound: 'default',\r\n          title: request.title,\r\n          body: request.body,\r\n          data: request.data || {},\r\n          priority: 'high',\r\n          badge: 1,\r\n          channelId: request.category || 'default',\r\n        })\r\n      );\r\n\r\n      // Enviar notificaciones usando Expo\r\n      const chunks = expo.chunkPushNotifications(messages);\r\n      const tickets = [];\r\n      let successCount = 0;\r\n      let failedCount = 0;\r\n\r\n      for (const chunk of chunks) {\r\n        try {\r\n          const ticketChunk = await expo.sendPushNotificationsAsync(chunk);\r\n          tickets.push(...ticketChunk);\r\n\r\n          // Contar \xE9xitos y fallos\r\n          ticketChunk.forEach(ticket => {\r\n            if (ticket.status === 'ok') {\r\n              successCount++;\r\n            } else {\r\n              failedCount++;\r\n            }\r\n          });\r\n        } catch (error) {\r\n          logger.error('Error enviando chunk de notificaciones masivas:', error as Error);\r\n          failedCount += chunk.length;\r\n        }\r\n      }\r\n\r\n      logger.info('Notificaci\xF3n masiva enviada', { metadata: {\r\n        totalUsers: request.userIds.length,\r\n        successCount,\r\n        failedCount,\r\n        ticketsSent: tickets.length,\r\n      } });\r\n\r\n      return { success: successCount, failed: failedCount };\r\n    } catch (error) {\r\n      logger.error('Error enviando notificaci\xF3n masiva:', error as Error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Crear template de notificaci\xF3n\r\n   */\r\n  async createNotificationTemplate(\r\n    template: Omit<NotificationTemplate, 'id' | 'createdAt' | 'updatedAt'>\r\n  ): Promise<NotificationTemplate | null> {\r\n    try {\r\n      const response = await apiService.post<NotificationTemplate>(\r\n        '/push-notifications/templates',\r\n        template\r\n      );\r\n      return response.success && response.data ? response.data : null;\r\n    } catch (error) {\r\n      logger.error('Error creando template:', error as Error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Obtener templates activos\r\n   */\r\n  async getActiveTemplates(): Promise<NotificationTemplate[]> {\r\n    try {\r\n      const response = await apiService.get<NotificationTemplate[]>(\r\n        '/push-notifications/templates'\r\n      );\r\n      return response.success && response.data ? response.data : [];\r\n    } catch (error) {\r\n      logger.error('Error obteniendo templates:', error as Error);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Obtener template espec\xEDfico\r\n   */\r\n  async getNotificationTemplate(\r\n    templateId: string\r\n  ): Promise<NotificationTemplate | null> {\r\n    try {\r\n      const response = await apiService.get<NotificationTemplate>(\r\n        `/push-notifications/templates/${templateId}`\r\n      );\r\n      return response.success && response.data ? response.data : null;\r\n    } catch (error) {\r\n      logger.error('Error obteniendo template:', error as Error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Actualizar template\r\n   */\r\n  async updateNotificationTemplate(\r\n    templateId: string,\r\n    updates: Partial<NotificationTemplate>\r\n  ): Promise<NotificationTemplate | null> {\r\n    try {\r\n      const response = await apiService.put<NotificationTemplate>(\r\n        `/push-notifications/templates/${templateId}`,\r\n        updates\r\n      );\r\n      return response.success && response.data ? response.data : null;\r\n    } catch (error) {\r\n      logger.error('Error actualizando template:', error as Error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Eliminar template\r\n   */\r\n  async deleteNotificationTemplate(templateId: string): Promise<boolean> {\r\n    try {\r\n      const response = await apiService.delete(\r\n        `/push-notifications/templates/${templateId}`\r\n      );\r\n      return response.success;\r\n    } catch (error) {\r\n      logger.error('Error eliminando template:', error as Error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Obtener estad\xEDsticas de notificaciones\r\n   */\r\n  async getNotificationStats(): Promise<NotificationStats | null> {\r\n    try {\r\n      const response = await apiService.get<NotificationStats>(\r\n        '/push-notifications/stats'\r\n      );\r\n      return response.success && response.data ? response.data : null;\r\n    } catch (error) {\r\n      logger.error('Error obteniendo estad\xEDsticas:', error as Error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Enviar notificaci\xF3n de prueba usando Expo\r\n   */\r\n  async testPushNotification(): Promise<boolean> {\r\n    try {\r\n      // Obtener todas las suscripciones activas\r\n      const subscriptions = await this.getUserSubscriptions();\r\n      const activeSubscriptions = subscriptions.filter(sub => sub.isActive);\r\n\r\n      if (activeSubscriptions.length === 0) {\r\n        console.log(\r\n          'No hay suscripciones activas para enviar notificaci\xF3n de prueba'\r\n        );\r\n        return false;\r\n      }\r\n\r\n      // Crear mensaje de prueba\r\n      const testMessage: ExpoPushMessage = {\r\n        to: activeSubscriptions[0].endpoint, // Enviar solo a la primera suscripci\xF3n\r\n        sound: 'default',\r\n        title: '\uD83D\uDD14 Notificaci\xF3n de Prueba',\r\n        body: 'Esta es una notificaci\xF3n de prueba del sistema MussikOn',\r\n        data: {\r\n          type: 'test',\r\n          timestamp: new Date().toISOString(),\r\n        },\r\n        priority: 'high',\r\n        badge: 1,\r\n        channelId: 'test',\r\n      };\r\n\r\n      // Enviar notificaci\xF3n de prueba\r\n      const chunks = expo.chunkPushNotifications([testMessage]);\r\n\r\n      for (const chunk of chunks) {\r\n        try {\r\n          const tickets = await expo.sendPushNotificationsAsync(chunk);\r\n\r\n          // Verificar resultado\r\n          const ticket = tickets[0];\r\n          if (ticket.status === 'ok') {\r\n            logger.info('\u2705 Notificaci\xF3n de prueba enviada exitosamente');\r\n            return true;\r\n          } else {\r\n            logger.error('\u274C Error enviando notificaci\xF3n de prueba:', new Error(ticket.message));\r\n            return false;\r\n          }\r\n        } catch (error) {\r\n          logger.error('\u274C Error enviando notificaci\xF3n de prueba:', error as Error);\r\n          return false;\r\n        }\r\n      }\r\n\r\n      return false;\r\n    } catch (error) {\r\n      logger.error('Error enviando notificaci\xF3n de prueba:', error as Error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Mostrar notificaci\xF3n local (para testing)\r\n   */\r\n  showLocalNotification(\r\n    title: string,\r\n    options: NotificationOptions = {}\r\n  ): void {\r\n    if (!('Notification' in window)) {\r\n      console.warn('Las notificaciones no est\xE1n soportadas');\r\n      return;\r\n    }\r\n\r\n    if (Notification.permission === 'granted') {\r\n      new Notification(title, {\r\n        icon: '/icon-192x192.png',\r\n        badge: '/badge-72x72.png',\r\n        tag: 'mussikon-notification',\r\n        ...options,\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Convertir VAPID key de base64 a Uint8Array\r\n   */\r\n  private urlBase64ToUint8Array(base64String: string): Uint8Array {\r\n    const padding = '='.repeat((4 - (base64String.length % 4)) % 4);\r\n    const base64 = (base64String + padding)\r\n      .replace(/-/g, '+')\r\n      .replace(/_/g, '/');\r\n\r\n    const rawData = window.atob(base64);\r\n    const outputArray = new Uint8Array(rawData.length);\r\n\r\n    for (let i = 0; i < rawData.length; ++i) {\r\n      outputArray[i] = rawData.charCodeAt(i);\r\n    }\r\n    return outputArray;\r\n  }\r\n\r\n  /**\r\n   * Convertir ArrayBuffer a base64\r\n   */\r\n  private arrayBufferToBase64(buffer: ArrayBuffer): string {\r\n    const bytes = new Uint8Array(buffer);\r\n    let binary = '';\r\n    for (let i = 0; i < bytes.byteLength; i++) {\r\n      binary += String.fromCharCode(bytes[i]);\r\n    }\r\n    return window.btoa(binary);\r\n  }\r\n\r\n  /**\r\n   * Obtener configuraci\xF3n de notificaciones del usuario\r\n   */\r\n  async getNotificationSettings(): Promise<NotificationSettings> {\r\n    try {\r\n      const response = await apiService.get<NotificationSettings>(\r\n        '/push-notifications/settings'\r\n      );\r\n      if (response.success && response.data) {\r\n        return response.data;\r\n      }\r\n    } catch (error) {\r\n      logger.error('Error obteniendo configuraci\xF3n:', error as Error);\r\n    }\r\n\r\n    // Configuraci\xF3n por defecto\r\n    return {\r\n      enabled: true,\r\n      categories: {\r\n        system: true,\r\n        user: true,\r\n        event: true,\r\n        request: true,\r\n        payment: true,\r\n        chat: true,\r\n      },\r\n      quietHours: {\r\n        enabled: false,\r\n        startTime: '22:00',\r\n        endTime: '08:00',\r\n      },\r\n      sound: true,\r\n      vibration: true,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Actualizar configuraci\xF3n de notificaciones\r\n   */\r\n  async updateNotificationSettings(\r\n    settings: Partial<NotificationSettings>\r\n  ): Promise<boolean> {\r\n    try {\r\n      const response = await apiService.put(\r\n        '/push-notifications/settings',\r\n        settings\r\n      );\r\n      return response.success;\r\n    } catch (error) {\r\n      logger.error('Error actualizando configuraci\xF3n:', error as Error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Verificar si est\xE1 en horas silenciosas\r\n   */\r\n  isInQuietHours(settings: NotificationSettings): boolean {\r\n    if (!settings.quietHours.enabled) return false;\r\n\r\n    const now = new Date();\r\n    const currentTime = now.getHours() * 60 + now.getMinutes();\r\n\r\n    const [startHour, startMinute] = settings.quietHours.startTime\r\n      .split(':')\r\n      .map(Number);\r\n    const [endHour, endMinute] = settings.quietHours.endTime\r\n      .split(':')\r\n      .map(Number);\r\n\r\n    const startTime = startHour * 60 + startMinute;\r\n    const endTime = endHour * 60 + endMinute;\r\n\r\n    if (startTime <= endTime) {\r\n      return currentTime >= startTime && currentTime <= endTime;\r\n    } else {\r\n      // Horas silenciosas cruzan la medianoche\r\n      return currentTime >= startTime || currentTime <= endTime;\r\n    }\r\n  }\r\n}\r\n\r\n// Instancia singleton del servicio\r\nexport const pushNotificationService = new PushNotificationService();\r\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "0b4b84eabcd63ae0e8d3776daeabafbd2f711b85"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_ov0h048uh = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_ov0h048uh();
var __awaiter =
/* istanbul ignore next */
(cov_ov0h048uh().s[0]++,
/* istanbul ignore next */
(cov_ov0h048uh().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_ov0h048uh().b[0][1]++, this.__awaiter) ||
/* istanbul ignore next */
(cov_ov0h048uh().b[0][2]++, function (thisArg, _arguments, P, generator) {
  /* istanbul ignore next */
  cov_ov0h048uh().f[0]++;
  function adopt(value) {
    /* istanbul ignore next */
    cov_ov0h048uh().f[1]++;
    cov_ov0h048uh().s[1]++;
    return value instanceof P ?
    /* istanbul ignore next */
    (cov_ov0h048uh().b[1][0]++, value) :
    /* istanbul ignore next */
    (cov_ov0h048uh().b[1][1]++, new P(function (resolve) {
      /* istanbul ignore next */
      cov_ov0h048uh().f[2]++;
      cov_ov0h048uh().s[2]++;
      resolve(value);
    }));
  }
  /* istanbul ignore next */
  cov_ov0h048uh().s[3]++;
  return new (
  /* istanbul ignore next */
  (cov_ov0h048uh().b[2][0]++, P) ||
  /* istanbul ignore next */
  (cov_ov0h048uh().b[2][1]++, P = Promise))(function (resolve, reject) {
    /* istanbul ignore next */
    cov_ov0h048uh().f[3]++;
    function fulfilled(value) {
      /* istanbul ignore next */
      cov_ov0h048uh().f[4]++;
      cov_ov0h048uh().s[4]++;
      try {
        /* istanbul ignore next */
        cov_ov0h048uh().s[5]++;
        step(generator.next(value));
      } catch (e) {
        /* istanbul ignore next */
        cov_ov0h048uh().s[6]++;
        reject(e);
      }
    }
    function rejected(value) {
      /* istanbul ignore next */
      cov_ov0h048uh().f[5]++;
      cov_ov0h048uh().s[7]++;
      try {
        /* istanbul ignore next */
        cov_ov0h048uh().s[8]++;
        step(generator["throw"](value));
      } catch (e) {
        /* istanbul ignore next */
        cov_ov0h048uh().s[9]++;
        reject(e);
      }
    }
    function step(result) {
      /* istanbul ignore next */
      cov_ov0h048uh().f[6]++;
      cov_ov0h048uh().s[10]++;
      result.done ?
      /* istanbul ignore next */
      (cov_ov0h048uh().b[3][0]++, resolve(result.value)) :
      /* istanbul ignore next */
      (cov_ov0h048uh().b[3][1]++, adopt(result.value).then(fulfilled, rejected));
    }
    /* istanbul ignore next */
    cov_ov0h048uh().s[11]++;
    step((generator = generator.apply(thisArg,
    /* istanbul ignore next */
    (cov_ov0h048uh().b[4][0]++, _arguments) ||
    /* istanbul ignore next */
    (cov_ov0h048uh().b[4][1]++, []))).next());
  });
}));
/* istanbul ignore next */
cov_ov0h048uh().s[12]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_ov0h048uh().s[13]++;
exports.pushNotificationService = exports.PushNotificationService = void 0;
const expo_server_sdk_1 =
/* istanbul ignore next */
(cov_ov0h048uh().s[14]++, require("expo-server-sdk"));
const loggerService_1 =
/* istanbul ignore next */
(cov_ov0h048uh().s[15]++, require("../services/loggerService"));
// Inicializar Expo SDK
const expo =
/* istanbul ignore next */
(cov_ov0h048uh().s[16]++, new expo_server_sdk_1.Expo());
// Servicio API básico
class ApiService {
  constructor(baseUrl =
  /* istanbul ignore next */
  (cov_ov0h048uh().b[5][0]++, '/api')) {
    /* istanbul ignore next */
    cov_ov0h048uh().f[7]++;
    cov_ov0h048uh().s[17]++;
    this.baseUrl = baseUrl;
  }
  get(endpoint) {
    /* istanbul ignore next */
    cov_ov0h048uh().f[8]++;
    cov_ov0h048uh().s[18]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_ov0h048uh().f[9]++;
      cov_ov0h048uh().s[19]++;
      try {
        const response =
        /* istanbul ignore next */
        (cov_ov0h048uh().s[20]++, yield fetch(`${this.baseUrl}${endpoint}`));
        const data =
        /* istanbul ignore next */
        (cov_ov0h048uh().s[21]++, yield response.json());
        /* istanbul ignore next */
        cov_ov0h048uh().s[22]++;
        return data;
      } catch (error) {
        /* istanbul ignore next */
        cov_ov0h048uh().s[23]++;
        return {
          success: false,
          error: error instanceof Error ?
          /* istanbul ignore next */
          (cov_ov0h048uh().b[6][0]++, error.message) :
          /* istanbul ignore next */
          (cov_ov0h048uh().b[6][1]++, 'Unknown error')
        };
      }
    });
  }
  post(endpoint, body) {
    /* istanbul ignore next */
    cov_ov0h048uh().f[10]++;
    cov_ov0h048uh().s[24]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_ov0h048uh().f[11]++;
      cov_ov0h048uh().s[25]++;
      try {
        const response =
        /* istanbul ignore next */
        (cov_ov0h048uh().s[26]++, yield fetch(`${this.baseUrl}${endpoint}`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(body)
        }));
        const data =
        /* istanbul ignore next */
        (cov_ov0h048uh().s[27]++, yield response.json());
        /* istanbul ignore next */
        cov_ov0h048uh().s[28]++;
        return data;
      } catch (error) {
        /* istanbul ignore next */
        cov_ov0h048uh().s[29]++;
        return {
          success: false,
          error: error instanceof Error ?
          /* istanbul ignore next */
          (cov_ov0h048uh().b[7][0]++, error.message) :
          /* istanbul ignore next */
          (cov_ov0h048uh().b[7][1]++, 'Unknown error')
        };
      }
    });
  }
  delete(endpoint) {
    /* istanbul ignore next */
    cov_ov0h048uh().f[12]++;
    cov_ov0h048uh().s[30]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_ov0h048uh().f[13]++;
      cov_ov0h048uh().s[31]++;
      try {
        const response =
        /* istanbul ignore next */
        (cov_ov0h048uh().s[32]++, yield fetch(`${this.baseUrl}${endpoint}`, {
          method: 'DELETE'
        }));
        const data =
        /* istanbul ignore next */
        (cov_ov0h048uh().s[33]++, yield response.json());
        /* istanbul ignore next */
        cov_ov0h048uh().s[34]++;
        return data;
      } catch (error) {
        /* istanbul ignore next */
        cov_ov0h048uh().s[35]++;
        return {
          success: false,
          error: error instanceof Error ?
          /* istanbul ignore next */
          (cov_ov0h048uh().b[8][0]++, error.message) :
          /* istanbul ignore next */
          (cov_ov0h048uh().b[8][1]++, 'Unknown error')
        };
      }
    });
  }
  put(endpoint, body) {
    /* istanbul ignore next */
    cov_ov0h048uh().f[14]++;
    cov_ov0h048uh().s[36]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_ov0h048uh().f[15]++;
      cov_ov0h048uh().s[37]++;
      try {
        const response =
        /* istanbul ignore next */
        (cov_ov0h048uh().s[38]++, yield fetch(`${this.baseUrl}${endpoint}`, {
          method: 'PUT',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(body)
        }));
        const data =
        /* istanbul ignore next */
        (cov_ov0h048uh().s[39]++, yield response.json());
        /* istanbul ignore next */
        cov_ov0h048uh().s[40]++;
        return data;
      } catch (error) {
        /* istanbul ignore next */
        cov_ov0h048uh().s[41]++;
        return {
          success: false,
          error: error instanceof Error ?
          /* istanbul ignore next */
          (cov_ov0h048uh().b[9][0]++, error.message) :
          /* istanbul ignore next */
          (cov_ov0h048uh().b[9][1]++, 'Unknown error')
        };
      }
    });
  }
}
const apiService =
/* istanbul ignore next */
(cov_ov0h048uh().s[42]++, new ApiService());
/**
 * Servicio completo para manejo de notificaciones push
 * Integra con el backend y maneja la suscripción del dispositivo
 */
class PushNotificationService {
  constructor() {
    /* istanbul ignore next */
    cov_ov0h048uh().f[16]++;
    cov_ov0h048uh().s[43]++;
    this.vapidPublicKey = null;
    /* istanbul ignore next */
    cov_ov0h048uh().s[44]++;
    this.registration = null;
    /* istanbul ignore next */
    cov_ov0h048uh().s[45]++;
    this.isInitialized = false;
  }
  /**
   * Inicializar el servicio de notificaciones push
   */
  initialize() {
    /* istanbul ignore next */
    cov_ov0h048uh().f[17]++;
    cov_ov0h048uh().s[46]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_ov0h048uh().f[18]++;
      cov_ov0h048uh().s[47]++;
      try {
        /* istanbul ignore next */
        cov_ov0h048uh().s[48]++;
        if (this.isInitialized) {
          /* istanbul ignore next */
          cov_ov0h048uh().b[10][0]++;
          cov_ov0h048uh().s[49]++;
          return true;
        } else
        /* istanbul ignore next */
        {
          cov_ov0h048uh().b[10][1]++;
        }
        // Verificar soporte
        cov_ov0h048uh().s[50]++;
        if (!this.isSupported()) {
          /* istanbul ignore next */
          cov_ov0h048uh().b[11][0]++;
          cov_ov0h048uh().s[51]++;
          throw new Error('Las notificaciones push no están soportadas en este dispositivo');
        } else
        /* istanbul ignore next */
        {
          cov_ov0h048uh().b[11][1]++;
        }
        // Obtener VAPID key del backend
        cov_ov0h048uh().s[52]++;
        yield this.loadVapidKey();
        // Registrar Service Worker
        /* istanbul ignore next */
        cov_ov0h048uh().s[53]++;
        yield this.registerServiceWorker();
        /* istanbul ignore next */
        cov_ov0h048uh().s[54]++;
        this.isInitialized = true;
        /* istanbul ignore next */
        cov_ov0h048uh().s[55]++;
        return true;
      } catch (error) {
        /* istanbul ignore next */
        cov_ov0h048uh().s[56]++;
        loggerService_1.logger.error('Error inicializando PushNotificationService:', error);
        /* istanbul ignore next */
        cov_ov0h048uh().s[57]++;
        return false;
      }
    });
  }
  /**
   * Verificar si las notificaciones push están soportadas
   */
  isSupported() {
    /* istanbul ignore next */
    cov_ov0h048uh().f[19]++;
    cov_ov0h048uh().s[58]++;
    return /* istanbul ignore next */(cov_ov0h048uh().b[12][0]++, 'serviceWorker' in navigator) &&
    /* istanbul ignore next */
    (cov_ov0h048uh().b[12][1]++, 'PushManager' in window) &&
    /* istanbul ignore next */
    (cov_ov0h048uh().b[12][2]++, 'Notification' in window);
  }
  /**
   * Obtener el estado actual del permiso
   */
  getPermissionStatus() {
    /* istanbul ignore next */
    cov_ov0h048uh().f[20]++;
    cov_ov0h048uh().s[59]++;
    if (!('Notification' in window)) {
      /* istanbul ignore next */
      cov_ov0h048uh().b[13][0]++;
      cov_ov0h048uh().s[60]++;
      return {
        granted: false,
        denied: false,
        default: true
      };
    } else
    /* istanbul ignore next */
    {
      cov_ov0h048uh().b[13][1]++;
    }
    const permission =
    /* istanbul ignore next */
    (cov_ov0h048uh().s[61]++, Notification.permission);
    /* istanbul ignore next */
    cov_ov0h048uh().s[62]++;
    return {
      granted: permission === 'granted',
      denied: permission === 'denied',
      default: permission === 'default'
    };
  }
  /**
   * Solicitar permiso para notificaciones
   */
  requestPermission() {
    /* istanbul ignore next */
    cov_ov0h048uh().f[21]++;
    cov_ov0h048uh().s[63]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_ov0h048uh().f[22]++;
      cov_ov0h048uh().s[64]++;
      try {
        /* istanbul ignore next */
        cov_ov0h048uh().s[65]++;
        if (!this.isSupported()) {
          /* istanbul ignore next */
          cov_ov0h048uh().b[14][0]++;
          cov_ov0h048uh().s[66]++;
          throw new Error('Las notificaciones push no están soportadas');
        } else
        /* istanbul ignore next */
        {
          cov_ov0h048uh().b[14][1]++;
        }
        const permission =
        /* istanbul ignore next */
        (cov_ov0h048uh().s[67]++, yield Notification.requestPermission());
        /* istanbul ignore next */
        cov_ov0h048uh().s[68]++;
        return permission === 'granted';
      } catch (error) {
        /* istanbul ignore next */
        cov_ov0h048uh().s[69]++;
        loggerService_1.logger.error('Error solicitando permiso:', error);
        /* istanbul ignore next */
        cov_ov0h048uh().s[70]++;
        return false;
      }
    });
  }
  /**
   * Cargar VAPID key del backend
   */
  loadVapidKey() {
    /* istanbul ignore next */
    cov_ov0h048uh().f[23]++;
    cov_ov0h048uh().s[71]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_ov0h048uh().f[24]++;
      cov_ov0h048uh().s[72]++;
      try {
        const response =
        /* istanbul ignore next */
        (cov_ov0h048uh().s[73]++, yield apiService.get('/push-notifications/vapid-key'));
        /* istanbul ignore next */
        cov_ov0h048uh().s[74]++;
        if (
        /* istanbul ignore next */
        (cov_ov0h048uh().b[16][0]++, response.success) &&
        /* istanbul ignore next */
        (cov_ov0h048uh().b[16][1]++, response.data)) {
          /* istanbul ignore next */
          cov_ov0h048uh().b[15][0]++;
          cov_ov0h048uh().s[75]++;
          this.vapidPublicKey = response.data.vapidPublicKey;
        } else {
          /* istanbul ignore next */
          cov_ov0h048uh().b[15][1]++;
          cov_ov0h048uh().s[76]++;
          throw new Error('No se pudo obtener la VAPID key');
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_ov0h048uh().s[77]++;
        loggerService_1.logger.error('Error cargando VAPID key:', error);
        /* istanbul ignore next */
        cov_ov0h048uh().s[78]++;
        throw error;
      }
    });
  }
  /**
   * Registrar Service Worker
   */
  registerServiceWorker() {
    /* istanbul ignore next */
    cov_ov0h048uh().f[25]++;
    cov_ov0h048uh().s[79]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_ov0h048uh().f[26]++;
      cov_ov0h048uh().s[80]++;
      try {
        /* istanbul ignore next */
        cov_ov0h048uh().s[81]++;
        this.registration = yield navigator.serviceWorker.register('/sw.js');
        /* istanbul ignore next */
        cov_ov0h048uh().s[82]++;
        loggerService_1.logger.info('Service Worker registrado:', {
          metadata: {
            id: this.registration
          }
        });
      } catch (error) {
        /* istanbul ignore next */
        cov_ov0h048uh().s[83]++;
        loggerService_1.logger.error('Error registrando Service Worker:', error);
        /* istanbul ignore next */
        cov_ov0h048uh().s[84]++;
        throw error;
      }
    });
  }
  /**
   * Suscribirse a notificaciones push
   */
  subscribeToPushNotifications() {
    /* istanbul ignore next */
    cov_ov0h048uh().f[27]++;
    cov_ov0h048uh().s[85]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_ov0h048uh().f[28]++;
      cov_ov0h048uh().s[86]++;
      try {
        /* istanbul ignore next */
        cov_ov0h048uh().s[87]++;
        if (!this.isInitialized) {
          /* istanbul ignore next */
          cov_ov0h048uh().b[17][0]++;
          cov_ov0h048uh().s[88]++;
          yield this.initialize();
        } else
        /* istanbul ignore next */
        {
          cov_ov0h048uh().b[17][1]++;
        }
        cov_ov0h048uh().s[89]++;
        if (!this.vapidPublicKey) {
          /* istanbul ignore next */
          cov_ov0h048uh().b[18][0]++;
          cov_ov0h048uh().s[90]++;
          throw new Error('VAPID key no disponible');
        } else
        /* istanbul ignore next */
        {
          cov_ov0h048uh().b[18][1]++;
        }
        cov_ov0h048uh().s[91]++;
        if (!this.registration) {
          /* istanbul ignore next */
          cov_ov0h048uh().b[19][0]++;
          cov_ov0h048uh().s[92]++;
          throw new Error('Service Worker no registrado');
        } else
        /* istanbul ignore next */
        {
          cov_ov0h048uh().b[19][1]++;
        }
        // Verificar permiso
        const permission =
        /* istanbul ignore next */
        (cov_ov0h048uh().s[93]++, this.getPermissionStatus());
        /* istanbul ignore next */
        cov_ov0h048uh().s[94]++;
        if (!permission.granted) {
          /* istanbul ignore next */
          cov_ov0h048uh().b[20][0]++;
          const granted =
          /* istanbul ignore next */
          (cov_ov0h048uh().s[95]++, yield this.requestPermission());
          /* istanbul ignore next */
          cov_ov0h048uh().s[96]++;
          if (!granted) {
            /* istanbul ignore next */
            cov_ov0h048uh().b[21][0]++;
            cov_ov0h048uh().s[97]++;
            throw new Error('Permiso de notificaciones denegado');
          } else
          /* istanbul ignore next */
          {
            cov_ov0h048uh().b[21][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_ov0h048uh().b[20][1]++;
        }
        // Obtener suscripción existente o crear nueva
        let subscription =
        /* istanbul ignore next */
        (cov_ov0h048uh().s[98]++, yield this.registration.pushManager.getSubscription());
        /* istanbul ignore next */
        cov_ov0h048uh().s[99]++;
        if (!subscription) {
          /* istanbul ignore next */
          cov_ov0h048uh().b[22][0]++;
          cov_ov0h048uh().s[100]++;
          subscription = yield this.registration.pushManager.subscribe({
            userVisibleOnly: true,
            applicationServerKey: this.urlBase64ToUint8Array(this.vapidPublicKey)
          });
        } else
        /* istanbul ignore next */
        {
          cov_ov0h048uh().b[22][1]++;
        }
        // Guardar suscripción en el backend
        const subscriptionData =
        /* istanbul ignore next */
        (cov_ov0h048uh().s[101]++, {
          endpoint: subscription.endpoint,
          keys: {
            p256dh: this.arrayBufferToBase64(subscription.getKey('p256dh')),
            auth: this.arrayBufferToBase64(subscription.getKey('auth'))
          }
        });
        const response =
        /* istanbul ignore next */
        (cov_ov0h048uh().s[102]++, yield apiService.post('/push-notifications/subscription', subscriptionData));
        /* istanbul ignore next */
        cov_ov0h048uh().s[103]++;
        if (
        /* istanbul ignore next */
        (cov_ov0h048uh().b[24][0]++, response.success) &&
        /* istanbul ignore next */
        (cov_ov0h048uh().b[24][1]++, response.data)) {
          /* istanbul ignore next */
          cov_ov0h048uh().b[23][0]++;
          cov_ov0h048uh().s[104]++;
          return response.data;
        } else {
          /* istanbul ignore next */
          cov_ov0h048uh().b[23][1]++;
          cov_ov0h048uh().s[105]++;
          throw new Error('Error guardando suscripción en el backend');
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_ov0h048uh().s[106]++;
        loggerService_1.logger.error('Error suscribiéndose a notificaciones push:', error);
        /* istanbul ignore next */
        cov_ov0h048uh().s[107]++;
        return null;
      }
    });
  }
  /**
   * Obtener suscripciones del usuario
   */
  getUserSubscriptions() {
    /* istanbul ignore next */
    cov_ov0h048uh().f[29]++;
    cov_ov0h048uh().s[108]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_ov0h048uh().f[30]++;
      cov_ov0h048uh().s[109]++;
      try {
        const response =
        /* istanbul ignore next */
        (cov_ov0h048uh().s[110]++, yield apiService.get('/push-notifications/subscriptions'));
        /* istanbul ignore next */
        cov_ov0h048uh().s[111]++;
        return /* istanbul ignore next */(cov_ov0h048uh().b[26][0]++, response.success) &&
        /* istanbul ignore next */
        (cov_ov0h048uh().b[26][1]++, response.data) ?
        /* istanbul ignore next */
        (cov_ov0h048uh().b[25][0]++, response.data) :
        /* istanbul ignore next */
        (cov_ov0h048uh().b[25][1]++, []);
      } catch (error) {
        /* istanbul ignore next */
        cov_ov0h048uh().s[112]++;
        loggerService_1.logger.error('Error obteniendo suscripciones:', error);
        /* istanbul ignore next */
        cov_ov0h048uh().s[113]++;
        return [];
      }
    });
  }
  /**
   * Guardar suscripción push
   */
  saveSubscription(userId, subscriptionData) {
    /* istanbul ignore next */
    cov_ov0h048uh().f[31]++;
    cov_ov0h048uh().s[114]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_ov0h048uh().f[32]++;
      cov_ov0h048uh().s[115]++;
      try {
        const response =
        /* istanbul ignore next */
        (cov_ov0h048uh().s[116]++, yield apiService.post('/push-notifications/subscriptions', Object.assign({
          userId
        }, subscriptionData)));
        /* istanbul ignore next */
        cov_ov0h048uh().s[117]++;
        if (
        /* istanbul ignore next */
        (cov_ov0h048uh().b[28][0]++, response.success) &&
        /* istanbul ignore next */
        (cov_ov0h048uh().b[28][1]++, response.data)) {
          /* istanbul ignore next */
          cov_ov0h048uh().b[27][0]++;
          cov_ov0h048uh().s[118]++;
          return response.data;
        } else
        /* istanbul ignore next */
        {
          cov_ov0h048uh().b[27][1]++;
        }
        cov_ov0h048uh().s[119]++;
        throw new Error('Error guardando suscripción');
      } catch (error) {
        /* istanbul ignore next */
        cov_ov0h048uh().s[120]++;
        loggerService_1.logger.error('Error guardando suscripción:', error);
        /* istanbul ignore next */
        cov_ov0h048uh().s[121]++;
        throw error;
      }
    });
  }
  /**
   * Obtener VAPID public key
   */
  getVapidPublicKey() {
    /* istanbul ignore next */
    cov_ov0h048uh().f[33]++;
    cov_ov0h048uh().s[122]++;
    return this.vapidPublicKey;
  }
  /**
   * Eliminar suscripción
   */
  deleteSubscription(subscriptionId) {
    /* istanbul ignore next */
    cov_ov0h048uh().f[34]++;
    cov_ov0h048uh().s[123]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_ov0h048uh().f[35]++;
      cov_ov0h048uh().s[124]++;
      try {
        const response =
        /* istanbul ignore next */
        (cov_ov0h048uh().s[125]++, yield apiService.delete(`/push-notifications/subscription/${subscriptionId}`));
        /* istanbul ignore next */
        cov_ov0h048uh().s[126]++;
        if (response.success) {
          /* istanbul ignore next */
          cov_ov0h048uh().b[29][0]++;
          cov_ov0h048uh().s[127]++;
          // También eliminar suscripción local si existe
          if (this.registration) {
            /* istanbul ignore next */
            cov_ov0h048uh().b[30][0]++;
            const subscription =
            /* istanbul ignore next */
            (cov_ov0h048uh().s[128]++, yield this.registration.pushManager.getSubscription());
            /* istanbul ignore next */
            cov_ov0h048uh().s[129]++;
            if (subscription) {
              /* istanbul ignore next */
              cov_ov0h048uh().b[31][0]++;
              cov_ov0h048uh().s[130]++;
              yield subscription.unsubscribe();
            } else
            /* istanbul ignore next */
            {
              cov_ov0h048uh().b[31][1]++;
            }
          } else
          /* istanbul ignore next */
          {
            cov_ov0h048uh().b[30][1]++;
          }
          cov_ov0h048uh().s[131]++;
          return true;
        } else
        /* istanbul ignore next */
        {
          cov_ov0h048uh().b[29][1]++;
        }
        cov_ov0h048uh().s[132]++;
        return false;
      } catch (error) {
        /* istanbul ignore next */
        cov_ov0h048uh().s[133]++;
        loggerService_1.logger.error('Error eliminando suscripción:', error);
        /* istanbul ignore next */
        cov_ov0h048uh().s[134]++;
        return false;
      }
    });
  }
  /**
   * Enviar notificación a usuario específico usando Expo
   */
  sendNotificationToUser(userId, notification) {
    /* istanbul ignore next */
    cov_ov0h048uh().f[36]++;
    cov_ov0h048uh().s[135]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_ov0h048uh().f[37]++;
      cov_ov0h048uh().s[136]++;
      try {
        // Obtener suscripciones del usuario
        const subscriptions =
        /* istanbul ignore next */
        (cov_ov0h048uh().s[137]++, yield this.getUserSubscriptions());
        const userSubscriptions =
        /* istanbul ignore next */
        (cov_ov0h048uh().s[138]++, subscriptions.filter(sub => {
          /* istanbul ignore next */
          cov_ov0h048uh().f[38]++;
          cov_ov0h048uh().s[139]++;
          return /* istanbul ignore next */(cov_ov0h048uh().b[32][0]++, sub.userId === userId) &&
          /* istanbul ignore next */
          (cov_ov0h048uh().b[32][1]++, sub.isActive);
        }));
        /* istanbul ignore next */
        cov_ov0h048uh().s[140]++;
        if (userSubscriptions.length === 0) {
          /* istanbul ignore next */
          cov_ov0h048uh().b[33][0]++;
          cov_ov0h048uh().s[141]++;
          console.log(`No hay suscripciones activas para el usuario ${userId}`);
          /* istanbul ignore next */
          cov_ov0h048uh().s[142]++;
          return false;
        } else
        /* istanbul ignore next */
        {
          cov_ov0h048uh().b[33][1]++;
        }
        // Crear mensajes para Expo
        const messages =
        /* istanbul ignore next */
        (cov_ov0h048uh().s[143]++, userSubscriptions.map(subscription => {
          /* istanbul ignore next */
          cov_ov0h048uh().f[39]++;
          cov_ov0h048uh().s[144]++;
          return {
            to: subscription.endpoint,
            sound: 'default',
            title: notification.title,
            body: notification.body,
            data:
            /* istanbul ignore next */
            (cov_ov0h048uh().b[34][0]++, notification.data) ||
            /* istanbul ignore next */
            (cov_ov0h048uh().b[34][1]++, {}),
            priority:
            /* istanbul ignore next */
            (cov_ov0h048uh().b[35][0]++, notification.priority === 'low' ?
            /* istanbul ignore next */
            (cov_ov0h048uh().b[36][0]++, 'default') :
            /* istanbul ignore next */
            (cov_ov0h048uh().b[36][1]++, notification.priority)) ||
            /* istanbul ignore next */
            (cov_ov0h048uh().b[35][1]++, 'high'),
            badge: 1,
            channelId:
            /* istanbul ignore next */
            (cov_ov0h048uh().b[37][0]++, notification.category) ||
            /* istanbul ignore next */
            (cov_ov0h048uh().b[37][1]++, 'default')
          };
        }));
        // Enviar notificaciones usando Expo
        const chunks =
        /* istanbul ignore next */
        (cov_ov0h048uh().s[145]++, expo.chunkPushNotifications(messages));
        const tickets =
        /* istanbul ignore next */
        (cov_ov0h048uh().s[146]++, []);
        /* istanbul ignore next */
        cov_ov0h048uh().s[147]++;
        for (const chunk of chunks) {
          /* istanbul ignore next */
          cov_ov0h048uh().s[148]++;
          try {
            const ticketChunk =
            /* istanbul ignore next */
            (cov_ov0h048uh().s[149]++, yield expo.sendPushNotificationsAsync(chunk));
            /* istanbul ignore next */
            cov_ov0h048uh().s[150]++;
            tickets.push(...ticketChunk);
          } catch (error) {
            /* istanbul ignore next */
            cov_ov0h048uh().s[151]++;
            loggerService_1.logger.error('Error enviando chunk de notificaciones:', error);
          }
        }
        // Verificar tickets para errores
        const receiptIds =
        /* istanbul ignore next */
        (cov_ov0h048uh().s[152]++, tickets.filter(ticket => {
          /* istanbul ignore next */
          cov_ov0h048uh().f[40]++;
          cov_ov0h048uh().s[153]++;
          return ticket.status === 'error';
        }).map(ticket => {
          /* istanbul ignore next */
          cov_ov0h048uh().f[41]++;
          cov_ov0h048uh().s[154]++;
          return ticket.id;
        }));
        /* istanbul ignore next */
        cov_ov0h048uh().s[155]++;
        if (receiptIds.length > 0) {
          /* istanbul ignore next */
          cov_ov0h048uh().b[38][0]++;
          const receiptIdChunks =
          /* istanbul ignore next */
          (cov_ov0h048uh().s[156]++, expo.chunkPushNotificationReceiptIds(receiptIds));
          /* istanbul ignore next */
          cov_ov0h048uh().s[157]++;
          for (const chunk of receiptIdChunks) {
            /* istanbul ignore next */
            cov_ov0h048uh().s[158]++;
            try {
              const receipts =
              /* istanbul ignore next */
              (cov_ov0h048uh().s[159]++, yield expo.getPushNotificationReceiptsAsync(chunk));
              /* istanbul ignore next */
              cov_ov0h048uh().s[160]++;
              for (const receiptId in receipts) {
                const receipt =
                /* istanbul ignore next */
                (cov_ov0h048uh().s[161]++, receipts[receiptId]);
                /* istanbul ignore next */
                cov_ov0h048uh().s[162]++;
                if (receipt.status === 'error') {
                  /* istanbul ignore next */
                  cov_ov0h048uh().b[39][0]++;
                  cov_ov0h048uh().s[163]++;
                  console.error(`Error en notificación ${receiptId}:`, receipt.message);
                } else
                /* istanbul ignore next */
                {
                  cov_ov0h048uh().b[39][1]++;
                }
              }
            } catch (error) {
              /* istanbul ignore next */
              cov_ov0h048uh().s[164]++;
              loggerService_1.logger.error('Error verificando receipts:', error);
            }
          }
        } else
        /* istanbul ignore next */
        {
          cov_ov0h048uh().b[38][1]++;
        }
        cov_ov0h048uh().s[165]++;
        loggerService_1.logger.info('Notificación enviada exitosamente', {
          metadata: {
            userId,
            title: notification.title,
            ticketsSent: tickets.length,
            errors: receiptIds.length
          }
        });
        /* istanbul ignore next */
        cov_ov0h048uh().s[166]++;
        return true;
      } catch (error) {
        /* istanbul ignore next */
        cov_ov0h048uh().s[167]++;
        loggerService_1.logger.error('Error enviando notificación', error);
        /* istanbul ignore next */
        cov_ov0h048uh().s[168]++;
        return false;
      }
    });
  }
  /**
   * Enviar notificación masiva usando Expo
   */
  sendBulkNotification(request) {
    /* istanbul ignore next */
    cov_ov0h048uh().f[42]++;
    cov_ov0h048uh().s[169]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_ov0h048uh().f[43]++;
      cov_ov0h048uh().s[170]++;
      try {
        // Obtener todas las suscripciones activas
        const allSubscriptions =
        /* istanbul ignore next */
        (cov_ov0h048uh().s[171]++, yield this.getUserSubscriptions());
        const targetSubscriptions =
        /* istanbul ignore next */
        (cov_ov0h048uh().s[172]++, allSubscriptions.filter(sub => {
          /* istanbul ignore next */
          cov_ov0h048uh().f[44]++;
          cov_ov0h048uh().s[173]++;
          return /* istanbul ignore next */(cov_ov0h048uh().b[40][0]++, request.userIds.includes(sub.userId)) &&
          /* istanbul ignore next */
          (cov_ov0h048uh().b[40][1]++, sub.isActive);
        }));
        /* istanbul ignore next */
        cov_ov0h048uh().s[174]++;
        if (targetSubscriptions.length === 0) {
          /* istanbul ignore next */
          cov_ov0h048uh().b[41][0]++;
          cov_ov0h048uh().s[175]++;
          console.log('No hay suscripciones activas para los usuarios especificados');
          /* istanbul ignore next */
          cov_ov0h048uh().s[176]++;
          return {
            success: 0,
            failed: request.userIds.length
          };
        } else
        /* istanbul ignore next */
        {
          cov_ov0h048uh().b[41][1]++;
        }
        // Crear mensajes para Expo
        const messages =
        /* istanbul ignore next */
        (cov_ov0h048uh().s[177]++, targetSubscriptions.map(subscription => {
          /* istanbul ignore next */
          cov_ov0h048uh().f[45]++;
          cov_ov0h048uh().s[178]++;
          return {
            to: subscription.endpoint,
            sound: 'default',
            title: request.title,
            body: request.body,
            data:
            /* istanbul ignore next */
            (cov_ov0h048uh().b[42][0]++, request.data) ||
            /* istanbul ignore next */
            (cov_ov0h048uh().b[42][1]++, {}),
            priority: 'high',
            badge: 1,
            channelId:
            /* istanbul ignore next */
            (cov_ov0h048uh().b[43][0]++, request.category) ||
            /* istanbul ignore next */
            (cov_ov0h048uh().b[43][1]++, 'default')
          };
        }));
        // Enviar notificaciones usando Expo
        const chunks =
        /* istanbul ignore next */
        (cov_ov0h048uh().s[179]++, expo.chunkPushNotifications(messages));
        const tickets =
        /* istanbul ignore next */
        (cov_ov0h048uh().s[180]++, []);
        let successCount =
        /* istanbul ignore next */
        (cov_ov0h048uh().s[181]++, 0);
        let failedCount =
        /* istanbul ignore next */
        (cov_ov0h048uh().s[182]++, 0);
        /* istanbul ignore next */
        cov_ov0h048uh().s[183]++;
        for (const chunk of chunks) {
          /* istanbul ignore next */
          cov_ov0h048uh().s[184]++;
          try {
            const ticketChunk =
            /* istanbul ignore next */
            (cov_ov0h048uh().s[185]++, yield expo.sendPushNotificationsAsync(chunk));
            /* istanbul ignore next */
            cov_ov0h048uh().s[186]++;
            tickets.push(...ticketChunk);
            // Contar éxitos y fallos
            /* istanbul ignore next */
            cov_ov0h048uh().s[187]++;
            ticketChunk.forEach(ticket => {
              /* istanbul ignore next */
              cov_ov0h048uh().f[46]++;
              cov_ov0h048uh().s[188]++;
              if (ticket.status === 'ok') {
                /* istanbul ignore next */
                cov_ov0h048uh().b[44][0]++;
                cov_ov0h048uh().s[189]++;
                successCount++;
              } else {
                /* istanbul ignore next */
                cov_ov0h048uh().b[44][1]++;
                cov_ov0h048uh().s[190]++;
                failedCount++;
              }
            });
          } catch (error) {
            /* istanbul ignore next */
            cov_ov0h048uh().s[191]++;
            loggerService_1.logger.error('Error enviando chunk de notificaciones masivas:', error);
            /* istanbul ignore next */
            cov_ov0h048uh().s[192]++;
            failedCount += chunk.length;
          }
        }
        /* istanbul ignore next */
        cov_ov0h048uh().s[193]++;
        loggerService_1.logger.info('Notificación masiva enviada', {
          metadata: {
            totalUsers: request.userIds.length,
            successCount,
            failedCount,
            ticketsSent: tickets.length
          }
        });
        /* istanbul ignore next */
        cov_ov0h048uh().s[194]++;
        return {
          success: successCount,
          failed: failedCount
        };
      } catch (error) {
        /* istanbul ignore next */
        cov_ov0h048uh().s[195]++;
        loggerService_1.logger.error('Error enviando notificación masiva:', error);
        /* istanbul ignore next */
        cov_ov0h048uh().s[196]++;
        return null;
      }
    });
  }
  /**
   * Crear template de notificación
   */
  createNotificationTemplate(template) {
    /* istanbul ignore next */
    cov_ov0h048uh().f[47]++;
    cov_ov0h048uh().s[197]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_ov0h048uh().f[48]++;
      cov_ov0h048uh().s[198]++;
      try {
        const response =
        /* istanbul ignore next */
        (cov_ov0h048uh().s[199]++, yield apiService.post('/push-notifications/templates', template));
        /* istanbul ignore next */
        cov_ov0h048uh().s[200]++;
        return /* istanbul ignore next */(cov_ov0h048uh().b[46][0]++, response.success) &&
        /* istanbul ignore next */
        (cov_ov0h048uh().b[46][1]++, response.data) ?
        /* istanbul ignore next */
        (cov_ov0h048uh().b[45][0]++, response.data) :
        /* istanbul ignore next */
        (cov_ov0h048uh().b[45][1]++, null);
      } catch (error) {
        /* istanbul ignore next */
        cov_ov0h048uh().s[201]++;
        loggerService_1.logger.error('Error creando template:', error);
        /* istanbul ignore next */
        cov_ov0h048uh().s[202]++;
        return null;
      }
    });
  }
  /**
   * Obtener templates activos
   */
  getActiveTemplates() {
    /* istanbul ignore next */
    cov_ov0h048uh().f[49]++;
    cov_ov0h048uh().s[203]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_ov0h048uh().f[50]++;
      cov_ov0h048uh().s[204]++;
      try {
        const response =
        /* istanbul ignore next */
        (cov_ov0h048uh().s[205]++, yield apiService.get('/push-notifications/templates'));
        /* istanbul ignore next */
        cov_ov0h048uh().s[206]++;
        return /* istanbul ignore next */(cov_ov0h048uh().b[48][0]++, response.success) &&
        /* istanbul ignore next */
        (cov_ov0h048uh().b[48][1]++, response.data) ?
        /* istanbul ignore next */
        (cov_ov0h048uh().b[47][0]++, response.data) :
        /* istanbul ignore next */
        (cov_ov0h048uh().b[47][1]++, []);
      } catch (error) {
        /* istanbul ignore next */
        cov_ov0h048uh().s[207]++;
        loggerService_1.logger.error('Error obteniendo templates:', error);
        /* istanbul ignore next */
        cov_ov0h048uh().s[208]++;
        return [];
      }
    });
  }
  /**
   * Obtener template específico
   */
  getNotificationTemplate(templateId) {
    /* istanbul ignore next */
    cov_ov0h048uh().f[51]++;
    cov_ov0h048uh().s[209]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_ov0h048uh().f[52]++;
      cov_ov0h048uh().s[210]++;
      try {
        const response =
        /* istanbul ignore next */
        (cov_ov0h048uh().s[211]++, yield apiService.get(`/push-notifications/templates/${templateId}`));
        /* istanbul ignore next */
        cov_ov0h048uh().s[212]++;
        return /* istanbul ignore next */(cov_ov0h048uh().b[50][0]++, response.success) &&
        /* istanbul ignore next */
        (cov_ov0h048uh().b[50][1]++, response.data) ?
        /* istanbul ignore next */
        (cov_ov0h048uh().b[49][0]++, response.data) :
        /* istanbul ignore next */
        (cov_ov0h048uh().b[49][1]++, null);
      } catch (error) {
        /* istanbul ignore next */
        cov_ov0h048uh().s[213]++;
        loggerService_1.logger.error('Error obteniendo template:', error);
        /* istanbul ignore next */
        cov_ov0h048uh().s[214]++;
        return null;
      }
    });
  }
  /**
   * Actualizar template
   */
  updateNotificationTemplate(templateId, updates) {
    /* istanbul ignore next */
    cov_ov0h048uh().f[53]++;
    cov_ov0h048uh().s[215]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_ov0h048uh().f[54]++;
      cov_ov0h048uh().s[216]++;
      try {
        const response =
        /* istanbul ignore next */
        (cov_ov0h048uh().s[217]++, yield apiService.put(`/push-notifications/templates/${templateId}`, updates));
        /* istanbul ignore next */
        cov_ov0h048uh().s[218]++;
        return /* istanbul ignore next */(cov_ov0h048uh().b[52][0]++, response.success) &&
        /* istanbul ignore next */
        (cov_ov0h048uh().b[52][1]++, response.data) ?
        /* istanbul ignore next */
        (cov_ov0h048uh().b[51][0]++, response.data) :
        /* istanbul ignore next */
        (cov_ov0h048uh().b[51][1]++, null);
      } catch (error) {
        /* istanbul ignore next */
        cov_ov0h048uh().s[219]++;
        loggerService_1.logger.error('Error actualizando template:', error);
        /* istanbul ignore next */
        cov_ov0h048uh().s[220]++;
        return null;
      }
    });
  }
  /**
   * Eliminar template
   */
  deleteNotificationTemplate(templateId) {
    /* istanbul ignore next */
    cov_ov0h048uh().f[55]++;
    cov_ov0h048uh().s[221]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_ov0h048uh().f[56]++;
      cov_ov0h048uh().s[222]++;
      try {
        const response =
        /* istanbul ignore next */
        (cov_ov0h048uh().s[223]++, yield apiService.delete(`/push-notifications/templates/${templateId}`));
        /* istanbul ignore next */
        cov_ov0h048uh().s[224]++;
        return response.success;
      } catch (error) {
        /* istanbul ignore next */
        cov_ov0h048uh().s[225]++;
        loggerService_1.logger.error('Error eliminando template:', error);
        /* istanbul ignore next */
        cov_ov0h048uh().s[226]++;
        return false;
      }
    });
  }
  /**
   * Obtener estadísticas de notificaciones
   */
  getNotificationStats() {
    /* istanbul ignore next */
    cov_ov0h048uh().f[57]++;
    cov_ov0h048uh().s[227]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_ov0h048uh().f[58]++;
      cov_ov0h048uh().s[228]++;
      try {
        const response =
        /* istanbul ignore next */
        (cov_ov0h048uh().s[229]++, yield apiService.get('/push-notifications/stats'));
        /* istanbul ignore next */
        cov_ov0h048uh().s[230]++;
        return /* istanbul ignore next */(cov_ov0h048uh().b[54][0]++, response.success) &&
        /* istanbul ignore next */
        (cov_ov0h048uh().b[54][1]++, response.data) ?
        /* istanbul ignore next */
        (cov_ov0h048uh().b[53][0]++, response.data) :
        /* istanbul ignore next */
        (cov_ov0h048uh().b[53][1]++, null);
      } catch (error) {
        /* istanbul ignore next */
        cov_ov0h048uh().s[231]++;
        loggerService_1.logger.error('Error obteniendo estadísticas:', error);
        /* istanbul ignore next */
        cov_ov0h048uh().s[232]++;
        return null;
      }
    });
  }
  /**
   * Enviar notificación de prueba usando Expo
   */
  testPushNotification() {
    /* istanbul ignore next */
    cov_ov0h048uh().f[59]++;
    cov_ov0h048uh().s[233]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_ov0h048uh().f[60]++;
      cov_ov0h048uh().s[234]++;
      try {
        // Obtener todas las suscripciones activas
        const subscriptions =
        /* istanbul ignore next */
        (cov_ov0h048uh().s[235]++, yield this.getUserSubscriptions());
        const activeSubscriptions =
        /* istanbul ignore next */
        (cov_ov0h048uh().s[236]++, subscriptions.filter(sub => {
          /* istanbul ignore next */
          cov_ov0h048uh().f[61]++;
          cov_ov0h048uh().s[237]++;
          return sub.isActive;
        }));
        /* istanbul ignore next */
        cov_ov0h048uh().s[238]++;
        if (activeSubscriptions.length === 0) {
          /* istanbul ignore next */
          cov_ov0h048uh().b[55][0]++;
          cov_ov0h048uh().s[239]++;
          console.log('No hay suscripciones activas para enviar notificación de prueba');
          /* istanbul ignore next */
          cov_ov0h048uh().s[240]++;
          return false;
        } else
        /* istanbul ignore next */
        {
          cov_ov0h048uh().b[55][1]++;
        }
        // Crear mensaje de prueba
        const testMessage =
        /* istanbul ignore next */
        (cov_ov0h048uh().s[241]++, {
          to: activeSubscriptions[0].endpoint,
          // Enviar solo a la primera suscripción
          sound: 'default',
          title: '🔔 Notificación de Prueba',
          body: 'Esta es una notificación de prueba del sistema MussikOn',
          data: {
            type: 'test',
            timestamp: new Date().toISOString()
          },
          priority: 'high',
          badge: 1,
          channelId: 'test'
        });
        // Enviar notificación de prueba
        const chunks =
        /* istanbul ignore next */
        (cov_ov0h048uh().s[242]++, expo.chunkPushNotifications([testMessage]));
        /* istanbul ignore next */
        cov_ov0h048uh().s[243]++;
        for (const chunk of chunks) {
          /* istanbul ignore next */
          cov_ov0h048uh().s[244]++;
          try {
            const tickets =
            /* istanbul ignore next */
            (cov_ov0h048uh().s[245]++, yield expo.sendPushNotificationsAsync(chunk));
            // Verificar resultado
            const ticket =
            /* istanbul ignore next */
            (cov_ov0h048uh().s[246]++, tickets[0]);
            /* istanbul ignore next */
            cov_ov0h048uh().s[247]++;
            if (ticket.status === 'ok') {
              /* istanbul ignore next */
              cov_ov0h048uh().b[56][0]++;
              cov_ov0h048uh().s[248]++;
              loggerService_1.logger.info('✅ Notificación de prueba enviada exitosamente');
              /* istanbul ignore next */
              cov_ov0h048uh().s[249]++;
              return true;
            } else {
              /* istanbul ignore next */
              cov_ov0h048uh().b[56][1]++;
              cov_ov0h048uh().s[250]++;
              loggerService_1.logger.error('❌ Error enviando notificación de prueba:', new Error(ticket.message));
              /* istanbul ignore next */
              cov_ov0h048uh().s[251]++;
              return false;
            }
          } catch (error) {
            /* istanbul ignore next */
            cov_ov0h048uh().s[252]++;
            loggerService_1.logger.error('❌ Error enviando notificación de prueba:', error);
            /* istanbul ignore next */
            cov_ov0h048uh().s[253]++;
            return false;
          }
        }
        /* istanbul ignore next */
        cov_ov0h048uh().s[254]++;
        return false;
      } catch (error) {
        /* istanbul ignore next */
        cov_ov0h048uh().s[255]++;
        loggerService_1.logger.error('Error enviando notificación de prueba:', error);
        /* istanbul ignore next */
        cov_ov0h048uh().s[256]++;
        return false;
      }
    });
  }
  /**
   * Mostrar notificación local (para testing)
   */
  showLocalNotification(title, options =
  /* istanbul ignore next */
  (cov_ov0h048uh().b[57][0]++, {})) {
    /* istanbul ignore next */
    cov_ov0h048uh().f[62]++;
    cov_ov0h048uh().s[257]++;
    if (!('Notification' in window)) {
      /* istanbul ignore next */
      cov_ov0h048uh().b[58][0]++;
      cov_ov0h048uh().s[258]++;
      console.warn('Las notificaciones no están soportadas');
      /* istanbul ignore next */
      cov_ov0h048uh().s[259]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_ov0h048uh().b[58][1]++;
    }
    cov_ov0h048uh().s[260]++;
    if (Notification.permission === 'granted') {
      /* istanbul ignore next */
      cov_ov0h048uh().b[59][0]++;
      cov_ov0h048uh().s[261]++;
      new Notification(title, Object.assign({
        icon: '/icon-192x192.png',
        badge: '/badge-72x72.png',
        tag: 'mussikon-notification'
      }, options));
    } else
    /* istanbul ignore next */
    {
      cov_ov0h048uh().b[59][1]++;
    }
  }
  /**
   * Convertir VAPID key de base64 a Uint8Array
   */
  urlBase64ToUint8Array(base64String) {
    /* istanbul ignore next */
    cov_ov0h048uh().f[63]++;
    const padding =
    /* istanbul ignore next */
    (cov_ov0h048uh().s[262]++, '='.repeat((4 - base64String.length % 4) % 4));
    const base64 =
    /* istanbul ignore next */
    (cov_ov0h048uh().s[263]++, (base64String + padding).replace(/-/g, '+').replace(/_/g, '/'));
    const rawData =
    /* istanbul ignore next */
    (cov_ov0h048uh().s[264]++, window.atob(base64));
    const outputArray =
    /* istanbul ignore next */
    (cov_ov0h048uh().s[265]++, new Uint8Array(rawData.length));
    /* istanbul ignore next */
    cov_ov0h048uh().s[266]++;
    for (let i =
    /* istanbul ignore next */
    (cov_ov0h048uh().s[267]++, 0); i < rawData.length; ++i) {
      /* istanbul ignore next */
      cov_ov0h048uh().s[268]++;
      outputArray[i] = rawData.charCodeAt(i);
    }
    /* istanbul ignore next */
    cov_ov0h048uh().s[269]++;
    return outputArray;
  }
  /**
   * Convertir ArrayBuffer a base64
   */
  arrayBufferToBase64(buffer) {
    /* istanbul ignore next */
    cov_ov0h048uh().f[64]++;
    const bytes =
    /* istanbul ignore next */
    (cov_ov0h048uh().s[270]++, new Uint8Array(buffer));
    let binary =
    /* istanbul ignore next */
    (cov_ov0h048uh().s[271]++, '');
    /* istanbul ignore next */
    cov_ov0h048uh().s[272]++;
    for (let i =
    /* istanbul ignore next */
    (cov_ov0h048uh().s[273]++, 0); i < bytes.byteLength; i++) {
      /* istanbul ignore next */
      cov_ov0h048uh().s[274]++;
      binary += String.fromCharCode(bytes[i]);
    }
    /* istanbul ignore next */
    cov_ov0h048uh().s[275]++;
    return window.btoa(binary);
  }
  /**
   * Obtener configuración de notificaciones del usuario
   */
  getNotificationSettings() {
    /* istanbul ignore next */
    cov_ov0h048uh().f[65]++;
    cov_ov0h048uh().s[276]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_ov0h048uh().f[66]++;
      cov_ov0h048uh().s[277]++;
      try {
        const response =
        /* istanbul ignore next */
        (cov_ov0h048uh().s[278]++, yield apiService.get('/push-notifications/settings'));
        /* istanbul ignore next */
        cov_ov0h048uh().s[279]++;
        if (
        /* istanbul ignore next */
        (cov_ov0h048uh().b[61][0]++, response.success) &&
        /* istanbul ignore next */
        (cov_ov0h048uh().b[61][1]++, response.data)) {
          /* istanbul ignore next */
          cov_ov0h048uh().b[60][0]++;
          cov_ov0h048uh().s[280]++;
          return response.data;
        } else
        /* istanbul ignore next */
        {
          cov_ov0h048uh().b[60][1]++;
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_ov0h048uh().s[281]++;
        loggerService_1.logger.error('Error obteniendo configuración:', error);
      }
      // Configuración por defecto
      /* istanbul ignore next */
      cov_ov0h048uh().s[282]++;
      return {
        enabled: true,
        categories: {
          system: true,
          user: true,
          event: true,
          request: true,
          payment: true,
          chat: true
        },
        quietHours: {
          enabled: false,
          startTime: '22:00',
          endTime: '08:00'
        },
        sound: true,
        vibration: true
      };
    });
  }
  /**
   * Actualizar configuración de notificaciones
   */
  updateNotificationSettings(settings) {
    /* istanbul ignore next */
    cov_ov0h048uh().f[67]++;
    cov_ov0h048uh().s[283]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_ov0h048uh().f[68]++;
      cov_ov0h048uh().s[284]++;
      try {
        const response =
        /* istanbul ignore next */
        (cov_ov0h048uh().s[285]++, yield apiService.put('/push-notifications/settings', settings));
        /* istanbul ignore next */
        cov_ov0h048uh().s[286]++;
        return response.success;
      } catch (error) {
        /* istanbul ignore next */
        cov_ov0h048uh().s[287]++;
        loggerService_1.logger.error('Error actualizando configuración:', error);
        /* istanbul ignore next */
        cov_ov0h048uh().s[288]++;
        return false;
      }
    });
  }
  /**
   * Verificar si está en horas silenciosas
   */
  isInQuietHours(settings) {
    /* istanbul ignore next */
    cov_ov0h048uh().f[69]++;
    cov_ov0h048uh().s[289]++;
    if (!settings.quietHours.enabled) {
      /* istanbul ignore next */
      cov_ov0h048uh().b[62][0]++;
      cov_ov0h048uh().s[290]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_ov0h048uh().b[62][1]++;
    }
    const now =
    /* istanbul ignore next */
    (cov_ov0h048uh().s[291]++, new Date());
    const currentTime =
    /* istanbul ignore next */
    (cov_ov0h048uh().s[292]++, now.getHours() * 60 + now.getMinutes());
    const [startHour, startMinute] =
    /* istanbul ignore next */
    (cov_ov0h048uh().s[293]++, settings.quietHours.startTime.split(':').map(Number));
    const [endHour, endMinute] =
    /* istanbul ignore next */
    (cov_ov0h048uh().s[294]++, settings.quietHours.endTime.split(':').map(Number));
    const startTime =
    /* istanbul ignore next */
    (cov_ov0h048uh().s[295]++, startHour * 60 + startMinute);
    const endTime =
    /* istanbul ignore next */
    (cov_ov0h048uh().s[296]++, endHour * 60 + endMinute);
    /* istanbul ignore next */
    cov_ov0h048uh().s[297]++;
    if (startTime <= endTime) {
      /* istanbul ignore next */
      cov_ov0h048uh().b[63][0]++;
      cov_ov0h048uh().s[298]++;
      return /* istanbul ignore next */(cov_ov0h048uh().b[64][0]++, currentTime >= startTime) &&
      /* istanbul ignore next */
      (cov_ov0h048uh().b[64][1]++, currentTime <= endTime);
    } else {
      /* istanbul ignore next */
      cov_ov0h048uh().b[63][1]++;
      cov_ov0h048uh().s[299]++;
      // Horas silenciosas cruzan la medianoche
      return /* istanbul ignore next */(cov_ov0h048uh().b[65][0]++, currentTime >= startTime) ||
      /* istanbul ignore next */
      (cov_ov0h048uh().b[65][1]++, currentTime <= endTime);
    }
  }
}
/* istanbul ignore next */
cov_ov0h048uh().s[300]++;
exports.PushNotificationService = PushNotificationService;
// Instancia singleton del servicio
/* istanbul ignore next */
cov_ov0h048uh().s[301]++;
exports.pushNotificationService = new PushNotificationService();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,