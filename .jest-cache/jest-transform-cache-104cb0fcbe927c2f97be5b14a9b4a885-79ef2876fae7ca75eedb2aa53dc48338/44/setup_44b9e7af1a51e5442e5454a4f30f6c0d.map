{"file":"C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\__tests__\\setup.ts","mappings":"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","names":[],"sources":["C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\__tests__\\setup.ts"],"sourcesContent":["// Jest setup file for MussikOn API tests\nimport dotenv from 'dotenv';\nimport { logger } from '../services/loggerService';\n\n// Load environment variables for testing\ndotenv.config({ path: '.env.test' });\n\n// Mock Firebase Admin\njest.mock('firebase-admin', () => ({\n  initializeApp: jest.fn(),\n  getApps: jest.fn(() => []),\n  getApp: jest.fn(),\n  apps: [], // Agregar esta propiedad\n  credential: {\n    cert: jest.fn()\n  },\n  auth: jest.fn(() => ({\n    verifyIdToken: jest.fn(),\n    createCustomToken: jest.fn(),\n    getUser: jest.fn(),\n    getUserByEmail: jest.fn(),\n    listUsers: jest.fn(),\n    createUser: jest.fn(),\n    updateUser: jest.fn(),\n    deleteUser: jest.fn(),\n    setCustomUserClaims: jest.fn()\n  })),\n  firestore: jest.fn(() => ({\n    collection: jest.fn(() => ({\n      doc: jest.fn(() => ({\n        get: jest.fn(),\n        set: jest.fn(),\n        update: jest.fn(),\n        delete: jest.fn()\n      })),\n      where: jest.fn(() => ({\n        get: jest.fn(),\n        orderBy: jest.fn(() => ({\n          get: jest.fn(),\n          limit: jest.fn(() => ({\n            get: jest.fn()\n          }))\n        }))\n      })),\n      orderBy: jest.fn(() => ({\n        get: jest.fn(),\n        limit: jest.fn(() => ({\n          get: jest.fn()\n        }))\n      })),\n      limit: jest.fn(() => ({\n        get: jest.fn()\n      })),\n      get: jest.fn()\n    }))\n  })),\n  getFirestore: jest.fn(() => ({\n    collection: jest.fn(() => ({\n      doc: jest.fn(() => ({\n        get: jest.fn(),\n        set: jest.fn(),\n        update: jest.fn(),\n        delete: jest.fn()\n      })),\n      where: jest.fn(() => ({\n        get: jest.fn(),\n        orderBy: jest.fn(() => ({\n          get: jest.fn(),\n          limit: jest.fn(() => ({\n            get: jest.fn()\n          }))\n        }))\n      })),\n      orderBy: jest.fn(() => ({\n        get: jest.fn(),\n        limit: jest.fn(() => ({\n          get: jest.fn()\n        }))\n      })),\n      limit: jest.fn(() => ({\n        get: jest.fn()\n      })),\n      get: jest.fn()\n    }))\n  }))\n}));\n\n// ğŸ†• CONFIGURACIÃ“N MEJORADA DEL SETUP\n// Setup any global test configuration\nlogger.info('Setting up test environment...', { context: 'TestSetup' });\n\n// Mock console methods to reduce noise in tests\njest.spyOn(console, 'log').mockImplementation(() => {});\njest.spyOn(console, 'info').mockImplementation(() => {});\njest.spyOn(console, 'warn').mockImplementation(() => {});\njest.spyOn(console, 'error').mockImplementation(() => {});\n\n// Global test utilities\nexport const createMockRequest = (overrides: any = {}) => ({\n  body: {},\n  params: {},\n  query: {},\n  headers: {},\n  user: null,\n  ...overrides\n});\n\nexport const createMockResponse = () => {\n  const res: any = {};\n  res.status = jest.fn().mockReturnValue(res);\n  res.json = jest.fn().mockReturnValue(res);\n  res.send = jest.fn().mockReturnValue(res);\n  res.end = jest.fn().mockReturnValue(res);\n  return res;\n};\n\n// Mock middleware\nexport const mockAuthMiddleware = (req: any, res: any, next: any) => {\n  req.user = {\n    id: 'test-user-id',\n    email: 'test@example.com',\n    role: 'usuario'\n  };\n  next();\n};\n\n// Mock error handler\nexport const mockErrorHandler = (err: any, req: any, res: any, next: any) => {\n  res.status(500).json({\n    success: false,\n    message: err.message || 'Internal server error'\n  });\n};\n\n// ğŸ†• UTILIDADES ADICIONALES PARA TESTS MEJORADOS\n\n// FunciÃ³n para limpiar mocks despuÃ©s de cada test\nexport const cleanupMocks = () => {\n  jest.clearAllMocks();\n  jest.resetAllMocks();\n};\n\n// FunciÃ³n para crear un mock de Firebase mÃ¡s realista\nexport const createFirebaseMock = () => ({\n  collection: jest.fn().mockReturnValue({\n    doc: jest.fn().mockReturnValue({\n      get: jest.fn().mockResolvedValue({\n        exists: true,\n        data: jest.fn().mockReturnValue({})\n      }),\n      set: jest.fn().mockResolvedValue({}),\n      update: jest.fn().mockResolvedValue({}),\n      delete: jest.fn().mockResolvedValue({})\n    }),\n    where: jest.fn().mockReturnThis(),\n    orderBy: jest.fn().mockReturnThis(),\n    limit: jest.fn().mockReturnThis(),\n    get: jest.fn().mockResolvedValue({\n      docs: [],\n      size: 0\n    }),\n    add: jest.fn().mockResolvedValue({\n      id: 'generated-id'\n    })\n  })\n});\n\n// FunciÃ³n para validar respuestas de API\nexport const validateApiResponse = (response: any, expectedSuccess: boolean, expectedMessage?: string) => {\n  expect(response).toHaveProperty('success', expectedSuccess);\n  if (expectedMessage) {\n    expect(response).toHaveProperty('message', expectedMessage);\n  }\n};\n\n// FunciÃ³n para crear datos de prueba vÃ¡lidos\nexport const createTestData = {\n  user: {\n    id: 'test-user-id',\n    email: 'test@example.com',\n    role: 'usuario',\n    name: 'Test User'\n  },\n  rating: {\n    eventId: 'event123',\n    musicianId: 'musician123',\n    rating: 5,\n    review: 'Excellent performance!',\n    category: 'musician'\n  },\n  payment: {\n    amount: 1000,\n    currency: 'RD$',\n    description: 'Test payment'\n  }\n};\n\n// FunciÃ³n para simular delays en tests\nexport const delay = (ms: number) => new Promise(resolve => setTimeout(resolve, ms));\n\n// FunciÃ³n para validar que un string no contenga caracteres peligrosos\nexport const validateSafeString = (str: string) => {\n  const dangerousPatterns = [\n    /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi, // XSS scripts\n    /javascript:/gi, // JavaScript protocol\n    /on\\w+\\s*=/gi, // Event handlers\n    /data:text\\/html/gi, // Data URLs\n    /vbscript:/gi, // VBScript\n    /expression\\s*\\(/gi, // CSS expressions\n  ];\n  \n  return !dangerousPatterns.some(pattern => pattern.test(str));\n};\n\n// FunciÃ³n para validar formato de email\nexport const validateEmailFormat = (email: string) => {\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  return emailRegex.test(email);\n};\n\n// FunciÃ³n para validar formato de ID\nexport const validateIdFormat = (id: string) => {\n  const idRegex = /^[a-zA-Z0-9_-]{3,50}$/;\n  return idRegex.test(id);\n}; "],"version":3}