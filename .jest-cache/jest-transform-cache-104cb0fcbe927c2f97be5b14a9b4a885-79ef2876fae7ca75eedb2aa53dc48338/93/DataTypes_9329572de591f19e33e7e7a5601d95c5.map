{"version":3,"names":[],"sources":["C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\utils\\DataTypes.ts"],"sourcesContent":["import { PhoneIdentifier } from 'firebase-admin/lib/auth/identifier';\r\n\r\nexport interface authUserRegister {\r\n  id?: number;\r\n  name: string;\r\n  roll: string;\r\n  lastName: string;\r\n  userEmail: string;\r\n  userPassword: string;\r\n  create_at: string;\r\n  update_at: string;\r\n  delete_at: string;\r\n  status: boolean;\r\n}\r\nexport interface User {\r\n  name: string;\r\n  lastName: string;\r\n  userEmail: string;\r\n  userPassword: string;\r\n  roll: string;\r\n  create_at?: string;\r\n  update_at?: string;\r\n  delete_at?: string;\r\n  status?: boolean;\r\n}\r\n\r\nexport interface UpdateUser {\r\n  name?: string;\r\n  lastName?: string;\r\n  userEmail?: string;\r\n  userPassword?: string;\r\n  phone: PhoneIdentifier;\r\n  roll?: string;\r\n  create_at?: string;\r\n  update_at?: string;\r\n  delete_at?: string;\r\n  status?: boolean;\r\n}\r\n\r\nexport interface eventData {\r\n  organizerId: string;\r\n  title: string;\r\n  description: string;\r\n  location: string;\r\n  startTime: Date;\r\n  endTime: Date;\r\n  musicianPreferences: string[];\r\n  budget: number;\r\n}\r\n\r\nexport type EventAlert = {\r\n  id: string; // ID único de la alerta\r\n  eventId: string; // ID del evento relacionado\r\n  title: string; // Título del evento\r\n  description?: string; // Descripción opcional\r\n  location: string; // Lugar del evento\r\n  startDateTime: string; // Fecha/hora inicio (ISO string)\r\n  endDateTime: string; // Fecha/hora fin (ISO string)\r\n  organizerId: string; // UID del organizador\r\n  musicianId: string; // UID del músico que recibe la alerta\r\n  createdAt: string; // Fecha de creación de la alerta\r\n  status: 'pending' | 'accepted' | 'declined'; // Estado\r\n  calendarEventId?: string; // ID del evento en Google Calendar (si se agregó)\r\n};\r\n\r\nexport interface Event {\r\n  id: string; // ID de Firestore\r\n  user: string; // Email del organizador\r\n  eventName: string;\r\n  eventType: string;\r\n  date: string;\r\n  time: string;\r\n  location: string;\r\n  duration: string;\r\n  instrument: string;\r\n  bringInstrument: boolean;\r\n  comment: string;\r\n  budget: string;\r\n  flyerUrl?: string;\r\n  songs: string[];\r\n  recommendations: string[];\r\n  mapsLink: string;\r\n  status:\r\n    | 'pending_musician'\r\n    | 'musician_assigned'\r\n    | 'completed'\r\n    | 'cancelled'\r\n    | 'musician_cancelled';\r\n  assignedMusicianId?: string;\r\n  interestedMusicians?: string[];\r\n  createdAt: string;\r\n  updatedAt: string;\r\n}\r\n\r\nexport interface FileMetadata {\r\n  key: string;\r\n  url: string;\r\n  size: number;\r\n  mimetype: string;\r\n  originalName: string;\r\n}\r\n\r\n// Image System Types\r\nexport interface Image {\r\n  id: string;\r\n  key: string; // S3 key\r\n  url: string; // Signed URL\r\n  originalName: string;\r\n  fileName: string;\r\n  size: number;\r\n  mimetype: string;\r\n  category: 'profile' | 'post' | 'event' | 'gallery' | 'admin';\r\n  userId: string; // Owner of the image\r\n  description?: string;\r\n  tags?: string[];\r\n  metadata?: Record<string, any>;\r\n  isPublic: boolean;\r\n  isActive: boolean;\r\n  createdAt: string;\r\n  updatedAt: string;\r\n  expiresAt?: string; // For temporary URLs\r\n}\r\n\r\nexport interface ImageUploadRequest {\r\n  category: 'profile' | 'post' | 'event' | 'gallery' | 'admin';\r\n  description?: string;\r\n  tags?: string[];\r\n  isPublic?: boolean;\r\n  metadata?: Record<string, any>;\r\n}\r\n\r\nexport interface ImageUpdateRequest {\r\n  description?: string;\r\n  tags?: string[];\r\n  isPublic?: boolean;\r\n  metadata?: Record<string, any>;\r\n  isActive?: boolean;\r\n}\r\n\r\nexport interface ImageFilters {\r\n  category?: 'profile' | 'post' | 'event' | 'gallery' | 'admin';\r\n  userId?: string;\r\n  isPublic?: boolean;\r\n  isActive?: boolean;\r\n  tags?: string[];\r\n  dateFrom?: string;\r\n  dateTo?: string;\r\n  search?: string;\r\n  limit?: number;\r\n  offset?: number;\r\n  metadata?: Record<string, any>;\r\n}\r\n\r\nexport interface ImageStats {\r\n  totalImages: number;\r\n  totalSize: number;\r\n  imagesByCategory: Record<string, number>;\r\n  imagesByUser: Record<string, number>;\r\n  recentUploads: Image[];\r\n}\r\n\r\n// Chat Types\r\nexport interface Message {\r\n  id: string;\r\n  conversationId: string;\r\n  senderId: string;\r\n  senderName: string;\r\n  content: string;\r\n  timestamp: string;\r\n  status: 'sent' | 'delivered' | 'read';\r\n  type: 'text' | 'image' | 'audio' | 'file';\r\n}\r\n\r\nexport interface Conversation {\r\n  id: string;\r\n  participants: string[];\r\n  lastMessage?: Message;\r\n  unreadCount: number;\r\n  updatedAt: string;\r\n  isActive: boolean;\r\n  createdAt: string;\r\n}\r\n\r\nexport interface ChatFilters {\r\n  search?: string;\r\n  unreadOnly?: boolean;\r\n  dateFrom?: string;\r\n  dateTo?: string;\r\n}\r\n\r\n// Interfaces para búsqueda de músicos\r\nexport interface EventRequest {\r\n  id: string;\r\n  eventName: string;\r\n  eventType: string;\r\n  date: string;\r\n  time: string;\r\n  location: string;\r\n  duration: string;\r\n  instrument: string;\r\n  budget: string;\r\n  description?: string;\r\n  requirements?: string;\r\n}\r\n\r\nexport interface Musician {\r\n  userEmail: string;\r\n  name: string;\r\n  lastName: string;\r\n  instruments: string[];\r\n  hasOwnInstruments: boolean;\r\n  experience: number;\r\n  bio?: string;\r\n  location: string;\r\n  hourlyRate: number;\r\n  isApproved: boolean;\r\n  isAvailable: boolean;\r\n  phone?: string;\r\n  socialMedia?: Record<string, string>;\r\n  rating: number;\r\n  totalEvents: number;\r\n  completedEvents: number;\r\n}\r\n\r\nexport interface MusicianSearchRequest {\r\n  eventId: string;\r\n  instrument: string;\r\n  location?: string;\r\n  budget?: number;\r\n  date?: string;\r\n  time?: string;\r\n  duration?: string;\r\n  eventType?: string;\r\n  maxDistance?: number;\r\n}\r\n\r\nexport interface MusicianSearchResponse {\r\n  userEmail: string;\r\n  name: string;\r\n  lastName: string;\r\n  instruments: string[];\r\n  hasOwnInstruments: boolean;\r\n  experience: number;\r\n  hourlyRate: number;\r\n  location: string;\r\n  isAvailable: boolean;\r\n  rating: number;\r\n  distance?: number;\r\n  matchScore: number;\r\n  availability: {\r\n    isAvailable: boolean;\r\n    conflicts: string[];\r\n  };\r\n}\r\n"],"mappings":"","ignoreList":[]}