dd4fa2be6f839c86602b22df07a5d707
"use strict";

/* istanbul ignore next */
function cov_2lmjziyldx() {
  var path = "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\controllers\\paymentSystemController.ts";
  var hash = "d9b53b1c3d813deaa7a6727c14079f17e56f93bc";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\controllers\\paymentSystemController.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 12,
          column: 3
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "2": {
        start: {
          line: 3,
          column: 26
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "3": {
        start: {
          line: 4,
          column: 15
        },
        end: {
          line: 4,
          column: 52
        }
      },
      "4": {
        start: {
          line: 5,
          column: 4
        },
        end: {
          line: 7,
          column: 5
        }
      },
      "5": {
        start: {
          line: 6,
          column: 6
        },
        end: {
          line: 6,
          column: 68
        }
      },
      "6": {
        start: {
          line: 6,
          column: 51
        },
        end: {
          line: 6,
          column: 63
        }
      },
      "7": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 39
        }
      },
      "8": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "9": {
        start: {
          line: 10,
          column: 26
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "10": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 17
        }
      },
      "11": {
        start: {
          line: 13,
          column: 25
        },
        end: {
          line: 17,
          column: 2
        }
      },
      "12": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 72
        }
      },
      "13": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 21
        }
      },
      "14": {
        start: {
          line: 18,
          column: 19
        },
        end: {
          line: 34,
          column: 4
        }
      },
      "15": {
        start: {
          line: 19,
          column: 18
        },
        end: {
          line: 26,
          column: 5
        }
      },
      "16": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 24,
          column: 10
        }
      },
      "17": {
        start: {
          line: 21,
          column: 21
        },
        end: {
          line: 21,
          column: 23
        }
      },
      "18": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "19": {
        start: {
          line: 22,
          column: 29
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "20": {
        start: {
          line: 22,
          column: 77
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "21": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 22
        }
      },
      "22": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 26
        }
      },
      "23": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 33,
          column: 6
        }
      },
      "24": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "25": {
        start: {
          line: 28,
          column: 35
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "26": {
        start: {
          line: 29,
          column: 21
        },
        end: {
          line: 29,
          column: 23
        }
      },
      "27": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "28": {
        start: {
          line: 30,
          column: 25
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "29": {
        start: {
          line: 30,
          column: 38
        },
        end: {
          line: 30,
          column: 50
        }
      },
      "30": {
        start: {
          line: 30,
          column: 56
        },
        end: {
          line: 30,
          column: 57
        }
      },
      "31": {
        start: {
          line: 30,
          column: 78
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "32": {
        start: {
          line: 30,
          column: 102
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "33": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 40
        }
      },
      "34": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 22
        }
      },
      "35": {
        start: {
          line: 35,
          column: 16
        },
        end: {
          line: 43,
          column: 1
        }
      },
      "36": {
        start: {
          line: 36,
          column: 28
        },
        end: {
          line: 36,
          column: 110
        }
      },
      "37": {
        start: {
          line: 36,
          column: 91
        },
        end: {
          line: 36,
          column: 106
        }
      },
      "38": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 42,
          column: 7
        }
      },
      "39": {
        start: {
          line: 38,
          column: 36
        },
        end: {
          line: 38,
          column: 97
        }
      },
      "40": {
        start: {
          line: 38,
          column: 42
        },
        end: {
          line: 38,
          column: 70
        }
      },
      "41": {
        start: {
          line: 38,
          column: 85
        },
        end: {
          line: 38,
          column: 95
        }
      },
      "42": {
        start: {
          line: 39,
          column: 35
        },
        end: {
          line: 39,
          column: 100
        }
      },
      "43": {
        start: {
          line: 39,
          column: 41
        },
        end: {
          line: 39,
          column: 73
        }
      },
      "44": {
        start: {
          line: 39,
          column: 88
        },
        end: {
          line: 39,
          column: 98
        }
      },
      "45": {
        start: {
          line: 40,
          column: 32
        },
        end: {
          line: 40,
          column: 116
        }
      },
      "46": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 78
        }
      },
      "47": {
        start: {
          line: 44,
          column: 0
        },
        end: {
          line: 44,
          column: 62
        }
      },
      "48": {
        start: {
          line: 45,
          column: 0
        },
        end: {
          line: 45,
          column: 41
        }
      },
      "49": {
        start: {
          line: 46,
          column: 31
        },
        end: {
          line: 46,
          column: 74
        }
      },
      "50": {
        start: {
          line: 47,
          column: 24
        },
        end: {
          line: 47,
          column: 60
        }
      },
      "51": {
        start: {
          line: 48,
          column: 19
        },
        end: {
          line: 48,
          column: 47
        }
      },
      "52": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 80
        }
      },
      "53": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 80,
          column: 11
        }
      },
      "54": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 79,
          column: 13
        }
      },
      "55": {
        start: {
          line: 60,
          column: 31
        },
        end: {
          line: 60,
          column: 96
        }
      },
      "56": {
        start: {
          line: 61,
          column: 16
        },
        end: {
          line: 64,
          column: 17
        }
      },
      "57": {
        start: {
          line: 62,
          column: 20
        },
        end: {
          line: 62,
          column: 78
        }
      },
      "58": {
        start: {
          line: 63,
          column: 20
        },
        end: {
          line: 63,
          column: 27
        }
      },
      "59": {
        start: {
          line: 65,
          column: 32
        },
        end: {
          line: 65,
          column: 80
        }
      },
      "60": {
        start: {
          line: 66,
          column: 16
        },
        end: {
          line: 69,
          column: 19
        }
      },
      "61": {
        start: {
          line: 72,
          column: 16
        },
        end: {
          line: 74,
          column: 19
        }
      },
      "62": {
        start: {
          line: 75,
          column: 16
        },
        end: {
          line: 78,
          column: 19
        }
      },
      "63": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 115,
          column: 11
        }
      },
      "64": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 114,
          column: 13
        }
      },
      "65": {
        start: {
          line: 89,
          column: 31
        },
        end: {
          line: 89,
          column: 96
        }
      },
      "66": {
        start: {
          line: 90,
          column: 16
        },
        end: {
          line: 93,
          column: 17
        }
      },
      "67": {
        start: {
          line: 91,
          column: 20
        },
        end: {
          line: 91,
          column: 78
        }
      },
      "68": {
        start: {
          line: 92,
          column: 20
        },
        end: {
          line: 92,
          column: 27
        }
      },
      "69": {
        start: {
          line: 94,
          column: 36
        },
        end: {
          line: 94,
          column: 44
        }
      },
      "70": {
        start: {
          line: 96,
          column: 16
        },
        end: {
          line: 99,
          column: 17
        }
      },
      "71": {
        start: {
          line: 97,
          column: 20
        },
        end: {
          line: 97,
          column: 92
        }
      },
      "72": {
        start: {
          line: 98,
          column: 20
        },
        end: {
          line: 98,
          column: 27
        }
      },
      "73": {
        start: {
          line: 100,
          column: 36
        },
        end: {
          line: 100,
          column: 102
        }
      },
      "74": {
        start: {
          line: 101,
          column: 16
        },
        end: {
          line: 104,
          column: 19
        }
      },
      "75": {
        start: {
          line: 107,
          column: 16
        },
        end: {
          line: 109,
          column: 19
        }
      },
      "76": {
        start: {
          line: 110,
          column: 16
        },
        end: {
          line: 113,
          column: 19
        }
      },
      "77": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 144,
          column: 11
        }
      },
      "78": {
        start: {
          line: 123,
          column: 12
        },
        end: {
          line: 143,
          column: 13
        }
      },
      "79": {
        start: {
          line: 124,
          column: 31
        },
        end: {
          line: 124,
          column: 96
        }
      },
      "80": {
        start: {
          line: 125,
          column: 16
        },
        end: {
          line: 128,
          column: 17
        }
      },
      "81": {
        start: {
          line: 126,
          column: 20
        },
        end: {
          line: 126,
          column: 78
        }
      },
      "82": {
        start: {
          line: 127,
          column: 20
        },
        end: {
          line: 127,
          column: 27
        }
      },
      "83": {
        start: {
          line: 129,
          column: 33
        },
        end: {
          line: 129,
          column: 86
        }
      },
      "84": {
        start: {
          line: 130,
          column: 16
        },
        end: {
          line: 133,
          column: 19
        }
      },
      "85": {
        start: {
          line: 136,
          column: 16
        },
        end: {
          line: 138,
          column: 19
        }
      },
      "86": {
        start: {
          line: 139,
          column: 16
        },
        end: {
          line: 142,
          column: 19
        }
      },
      "87": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 201,
          column: 11
        }
      },
      "88": {
        start: {
          line: 152,
          column: 12
        },
        end: {
          line: 200,
          column: 13
        }
      },
      "89": {
        start: {
          line: 153,
          column: 31
        },
        end: {
          line: 153,
          column: 96
        }
      },
      "90": {
        start: {
          line: 154,
          column: 16
        },
        end: {
          line: 157,
          column: 17
        }
      },
      "91": {
        start: {
          line: 155,
          column: 20
        },
        end: {
          line: 155,
          column: 78
        }
      },
      "92": {
        start: {
          line: 156,
          column: 20
        },
        end: {
          line: 156,
          column: 27
        }
      },
      "93": {
        start: {
          line: 158,
          column: 16
        },
        end: {
          line: 161,
          column: 17
        }
      },
      "94": {
        start: {
          line: 159,
          column: 20
        },
        end: {
          line: 159,
          column: 96
        }
      },
      "95": {
        start: {
          line: 160,
          column: 20
        },
        end: {
          line: 160,
          column: 27
        }
      },
      "96": {
        start: {
          line: 162,
          column: 132
        },
        end: {
          line: 162,
          column: 140
        }
      },
      "97": {
        start: {
          line: 163,
          column: 16
        },
        end: {
          line: 166,
          column: 17
        }
      },
      "98": {
        start: {
          line: 164,
          column: 20
        },
        end: {
          line: 164,
          column: 70
        }
      },
      "99": {
        start: {
          line: 165,
          column: 20
        },
        end: {
          line: 165,
          column: 27
        }
      },
      "100": {
        start: {
          line: 167,
          column: 16
        },
        end: {
          line: 170,
          column: 17
        }
      },
      "101": {
        start: {
          line: 168,
          column: 20
        },
        end: {
          line: 168,
          column: 99
        }
      },
      "102": {
        start: {
          line: 169,
          column: 20
        },
        end: {
          line: 169,
          column: 27
        }
      },
      "103": {
        start: {
          line: 171,
          column: 36
        },
        end: {
          line: 181,
          column: 17
        }
      },
      "104": {
        start: {
          line: 182,
          column: 16
        },
        end: {
          line: 182,
          column: 114
        }
      },
      "105": {
        start: {
          line: 183,
          column: 32
        },
        end: {
          line: 183,
          column: 99
        }
      },
      "106": {
        start: {
          line: 185,
          column: 16
        },
        end: {
          line: 185,
          column: 72
        }
      },
      "107": {
        start: {
          line: 186,
          column: 16
        },
        end: {
          line: 190,
          column: 19
        }
      },
      "108": {
        start: {
          line: 193,
          column: 16
        },
        end: {
          line: 195,
          column: 19
        }
      },
      "109": {
        start: {
          line: 196,
          column: 16
        },
        end: {
          line: 199,
          column: 19
        }
      },
      "110": {
        start: {
          line: 207,
          column: 8
        },
        end: {
          line: 264,
          column: 11
        }
      },
      "111": {
        start: {
          line: 208,
          column: 12
        },
        end: {
          line: 263,
          column: 13
        }
      },
      "112": {
        start: {
          line: 210,
          column: 39
        },
        end: {
          line: 212,
          column: 26
        }
      },
      "113": {
        start: {
          line: 213,
          column: 36
        },
        end: {
          line: 213,
          column: 88
        }
      },
      "114": {
        start: {
          line: 213,
          column: 67
        },
        end: {
          line: 213,
          column: 87
        }
      },
      "115": {
        start: {
          line: 215,
          column: 45
        },
        end: {
          line: 232,
          column: 19
        }
      },
      "116": {
        start: {
          line: 215,
          column: 75
        },
        end: {
          line: 232,
          column: 18
        }
      },
      "117": {
        start: {
          line: 233,
          column: 16
        },
        end: {
          line: 233,
          column: 56
        }
      },
      "118": {
        start: {
          line: 234,
          column: 16
        },
        end: {
          line: 239,
          column: 19
        }
      },
      "119": {
        start: {
          line: 241,
          column: 16
        },
        end: {
          line: 259,
          column: 17
        }
      },
      "120": {
        start: {
          line: 242,
          column: 56
        },
        end: {
          line: 242,
          column: 152
        }
      },
      "121": {
        start: {
          line: 242,
          column: 91
        },
        end: {
          line: 242,
          column: 151
        }
      },
      "122": {
        start: {
          line: 243,
          column: 41
        },
        end: {
          line: 254,
          column: 23
        }
      },
      "123": {
        start: {
          line: 243,
          column: 71
        },
        end: {
          line: 254,
          column: 22
        }
      },
      "124": {
        start: {
          line: 255,
          column: 20
        },
        end: {
          line: 255,
          column: 52
        }
      },
      "125": {
        start: {
          line: 258,
          column: 20
        },
        end: {
          line: 258,
          column: 114
        }
      },
      "126": {
        start: {
          line: 262,
          column: 16
        },
        end: {
          line: 262,
          column: 112
        }
      },
      "127": {
        start: {
          line: 270,
          column: 8
        },
        end: {
          line: 294,
          column: 11
        }
      },
      "128": {
        start: {
          line: 272,
          column: 12
        },
        end: {
          line: 293,
          column: 13
        }
      },
      "129": {
        start: {
          line: 273,
          column: 31
        },
        end: {
          line: 273,
          column: 96
        }
      },
      "130": {
        start: {
          line: 274,
          column: 16
        },
        end: {
          line: 277,
          column: 17
        }
      },
      "131": {
        start: {
          line: 275,
          column: 20
        },
        end: {
          line: 275,
          column: 78
        }
      },
      "132": {
        start: {
          line: 276,
          column: 20
        },
        end: {
          line: 276,
          column: 27
        }
      },
      "133": {
        start: {
          line: 279,
          column: 16
        },
        end: {
          line: 283,
          column: 19
        }
      },
      "134": {
        start: {
          line: 286,
          column: 16
        },
        end: {
          line: 288,
          column: 19
        }
      },
      "135": {
        start: {
          line: 289,
          column: 16
        },
        end: {
          line: 292,
          column: 19
        }
      },
      "136": {
        start: {
          line: 300,
          column: 8
        },
        end: {
          line: 343,
          column: 11
        }
      },
      "137": {
        start: {
          line: 302,
          column: 12
        },
        end: {
          line: 342,
          column: 13
        }
      },
      "138": {
        start: {
          line: 303,
          column: 31
        },
        end: {
          line: 303,
          column: 96
        }
      },
      "139": {
        start: {
          line: 304,
          column: 16
        },
        end: {
          line: 307,
          column: 17
        }
      },
      "140": {
        start: {
          line: 305,
          column: 20
        },
        end: {
          line: 305,
          column: 78
        }
      },
      "141": {
        start: {
          line: 306,
          column: 20
        },
        end: {
          line: 306,
          column: 27
        }
      },
      "142": {
        start: {
          line: 308,
          column: 36
        },
        end: {
          line: 308,
          column: 46
        }
      },
      "143": {
        start: {
          line: 309,
          column: 47
        },
        end: {
          line: 309,
          column: 55
        }
      },
      "144": {
        start: {
          line: 310,
          column: 16
        },
        end: {
          line: 313,
          column: 17
        }
      },
      "145": {
        start: {
          line: 311,
          column: 20
        },
        end: {
          line: 311,
          column: 81
        }
      },
      "146": {
        start: {
          line: 312,
          column: 20
        },
        end: {
          line: 312,
          column: 27
        }
      },
      "147": {
        start: {
          line: 314,
          column: 36
        },
        end: {
          line: 319,
          column: 17
        }
      },
      "148": {
        start: {
          line: 320,
          column: 16
        },
        end: {
          line: 327,
          column: 19
        }
      },
      "149": {
        start: {
          line: 328,
          column: 32
        },
        end: {
          line: 328,
          column: 90
        }
      },
      "150": {
        start: {
          line: 329,
          column: 16
        },
        end: {
          line: 332,
          column: 19
        }
      },
      "151": {
        start: {
          line: 335,
          column: 16
        },
        end: {
          line: 337,
          column: 19
        }
      },
      "152": {
        start: {
          line: 338,
          column: 16
        },
        end: {
          line: 341,
          column: 19
        }
      },
      "153": {
        start: {
          line: 349,
          column: 8
        },
        end: {
          line: 372,
          column: 11
        }
      },
      "154": {
        start: {
          line: 351,
          column: 12
        },
        end: {
          line: 371,
          column: 13
        }
      },
      "155": {
        start: {
          line: 352,
          column: 31
        },
        end: {
          line: 352,
          column: 96
        }
      },
      "156": {
        start: {
          line: 353,
          column: 16
        },
        end: {
          line: 356,
          column: 17
        }
      },
      "157": {
        start: {
          line: 354,
          column: 20
        },
        end: {
          line: 354,
          column: 78
        }
      },
      "158": {
        start: {
          line: 355,
          column: 20
        },
        end: {
          line: 355,
          column: 27
        }
      },
      "159": {
        start: {
          line: 357,
          column: 33
        },
        end: {
          line: 357,
          column: 86
        }
      },
      "160": {
        start: {
          line: 358,
          column: 16
        },
        end: {
          line: 361,
          column: 19
        }
      },
      "161": {
        start: {
          line: 364,
          column: 16
        },
        end: {
          line: 366,
          column: 19
        }
      },
      "162": {
        start: {
          line: 367,
          column: 16
        },
        end: {
          line: 370,
          column: 19
        }
      },
      "163": {
        start: {
          line: 378,
          column: 8
        },
        end: {
          line: 411,
          column: 11
        }
      },
      "164": {
        start: {
          line: 380,
          column: 12
        },
        end: {
          line: 410,
          column: 13
        }
      },
      "165": {
        start: {
          line: 381,
          column: 31
        },
        end: {
          line: 381,
          column: 96
        }
      },
      "166": {
        start: {
          line: 382,
          column: 16
        },
        end: {
          line: 385,
          column: 17
        }
      },
      "167": {
        start: {
          line: 383,
          column: 20
        },
        end: {
          line: 383,
          column: 78
        }
      },
      "168": {
        start: {
          line: 384,
          column: 20
        },
        end: {
          line: 384,
          column: 27
        }
      },
      "169": {
        start: {
          line: 386,
          column: 50
        },
        end: {
          line: 386,
          column: 58
        }
      },
      "170": {
        start: {
          line: 387,
          column: 16
        },
        end: {
          line: 390,
          column: 17
        }
      },
      "171": {
        start: {
          line: 388,
          column: 20
        },
        end: {
          line: 388,
          column: 83
        }
      },
      "172": {
        start: {
          line: 389,
          column: 20
        },
        end: {
          line: 389,
          column: 27
        }
      },
      "173": {
        start: {
          line: 391,
          column: 39
        },
        end: {
          line: 394,
          column: 17
        }
      },
      "174": {
        start: {
          line: 395,
          column: 16
        },
        end: {
          line: 395,
          column: 136
        }
      },
      "175": {
        start: {
          line: 396,
          column: 35
        },
        end: {
          line: 396,
          column: 102
        }
      },
      "176": {
        start: {
          line: 397,
          column: 16
        },
        end: {
          line: 400,
          column: 19
        }
      },
      "177": {
        start: {
          line: 403,
          column: 16
        },
        end: {
          line: 405,
          column: 19
        }
      },
      "178": {
        start: {
          line: 406,
          column: 16
        },
        end: {
          line: 409,
          column: 19
        }
      },
      "179": {
        start: {
          line: 418,
          column: 8
        },
        end: {
          line: 433,
          column: 11
        }
      },
      "180": {
        start: {
          line: 419,
          column: 12
        },
        end: {
          line: 432,
          column: 13
        }
      },
      "181": {
        start: {
          line: 420,
          column: 33
        },
        end: {
          line: 420,
          column: 79
        }
      },
      "182": {
        start: {
          line: 421,
          column: 16
        },
        end: {
          line: 424,
          column: 19
        }
      },
      "183": {
        start: {
          line: 427,
          column: 16
        },
        end: {
          line: 427,
          column: 93
        }
      },
      "184": {
        start: {
          line: 428,
          column: 16
        },
        end: {
          line: 431,
          column: 19
        }
      },
      "185": {
        start: {
          line: 439,
          column: 8
        },
        end: {
          line: 481,
          column: 11
        }
      },
      "186": {
        start: {
          line: 441,
          column: 12
        },
        end: {
          line: 480,
          column: 13
        }
      },
      "187": {
        start: {
          line: 442,
          column: 32
        },
        end: {
          line: 442,
          column: 97
        }
      },
      "188": {
        start: {
          line: 443,
          column: 38
        },
        end: {
          line: 443,
          column: 48
        }
      },
      "189": {
        start: {
          line: 444,
          column: 62
        },
        end: {
          line: 444,
          column: 70
        }
      },
      "190": {
        start: {
          line: 445,
          column: 16
        },
        end: {
          line: 448,
          column: 17
        }
      },
      "191": {
        start: {
          line: 446,
          column: 20
        },
        end: {
          line: 446,
          column: 85
        }
      },
      "192": {
        start: {
          line: 447,
          column: 20
        },
        end: {
          line: 447,
          column: 27
        }
      },
      "193": {
        start: {
          line: 450,
          column: 16
        },
        end: {
          line: 455,
          column: 17
        }
      },
      "194": {
        start: {
          line: 451,
          column: 20
        },
        end: {
          line: 453,
          column: 23
        }
      },
      "195": {
        start: {
          line: 454,
          column: 20
        },
        end: {
          line: 454,
          column: 27
        }
      },
      "196": {
        start: {
          line: 456,
          column: 16
        },
        end: {
          line: 456,
          column: 116
        }
      },
      "197": {
        start: {
          line: 457,
          column: 16
        },
        end: {
          line: 457,
          column: 111
        }
      },
      "198": {
        start: {
          line: 459,
          column: 16
        },
        end: {
          line: 459,
          column: 90
        }
      },
      "199": {
        start: {
          line: 460,
          column: 16
        },
        end: {
          line: 470,
          column: 19
        }
      },
      "200": {
        start: {
          line: 473,
          column: 16
        },
        end: {
          line: 475,
          column: 19
        }
      },
      "201": {
        start: {
          line: 476,
          column: 16
        },
        end: {
          line: 479,
          column: 19
        }
      },
      "202": {
        start: {
          line: 487,
          column: 8
        },
        end: {
          line: 541,
          column: 11
        }
      },
      "203": {
        start: {
          line: 488,
          column: 12
        },
        end: {
          line: 540,
          column: 13
        }
      },
      "204": {
        start: {
          line: 490,
          column: 35
        },
        end: {
          line: 490,
          column: 103
        }
      },
      "205": {
        start: {
          line: 491,
          column: 16
        },
        end: {
          line: 492,
          column: 27
        }
      },
      "206": {
        start: {
          line: 492,
          column: 20
        },
        end: {
          line: 492,
          column: 27
        }
      },
      "207": {
        start: {
          line: 493,
          column: 32
        },
        end: {
          line: 493,
          column: 49
        }
      },
      "208": {
        start: {
          line: 494,
          column: 31
        },
        end: {
          line: 494,
          column: 45
        }
      },
      "209": {
        start: {
          line: 496,
          column: 16
        },
        end: {
          line: 513,
          column: 19
        }
      },
      "210": {
        start: {
          line: 515,
          column: 16
        },
        end: {
          line: 533,
          column: 17
        }
      },
      "211": {
        start: {
          line: 516,
          column: 56
        },
        end: {
          line: 516,
          column: 152
        }
      },
      "212": {
        start: {
          line: 516,
          column: 91
        },
        end: {
          line: 516,
          column: 151
        }
      },
      "213": {
        start: {
          line: 517,
          column: 20
        },
        end: {
          line: 529,
          column: 23
        }
      },
      "214": {
        start: {
          line: 532,
          column: 20
        },
        end: {
          line: 532,
          column: 106
        }
      },
      "215": {
        start: {
          line: 534,
          column: 16
        },
        end: {
          line: 536,
          column: 19
        }
      },
      "216": {
        start: {
          line: 539,
          column: 16
        },
        end: {
          line: 539,
          column: 115
        }
      },
      "217": {
        start: {
          line: 547,
          column: 8
        },
        end: {
          line: 562,
          column: 11
        }
      },
      "218": {
        start: {
          line: 548,
          column: 12
        },
        end: {
          line: 561,
          column: 13
        }
      },
      "219": {
        start: {
          line: 549,
          column: 36
        },
        end: {
          line: 549,
          column: 85
        }
      },
      "220": {
        start: {
          line: 550,
          column: 16
        },
        end: {
          line: 553,
          column: 19
        }
      },
      "221": {
        start: {
          line: 556,
          column: 16
        },
        end: {
          line: 556,
          column: 91
        }
      },
      "222": {
        start: {
          line: 557,
          column: 16
        },
        end: {
          line: 560,
          column: 19
        }
      },
      "223": {
        start: {
          line: 568,
          column: 8
        },
        end: {
          line: 594,
          column: 11
        }
      },
      "224": {
        start: {
          line: 570,
          column: 12
        },
        end: {
          line: 593,
          column: 13
        }
      },
      "225": {
        start: {
          line: 571,
          column: 32
        },
        end: {
          line: 571,
          column: 97
        }
      },
      "226": {
        start: {
          line: 572,
          column: 41
        },
        end: {
          line: 572,
          column: 51
        }
      },
      "227": {
        start: {
          line: 573,
          column: 44
        },
        end: {
          line: 573,
          column: 52
        }
      },
      "228": {
        start: {
          line: 574,
          column: 16
        },
        end: {
          line: 577,
          column: 17
        }
      },
      "229": {
        start: {
          line: 575,
          column: 20
        },
        end: {
          line: 575,
          column: 85
        }
      },
      "230": {
        start: {
          line: 576,
          column: 20
        },
        end: {
          line: 576,
          column: 27
        }
      },
      "231": {
        start: {
          line: 578,
          column: 16
        },
        end: {
          line: 578,
          column: 116
        }
      },
      "232": {
        start: {
          line: 579,
          column: 16
        },
        end: {
          line: 579,
          column: 100
        }
      },
      "233": {
        start: {
          line: 580,
          column: 16
        },
        end: {
          line: 583,
          column: 19
        }
      },
      "234": {
        start: {
          line: 586,
          column: 16
        },
        end: {
          line: 588,
          column: 19
        }
      },
      "235": {
        start: {
          line: 589,
          column: 16
        },
        end: {
          line: 592,
          column: 19
        }
      },
      "236": {
        start: {
          line: 600,
          column: 8
        },
        end: {
          line: 615,
          column: 11
        }
      },
      "237": {
        start: {
          line: 601,
          column: 12
        },
        end: {
          line: 614,
          column: 13
        }
      },
      "238": {
        start: {
          line: 602,
          column: 35
        },
        end: {
          line: 602,
          column: 83
        }
      },
      "239": {
        start: {
          line: 603,
          column: 16
        },
        end: {
          line: 606,
          column: 19
        }
      },
      "240": {
        start: {
          line: 609,
          column: 16
        },
        end: {
          line: 609,
          column: 94
        }
      },
      "241": {
        start: {
          line: 610,
          column: 16
        },
        end: {
          line: 613,
          column: 19
        }
      },
      "242": {
        start: {
          line: 618,
          column: 0
        },
        end: {
          line: 618,
          column: 58
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 2,
            column: 75
          }
        },
        loc: {
          start: {
            line: 2,
            column: 96
          },
          end: {
            line: 9,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 6,
            column: 38
          },
          end: {
            line: 6,
            column: 39
          }
        },
        loc: {
          start: {
            line: 6,
            column: 49
          },
          end: {
            line: 6,
            column: 65
          }
        },
        line: 6
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 9,
            column: 7
          }
        },
        loc: {
          start: {
            line: 9,
            column: 28
          },
          end: {
            line: 12,
            column: 1
          }
        },
        line: 9
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 13,
            column: 81
          }
        },
        loc: {
          start: {
            line: 13,
            column: 95
          },
          end: {
            line: 15,
            column: 1
          }
        },
        line: 13
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 15,
            column: 6
          }
        },
        loc: {
          start: {
            line: 15,
            column: 20
          },
          end: {
            line: 17,
            column: 1
          }
        },
        line: 15
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 18,
            column: 51
          },
          end: {
            line: 18,
            column: 52
          }
        },
        loc: {
          start: {
            line: 18,
            column: 63
          },
          end: {
            line: 34,
            column: 1
          }
        },
        line: 18
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 19,
            column: 18
          },
          end: {
            line: 19,
            column: 19
          }
        },
        loc: {
          start: {
            line: 19,
            column: 30
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 19
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 20,
            column: 49
          }
        },
        loc: {
          start: {
            line: 20,
            column: 61
          },
          end: {
            line: 24,
            column: 9
          }
        },
        line: 20
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 27,
            column: 11
          },
          end: {
            line: 27,
            column: 12
          }
        },
        loc: {
          start: {
            line: 27,
            column: 26
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 27
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 35,
            column: 44
          },
          end: {
            line: 35,
            column: 45
          }
        },
        loc: {
          start: {
            line: 35,
            column: 89
          },
          end: {
            line: 43,
            column: 1
          }
        },
        line: 35
      },
      "10": {
        name: "adopt",
        decl: {
          start: {
            line: 36,
            column: 13
          },
          end: {
            line: 36,
            column: 18
          }
        },
        loc: {
          start: {
            line: 36,
            column: 26
          },
          end: {
            line: 36,
            column: 112
          }
        },
        line: 36
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 36,
            column: 70
          },
          end: {
            line: 36,
            column: 71
          }
        },
        loc: {
          start: {
            line: 36,
            column: 89
          },
          end: {
            line: 36,
            column: 108
          }
        },
        line: 36
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 37,
            column: 36
          },
          end: {
            line: 37,
            column: 37
          }
        },
        loc: {
          start: {
            line: 37,
            column: 63
          },
          end: {
            line: 42,
            column: 5
          }
        },
        line: 37
      },
      "13": {
        name: "fulfilled",
        decl: {
          start: {
            line: 38,
            column: 17
          },
          end: {
            line: 38,
            column: 26
          }
        },
        loc: {
          start: {
            line: 38,
            column: 34
          },
          end: {
            line: 38,
            column: 99
          }
        },
        line: 38
      },
      "14": {
        name: "rejected",
        decl: {
          start: {
            line: 39,
            column: 17
          },
          end: {
            line: 39,
            column: 25
          }
        },
        loc: {
          start: {
            line: 39,
            column: 33
          },
          end: {
            line: 39,
            column: 102
          }
        },
        line: 39
      },
      "15": {
        name: "step",
        decl: {
          start: {
            line: 40,
            column: 17
          },
          end: {
            line: 40,
            column: 21
          }
        },
        loc: {
          start: {
            line: 40,
            column: 30
          },
          end: {
            line: 40,
            column: 118
          }
        },
        line: 40
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 50,
            column: 4
          },
          end: {
            line: 50,
            column: 5
          }
        },
        loc: {
          start: {
            line: 50,
            column: 18
          },
          end: {
            line: 52,
            column: 5
          }
        },
        line: 50
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 56,
            column: 4
          },
          end: {
            line: 56,
            column: 5
          }
        },
        loc: {
          start: {
            line: 56,
            column: 29
          },
          end: {
            line: 81,
            column: 5
          }
        },
        line: 56
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 57,
            column: 47
          },
          end: {
            line: 57,
            column: 48
          }
        },
        loc: {
          start: {
            line: 57,
            column: 60
          },
          end: {
            line: 80,
            column: 9
          }
        },
        line: 57
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 85,
            column: 4
          },
          end: {
            line: 85,
            column: 5
          }
        },
        loc: {
          start: {
            line: 85,
            column: 34
          },
          end: {
            line: 116,
            column: 5
          }
        },
        line: 85
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 86,
            column: 47
          },
          end: {
            line: 86,
            column: 48
          }
        },
        loc: {
          start: {
            line: 86,
            column: 60
          },
          end: {
            line: 115,
            column: 9
          }
        },
        line: 86
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 120,
            column: 4
          },
          end: {
            line: 120,
            column: 5
          }
        },
        loc: {
          start: {
            line: 120,
            column: 34
          },
          end: {
            line: 145,
            column: 5
          }
        },
        line: 120
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 121,
            column: 47
          },
          end: {
            line: 121,
            column: 48
          }
        },
        loc: {
          start: {
            line: 121,
            column: 60
          },
          end: {
            line: 144,
            column: 9
          }
        },
        line: 121
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 149,
            column: 4
          },
          end: {
            line: 149,
            column: 5
          }
        },
        loc: {
          start: {
            line: 149,
            column: 35
          },
          end: {
            line: 202,
            column: 5
          }
        },
        line: 149
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 150,
            column: 47
          },
          end: {
            line: 150,
            column: 48
          }
        },
        loc: {
          start: {
            line: 150,
            column: 60
          },
          end: {
            line: 201,
            column: 9
          }
        },
        line: 150
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 206,
            column: 4
          },
          end: {
            line: 206,
            column: 5
          }
        },
        loc: {
          start: {
            line: 206,
            column: 49
          },
          end: {
            line: 265,
            column: 5
          }
        },
        line: 206
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 207,
            column: 47
          },
          end: {
            line: 207,
            column: 48
          }
        },
        loc: {
          start: {
            line: 207,
            column: 60
          },
          end: {
            line: 264,
            column: 9
          }
        },
        line: 207
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 213,
            column: 60
          },
          end: {
            line: 213,
            column: 61
          }
        },
        loc: {
          start: {
            line: 213,
            column: 67
          },
          end: {
            line: 213,
            column: 87
          }
        },
        line: 213
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 215,
            column: 61
          },
          end: {
            line: 215,
            column: 62
          }
        },
        loc: {
          start: {
            line: 215,
            column: 75
          },
          end: {
            line: 232,
            column: 18
          }
        },
        line: 215
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 242,
            column: 85
          },
          end: {
            line: 242,
            column: 86
          }
        },
        loc: {
          start: {
            line: 242,
            column: 91
          },
          end: {
            line: 242,
            column: 151
          }
        },
        line: 242
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 243,
            column: 57
          },
          end: {
            line: 243,
            column: 58
          }
        },
        loc: {
          start: {
            line: 243,
            column: 71
          },
          end: {
            line: 254,
            column: 22
          }
        },
        line: 243
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 269,
            column: 4
          },
          end: {
            line: 269,
            column: 5
          }
        },
        loc: {
          start: {
            line: 269,
            column: 30
          },
          end: {
            line: 295,
            column: 5
          }
        },
        line: 269
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 270,
            column: 47
          },
          end: {
            line: 270,
            column: 48
          }
        },
        loc: {
          start: {
            line: 270,
            column: 60
          },
          end: {
            line: 294,
            column: 9
          }
        },
        line: 270
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 299,
            column: 4
          },
          end: {
            line: 299,
            column: 5
          }
        },
        loc: {
          start: {
            line: 299,
            column: 34
          },
          end: {
            line: 344,
            column: 5
          }
        },
        line: 299
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 300,
            column: 47
          },
          end: {
            line: 300,
            column: 48
          }
        },
        loc: {
          start: {
            line: 300,
            column: 60
          },
          end: {
            line: 343,
            column: 9
          }
        },
        line: 300
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 348,
            column: 4
          },
          end: {
            line: 348,
            column: 5
          }
        },
        loc: {
          start: {
            line: 348,
            column: 34
          },
          end: {
            line: 373,
            column: 5
          }
        },
        line: 348
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 349,
            column: 47
          },
          end: {
            line: 349,
            column: 48
          }
        },
        loc: {
          start: {
            line: 349,
            column: 60
          },
          end: {
            line: 372,
            column: 9
          }
        },
        line: 349
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 377,
            column: 4
          },
          end: {
            line: 377,
            column: 5
          }
        },
        loc: {
          start: {
            line: 377,
            column: 32
          },
          end: {
            line: 412,
            column: 5
          }
        },
        line: 377
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 378,
            column: 47
          },
          end: {
            line: 378,
            column: 48
          }
        },
        loc: {
          start: {
            line: 378,
            column: 60
          },
          end: {
            line: 411,
            column: 9
          }
        },
        line: 378
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 417,
            column: 4
          },
          end: {
            line: 417,
            column: 5
          }
        },
        loc: {
          start: {
            line: 417,
            column: 33
          },
          end: {
            line: 434,
            column: 5
          }
        },
        line: 417
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 418,
            column: 47
          },
          end: {
            line: 418,
            column: 48
          }
        },
        loc: {
          start: {
            line: 418,
            column: 60
          },
          end: {
            line: 433,
            column: 9
          }
        },
        line: 418
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 438,
            column: 4
          },
          end: {
            line: 438,
            column: 5
          }
        },
        loc: {
          start: {
            line: 438,
            column: 28
          },
          end: {
            line: 482,
            column: 5
          }
        },
        line: 438
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 439,
            column: 47
          },
          end: {
            line: 439,
            column: 48
          }
        },
        loc: {
          start: {
            line: 439,
            column: 60
          },
          end: {
            line: 481,
            column: 9
          }
        },
        line: 439
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 486,
            column: 4
          },
          end: {
            line: 486,
            column: 5
          }
        },
        loc: {
          start: {
            line: 486,
            column: 67
          },
          end: {
            line: 542,
            column: 5
          }
        },
        line: 486
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 487,
            column: 47
          },
          end: {
            line: 487,
            column: 48
          }
        },
        loc: {
          start: {
            line: 487,
            column: 60
          },
          end: {
            line: 541,
            column: 9
          }
        },
        line: 487
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 516,
            column: 85
          },
          end: {
            line: 516,
            column: 86
          }
        },
        loc: {
          start: {
            line: 516,
            column: 91
          },
          end: {
            line: 516,
            column: 151
          }
        },
        line: 516
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 546,
            column: 4
          },
          end: {
            line: 546,
            column: 5
          }
        },
        loc: {
          start: {
            line: 546,
            column: 36
          },
          end: {
            line: 563,
            column: 5
          }
        },
        line: 546
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 547,
            column: 47
          },
          end: {
            line: 547,
            column: 48
          }
        },
        loc: {
          start: {
            line: 547,
            column: 60
          },
          end: {
            line: 562,
            column: 9
          }
        },
        line: 547
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 567,
            column: 4
          },
          end: {
            line: 567,
            column: 5
          }
        },
        loc: {
          start: {
            line: 567,
            column: 32
          },
          end: {
            line: 595,
            column: 5
          }
        },
        line: 567
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 568,
            column: 47
          },
          end: {
            line: 568,
            column: 48
          }
        },
        loc: {
          start: {
            line: 568,
            column: 60
          },
          end: {
            line: 594,
            column: 9
          }
        },
        line: 568
      },
      "50": {
        name: "(anonymous_50)",
        decl: {
          start: {
            line: 599,
            column: 4
          },
          end: {
            line: 599,
            column: 5
          }
        },
        loc: {
          start: {
            line: 599,
            column: 35
          },
          end: {
            line: 616,
            column: 5
          }
        },
        line: 599
      },
      "51": {
        name: "(anonymous_51)",
        decl: {
          start: {
            line: 600,
            column: 47
          },
          end: {
            line: 600,
            column: 48
          }
        },
        loc: {
          start: {
            line: 600,
            column: 60
          },
          end: {
            line: 615,
            column: 9
          }
        },
        line: 600
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 12,
            column: 3
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 9,
            column: 1
          }
        }, {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 12,
            column: 1
          }
        }],
        line: 2
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "4": {
        loc: {
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 13
          }
        }, {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 47
          }
        }, {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 63
          }
        }, {
          start: {
            line: 5,
            column: 67
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 10
      },
      "8": {
        loc: {
          start: {
            line: 13,
            column: 25
          },
          end: {
            line: 17,
            column: 2
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 26
          },
          end: {
            line: 13,
            column: 30
          }
        }, {
          start: {
            line: 13,
            column: 34
          },
          end: {
            line: 13,
            column: 57
          }
        }, {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "9": {
        loc: {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 15,
            column: 1
          }
        }, {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "10": {
        loc: {
          start: {
            line: 18,
            column: 19
          },
          end: {
            line: 34,
            column: 4
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 20
          },
          end: {
            line: 18,
            column: 24
          }
        }, {
          start: {
            line: 18,
            column: 28
          },
          end: {
            line: 18,
            column: 45
          }
        }, {
          start: {
            line: 18,
            column: 50
          },
          end: {
            line: 34,
            column: 4
          }
        }],
        line: 18
      },
      "11": {
        loc: {
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 24,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 20,
            column: 44
          }
        }, {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 24,
            column: 9
          }
        }],
        line: 20
      },
      "12": {
        loc: {
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 95
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 95
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "13": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "14": {
        loc: {
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 15
          }
        }, {
          start: {
            line: 28,
            column: 19
          },
          end: {
            line: 28,
            column: 33
          }
        }],
        line: 28
      },
      "15": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "16": {
        loc: {
          start: {
            line: 30,
            column: 78
          },
          end: {
            line: 30,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 78
          },
          end: {
            line: 30,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "17": {
        loc: {
          start: {
            line: 35,
            column: 16
          },
          end: {
            line: 43,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 17
          },
          end: {
            line: 35,
            column: 21
          }
        }, {
          start: {
            line: 35,
            column: 25
          },
          end: {
            line: 35,
            column: 39
          }
        }, {
          start: {
            line: 35,
            column: 44
          },
          end: {
            line: 43,
            column: 1
          }
        }],
        line: 35
      },
      "18": {
        loc: {
          start: {
            line: 36,
            column: 35
          },
          end: {
            line: 36,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 36,
            column: 56
          },
          end: {
            line: 36,
            column: 61
          }
        }, {
          start: {
            line: 36,
            column: 64
          },
          end: {
            line: 36,
            column: 109
          }
        }],
        line: 36
      },
      "19": {
        loc: {
          start: {
            line: 37,
            column: 16
          },
          end: {
            line: 37,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 37,
            column: 16
          },
          end: {
            line: 37,
            column: 17
          }
        }, {
          start: {
            line: 37,
            column: 22
          },
          end: {
            line: 37,
            column: 33
          }
        }],
        line: 37
      },
      "20": {
        loc: {
          start: {
            line: 40,
            column: 32
          },
          end: {
            line: 40,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 40,
            column: 46
          },
          end: {
            line: 40,
            column: 67
          }
        }, {
          start: {
            line: 40,
            column: 70
          },
          end: {
            line: 40,
            column: 115
          }
        }],
        line: 40
      },
      "21": {
        loc: {
          start: {
            line: 41,
            column: 51
          },
          end: {
            line: 41,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 51
          },
          end: {
            line: 41,
            column: 61
          }
        }, {
          start: {
            line: 41,
            column: 65
          },
          end: {
            line: 41,
            column: 67
          }
        }],
        line: 41
      },
      "22": {
        loc: {
          start: {
            line: 60,
            column: 31
          },
          end: {
            line: 60,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 60,
            column: 75
          },
          end: {
            line: 60,
            column: 81
          }
        }, {
          start: {
            line: 60,
            column: 84
          },
          end: {
            line: 60,
            column: 96
          }
        }],
        line: 60
      },
      "23": {
        loc: {
          start: {
            line: 60,
            column: 31
          },
          end: {
            line: 60,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 60,
            column: 31
          },
          end: {
            line: 60,
            column: 55
          }
        }, {
          start: {
            line: 60,
            column: 59
          },
          end: {
            line: 60,
            column: 72
          }
        }],
        line: 60
      },
      "24": {
        loc: {
          start: {
            line: 61,
            column: 16
          },
          end: {
            line: 64,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 61,
            column: 16
          },
          end: {
            line: 64,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 61
      },
      "25": {
        loc: {
          start: {
            line: 73,
            column: 40
          },
          end: {
            line: 73,
            column: 105
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 73,
            column: 84
          },
          end: {
            line: 73,
            column: 90
          }
        }, {
          start: {
            line: 73,
            column: 93
          },
          end: {
            line: 73,
            column: 105
          }
        }],
        line: 73
      },
      "26": {
        loc: {
          start: {
            line: 73,
            column: 40
          },
          end: {
            line: 73,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 73,
            column: 40
          },
          end: {
            line: 73,
            column: 64
          }
        }, {
          start: {
            line: 73,
            column: 68
          },
          end: {
            line: 73,
            column: 81
          }
        }],
        line: 73
      },
      "27": {
        loc: {
          start: {
            line: 89,
            column: 31
          },
          end: {
            line: 89,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 89,
            column: 75
          },
          end: {
            line: 89,
            column: 81
          }
        }, {
          start: {
            line: 89,
            column: 84
          },
          end: {
            line: 89,
            column: 96
          }
        }],
        line: 89
      },
      "28": {
        loc: {
          start: {
            line: 89,
            column: 31
          },
          end: {
            line: 89,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 89,
            column: 31
          },
          end: {
            line: 89,
            column: 55
          }
        }, {
          start: {
            line: 89,
            column: 59
          },
          end: {
            line: 89,
            column: 72
          }
        }],
        line: 89
      },
      "29": {
        loc: {
          start: {
            line: 90,
            column: 16
          },
          end: {
            line: 93,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 90,
            column: 16
          },
          end: {
            line: 93,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 90
      },
      "30": {
        loc: {
          start: {
            line: 96,
            column: 16
          },
          end: {
            line: 99,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 96,
            column: 16
          },
          end: {
            line: 99,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 96
      },
      "31": {
        loc: {
          start: {
            line: 96,
            column: 20
          },
          end: {
            line: 96,
            column: 101
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 96,
            column: 20
          },
          end: {
            line: 96,
            column: 46
          }
        }, {
          start: {
            line: 96,
            column: 50
          },
          end: {
            line: 96,
            column: 76
          }
        }, {
          start: {
            line: 96,
            column: 80
          },
          end: {
            line: 96,
            column: 101
          }
        }],
        line: 96
      },
      "32": {
        loc: {
          start: {
            line: 108,
            column: 40
          },
          end: {
            line: 108,
            column: 105
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 108,
            column: 84
          },
          end: {
            line: 108,
            column: 90
          }
        }, {
          start: {
            line: 108,
            column: 93
          },
          end: {
            line: 108,
            column: 105
          }
        }],
        line: 108
      },
      "33": {
        loc: {
          start: {
            line: 108,
            column: 40
          },
          end: {
            line: 108,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 108,
            column: 40
          },
          end: {
            line: 108,
            column: 64
          }
        }, {
          start: {
            line: 108,
            column: 68
          },
          end: {
            line: 108,
            column: 81
          }
        }],
        line: 108
      },
      "34": {
        loc: {
          start: {
            line: 124,
            column: 31
          },
          end: {
            line: 124,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 124,
            column: 75
          },
          end: {
            line: 124,
            column: 81
          }
        }, {
          start: {
            line: 124,
            column: 84
          },
          end: {
            line: 124,
            column: 96
          }
        }],
        line: 124
      },
      "35": {
        loc: {
          start: {
            line: 124,
            column: 31
          },
          end: {
            line: 124,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 124,
            column: 31
          },
          end: {
            line: 124,
            column: 55
          }
        }, {
          start: {
            line: 124,
            column: 59
          },
          end: {
            line: 124,
            column: 72
          }
        }],
        line: 124
      },
      "36": {
        loc: {
          start: {
            line: 125,
            column: 16
          },
          end: {
            line: 128,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 125,
            column: 16
          },
          end: {
            line: 128,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 125
      },
      "37": {
        loc: {
          start: {
            line: 137,
            column: 40
          },
          end: {
            line: 137,
            column: 105
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 137,
            column: 84
          },
          end: {
            line: 137,
            column: 90
          }
        }, {
          start: {
            line: 137,
            column: 93
          },
          end: {
            line: 137,
            column: 105
          }
        }],
        line: 137
      },
      "38": {
        loc: {
          start: {
            line: 137,
            column: 40
          },
          end: {
            line: 137,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 137,
            column: 40
          },
          end: {
            line: 137,
            column: 64
          }
        }, {
          start: {
            line: 137,
            column: 68
          },
          end: {
            line: 137,
            column: 81
          }
        }],
        line: 137
      },
      "39": {
        loc: {
          start: {
            line: 153,
            column: 31
          },
          end: {
            line: 153,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 153,
            column: 75
          },
          end: {
            line: 153,
            column: 81
          }
        }, {
          start: {
            line: 153,
            column: 84
          },
          end: {
            line: 153,
            column: 96
          }
        }],
        line: 153
      },
      "40": {
        loc: {
          start: {
            line: 153,
            column: 31
          },
          end: {
            line: 153,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 153,
            column: 31
          },
          end: {
            line: 153,
            column: 55
          }
        }, {
          start: {
            line: 153,
            column: 59
          },
          end: {
            line: 153,
            column: 72
          }
        }],
        line: 153
      },
      "41": {
        loc: {
          start: {
            line: 154,
            column: 16
          },
          end: {
            line: 157,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 154,
            column: 16
          },
          end: {
            line: 157,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 154
      },
      "42": {
        loc: {
          start: {
            line: 158,
            column: 16
          },
          end: {
            line: 161,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 158,
            column: 16
          },
          end: {
            line: 161,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 158
      },
      "43": {
        loc: {
          start: {
            line: 163,
            column: 16
          },
          end: {
            line: 166,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 163,
            column: 16
          },
          end: {
            line: 166,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 163
      },
      "44": {
        loc: {
          start: {
            line: 163,
            column: 20
          },
          end: {
            line: 163,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 163,
            column: 20
          },
          end: {
            line: 163,
            column: 27
          }
        }, {
          start: {
            line: 163,
            column: 31
          },
          end: {
            line: 163,
            column: 52
          }
        }],
        line: 163
      },
      "45": {
        loc: {
          start: {
            line: 167,
            column: 16
          },
          end: {
            line: 170,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 167,
            column: 16
          },
          end: {
            line: 170,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 167
      },
      "46": {
        loc: {
          start: {
            line: 167,
            column: 20
          },
          end: {
            line: 167,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 167,
            column: 20
          },
          end: {
            line: 167,
            column: 38
          }
        }, {
          start: {
            line: 167,
            column: 42
          },
          end: {
            line: 167,
            column: 51
          }
        }],
        line: 167
      },
      "47": {
        loc: {
          start: {
            line: 194,
            column: 40
          },
          end: {
            line: 194,
            column: 105
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 194,
            column: 84
          },
          end: {
            line: 194,
            column: 90
          }
        }, {
          start: {
            line: 194,
            column: 93
          },
          end: {
            line: 194,
            column: 105
          }
        }],
        line: 194
      },
      "48": {
        loc: {
          start: {
            line: 194,
            column: 40
          },
          end: {
            line: 194,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 194,
            column: 40
          },
          end: {
            line: 194,
            column: 64
          }
        }, {
          start: {
            line: 194,
            column: 68
          },
          end: {
            line: 194,
            column: 81
          }
        }],
        line: 194
      },
      "49": {
        loc: {
          start: {
            line: 273,
            column: 31
          },
          end: {
            line: 273,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 273,
            column: 75
          },
          end: {
            line: 273,
            column: 81
          }
        }, {
          start: {
            line: 273,
            column: 84
          },
          end: {
            line: 273,
            column: 96
          }
        }],
        line: 273
      },
      "50": {
        loc: {
          start: {
            line: 273,
            column: 31
          },
          end: {
            line: 273,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 273,
            column: 31
          },
          end: {
            line: 273,
            column: 55
          }
        }, {
          start: {
            line: 273,
            column: 59
          },
          end: {
            line: 273,
            column: 72
          }
        }],
        line: 273
      },
      "51": {
        loc: {
          start: {
            line: 274,
            column: 16
          },
          end: {
            line: 277,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 274,
            column: 16
          },
          end: {
            line: 277,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 274
      },
      "52": {
        loc: {
          start: {
            line: 287,
            column: 40
          },
          end: {
            line: 287,
            column: 105
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 287,
            column: 84
          },
          end: {
            line: 287,
            column: 90
          }
        }, {
          start: {
            line: 287,
            column: 93
          },
          end: {
            line: 287,
            column: 105
          }
        }],
        line: 287
      },
      "53": {
        loc: {
          start: {
            line: 287,
            column: 40
          },
          end: {
            line: 287,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 287,
            column: 40
          },
          end: {
            line: 287,
            column: 64
          }
        }, {
          start: {
            line: 287,
            column: 68
          },
          end: {
            line: 287,
            column: 81
          }
        }],
        line: 287
      },
      "54": {
        loc: {
          start: {
            line: 303,
            column: 31
          },
          end: {
            line: 303,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 303,
            column: 75
          },
          end: {
            line: 303,
            column: 81
          }
        }, {
          start: {
            line: 303,
            column: 84
          },
          end: {
            line: 303,
            column: 96
          }
        }],
        line: 303
      },
      "55": {
        loc: {
          start: {
            line: 303,
            column: 31
          },
          end: {
            line: 303,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 303,
            column: 31
          },
          end: {
            line: 303,
            column: 55
          }
        }, {
          start: {
            line: 303,
            column: 59
          },
          end: {
            line: 303,
            column: 72
          }
        }],
        line: 303
      },
      "56": {
        loc: {
          start: {
            line: 304,
            column: 16
          },
          end: {
            line: 307,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 304,
            column: 16
          },
          end: {
            line: 307,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 304
      },
      "57": {
        loc: {
          start: {
            line: 310,
            column: 16
          },
          end: {
            line: 313,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 310,
            column: 16
          },
          end: {
            line: 313,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 310
      },
      "58": {
        loc: {
          start: {
            line: 310,
            column: 20
          },
          end: {
            line: 310,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 310,
            column: 20
          },
          end: {
            line: 310,
            column: 31
          }
        }, {
          start: {
            line: 310,
            column: 35
          },
          end: {
            line: 310,
            column: 42
          }
        }, {
          start: {
            line: 310,
            column: 46
          },
          end: {
            line: 310,
            column: 67
          }
        }],
        line: 310
      },
      "59": {
        loc: {
          start: {
            line: 352,
            column: 31
          },
          end: {
            line: 352,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 352,
            column: 75
          },
          end: {
            line: 352,
            column: 81
          }
        }, {
          start: {
            line: 352,
            column: 84
          },
          end: {
            line: 352,
            column: 96
          }
        }],
        line: 352
      },
      "60": {
        loc: {
          start: {
            line: 352,
            column: 31
          },
          end: {
            line: 352,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 352,
            column: 31
          },
          end: {
            line: 352,
            column: 55
          }
        }, {
          start: {
            line: 352,
            column: 59
          },
          end: {
            line: 352,
            column: 72
          }
        }],
        line: 352
      },
      "61": {
        loc: {
          start: {
            line: 353,
            column: 16
          },
          end: {
            line: 356,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 353,
            column: 16
          },
          end: {
            line: 356,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 353
      },
      "62": {
        loc: {
          start: {
            line: 365,
            column: 40
          },
          end: {
            line: 365,
            column: 105
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 365,
            column: 84
          },
          end: {
            line: 365,
            column: 90
          }
        }, {
          start: {
            line: 365,
            column: 93
          },
          end: {
            line: 365,
            column: 105
          }
        }],
        line: 365
      },
      "63": {
        loc: {
          start: {
            line: 365,
            column: 40
          },
          end: {
            line: 365,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 365,
            column: 40
          },
          end: {
            line: 365,
            column: 64
          }
        }, {
          start: {
            line: 365,
            column: 68
          },
          end: {
            line: 365,
            column: 81
          }
        }],
        line: 365
      },
      "64": {
        loc: {
          start: {
            line: 381,
            column: 31
          },
          end: {
            line: 381,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 381,
            column: 75
          },
          end: {
            line: 381,
            column: 81
          }
        }, {
          start: {
            line: 381,
            column: 84
          },
          end: {
            line: 381,
            column: 96
          }
        }],
        line: 381
      },
      "65": {
        loc: {
          start: {
            line: 381,
            column: 31
          },
          end: {
            line: 381,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 381,
            column: 31
          },
          end: {
            line: 381,
            column: 55
          }
        }, {
          start: {
            line: 381,
            column: 59
          },
          end: {
            line: 381,
            column: 72
          }
        }],
        line: 381
      },
      "66": {
        loc: {
          start: {
            line: 382,
            column: 16
          },
          end: {
            line: 385,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 382,
            column: 16
          },
          end: {
            line: 385,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 382
      },
      "67": {
        loc: {
          start: {
            line: 387,
            column: 16
          },
          end: {
            line: 390,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 387,
            column: 16
          },
          end: {
            line: 390,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 387
      },
      "68": {
        loc: {
          start: {
            line: 387,
            column: 20
          },
          end: {
            line: 387,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 387,
            column: 20
          },
          end: {
            line: 387,
            column: 27
          }
        }, {
          start: {
            line: 387,
            column: 31
          },
          end: {
            line: 387,
            column: 45
          }
        }, {
          start: {
            line: 387,
            column: 49
          },
          end: {
            line: 387,
            column: 70
          }
        }],
        line: 387
      },
      "69": {
        loc: {
          start: {
            line: 404,
            column: 40
          },
          end: {
            line: 404,
            column: 105
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 404,
            column: 84
          },
          end: {
            line: 404,
            column: 90
          }
        }, {
          start: {
            line: 404,
            column: 93
          },
          end: {
            line: 404,
            column: 105
          }
        }],
        line: 404
      },
      "70": {
        loc: {
          start: {
            line: 404,
            column: 40
          },
          end: {
            line: 404,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 404,
            column: 40
          },
          end: {
            line: 404,
            column: 64
          }
        }, {
          start: {
            line: 404,
            column: 68
          },
          end: {
            line: 404,
            column: 81
          }
        }],
        line: 404
      },
      "71": {
        loc: {
          start: {
            line: 442,
            column: 32
          },
          end: {
            line: 442,
            column: 97
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 442,
            column: 76
          },
          end: {
            line: 442,
            column: 82
          }
        }, {
          start: {
            line: 442,
            column: 85
          },
          end: {
            line: 442,
            column: 97
          }
        }],
        line: 442
      },
      "72": {
        loc: {
          start: {
            line: 442,
            column: 32
          },
          end: {
            line: 442,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 442,
            column: 32
          },
          end: {
            line: 442,
            column: 56
          }
        }, {
          start: {
            line: 442,
            column: 60
          },
          end: {
            line: 442,
            column: 73
          }
        }],
        line: 442
      },
      "73": {
        loc: {
          start: {
            line: 445,
            column: 16
          },
          end: {
            line: 448,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 445,
            column: 16
          },
          end: {
            line: 448,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 445
      },
      "74": {
        loc: {
          start: {
            line: 450,
            column: 16
          },
          end: {
            line: 455,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 450,
            column: 16
          },
          end: {
            line: 455,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 450
      },
      "75": {
        loc: {
          start: {
            line: 450,
            column: 20
          },
          end: {
            line: 450,
            column: 125
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 450,
            column: 20
          },
          end: {
            line: 450,
            column: 28
          }
        }, {
          start: {
            line: 450,
            column: 33
          },
          end: {
            line: 450,
            column: 50
          }
        }, {
          start: {
            line: 450,
            column: 54
          },
          end: {
            line: 450,
            column: 87
          }
        }, {
          start: {
            line: 450,
            column: 91
          },
          end: {
            line: 450,
            column: 124
          }
        }],
        line: 450
      },
      "76": {
        loc: {
          start: {
            line: 464,
            column: 32
          },
          end: {
            line: 464,
            column: 66
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 464,
            column: 43
          },
          end: {
            line: 464,
            column: 53
          }
        }, {
          start: {
            line: 464,
            column: 56
          },
          end: {
            line: 464,
            column: 66
          }
        }],
        line: 464
      },
      "77": {
        loc: {
          start: {
            line: 469,
            column: 41
          },
          end: {
            line: 469,
            column: 76
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 469,
            column: 52
          },
          end: {
            line: 469,
            column: 62
          }
        }, {
          start: {
            line: 469,
            column: 65
          },
          end: {
            line: 469,
            column: 76
          }
        }],
        line: 469
      },
      "78": {
        loc: {
          start: {
            line: 474,
            column: 74
          },
          end: {
            line: 474,
            column: 139
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 474,
            column: 118
          },
          end: {
            line: 474,
            column: 124
          }
        }, {
          start: {
            line: 474,
            column: 127
          },
          end: {
            line: 474,
            column: 139
          }
        }],
        line: 474
      },
      "79": {
        loc: {
          start: {
            line: 474,
            column: 74
          },
          end: {
            line: 474,
            column: 115
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 474,
            column: 74
          },
          end: {
            line: 474,
            column: 98
          }
        }, {
          start: {
            line: 474,
            column: 102
          },
          end: {
            line: 474,
            column: 115
          }
        }],
        line: 474
      },
      "80": {
        loc: {
          start: {
            line: 491,
            column: 16
          },
          end: {
            line: 492,
            column: 27
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 491,
            column: 16
          },
          end: {
            line: 492,
            column: 27
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 491
      },
      "81": {
        loc: {
          start: {
            line: 498,
            column: 27
          },
          end: {
            line: 498,
            column: 80
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 498,
            column: 38
          },
          end: {
            line: 498,
            column: 57
          }
        }, {
          start: {
            line: 498,
            column: 60
          },
          end: {
            line: 498,
            column: 80
          }
        }],
        line: 498
      },
      "82": {
        loc: {
          start: {
            line: 499,
            column: 29
          },
          end: {
            line: 501,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 500,
            column: 26
          },
          end: {
            line: 500,
            column: 122
          }
        }, {
          start: {
            line: 501,
            column: 26
          },
          end: {
            line: 501,
            column: 88
          }
        }],
        line: 499
      },
      "83": {
        loc: {
          start: {
            line: 501,
            column: 60
          },
          end: {
            line: 501,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 501,
            column: 60
          },
          end: {
            line: 501,
            column: 65
          }
        }, {
          start: {
            line: 501,
            column: 69
          },
          end: {
            line: 501,
            column: 86
          }
        }],
        line: 501
      },
      "84": {
        loc: {
          start: {
            line: 502,
            column: 26
          },
          end: {
            line: 502,
            column: 56
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 502,
            column: 37
          },
          end: {
            line: 502,
            column: 46
          }
        }, {
          start: {
            line: 502,
            column: 49
          },
          end: {
            line: 502,
            column: 56
          }
        }],
        line: 502
      },
      "85": {
        loc: {
          start: {
            line: 510,
            column: 32
          },
          end: {
            line: 510,
            column: 66
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 510,
            column: 43
          },
          end: {
            line: 510,
            column: 53
          }
        }, {
          start: {
            line: 510,
            column: 56
          },
          end: {
            line: 510,
            column: 66
          }
        }],
        line: 510
      },
      "86": {
        loc: {
          start: {
            line: 518,
            column: 31
          },
          end: {
            line: 518,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 518,
            column: 42
          },
          end: {
            line: 518,
            column: 61
          }
        }, {
          start: {
            line: 518,
            column: 64
          },
          end: {
            line: 518,
            column: 84
          }
        }],
        line: 518
      },
      "87": {
        loc: {
          start: {
            line: 519,
            column: 30
          },
          end: {
            line: 521,
            column: 92
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 520,
            column: 30
          },
          end: {
            line: 520,
            column: 102
          }
        }, {
          start: {
            line: 521,
            column: 30
          },
          end: {
            line: 521,
            column: 92
          }
        }],
        line: 519
      },
      "88": {
        loc: {
          start: {
            line: 521,
            column: 64
          },
          end: {
            line: 521,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 521,
            column: 64
          },
          end: {
            line: 521,
            column: 69
          }
        }, {
          start: {
            line: 521,
            column: 73
          },
          end: {
            line: 521,
            column: 90
          }
        }],
        line: 521
      },
      "89": {
        loc: {
          start: {
            line: 524,
            column: 34
          },
          end: {
            line: 524,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 524,
            column: 45
          },
          end: {
            line: 524,
            column: 63
          }
        }, {
          start: {
            line: 524,
            column: 66
          },
          end: {
            line: 524,
            column: 84
          }
        }],
        line: 524
      },
      "90": {
        loc: {
          start: {
            line: 571,
            column: 32
          },
          end: {
            line: 571,
            column: 97
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 571,
            column: 76
          },
          end: {
            line: 571,
            column: 82
          }
        }, {
          start: {
            line: 571,
            column: 85
          },
          end: {
            line: 571,
            column: 97
          }
        }],
        line: 571
      },
      "91": {
        loc: {
          start: {
            line: 571,
            column: 32
          },
          end: {
            line: 571,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 571,
            column: 32
          },
          end: {
            line: 571,
            column: 56
          }
        }, {
          start: {
            line: 571,
            column: 60
          },
          end: {
            line: 571,
            column: 73
          }
        }],
        line: 571
      },
      "92": {
        loc: {
          start: {
            line: 574,
            column: 16
          },
          end: {
            line: 577,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 574,
            column: 16
          },
          end: {
            line: 577,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 574
      },
      "93": {
        loc: {
          start: {
            line: 582,
            column: 39
          },
          end: {
            line: 582,
            column: 74
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 582,
            column: 50
          },
          end: {
            line: 582,
            column: 60
          }
        }, {
          start: {
            line: 582,
            column: 63
          },
          end: {
            line: 582,
            column: 74
          }
        }],
        line: 582
      },
      "94": {
        loc: {
          start: {
            line: 587,
            column: 80
          },
          end: {
            line: 587,
            column: 145
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 587,
            column: 124
          },
          end: {
            line: 587,
            column: 130
          }
        }, {
          start: {
            line: 587,
            column: 133
          },
          end: {
            line: 587,
            column: 145
          }
        }],
        line: 587
      },
      "95": {
        loc: {
          start: {
            line: 587,
            column: 80
          },
          end: {
            line: 587,
            column: 121
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 587,
            column: 80
          },
          end: {
            line: 587,
            column: 104
          }
        }, {
          start: {
            line: 587,
            column: 108
          },
          end: {
            line: 587,
            column: 121
          }
        }],
        line: 587
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0, 0],
      "69": [0, 0],
      "70": [0, 0],
      "71": [0, 0],
      "72": [0, 0],
      "73": [0, 0],
      "74": [0, 0],
      "75": [0, 0, 0, 0],
      "76": [0, 0],
      "77": [0, 0],
      "78": [0, 0],
      "79": [0, 0],
      "80": [0, 0],
      "81": [0, 0],
      "82": [0, 0],
      "83": [0, 0],
      "84": [0, 0],
      "85": [0, 0],
      "86": [0, 0],
      "87": [0, 0],
      "88": [0, 0],
      "89": [0, 0],
      "90": [0, 0],
      "91": [0, 0],
      "92": [0, 0],
      "93": [0, 0],
      "94": [0, 0],
      "95": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\controllers\\paymentSystemController.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\controllers\\paymentSystemController.ts"],
      sourcesContent: ["import { Request, Response } from 'express';\r\nimport { PaymentSystemService } from '../services/paymentSystemService';\r\nimport { logger } from '../services/loggerService';\r\nimport { db } from '../utils/firebase';\r\nimport { \r\n  BankAccountData, \r\n  DepositRequest, \r\n  WithdrawalRequestData, \r\n  EventPaymentRequest \r\n} from '../types/paymentTypes';\r\n\r\nexport class PaymentSystemController {\r\n  private paymentService: PaymentSystemService;\r\n\r\n  constructor() {\r\n    this.paymentService = new PaymentSystemService();\r\n  }\r\n\r\n  /**\r\n   * Obtener balance de usuario\r\n   */\r\n  async getUserBalance(req: Request, res: Response): Promise<void> {\r\n    try {\r\n      const userId = (req as any).user?.userEmail;\r\n      \r\n      if (!userId) {\r\n        res.status(401).json({ error: 'Usuario no autenticado' });\r\n        return;\r\n      }\r\n\r\n      const balance = await this.paymentService.getUserBalance(userId);\r\n      \r\n      res.status(200).json({\r\n        success: true,\r\n        data: balance\r\n      });\r\n    } catch (error) {\r\n      logger.error('Error obteniendo balance de usuario', error as Error, { \r\n        metadata: { userId: (req as any).user?.userEmail } \r\n      });\r\n      \r\n      res.status(500).json({\r\n        success: false,\r\n        error: 'Error obteniendo balance de usuario'\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Registrar cuenta bancaria\r\n   */\r\n  async registerBankAccount(req: Request, res: Response): Promise<void> {\r\n    try {\r\n      const userId = (req as any).user?.userEmail;\r\n      \r\n      if (!userId) {\r\n        res.status(401).json({ error: 'Usuario no autenticado' });\r\n        return;\r\n      }\r\n\r\n      const accountData: BankAccountData = req.body;\r\n      \r\n      // Validaciones b\xE1sicas\r\n      if (!accountData.accountHolder || !accountData.accountNumber || !accountData.bankName) {\r\n        res.status(400).json({ error: 'Datos de cuenta bancaria incompletos' });\r\n        return;\r\n      }\r\n\r\n      const bankAccount = await this.paymentService.registerBankAccount(userId, accountData);\r\n      \r\n      res.status(200).json({\r\n        success: true,\r\n        data: bankAccount\r\n      });\r\n    } catch (error) {\r\n      logger.error('Error registrando cuenta bancaria', error as Error, { \r\n        metadata: { userId: (req as any).user?.userEmail } \r\n      });\r\n      \r\n      res.status(500).json({\r\n        success: false,\r\n        error: 'Error registrando cuenta bancaria'\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Obtener cuentas bancarias de usuario\r\n   */\r\n  async getUserBankAccounts(req: Request, res: Response): Promise<void> {\r\n    try {\r\n      const userId = (req as any).user?.userEmail;\r\n      \r\n      if (!userId) {\r\n        res.status(401).json({ error: 'Usuario no autenticado' });\r\n        return;\r\n      }\r\n\r\n      const accounts = await this.paymentService.getUserBankAccounts(userId);\r\n      \r\n      res.status(200).json({\r\n        success: true,\r\n        data: accounts\r\n      });\r\n    } catch (error) {\r\n      logger.error('Error obteniendo cuentas bancarias', error as Error, { \r\n        metadata: { userId: (req as any).user?.userEmail } \r\n      });\r\n      \r\n      res.status(500).json({\r\n        success: false,\r\n        error: 'Error obteniendo cuentas bancarias'\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Subir comprobante de dep\xF3sito\r\n   */\r\n  async uploadDepositVoucher(req: Request, res: Response): Promise<void> {\r\n    try {\r\n      const userId = (req as any).user?.userEmail;\r\n      \r\n      if (!userId) {\r\n        res.status(401).json({ error: 'Usuario no autenticado' });\r\n        return;\r\n      }\r\n\r\n      if (!req.file) {\r\n        res.status(400).json({ error: 'No se proporcion\xF3 archivo de comprobante' });\r\n        return;\r\n      }\r\n\r\n      const { \r\n        amount, \r\n        accountHolderName, \r\n        accountNumber, \r\n        bankName, \r\n        depositDate, \r\n        depositTime, \r\n        referenceNumber, \r\n        comments \r\n      } = req.body;\r\n      \r\n      if (!amount || isNaN(Number(amount))) {\r\n        res.status(400).json({ error: 'Monto inv\xE1lido' });\r\n        return;\r\n      }\r\n\r\n      if (!accountHolderName || !bankName) {\r\n        res.status(400).json({ error: 'Nombre del titular y banco son obligatorios' });\r\n        return;\r\n      }\r\n\r\n      const depositData: DepositRequest = {\r\n        amount: Number(amount),\r\n        voucherFile: req.file,\r\n        accountHolderName,\r\n        accountNumber,\r\n        bankName,\r\n        depositDate,\r\n        depositTime,\r\n        referenceNumber,\r\n        comments\r\n      };\r\n\r\n      logger.info('Subiendo comprobante de dep\xF3sito', { metadata: { userId, amount } });\r\n\r\n      const deposit = await this.paymentService.uploadDepositVoucher(userId, depositData);\r\n      \r\n      // Notificar autom\xE1ticamente a todos los administradores\r\n      await this.notifyAdminsAboutNewDeposit(deposit, userId);\r\n      \r\n      res.status(201).json({\r\n        success: true,\r\n        data: deposit,\r\n        message: 'Dep\xF3sito subido exitosamente. Pendiente de verificaci\xF3n por administrador.'\r\n      });\r\n    } catch (error) {\r\n      logger.error('Error subiendo comprobante de dep\xF3sito', error as Error, { \r\n        metadata: { userId: (req as any).user?.userEmail } \r\n      });\r\n      \r\n      res.status(500).json({\r\n        success: false,\r\n        error: 'Error subiendo comprobante de dep\xF3sito'\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Notificar a administradores sobre nuevo dep\xF3sito\r\n   */\r\n  private async notifyAdminsAboutNewDeposit(deposit: any, userId: string): Promise<void> {\r\n    try {\r\n      // Obtener todos los usuarios administradores\r\n      const adminsSnapshot = await db.collection('users')\r\n        .where('roll', 'in', ['admin', 'superadmin'])\r\n        .get();\r\n\r\n      const adminEmails = adminsSnapshot.docs.map(doc => doc.data().userEmail);\r\n\r\n      // Crear notificaci\xF3n para cada administrador\r\n      const notificationPromises = adminEmails.map(adminEmail => \r\n        db.collection('notifications').add({\r\n          userId: adminEmail,\r\n          title: 'Nuevo Dep\xF3sito Pendiente',\r\n          message: `Usuario ${userId} ha subido un dep\xF3sito de RD$ ${deposit.amount.toLocaleString()}`,\r\n          type: 'info',\r\n          category: 'payment',\r\n          isRead: false,\r\n          createdAt: new Date(),\r\n          updatedAt: new Date(),\r\n          metadata: {\r\n            depositId: deposit.id,\r\n            userId: userId,\r\n            amount: deposit.amount,\r\n            voucherUrl: deposit.voucherFile.url,\r\n            accountHolderName: deposit.accountHolderName,\r\n            bankName: deposit.bankName\r\n          }\r\n        })\r\n      );\r\n\r\n      await Promise.all(notificationPromises);\r\n\r\n      logger.info('Notificaciones enviadas a administradores', { \r\n        metadata: { \r\n          depositId: deposit.id, \r\n          adminCount: adminEmails.length \r\n        } \r\n      });\r\n\r\n      // Enviar push notifications si est\xE1 disponible\r\n      try {\r\n        const { pushNotificationService } = await import('../services/pushNotificationService');\r\n        \r\n        const pushPromises = adminEmails.map(adminEmail =>\r\n                    pushNotificationService.sendNotificationToUser(adminEmail, {\r\n            title: 'Nuevo Dep\xF3sito Pendiente',\r\n            body: `Usuario ${userId} ha subido un dep\xF3sito de RD$ ${deposit.amount.toLocaleString()}`,\r\n            data: {\r\n              depositId: deposit.id,\r\n              type: 'new_deposit',\r\n              amount: deposit.amount,\r\n              userId: userId\r\n            },\r\n            type: 'payment',\r\n            category: 'deposit'\r\n          })\r\n        );\r\n\r\n        await Promise.all(pushPromises);\r\n      } catch (pushError) {\r\n        logger.warn('Error enviando push notifications a administradores', pushError as Error);\r\n      }\r\n\r\n    } catch (error) {\r\n      logger.error('Error notificando a administradores sobre nuevo dep\xF3sito', error as Error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Obtener dep\xF3sitos del usuario\r\n   */\r\n  async getUserDeposits(req: Request, res: Response): Promise<void> {\r\n    try {\r\n      const userId = (req as any).user?.userEmail;\r\n      \r\n      if (!userId) {\r\n        res.status(401).json({ error: 'Usuario no autenticado' });\r\n        return;\r\n      }\r\n\r\n      // TODO: Implementar m\xE9todo en el servicio\r\n      res.status(200).json({\r\n        success: true,\r\n        data: [],\r\n        message: 'Funcionalidad en desarrollo'\r\n      });\r\n    } catch (error) {\r\n      logger.error('Error obteniendo dep\xF3sitos del usuario', error as Error, { \r\n        metadata: { userId: (req as any).user?.userEmail } \r\n      });\r\n      \r\n      res.status(500).json({\r\n        success: false,\r\n        error: 'Error obteniendo dep\xF3sitos del usuario'\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Pagar m\xFAsico por evento\r\n   */\r\n  async payMusicianForEvent(req: Request, res: Response): Promise<void> {\r\n    try {\r\n      const userId = (req as any).user?.userEmail;\r\n      \r\n      if (!userId) {\r\n        res.status(401).json({ error: 'Usuario no autenticado' });\r\n        return;\r\n      }\r\n\r\n      const { eventId } = req.params;\r\n      const { musicianId, amount } = req.body;\r\n      \r\n      if (!musicianId || !amount || isNaN(Number(amount))) {\r\n        res.status(400).json({ error: 'Datos de pago incompletos' });\r\n        return;\r\n      }\r\n\r\n      const paymentData: EventPaymentRequest = {\r\n        eventId,\r\n        organizerId: userId,\r\n        musicianId,\r\n        amount: Number(amount)\r\n      };\r\n\r\n      logger.info('Procesando pago de evento', { \r\n        metadata: { \r\n          eventId,\r\n          organizerId: userId,\r\n          musicianId,\r\n          amount\r\n        }\r\n      });\r\n\r\n      const payment = await this.paymentService.processEventPayment(paymentData);\r\n      \r\n      res.status(200).json({\r\n        success: true,\r\n        data: payment\r\n      });\r\n    } catch (error) {\r\n      logger.error('Error procesando pago de evento', error as Error, { \r\n        metadata: { eventId: req.params.eventId } \r\n      });\r\n      \r\n      res.status(500).json({\r\n        success: false,\r\n        error: 'Error procesando pago de evento'\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Obtener ganancias de m\xFAsico\r\n   */\r\n  async getMusicianEarnings(req: Request, res: Response): Promise<void> {\r\n    try {\r\n      const userId = (req as any).user?.userEmail;\r\n      \r\n      if (!userId) {\r\n        res.status(401).json({ error: 'Usuario no autenticado' });\r\n        return;\r\n      }\r\n\r\n      const earnings = await this.paymentService.getMusicianEarnings(userId);\r\n      \r\n      res.status(200).json({\r\n        success: true,\r\n        data: earnings\r\n      });\r\n    } catch (error) {\r\n      logger.error('Error obteniendo ganancias de m\xFAsico', error as Error, { \r\n        metadata: { userId: (req as any).user?.userEmail } \r\n      });\r\n      \r\n      res.status(500).json({\r\n        success: false,\r\n        error: 'Error obteniendo ganancias de m\xFAsico'\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Solicitar retiro de ganancias\r\n   */\r\n  async requestWithdrawal(req: Request, res: Response): Promise<void> {\r\n    try {\r\n      const userId = (req as any).user?.userEmail;\r\n      \r\n      if (!userId) {\r\n        res.status(401).json({ error: 'Usuario no autenticado' });\r\n        return;\r\n      }\r\n\r\n      const { amount, bankAccountId } = req.body;\r\n      \r\n      if (!amount || !bankAccountId || isNaN(Number(amount))) {\r\n        res.status(400).json({ error: 'Datos de retiro incompletos' });\r\n        return;\r\n      }\r\n\r\n      const withdrawalData: WithdrawalRequestData = {\r\n        amount: Number(amount),\r\n        bankAccountId\r\n      };\r\n\r\n      logger.info('Solicitando retiro de ganancias', { metadata: { userId, amount: withdrawalData.amount } });\r\n\r\n      const withdrawal = await this.paymentService.requestWithdrawal(userId, withdrawalData);\r\n      \r\n      res.status(200).json({\r\n        success: true,\r\n        data: withdrawal\r\n      });\r\n    } catch (error) {\r\n      logger.error('Error solicitando retiro', error as Error, { \r\n        metadata: { userId: (req as any).user?.userEmail } \r\n      });\r\n      \r\n      res.status(500).json({\r\n        success: false,\r\n        error: 'Error solicitando retiro'\r\n      });\r\n    }\r\n  }\r\n\r\n  // ===== ENDPOINTS DE ADMINISTRACI\xD3N =====\r\n\r\n  /**\r\n   * Obtener dep\xF3sitos pendientes (admin)\r\n   */\r\n  async getPendingDeposits(req: Request, res: Response): Promise<void> {\r\n    try {\r\n      const deposits = await this.paymentService.getPendingDeposits();\r\n      \r\n      res.status(200).json({\r\n        success: true,\r\n        data: deposits\r\n      });\r\n    } catch (error) {\r\n      logger.error('Error obteniendo dep\xF3sitos pendientes', error as Error);\r\n      \r\n      res.status(500).json({\r\n        success: false,\r\n        error: 'Error obteniendo dep\xF3sitos pendientes'\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Verificar dep\xF3sito (admin)\r\n   */\r\n  async verifyDeposit(req: Request, res: Response): Promise<void> {\r\n    try {\r\n      const adminId = (req as any).user?.userEmail;\r\n      const { depositId } = req.params;\r\n      const { approved, notes, verificationData } = req.body;\r\n      \r\n      if (typeof approved !== 'boolean') {\r\n        res.status(400).json({ error: 'Estado de aprobaci\xF3n inv\xE1lido' });\r\n        return;\r\n      }\r\n\r\n      // Si se aprueba, validar que se proporcionen los datos de verificaci\xF3n\r\n      if (approved && (!verificationData || !verificationData.bankDepositDate || !verificationData.referenceNumber)) {\r\n        res.status(400).json({ \r\n          error: 'Para aprobar un dep\xF3sito, debe proporcionar fecha del dep\xF3sito y n\xFAmero de referencia' \r\n        });\r\n        return;\r\n      }\r\n\r\n      logger.info('Verificando dep\xF3sito', { metadata: { depositId, adminId, approved } });\r\n\r\n      await this.paymentService.verifyDeposit(depositId, adminId, approved, notes, verificationData);\r\n      \r\n      // Notificar al usuario sobre el resultado\r\n      await this.notifyUserAboutDepositVerification(depositId, approved, notes);\r\n      \r\n      res.status(200).json({\r\n        success: true,\r\n        data: {\r\n          depositId,\r\n          status: approved ? 'approved' : 'rejected',\r\n          verifiedBy: adminId,\r\n          verifiedAt: new Date().toISOString(),\r\n          userBalanceUpdated: approved\r\n        },\r\n        message: `Dep\xF3sito ${approved ? 'aprobado' : 'rechazado'} exitosamente`\r\n      });\r\n    } catch (error) {\r\n      logger.error('Error verificando dep\xF3sito', error as Error, { \r\n        metadata: { depositId: req.params.depositId, adminId: (req as any).user?.userEmail } \r\n      });\r\n      \r\n      res.status(500).json({\r\n        success: false,\r\n        error: 'Error verificando dep\xF3sito'\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Notificar al usuario sobre la verificaci\xF3n de su dep\xF3sito\r\n   */\r\n  private async notifyUserAboutDepositVerification(depositId: string, approved: boolean, notes?: string): Promise<void> {\r\n    try {\r\n      // Obtener informaci\xF3n del dep\xF3sito\r\n      const depositDoc = await db.collection('user_deposits').doc(depositId).get();\r\n      if (!depositDoc.exists) return;\r\n\r\n      const deposit = depositDoc.data() as any;\r\n      const userId = deposit.userId;\r\n\r\n      // Crear notificaci\xF3n para el usuario\r\n      await db.collection('notifications').add({\r\n        userId: userId,\r\n        title: approved ? 'Dep\xF3sito Aprobado' : 'Dep\xF3sito Rechazado',\r\n        message: approved \r\n          ? `Tu dep\xF3sito de RD$ ${deposit.amount.toLocaleString()} ha sido aprobado y agregado a tu balance`\r\n          : `Tu dep\xF3sito ha sido rechazado: ${notes || 'Sin especificar'}`,\r\n        type: approved ? 'success' : 'error',\r\n        category: 'payment',\r\n        isRead: false,\r\n        createdAt: new Date(),\r\n        updatedAt: new Date(),\r\n        metadata: {\r\n          depositId: depositId,\r\n          amount: deposit.amount,\r\n          status: approved ? 'approved' : 'rejected',\r\n          notes: notes\r\n        }\r\n      });\r\n\r\n      // Enviar push notification si est\xE1 disponible\r\n      try {\r\n        const { pushNotificationService } = await import('../services/pushNotificationService');\r\n        \r\n                await pushNotificationService.sendNotificationToUser(userId, {\r\n          title: approved ? 'Dep\xF3sito Aprobado' : 'Dep\xF3sito Rechazado',\r\n          body: approved\r\n            ? `Tu dep\xF3sito de RD$ ${deposit.amount.toLocaleString()} ha sido aprobado`\r\n            : `Tu dep\xF3sito ha sido rechazado: ${notes || 'Sin especificar'}`,\r\n          data: {\r\n            depositId: depositId,\r\n            type: approved ? 'deposit_approved' : 'deposit_rejected',\r\n            amount: deposit.amount\r\n          },\r\n          type: 'payment',\r\n          category: 'deposit'\r\n        });\r\n      } catch (pushError) {\r\n        logger.warn('Error enviando push notification al usuario', pushError as Error);\r\n      }\r\n\r\n      logger.info('Usuario notificado sobre verificaci\xF3n de dep\xF3sito', { \r\n        metadata: { depositId, userId, approved } \r\n      });\r\n\r\n    } catch (error) {\r\n      logger.error('Error notificando al usuario sobre verificaci\xF3n de dep\xF3sito', error as Error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Obtener retiros pendientes (admin)\r\n   */\r\n  async getPendingWithdrawals(req: Request, res: Response): Promise<void> {\r\n    try {\r\n      const withdrawals = await this.paymentService.getPendingWithdrawals();\r\n      \r\n      res.status(200).json({\r\n        success: true,\r\n        data: withdrawals\r\n      });\r\n    } catch (error) {\r\n      logger.error('Error obteniendo retiros pendientes', error as Error);\r\n      \r\n      res.status(500).json({\r\n        success: false,\r\n        error: 'Error obteniendo retiros pendientes'\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Procesar retiro (admin)\r\n   */\r\n  async processWithdrawal(req: Request, res: Response): Promise<void> {\r\n    try {\r\n      const adminId = (req as any).user?.userEmail;\r\n      const { withdrawalId } = req.params;\r\n      const { approved, notes } = req.body;\r\n      \r\n      if (typeof approved !== 'boolean') {\r\n        res.status(400).json({ error: 'Estado de aprobaci\xF3n inv\xE1lido' });\r\n        return;\r\n      }\r\n\r\n      logger.info('Procesando retiro', { metadata: { withdrawalId, adminId, approved } });\r\n\r\n      await this.paymentService.processWithdrawal(withdrawalId, adminId, approved, notes);\r\n      \r\n      res.status(200).json({\r\n        success: true,\r\n        message: `Retiro ${approved ? 'aprobado' : 'rechazado'} exitosamente`\r\n      });\r\n    } catch (error) {\r\n      logger.error('Error procesando retiro', error as Error, { \r\n        metadata: { withdrawalId: req.params.withdrawalId, adminId: (req as any).user?.userEmail } \r\n      });\r\n      \r\n      res.status(500).json({\r\n        success: false,\r\n        error: 'Error procesando retiro'\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Obtener estad\xEDsticas de pagos (admin)\r\n   */\r\n  async getPaymentStatistics(req: Request, res: Response): Promise<void> {\r\n    try {\r\n      const statistics = await this.paymentService.getPaymentStatistics();\r\n      \r\n      res.status(200).json({\r\n        success: true,\r\n        data: statistics\r\n      });\r\n    } catch (error) {\r\n      logger.error('Error obteniendo estad\xEDsticas de pagos', error as Error);\r\n      \r\n      res.status(500).json({\r\n        success: false,\r\n        error: 'Error obteniendo estad\xEDsticas de pagos'\r\n      });\r\n    }\r\n  }\r\n} "],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d9b53b1c3d813deaa7a6727c14079f17e56f93bc"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2lmjziyldx = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2lmjziyldx();
var __createBinding =
/* istanbul ignore next */
(cov_2lmjziyldx().s[0]++,
/* istanbul ignore next */
(cov_2lmjziyldx().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_2lmjziyldx().b[0][1]++, this.__createBinding) ||
/* istanbul ignore next */
(cov_2lmjziyldx().b[0][2]++, Object.create ?
/* istanbul ignore next */
(cov_2lmjziyldx().b[1][0]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_2lmjziyldx().f[0]++;
  cov_2lmjziyldx().s[1]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_2lmjziyldx().b[2][0]++;
    cov_2lmjziyldx().s[2]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_2lmjziyldx().b[2][1]++;
  }
  var desc =
  /* istanbul ignore next */
  (cov_2lmjziyldx().s[3]++, Object.getOwnPropertyDescriptor(m, k));
  /* istanbul ignore next */
  cov_2lmjziyldx().s[4]++;
  if (
  /* istanbul ignore next */
  (cov_2lmjziyldx().b[4][0]++, !desc) ||
  /* istanbul ignore next */
  (cov_2lmjziyldx().b[4][1]++, "get" in desc ?
  /* istanbul ignore next */
  (cov_2lmjziyldx().b[5][0]++, !m.__esModule) :
  /* istanbul ignore next */
  (cov_2lmjziyldx().b[5][1]++,
  /* istanbul ignore next */
  (cov_2lmjziyldx().b[6][0]++, desc.writable) ||
  /* istanbul ignore next */
  (cov_2lmjziyldx().b[6][1]++, desc.configurable)))) {
    /* istanbul ignore next */
    cov_2lmjziyldx().b[3][0]++;
    cov_2lmjziyldx().s[5]++;
    desc = {
      enumerable: true,
      get: function () {
        /* istanbul ignore next */
        cov_2lmjziyldx().f[1]++;
        cov_2lmjziyldx().s[6]++;
        return m[k];
      }
    };
  } else
  /* istanbul ignore next */
  {
    cov_2lmjziyldx().b[3][1]++;
  }
  cov_2lmjziyldx().s[7]++;
  Object.defineProperty(o, k2, desc);
}) :
/* istanbul ignore next */
(cov_2lmjziyldx().b[1][1]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_2lmjziyldx().f[2]++;
  cov_2lmjziyldx().s[8]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_2lmjziyldx().b[7][0]++;
    cov_2lmjziyldx().s[9]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_2lmjziyldx().b[7][1]++;
  }
  cov_2lmjziyldx().s[10]++;
  o[k2] = m[k];
})));
var __setModuleDefault =
/* istanbul ignore next */
(cov_2lmjziyldx().s[11]++,
/* istanbul ignore next */
(cov_2lmjziyldx().b[8][0]++, this) &&
/* istanbul ignore next */
(cov_2lmjziyldx().b[8][1]++, this.__setModuleDefault) ||
/* istanbul ignore next */
(cov_2lmjziyldx().b[8][2]++, Object.create ?
/* istanbul ignore next */
(cov_2lmjziyldx().b[9][0]++, function (o, v) {
  /* istanbul ignore next */
  cov_2lmjziyldx().f[3]++;
  cov_2lmjziyldx().s[12]++;
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
}) :
/* istanbul ignore next */
(cov_2lmjziyldx().b[9][1]++, function (o, v) {
  /* istanbul ignore next */
  cov_2lmjziyldx().f[4]++;
  cov_2lmjziyldx().s[13]++;
  o["default"] = v;
})));
var __importStar =
/* istanbul ignore next */
(cov_2lmjziyldx().s[14]++,
/* istanbul ignore next */
(cov_2lmjziyldx().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_2lmjziyldx().b[10][1]++, this.__importStar) ||
/* istanbul ignore next */
(cov_2lmjziyldx().b[10][2]++, function () {
  /* istanbul ignore next */
  cov_2lmjziyldx().f[5]++;
  cov_2lmjziyldx().s[15]++;
  var ownKeys = function (o) {
    /* istanbul ignore next */
    cov_2lmjziyldx().f[6]++;
    cov_2lmjziyldx().s[16]++;
    ownKeys =
    /* istanbul ignore next */
    (cov_2lmjziyldx().b[11][0]++, Object.getOwnPropertyNames) ||
    /* istanbul ignore next */
    (cov_2lmjziyldx().b[11][1]++, function (o) {
      /* istanbul ignore next */
      cov_2lmjziyldx().f[7]++;
      var ar =
      /* istanbul ignore next */
      (cov_2lmjziyldx().s[17]++, []);
      /* istanbul ignore next */
      cov_2lmjziyldx().s[18]++;
      for (var k in o) {
        /* istanbul ignore next */
        cov_2lmjziyldx().s[19]++;
        if (Object.prototype.hasOwnProperty.call(o, k)) {
          /* istanbul ignore next */
          cov_2lmjziyldx().b[12][0]++;
          cov_2lmjziyldx().s[20]++;
          ar[ar.length] = k;
        } else
        /* istanbul ignore next */
        {
          cov_2lmjziyldx().b[12][1]++;
        }
      }
      /* istanbul ignore next */
      cov_2lmjziyldx().s[21]++;
      return ar;
    });
    /* istanbul ignore next */
    cov_2lmjziyldx().s[22]++;
    return ownKeys(o);
  };
  /* istanbul ignore next */
  cov_2lmjziyldx().s[23]++;
  return function (mod) {
    /* istanbul ignore next */
    cov_2lmjziyldx().f[8]++;
    cov_2lmjziyldx().s[24]++;
    if (
    /* istanbul ignore next */
    (cov_2lmjziyldx().b[14][0]++, mod) &&
    /* istanbul ignore next */
    (cov_2lmjziyldx().b[14][1]++, mod.__esModule)) {
      /* istanbul ignore next */
      cov_2lmjziyldx().b[13][0]++;
      cov_2lmjziyldx().s[25]++;
      return mod;
    } else
    /* istanbul ignore next */
    {
      cov_2lmjziyldx().b[13][1]++;
    }
    var result =
    /* istanbul ignore next */
    (cov_2lmjziyldx().s[26]++, {});
    /* istanbul ignore next */
    cov_2lmjziyldx().s[27]++;
    if (mod != null) {
      /* istanbul ignore next */
      cov_2lmjziyldx().b[15][0]++;
      cov_2lmjziyldx().s[28]++;
      for (var k =
        /* istanbul ignore next */
        (cov_2lmjziyldx().s[29]++, ownKeys(mod)), i =
        /* istanbul ignore next */
        (cov_2lmjziyldx().s[30]++, 0); i < k.length; i++) {
        /* istanbul ignore next */
        cov_2lmjziyldx().s[31]++;
        if (k[i] !== "default") {
          /* istanbul ignore next */
          cov_2lmjziyldx().b[16][0]++;
          cov_2lmjziyldx().s[32]++;
          __createBinding(result, mod, k[i]);
        } else
        /* istanbul ignore next */
        {
          cov_2lmjziyldx().b[16][1]++;
        }
      }
    } else
    /* istanbul ignore next */
    {
      cov_2lmjziyldx().b[15][1]++;
    }
    cov_2lmjziyldx().s[33]++;
    __setModuleDefault(result, mod);
    /* istanbul ignore next */
    cov_2lmjziyldx().s[34]++;
    return result;
  };
}()));
var __awaiter =
/* istanbul ignore next */
(cov_2lmjziyldx().s[35]++,
/* istanbul ignore next */
(cov_2lmjziyldx().b[17][0]++, this) &&
/* istanbul ignore next */
(cov_2lmjziyldx().b[17][1]++, this.__awaiter) ||
/* istanbul ignore next */
(cov_2lmjziyldx().b[17][2]++, function (thisArg, _arguments, P, generator) {
  /* istanbul ignore next */
  cov_2lmjziyldx().f[9]++;
  function adopt(value) {
    /* istanbul ignore next */
    cov_2lmjziyldx().f[10]++;
    cov_2lmjziyldx().s[36]++;
    return value instanceof P ?
    /* istanbul ignore next */
    (cov_2lmjziyldx().b[18][0]++, value) :
    /* istanbul ignore next */
    (cov_2lmjziyldx().b[18][1]++, new P(function (resolve) {
      /* istanbul ignore next */
      cov_2lmjziyldx().f[11]++;
      cov_2lmjziyldx().s[37]++;
      resolve(value);
    }));
  }
  /* istanbul ignore next */
  cov_2lmjziyldx().s[38]++;
  return new (
  /* istanbul ignore next */
  (cov_2lmjziyldx().b[19][0]++, P) ||
  /* istanbul ignore next */
  (cov_2lmjziyldx().b[19][1]++, P = Promise))(function (resolve, reject) {
    /* istanbul ignore next */
    cov_2lmjziyldx().f[12]++;
    function fulfilled(value) {
      /* istanbul ignore next */
      cov_2lmjziyldx().f[13]++;
      cov_2lmjziyldx().s[39]++;
      try {
        /* istanbul ignore next */
        cov_2lmjziyldx().s[40]++;
        step(generator.next(value));
      } catch (e) {
        /* istanbul ignore next */
        cov_2lmjziyldx().s[41]++;
        reject(e);
      }
    }
    function rejected(value) {
      /* istanbul ignore next */
      cov_2lmjziyldx().f[14]++;
      cov_2lmjziyldx().s[42]++;
      try {
        /* istanbul ignore next */
        cov_2lmjziyldx().s[43]++;
        step(generator["throw"](value));
      } catch (e) {
        /* istanbul ignore next */
        cov_2lmjziyldx().s[44]++;
        reject(e);
      }
    }
    function step(result) {
      /* istanbul ignore next */
      cov_2lmjziyldx().f[15]++;
      cov_2lmjziyldx().s[45]++;
      result.done ?
      /* istanbul ignore next */
      (cov_2lmjziyldx().b[20][0]++, resolve(result.value)) :
      /* istanbul ignore next */
      (cov_2lmjziyldx().b[20][1]++, adopt(result.value).then(fulfilled, rejected));
    }
    /* istanbul ignore next */
    cov_2lmjziyldx().s[46]++;
    step((generator = generator.apply(thisArg,
    /* istanbul ignore next */
    (cov_2lmjziyldx().b[21][0]++, _arguments) ||
    /* istanbul ignore next */
    (cov_2lmjziyldx().b[21][1]++, []))).next());
  });
}));
/* istanbul ignore next */
cov_2lmjziyldx().s[47]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2lmjziyldx().s[48]++;
exports.PaymentSystemController = void 0;
const paymentSystemService_1 =
/* istanbul ignore next */
(cov_2lmjziyldx().s[49]++, require("../services/paymentSystemService"));
const loggerService_1 =
/* istanbul ignore next */
(cov_2lmjziyldx().s[50]++, require("../services/loggerService"));
const firebase_1 =
/* istanbul ignore next */
(cov_2lmjziyldx().s[51]++, require("../utils/firebase"));
class PaymentSystemController {
  constructor() {
    /* istanbul ignore next */
    cov_2lmjziyldx().f[16]++;
    cov_2lmjziyldx().s[52]++;
    this.paymentService = new paymentSystemService_1.PaymentSystemService();
  }
  /**
   * Obtener balance de usuario
   */
  getUserBalance(req, res) {
    /* istanbul ignore next */
    cov_2lmjziyldx().f[17]++;
    cov_2lmjziyldx().s[53]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2lmjziyldx().f[18]++;
      var _a, _b;
      /* istanbul ignore next */
      cov_2lmjziyldx().s[54]++;
      try {
        const userId =
        /* istanbul ignore next */
        (cov_2lmjziyldx().s[55]++,
        /* istanbul ignore next */
        (cov_2lmjziyldx().b[23][0]++, (_a = req.user) === null) ||
        /* istanbul ignore next */
        (cov_2lmjziyldx().b[23][1]++, _a === void 0) ?
        /* istanbul ignore next */
        (cov_2lmjziyldx().b[22][0]++, void 0) :
        /* istanbul ignore next */
        (cov_2lmjziyldx().b[22][1]++, _a.userEmail));
        /* istanbul ignore next */
        cov_2lmjziyldx().s[56]++;
        if (!userId) {
          /* istanbul ignore next */
          cov_2lmjziyldx().b[24][0]++;
          cov_2lmjziyldx().s[57]++;
          res.status(401).json({
            error: 'Usuario no autenticado'
          });
          /* istanbul ignore next */
          cov_2lmjziyldx().s[58]++;
          return;
        } else
        /* istanbul ignore next */
        {
          cov_2lmjziyldx().b[24][1]++;
        }
        const balance =
        /* istanbul ignore next */
        (cov_2lmjziyldx().s[59]++, yield this.paymentService.getUserBalance(userId));
        /* istanbul ignore next */
        cov_2lmjziyldx().s[60]++;
        res.status(200).json({
          success: true,
          data: balance
        });
      } catch (error) {
        /* istanbul ignore next */
        cov_2lmjziyldx().s[61]++;
        loggerService_1.logger.error('Error obteniendo balance de usuario', error, {
          metadata: {
            userId:
            /* istanbul ignore next */
            (cov_2lmjziyldx().b[26][0]++, (_b = req.user) === null) ||
            /* istanbul ignore next */
            (cov_2lmjziyldx().b[26][1]++, _b === void 0) ?
            /* istanbul ignore next */
            (cov_2lmjziyldx().b[25][0]++, void 0) :
            /* istanbul ignore next */
            (cov_2lmjziyldx().b[25][1]++, _b.userEmail)
          }
        });
        /* istanbul ignore next */
        cov_2lmjziyldx().s[62]++;
        res.status(500).json({
          success: false,
          error: 'Error obteniendo balance de usuario'
        });
      }
    });
  }
  /**
   * Registrar cuenta bancaria
   */
  registerBankAccount(req, res) {
    /* istanbul ignore next */
    cov_2lmjziyldx().f[19]++;
    cov_2lmjziyldx().s[63]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2lmjziyldx().f[20]++;
      var _a, _b;
      /* istanbul ignore next */
      cov_2lmjziyldx().s[64]++;
      try {
        const userId =
        /* istanbul ignore next */
        (cov_2lmjziyldx().s[65]++,
        /* istanbul ignore next */
        (cov_2lmjziyldx().b[28][0]++, (_a = req.user) === null) ||
        /* istanbul ignore next */
        (cov_2lmjziyldx().b[28][1]++, _a === void 0) ?
        /* istanbul ignore next */
        (cov_2lmjziyldx().b[27][0]++, void 0) :
        /* istanbul ignore next */
        (cov_2lmjziyldx().b[27][1]++, _a.userEmail));
        /* istanbul ignore next */
        cov_2lmjziyldx().s[66]++;
        if (!userId) {
          /* istanbul ignore next */
          cov_2lmjziyldx().b[29][0]++;
          cov_2lmjziyldx().s[67]++;
          res.status(401).json({
            error: 'Usuario no autenticado'
          });
          /* istanbul ignore next */
          cov_2lmjziyldx().s[68]++;
          return;
        } else
        /* istanbul ignore next */
        {
          cov_2lmjziyldx().b[29][1]++;
        }
        const accountData =
        /* istanbul ignore next */
        (cov_2lmjziyldx().s[69]++, req.body);
        // Validaciones básicas
        /* istanbul ignore next */
        cov_2lmjziyldx().s[70]++;
        if (
        /* istanbul ignore next */
        (cov_2lmjziyldx().b[31][0]++, !accountData.accountHolder) ||
        /* istanbul ignore next */
        (cov_2lmjziyldx().b[31][1]++, !accountData.accountNumber) ||
        /* istanbul ignore next */
        (cov_2lmjziyldx().b[31][2]++, !accountData.bankName)) {
          /* istanbul ignore next */
          cov_2lmjziyldx().b[30][0]++;
          cov_2lmjziyldx().s[71]++;
          res.status(400).json({
            error: 'Datos de cuenta bancaria incompletos'
          });
          /* istanbul ignore next */
          cov_2lmjziyldx().s[72]++;
          return;
        } else
        /* istanbul ignore next */
        {
          cov_2lmjziyldx().b[30][1]++;
        }
        const bankAccount =
        /* istanbul ignore next */
        (cov_2lmjziyldx().s[73]++, yield this.paymentService.registerBankAccount(userId, accountData));
        /* istanbul ignore next */
        cov_2lmjziyldx().s[74]++;
        res.status(200).json({
          success: true,
          data: bankAccount
        });
      } catch (error) {
        /* istanbul ignore next */
        cov_2lmjziyldx().s[75]++;
        loggerService_1.logger.error('Error registrando cuenta bancaria', error, {
          metadata: {
            userId:
            /* istanbul ignore next */
            (cov_2lmjziyldx().b[33][0]++, (_b = req.user) === null) ||
            /* istanbul ignore next */
            (cov_2lmjziyldx().b[33][1]++, _b === void 0) ?
            /* istanbul ignore next */
            (cov_2lmjziyldx().b[32][0]++, void 0) :
            /* istanbul ignore next */
            (cov_2lmjziyldx().b[32][1]++, _b.userEmail)
          }
        });
        /* istanbul ignore next */
        cov_2lmjziyldx().s[76]++;
        res.status(500).json({
          success: false,
          error: 'Error registrando cuenta bancaria'
        });
      }
    });
  }
  /**
   * Obtener cuentas bancarias de usuario
   */
  getUserBankAccounts(req, res) {
    /* istanbul ignore next */
    cov_2lmjziyldx().f[21]++;
    cov_2lmjziyldx().s[77]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2lmjziyldx().f[22]++;
      var _a, _b;
      /* istanbul ignore next */
      cov_2lmjziyldx().s[78]++;
      try {
        const userId =
        /* istanbul ignore next */
        (cov_2lmjziyldx().s[79]++,
        /* istanbul ignore next */
        (cov_2lmjziyldx().b[35][0]++, (_a = req.user) === null) ||
        /* istanbul ignore next */
        (cov_2lmjziyldx().b[35][1]++, _a === void 0) ?
        /* istanbul ignore next */
        (cov_2lmjziyldx().b[34][0]++, void 0) :
        /* istanbul ignore next */
        (cov_2lmjziyldx().b[34][1]++, _a.userEmail));
        /* istanbul ignore next */
        cov_2lmjziyldx().s[80]++;
        if (!userId) {
          /* istanbul ignore next */
          cov_2lmjziyldx().b[36][0]++;
          cov_2lmjziyldx().s[81]++;
          res.status(401).json({
            error: 'Usuario no autenticado'
          });
          /* istanbul ignore next */
          cov_2lmjziyldx().s[82]++;
          return;
        } else
        /* istanbul ignore next */
        {
          cov_2lmjziyldx().b[36][1]++;
        }
        const accounts =
        /* istanbul ignore next */
        (cov_2lmjziyldx().s[83]++, yield this.paymentService.getUserBankAccounts(userId));
        /* istanbul ignore next */
        cov_2lmjziyldx().s[84]++;
        res.status(200).json({
          success: true,
          data: accounts
        });
      } catch (error) {
        /* istanbul ignore next */
        cov_2lmjziyldx().s[85]++;
        loggerService_1.logger.error('Error obteniendo cuentas bancarias', error, {
          metadata: {
            userId:
            /* istanbul ignore next */
            (cov_2lmjziyldx().b[38][0]++, (_b = req.user) === null) ||
            /* istanbul ignore next */
            (cov_2lmjziyldx().b[38][1]++, _b === void 0) ?
            /* istanbul ignore next */
            (cov_2lmjziyldx().b[37][0]++, void 0) :
            /* istanbul ignore next */
            (cov_2lmjziyldx().b[37][1]++, _b.userEmail)
          }
        });
        /* istanbul ignore next */
        cov_2lmjziyldx().s[86]++;
        res.status(500).json({
          success: false,
          error: 'Error obteniendo cuentas bancarias'
        });
      }
    });
  }
  /**
   * Subir comprobante de depósito
   */
  uploadDepositVoucher(req, res) {
    /* istanbul ignore next */
    cov_2lmjziyldx().f[23]++;
    cov_2lmjziyldx().s[87]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2lmjziyldx().f[24]++;
      var _a, _b;
      /* istanbul ignore next */
      cov_2lmjziyldx().s[88]++;
      try {
        const userId =
        /* istanbul ignore next */
        (cov_2lmjziyldx().s[89]++,
        /* istanbul ignore next */
        (cov_2lmjziyldx().b[40][0]++, (_a = req.user) === null) ||
        /* istanbul ignore next */
        (cov_2lmjziyldx().b[40][1]++, _a === void 0) ?
        /* istanbul ignore next */
        (cov_2lmjziyldx().b[39][0]++, void 0) :
        /* istanbul ignore next */
        (cov_2lmjziyldx().b[39][1]++, _a.userEmail));
        /* istanbul ignore next */
        cov_2lmjziyldx().s[90]++;
        if (!userId) {
          /* istanbul ignore next */
          cov_2lmjziyldx().b[41][0]++;
          cov_2lmjziyldx().s[91]++;
          res.status(401).json({
            error: 'Usuario no autenticado'
          });
          /* istanbul ignore next */
          cov_2lmjziyldx().s[92]++;
          return;
        } else
        /* istanbul ignore next */
        {
          cov_2lmjziyldx().b[41][1]++;
        }
        cov_2lmjziyldx().s[93]++;
        if (!req.file) {
          /* istanbul ignore next */
          cov_2lmjziyldx().b[42][0]++;
          cov_2lmjziyldx().s[94]++;
          res.status(400).json({
            error: 'No se proporcionó archivo de comprobante'
          });
          /* istanbul ignore next */
          cov_2lmjziyldx().s[95]++;
          return;
        } else
        /* istanbul ignore next */
        {
          cov_2lmjziyldx().b[42][1]++;
        }
        const {
          amount,
          accountHolderName,
          accountNumber,
          bankName,
          depositDate,
          depositTime,
          referenceNumber,
          comments
        } =
        /* istanbul ignore next */
        (cov_2lmjziyldx().s[96]++, req.body);
        /* istanbul ignore next */
        cov_2lmjziyldx().s[97]++;
        if (
        /* istanbul ignore next */
        (cov_2lmjziyldx().b[44][0]++, !amount) ||
        /* istanbul ignore next */
        (cov_2lmjziyldx().b[44][1]++, isNaN(Number(amount)))) {
          /* istanbul ignore next */
          cov_2lmjziyldx().b[43][0]++;
          cov_2lmjziyldx().s[98]++;
          res.status(400).json({
            error: 'Monto inválido'
          });
          /* istanbul ignore next */
          cov_2lmjziyldx().s[99]++;
          return;
        } else
        /* istanbul ignore next */
        {
          cov_2lmjziyldx().b[43][1]++;
        }
        cov_2lmjziyldx().s[100]++;
        if (
        /* istanbul ignore next */
        (cov_2lmjziyldx().b[46][0]++, !accountHolderName) ||
        /* istanbul ignore next */
        (cov_2lmjziyldx().b[46][1]++, !bankName)) {
          /* istanbul ignore next */
          cov_2lmjziyldx().b[45][0]++;
          cov_2lmjziyldx().s[101]++;
          res.status(400).json({
            error: 'Nombre del titular y banco son obligatorios'
          });
          /* istanbul ignore next */
          cov_2lmjziyldx().s[102]++;
          return;
        } else
        /* istanbul ignore next */
        {
          cov_2lmjziyldx().b[45][1]++;
        }
        const depositData =
        /* istanbul ignore next */
        (cov_2lmjziyldx().s[103]++, {
          amount: Number(amount),
          voucherFile: req.file,
          accountHolderName,
          accountNumber,
          bankName,
          depositDate,
          depositTime,
          referenceNumber,
          comments
        });
        /* istanbul ignore next */
        cov_2lmjziyldx().s[104]++;
        loggerService_1.logger.info('Subiendo comprobante de depósito', {
          metadata: {
            userId,
            amount
          }
        });
        const deposit =
        /* istanbul ignore next */
        (cov_2lmjziyldx().s[105]++, yield this.paymentService.uploadDepositVoucher(userId, depositData));
        // Notificar automáticamente a todos los administradores
        /* istanbul ignore next */
        cov_2lmjziyldx().s[106]++;
        yield this.notifyAdminsAboutNewDeposit(deposit, userId);
        /* istanbul ignore next */
        cov_2lmjziyldx().s[107]++;
        res.status(201).json({
          success: true,
          data: deposit,
          message: 'Depósito subido exitosamente. Pendiente de verificación por administrador.'
        });
      } catch (error) {
        /* istanbul ignore next */
        cov_2lmjziyldx().s[108]++;
        loggerService_1.logger.error('Error subiendo comprobante de depósito', error, {
          metadata: {
            userId:
            /* istanbul ignore next */
            (cov_2lmjziyldx().b[48][0]++, (_b = req.user) === null) ||
            /* istanbul ignore next */
            (cov_2lmjziyldx().b[48][1]++, _b === void 0) ?
            /* istanbul ignore next */
            (cov_2lmjziyldx().b[47][0]++, void 0) :
            /* istanbul ignore next */
            (cov_2lmjziyldx().b[47][1]++, _b.userEmail)
          }
        });
        /* istanbul ignore next */
        cov_2lmjziyldx().s[109]++;
        res.status(500).json({
          success: false,
          error: 'Error subiendo comprobante de depósito'
        });
      }
    });
  }
  /**
   * Notificar a administradores sobre nuevo depósito
   */
  notifyAdminsAboutNewDeposit(deposit, userId) {
    /* istanbul ignore next */
    cov_2lmjziyldx().f[25]++;
    cov_2lmjziyldx().s[110]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2lmjziyldx().f[26]++;
      cov_2lmjziyldx().s[111]++;
      try {
        // Obtener todos los usuarios administradores
        const adminsSnapshot =
        /* istanbul ignore next */
        (cov_2lmjziyldx().s[112]++, yield firebase_1.db.collection('users').where('roll', 'in', ['admin', 'superadmin']).get());
        const adminEmails =
        /* istanbul ignore next */
        (cov_2lmjziyldx().s[113]++, adminsSnapshot.docs.map(doc => {
          /* istanbul ignore next */
          cov_2lmjziyldx().f[27]++;
          cov_2lmjziyldx().s[114]++;
          return doc.data().userEmail;
        }));
        // Crear notificación para cada administrador
        const notificationPromises =
        /* istanbul ignore next */
        (cov_2lmjziyldx().s[115]++, adminEmails.map(adminEmail => {
          /* istanbul ignore next */
          cov_2lmjziyldx().f[28]++;
          cov_2lmjziyldx().s[116]++;
          return firebase_1.db.collection('notifications').add({
            userId: adminEmail,
            title: 'Nuevo Depósito Pendiente',
            message: `Usuario ${userId} ha subido un depósito de RD$ ${deposit.amount.toLocaleString()}`,
            type: 'info',
            category: 'payment',
            isRead: false,
            createdAt: new Date(),
            updatedAt: new Date(),
            metadata: {
              depositId: deposit.id,
              userId: userId,
              amount: deposit.amount,
              voucherUrl: deposit.voucherFile.url,
              accountHolderName: deposit.accountHolderName,
              bankName: deposit.bankName
            }
          });
        }));
        /* istanbul ignore next */
        cov_2lmjziyldx().s[117]++;
        yield Promise.all(notificationPromises);
        /* istanbul ignore next */
        cov_2lmjziyldx().s[118]++;
        loggerService_1.logger.info('Notificaciones enviadas a administradores', {
          metadata: {
            depositId: deposit.id,
            adminCount: adminEmails.length
          }
        });
        // Enviar push notifications si está disponible
        /* istanbul ignore next */
        cov_2lmjziyldx().s[119]++;
        try {
          const {
            pushNotificationService
          } =
          /* istanbul ignore next */
          (cov_2lmjziyldx().s[120]++, yield Promise.resolve().then(() => {
            /* istanbul ignore next */
            cov_2lmjziyldx().f[29]++;
            cov_2lmjziyldx().s[121]++;
            return __importStar(require('../services/pushNotificationService'));
          }));
          const pushPromises =
          /* istanbul ignore next */
          (cov_2lmjziyldx().s[122]++, adminEmails.map(adminEmail => {
            /* istanbul ignore next */
            cov_2lmjziyldx().f[30]++;
            cov_2lmjziyldx().s[123]++;
            return pushNotificationService.sendNotificationToUser(adminEmail, {
              title: 'Nuevo Depósito Pendiente',
              body: `Usuario ${userId} ha subido un depósito de RD$ ${deposit.amount.toLocaleString()}`,
              data: {
                depositId: deposit.id,
                type: 'new_deposit',
                amount: deposit.amount,
                userId: userId
              },
              type: 'payment',
              category: 'deposit'
            });
          }));
          /* istanbul ignore next */
          cov_2lmjziyldx().s[124]++;
          yield Promise.all(pushPromises);
        } catch (pushError) {
          /* istanbul ignore next */
          cov_2lmjziyldx().s[125]++;
          loggerService_1.logger.warn('Error enviando push notifications a administradores', pushError);
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_2lmjziyldx().s[126]++;
        loggerService_1.logger.error('Error notificando a administradores sobre nuevo depósito', error);
      }
    });
  }
  /**
   * Obtener depósitos del usuario
   */
  getUserDeposits(req, res) {
    /* istanbul ignore next */
    cov_2lmjziyldx().f[31]++;
    cov_2lmjziyldx().s[127]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2lmjziyldx().f[32]++;
      var _a, _b;
      /* istanbul ignore next */
      cov_2lmjziyldx().s[128]++;
      try {
        const userId =
        /* istanbul ignore next */
        (cov_2lmjziyldx().s[129]++,
        /* istanbul ignore next */
        (cov_2lmjziyldx().b[50][0]++, (_a = req.user) === null) ||
        /* istanbul ignore next */
        (cov_2lmjziyldx().b[50][1]++, _a === void 0) ?
        /* istanbul ignore next */
        (cov_2lmjziyldx().b[49][0]++, void 0) :
        /* istanbul ignore next */
        (cov_2lmjziyldx().b[49][1]++, _a.userEmail));
        /* istanbul ignore next */
        cov_2lmjziyldx().s[130]++;
        if (!userId) {
          /* istanbul ignore next */
          cov_2lmjziyldx().b[51][0]++;
          cov_2lmjziyldx().s[131]++;
          res.status(401).json({
            error: 'Usuario no autenticado'
          });
          /* istanbul ignore next */
          cov_2lmjziyldx().s[132]++;
          return;
        } else
        /* istanbul ignore next */
        {
          cov_2lmjziyldx().b[51][1]++;
        }
        // TODO: Implementar método en el servicio
        cov_2lmjziyldx().s[133]++;
        res.status(200).json({
          success: true,
          data: [],
          message: 'Funcionalidad en desarrollo'
        });
      } catch (error) {
        /* istanbul ignore next */
        cov_2lmjziyldx().s[134]++;
        loggerService_1.logger.error('Error obteniendo depósitos del usuario', error, {
          metadata: {
            userId:
            /* istanbul ignore next */
            (cov_2lmjziyldx().b[53][0]++, (_b = req.user) === null) ||
            /* istanbul ignore next */
            (cov_2lmjziyldx().b[53][1]++, _b === void 0) ?
            /* istanbul ignore next */
            (cov_2lmjziyldx().b[52][0]++, void 0) :
            /* istanbul ignore next */
            (cov_2lmjziyldx().b[52][1]++, _b.userEmail)
          }
        });
        /* istanbul ignore next */
        cov_2lmjziyldx().s[135]++;
        res.status(500).json({
          success: false,
          error: 'Error obteniendo depósitos del usuario'
        });
      }
    });
  }
  /**
   * Pagar músico por evento
   */
  payMusicianForEvent(req, res) {
    /* istanbul ignore next */
    cov_2lmjziyldx().f[33]++;
    cov_2lmjziyldx().s[136]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2lmjziyldx().f[34]++;
      var _a;
      /* istanbul ignore next */
      cov_2lmjziyldx().s[137]++;
      try {
        const userId =
        /* istanbul ignore next */
        (cov_2lmjziyldx().s[138]++,
        /* istanbul ignore next */
        (cov_2lmjziyldx().b[55][0]++, (_a = req.user) === null) ||
        /* istanbul ignore next */
        (cov_2lmjziyldx().b[55][1]++, _a === void 0) ?
        /* istanbul ignore next */
        (cov_2lmjziyldx().b[54][0]++, void 0) :
        /* istanbul ignore next */
        (cov_2lmjziyldx().b[54][1]++, _a.userEmail));
        /* istanbul ignore next */
        cov_2lmjziyldx().s[139]++;
        if (!userId) {
          /* istanbul ignore next */
          cov_2lmjziyldx().b[56][0]++;
          cov_2lmjziyldx().s[140]++;
          res.status(401).json({
            error: 'Usuario no autenticado'
          });
          /* istanbul ignore next */
          cov_2lmjziyldx().s[141]++;
          return;
        } else
        /* istanbul ignore next */
        {
          cov_2lmjziyldx().b[56][1]++;
        }
        const {
          eventId
        } =
        /* istanbul ignore next */
        (cov_2lmjziyldx().s[142]++, req.params);
        const {
          musicianId,
          amount
        } =
        /* istanbul ignore next */
        (cov_2lmjziyldx().s[143]++, req.body);
        /* istanbul ignore next */
        cov_2lmjziyldx().s[144]++;
        if (
        /* istanbul ignore next */
        (cov_2lmjziyldx().b[58][0]++, !musicianId) ||
        /* istanbul ignore next */
        (cov_2lmjziyldx().b[58][1]++, !amount) ||
        /* istanbul ignore next */
        (cov_2lmjziyldx().b[58][2]++, isNaN(Number(amount)))) {
          /* istanbul ignore next */
          cov_2lmjziyldx().b[57][0]++;
          cov_2lmjziyldx().s[145]++;
          res.status(400).json({
            error: 'Datos de pago incompletos'
          });
          /* istanbul ignore next */
          cov_2lmjziyldx().s[146]++;
          return;
        } else
        /* istanbul ignore next */
        {
          cov_2lmjziyldx().b[57][1]++;
        }
        const paymentData =
        /* istanbul ignore next */
        (cov_2lmjziyldx().s[147]++, {
          eventId,
          organizerId: userId,
          musicianId,
          amount: Number(amount)
        });
        /* istanbul ignore next */
        cov_2lmjziyldx().s[148]++;
        loggerService_1.logger.info('Procesando pago de evento', {
          metadata: {
            eventId,
            organizerId: userId,
            musicianId,
            amount
          }
        });
        const payment =
        /* istanbul ignore next */
        (cov_2lmjziyldx().s[149]++, yield this.paymentService.processEventPayment(paymentData));
        /* istanbul ignore next */
        cov_2lmjziyldx().s[150]++;
        res.status(200).json({
          success: true,
          data: payment
        });
      } catch (error) {
        /* istanbul ignore next */
        cov_2lmjziyldx().s[151]++;
        loggerService_1.logger.error('Error procesando pago de evento', error, {
          metadata: {
            eventId: req.params.eventId
          }
        });
        /* istanbul ignore next */
        cov_2lmjziyldx().s[152]++;
        res.status(500).json({
          success: false,
          error: 'Error procesando pago de evento'
        });
      }
    });
  }
  /**
   * Obtener ganancias de músico
   */
  getMusicianEarnings(req, res) {
    /* istanbul ignore next */
    cov_2lmjziyldx().f[35]++;
    cov_2lmjziyldx().s[153]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2lmjziyldx().f[36]++;
      var _a, _b;
      /* istanbul ignore next */
      cov_2lmjziyldx().s[154]++;
      try {
        const userId =
        /* istanbul ignore next */
        (cov_2lmjziyldx().s[155]++,
        /* istanbul ignore next */
        (cov_2lmjziyldx().b[60][0]++, (_a = req.user) === null) ||
        /* istanbul ignore next */
        (cov_2lmjziyldx().b[60][1]++, _a === void 0) ?
        /* istanbul ignore next */
        (cov_2lmjziyldx().b[59][0]++, void 0) :
        /* istanbul ignore next */
        (cov_2lmjziyldx().b[59][1]++, _a.userEmail));
        /* istanbul ignore next */
        cov_2lmjziyldx().s[156]++;
        if (!userId) {
          /* istanbul ignore next */
          cov_2lmjziyldx().b[61][0]++;
          cov_2lmjziyldx().s[157]++;
          res.status(401).json({
            error: 'Usuario no autenticado'
          });
          /* istanbul ignore next */
          cov_2lmjziyldx().s[158]++;
          return;
        } else
        /* istanbul ignore next */
        {
          cov_2lmjziyldx().b[61][1]++;
        }
        const earnings =
        /* istanbul ignore next */
        (cov_2lmjziyldx().s[159]++, yield this.paymentService.getMusicianEarnings(userId));
        /* istanbul ignore next */
        cov_2lmjziyldx().s[160]++;
        res.status(200).json({
          success: true,
          data: earnings
        });
      } catch (error) {
        /* istanbul ignore next */
        cov_2lmjziyldx().s[161]++;
        loggerService_1.logger.error('Error obteniendo ganancias de músico', error, {
          metadata: {
            userId:
            /* istanbul ignore next */
            (cov_2lmjziyldx().b[63][0]++, (_b = req.user) === null) ||
            /* istanbul ignore next */
            (cov_2lmjziyldx().b[63][1]++, _b === void 0) ?
            /* istanbul ignore next */
            (cov_2lmjziyldx().b[62][0]++, void 0) :
            /* istanbul ignore next */
            (cov_2lmjziyldx().b[62][1]++, _b.userEmail)
          }
        });
        /* istanbul ignore next */
        cov_2lmjziyldx().s[162]++;
        res.status(500).json({
          success: false,
          error: 'Error obteniendo ganancias de músico'
        });
      }
    });
  }
  /**
   * Solicitar retiro de ganancias
   */
  requestWithdrawal(req, res) {
    /* istanbul ignore next */
    cov_2lmjziyldx().f[37]++;
    cov_2lmjziyldx().s[163]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2lmjziyldx().f[38]++;
      var _a, _b;
      /* istanbul ignore next */
      cov_2lmjziyldx().s[164]++;
      try {
        const userId =
        /* istanbul ignore next */
        (cov_2lmjziyldx().s[165]++,
        /* istanbul ignore next */
        (cov_2lmjziyldx().b[65][0]++, (_a = req.user) === null) ||
        /* istanbul ignore next */
        (cov_2lmjziyldx().b[65][1]++, _a === void 0) ?
        /* istanbul ignore next */
        (cov_2lmjziyldx().b[64][0]++, void 0) :
        /* istanbul ignore next */
        (cov_2lmjziyldx().b[64][1]++, _a.userEmail));
        /* istanbul ignore next */
        cov_2lmjziyldx().s[166]++;
        if (!userId) {
          /* istanbul ignore next */
          cov_2lmjziyldx().b[66][0]++;
          cov_2lmjziyldx().s[167]++;
          res.status(401).json({
            error: 'Usuario no autenticado'
          });
          /* istanbul ignore next */
          cov_2lmjziyldx().s[168]++;
          return;
        } else
        /* istanbul ignore next */
        {
          cov_2lmjziyldx().b[66][1]++;
        }
        const {
          amount,
          bankAccountId
        } =
        /* istanbul ignore next */
        (cov_2lmjziyldx().s[169]++, req.body);
        /* istanbul ignore next */
        cov_2lmjziyldx().s[170]++;
        if (
        /* istanbul ignore next */
        (cov_2lmjziyldx().b[68][0]++, !amount) ||
        /* istanbul ignore next */
        (cov_2lmjziyldx().b[68][1]++, !bankAccountId) ||
        /* istanbul ignore next */
        (cov_2lmjziyldx().b[68][2]++, isNaN(Number(amount)))) {
          /* istanbul ignore next */
          cov_2lmjziyldx().b[67][0]++;
          cov_2lmjziyldx().s[171]++;
          res.status(400).json({
            error: 'Datos de retiro incompletos'
          });
          /* istanbul ignore next */
          cov_2lmjziyldx().s[172]++;
          return;
        } else
        /* istanbul ignore next */
        {
          cov_2lmjziyldx().b[67][1]++;
        }
        const withdrawalData =
        /* istanbul ignore next */
        (cov_2lmjziyldx().s[173]++, {
          amount: Number(amount),
          bankAccountId
        });
        /* istanbul ignore next */
        cov_2lmjziyldx().s[174]++;
        loggerService_1.logger.info('Solicitando retiro de ganancias', {
          metadata: {
            userId,
            amount: withdrawalData.amount
          }
        });
        const withdrawal =
        /* istanbul ignore next */
        (cov_2lmjziyldx().s[175]++, yield this.paymentService.requestWithdrawal(userId, withdrawalData));
        /* istanbul ignore next */
        cov_2lmjziyldx().s[176]++;
        res.status(200).json({
          success: true,
          data: withdrawal
        });
      } catch (error) {
        /* istanbul ignore next */
        cov_2lmjziyldx().s[177]++;
        loggerService_1.logger.error('Error solicitando retiro', error, {
          metadata: {
            userId:
            /* istanbul ignore next */
            (cov_2lmjziyldx().b[70][0]++, (_b = req.user) === null) ||
            /* istanbul ignore next */
            (cov_2lmjziyldx().b[70][1]++, _b === void 0) ?
            /* istanbul ignore next */
            (cov_2lmjziyldx().b[69][0]++, void 0) :
            /* istanbul ignore next */
            (cov_2lmjziyldx().b[69][1]++, _b.userEmail)
          }
        });
        /* istanbul ignore next */
        cov_2lmjziyldx().s[178]++;
        res.status(500).json({
          success: false,
          error: 'Error solicitando retiro'
        });
      }
    });
  }
  // ===== ENDPOINTS DE ADMINISTRACIÓN =====
  /**
   * Obtener depósitos pendientes (admin)
   */
  getPendingDeposits(req, res) {
    /* istanbul ignore next */
    cov_2lmjziyldx().f[39]++;
    cov_2lmjziyldx().s[179]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2lmjziyldx().f[40]++;
      cov_2lmjziyldx().s[180]++;
      try {
        const deposits =
        /* istanbul ignore next */
        (cov_2lmjziyldx().s[181]++, yield this.paymentService.getPendingDeposits());
        /* istanbul ignore next */
        cov_2lmjziyldx().s[182]++;
        res.status(200).json({
          success: true,
          data: deposits
        });
      } catch (error) {
        /* istanbul ignore next */
        cov_2lmjziyldx().s[183]++;
        loggerService_1.logger.error('Error obteniendo depósitos pendientes', error);
        /* istanbul ignore next */
        cov_2lmjziyldx().s[184]++;
        res.status(500).json({
          success: false,
          error: 'Error obteniendo depósitos pendientes'
        });
      }
    });
  }
  /**
   * Verificar depósito (admin)
   */
  verifyDeposit(req, res) {
    /* istanbul ignore next */
    cov_2lmjziyldx().f[41]++;
    cov_2lmjziyldx().s[185]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2lmjziyldx().f[42]++;
      var _a, _b;
      /* istanbul ignore next */
      cov_2lmjziyldx().s[186]++;
      try {
        const adminId =
        /* istanbul ignore next */
        (cov_2lmjziyldx().s[187]++,
        /* istanbul ignore next */
        (cov_2lmjziyldx().b[72][0]++, (_a = req.user) === null) ||
        /* istanbul ignore next */
        (cov_2lmjziyldx().b[72][1]++, _a === void 0) ?
        /* istanbul ignore next */
        (cov_2lmjziyldx().b[71][0]++, void 0) :
        /* istanbul ignore next */
        (cov_2lmjziyldx().b[71][1]++, _a.userEmail));
        const {
          depositId
        } =
        /* istanbul ignore next */
        (cov_2lmjziyldx().s[188]++, req.params);
        const {
          approved,
          notes,
          verificationData
        } =
        /* istanbul ignore next */
        (cov_2lmjziyldx().s[189]++, req.body);
        /* istanbul ignore next */
        cov_2lmjziyldx().s[190]++;
        if (typeof approved !== 'boolean') {
          /* istanbul ignore next */
          cov_2lmjziyldx().b[73][0]++;
          cov_2lmjziyldx().s[191]++;
          res.status(400).json({
            error: 'Estado de aprobación inválido'
          });
          /* istanbul ignore next */
          cov_2lmjziyldx().s[192]++;
          return;
        } else
        /* istanbul ignore next */
        {
          cov_2lmjziyldx().b[73][1]++;
        }
        // Si se aprueba, validar que se proporcionen los datos de verificación
        cov_2lmjziyldx().s[193]++;
        if (
        /* istanbul ignore next */
        (cov_2lmjziyldx().b[75][0]++, approved) && (
        /* istanbul ignore next */
        (cov_2lmjziyldx().b[75][1]++, !verificationData) ||
        /* istanbul ignore next */
        (cov_2lmjziyldx().b[75][2]++, !verificationData.bankDepositDate) ||
        /* istanbul ignore next */
        (cov_2lmjziyldx().b[75][3]++, !verificationData.referenceNumber))) {
          /* istanbul ignore next */
          cov_2lmjziyldx().b[74][0]++;
          cov_2lmjziyldx().s[194]++;
          res.status(400).json({
            error: 'Para aprobar un depósito, debe proporcionar fecha del depósito y número de referencia'
          });
          /* istanbul ignore next */
          cov_2lmjziyldx().s[195]++;
          return;
        } else
        /* istanbul ignore next */
        {
          cov_2lmjziyldx().b[74][1]++;
        }
        cov_2lmjziyldx().s[196]++;
        loggerService_1.logger.info('Verificando depósito', {
          metadata: {
            depositId,
            adminId,
            approved
          }
        });
        /* istanbul ignore next */
        cov_2lmjziyldx().s[197]++;
        yield this.paymentService.verifyDeposit(depositId, adminId, approved, notes, verificationData);
        // Notificar al usuario sobre el resultado
        /* istanbul ignore next */
        cov_2lmjziyldx().s[198]++;
        yield this.notifyUserAboutDepositVerification(depositId, approved, notes);
        /* istanbul ignore next */
        cov_2lmjziyldx().s[199]++;
        res.status(200).json({
          success: true,
          data: {
            depositId,
            status: approved ?
            /* istanbul ignore next */
            (cov_2lmjziyldx().b[76][0]++, 'approved') :
            /* istanbul ignore next */
            (cov_2lmjziyldx().b[76][1]++, 'rejected'),
            verifiedBy: adminId,
            verifiedAt: new Date().toISOString(),
            userBalanceUpdated: approved
          },
          message: `Depósito ${approved ?
          /* istanbul ignore next */
          (cov_2lmjziyldx().b[77][0]++, 'aprobado') :
          /* istanbul ignore next */
          (cov_2lmjziyldx().b[77][1]++, 'rechazado')} exitosamente`
        });
      } catch (error) {
        /* istanbul ignore next */
        cov_2lmjziyldx().s[200]++;
        loggerService_1.logger.error('Error verificando depósito', error, {
          metadata: {
            depositId: req.params.depositId,
            adminId:
            /* istanbul ignore next */
            (cov_2lmjziyldx().b[79][0]++, (_b = req.user) === null) ||
            /* istanbul ignore next */
            (cov_2lmjziyldx().b[79][1]++, _b === void 0) ?
            /* istanbul ignore next */
            (cov_2lmjziyldx().b[78][0]++, void 0) :
            /* istanbul ignore next */
            (cov_2lmjziyldx().b[78][1]++, _b.userEmail)
          }
        });
        /* istanbul ignore next */
        cov_2lmjziyldx().s[201]++;
        res.status(500).json({
          success: false,
          error: 'Error verificando depósito'
        });
      }
    });
  }
  /**
   * Notificar al usuario sobre la verificación de su depósito
   */
  notifyUserAboutDepositVerification(depositId, approved, notes) {
    /* istanbul ignore next */
    cov_2lmjziyldx().f[43]++;
    cov_2lmjziyldx().s[202]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2lmjziyldx().f[44]++;
      cov_2lmjziyldx().s[203]++;
      try {
        // Obtener información del depósito
        const depositDoc =
        /* istanbul ignore next */
        (cov_2lmjziyldx().s[204]++, yield firebase_1.db.collection('user_deposits').doc(depositId).get());
        /* istanbul ignore next */
        cov_2lmjziyldx().s[205]++;
        if (!depositDoc.exists) {
          /* istanbul ignore next */
          cov_2lmjziyldx().b[80][0]++;
          cov_2lmjziyldx().s[206]++;
          return;
        } else
        /* istanbul ignore next */
        {
          cov_2lmjziyldx().b[80][1]++;
        }
        const deposit =
        /* istanbul ignore next */
        (cov_2lmjziyldx().s[207]++, depositDoc.data());
        const userId =
        /* istanbul ignore next */
        (cov_2lmjziyldx().s[208]++, deposit.userId);
        // Crear notificación para el usuario
        /* istanbul ignore next */
        cov_2lmjziyldx().s[209]++;
        yield firebase_1.db.collection('notifications').add({
          userId: userId,
          title: approved ?
          /* istanbul ignore next */
          (cov_2lmjziyldx().b[81][0]++, 'Depósito Aprobado') :
          /* istanbul ignore next */
          (cov_2lmjziyldx().b[81][1]++, 'Depósito Rechazado'),
          message: approved ?
          /* istanbul ignore next */
          (cov_2lmjziyldx().b[82][0]++, `Tu depósito de RD$ ${deposit.amount.toLocaleString()} ha sido aprobado y agregado a tu balance`) :
          /* istanbul ignore next */
          (cov_2lmjziyldx().b[82][1]++, `Tu depósito ha sido rechazado: ${
          /* istanbul ignore next */
          (cov_2lmjziyldx().b[83][0]++, notes) ||
          /* istanbul ignore next */
          (cov_2lmjziyldx().b[83][1]++, 'Sin especificar')}`),
          type: approved ?
          /* istanbul ignore next */
          (cov_2lmjziyldx().b[84][0]++, 'success') :
          /* istanbul ignore next */
          (cov_2lmjziyldx().b[84][1]++, 'error'),
          category: 'payment',
          isRead: false,
          createdAt: new Date(),
          updatedAt: new Date(),
          metadata: {
            depositId: depositId,
            amount: deposit.amount,
            status: approved ?
            /* istanbul ignore next */
            (cov_2lmjziyldx().b[85][0]++, 'approved') :
            /* istanbul ignore next */
            (cov_2lmjziyldx().b[85][1]++, 'rejected'),
            notes: notes
          }
        });
        // Enviar push notification si está disponible
        /* istanbul ignore next */
        cov_2lmjziyldx().s[210]++;
        try {
          const {
            pushNotificationService
          } =
          /* istanbul ignore next */
          (cov_2lmjziyldx().s[211]++, yield Promise.resolve().then(() => {
            /* istanbul ignore next */
            cov_2lmjziyldx().f[45]++;
            cov_2lmjziyldx().s[212]++;
            return __importStar(require('../services/pushNotificationService'));
          }));
          /* istanbul ignore next */
          cov_2lmjziyldx().s[213]++;
          yield pushNotificationService.sendNotificationToUser(userId, {
            title: approved ?
            /* istanbul ignore next */
            (cov_2lmjziyldx().b[86][0]++, 'Depósito Aprobado') :
            /* istanbul ignore next */
            (cov_2lmjziyldx().b[86][1]++, 'Depósito Rechazado'),
            body: approved ?
            /* istanbul ignore next */
            (cov_2lmjziyldx().b[87][0]++, `Tu depósito de RD$ ${deposit.amount.toLocaleString()} ha sido aprobado`) :
            /* istanbul ignore next */
            (cov_2lmjziyldx().b[87][1]++, `Tu depósito ha sido rechazado: ${
            /* istanbul ignore next */
            (cov_2lmjziyldx().b[88][0]++, notes) ||
            /* istanbul ignore next */
            (cov_2lmjziyldx().b[88][1]++, 'Sin especificar')}`),
            data: {
              depositId: depositId,
              type: approved ?
              /* istanbul ignore next */
              (cov_2lmjziyldx().b[89][0]++, 'deposit_approved') :
              /* istanbul ignore next */
              (cov_2lmjziyldx().b[89][1]++, 'deposit_rejected'),
              amount: deposit.amount
            },
            type: 'payment',
            category: 'deposit'
          });
        } catch (pushError) {
          /* istanbul ignore next */
          cov_2lmjziyldx().s[214]++;
          loggerService_1.logger.warn('Error enviando push notification al usuario', pushError);
        }
        /* istanbul ignore next */
        cov_2lmjziyldx().s[215]++;
        loggerService_1.logger.info('Usuario notificado sobre verificación de depósito', {
          metadata: {
            depositId,
            userId,
            approved
          }
        });
      } catch (error) {
        /* istanbul ignore next */
        cov_2lmjziyldx().s[216]++;
        loggerService_1.logger.error('Error notificando al usuario sobre verificación de depósito', error);
      }
    });
  }
  /**
   * Obtener retiros pendientes (admin)
   */
  getPendingWithdrawals(req, res) {
    /* istanbul ignore next */
    cov_2lmjziyldx().f[46]++;
    cov_2lmjziyldx().s[217]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2lmjziyldx().f[47]++;
      cov_2lmjziyldx().s[218]++;
      try {
        const withdrawals =
        /* istanbul ignore next */
        (cov_2lmjziyldx().s[219]++, yield this.paymentService.getPendingWithdrawals());
        /* istanbul ignore next */
        cov_2lmjziyldx().s[220]++;
        res.status(200).json({
          success: true,
          data: withdrawals
        });
      } catch (error) {
        /* istanbul ignore next */
        cov_2lmjziyldx().s[221]++;
        loggerService_1.logger.error('Error obteniendo retiros pendientes', error);
        /* istanbul ignore next */
        cov_2lmjziyldx().s[222]++;
        res.status(500).json({
          success: false,
          error: 'Error obteniendo retiros pendientes'
        });
      }
    });
  }
  /**
   * Procesar retiro (admin)
   */
  processWithdrawal(req, res) {
    /* istanbul ignore next */
    cov_2lmjziyldx().f[48]++;
    cov_2lmjziyldx().s[223]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2lmjziyldx().f[49]++;
      var _a, _b;
      /* istanbul ignore next */
      cov_2lmjziyldx().s[224]++;
      try {
        const adminId =
        /* istanbul ignore next */
        (cov_2lmjziyldx().s[225]++,
        /* istanbul ignore next */
        (cov_2lmjziyldx().b[91][0]++, (_a = req.user) === null) ||
        /* istanbul ignore next */
        (cov_2lmjziyldx().b[91][1]++, _a === void 0) ?
        /* istanbul ignore next */
        (cov_2lmjziyldx().b[90][0]++, void 0) :
        /* istanbul ignore next */
        (cov_2lmjziyldx().b[90][1]++, _a.userEmail));
        const {
          withdrawalId
        } =
        /* istanbul ignore next */
        (cov_2lmjziyldx().s[226]++, req.params);
        const {
          approved,
          notes
        } =
        /* istanbul ignore next */
        (cov_2lmjziyldx().s[227]++, req.body);
        /* istanbul ignore next */
        cov_2lmjziyldx().s[228]++;
        if (typeof approved !== 'boolean') {
          /* istanbul ignore next */
          cov_2lmjziyldx().b[92][0]++;
          cov_2lmjziyldx().s[229]++;
          res.status(400).json({
            error: 'Estado de aprobación inválido'
          });
          /* istanbul ignore next */
          cov_2lmjziyldx().s[230]++;
          return;
        } else
        /* istanbul ignore next */
        {
          cov_2lmjziyldx().b[92][1]++;
        }
        cov_2lmjziyldx().s[231]++;
        loggerService_1.logger.info('Procesando retiro', {
          metadata: {
            withdrawalId,
            adminId,
            approved
          }
        });
        /* istanbul ignore next */
        cov_2lmjziyldx().s[232]++;
        yield this.paymentService.processWithdrawal(withdrawalId, adminId, approved, notes);
        /* istanbul ignore next */
        cov_2lmjziyldx().s[233]++;
        res.status(200).json({
          success: true,
          message: `Retiro ${approved ?
          /* istanbul ignore next */
          (cov_2lmjziyldx().b[93][0]++, 'aprobado') :
          /* istanbul ignore next */
          (cov_2lmjziyldx().b[93][1]++, 'rechazado')} exitosamente`
        });
      } catch (error) {
        /* istanbul ignore next */
        cov_2lmjziyldx().s[234]++;
        loggerService_1.logger.error('Error procesando retiro', error, {
          metadata: {
            withdrawalId: req.params.withdrawalId,
            adminId:
            /* istanbul ignore next */
            (cov_2lmjziyldx().b[95][0]++, (_b = req.user) === null) ||
            /* istanbul ignore next */
            (cov_2lmjziyldx().b[95][1]++, _b === void 0) ?
            /* istanbul ignore next */
            (cov_2lmjziyldx().b[94][0]++, void 0) :
            /* istanbul ignore next */
            (cov_2lmjziyldx().b[94][1]++, _b.userEmail)
          }
        });
        /* istanbul ignore next */
        cov_2lmjziyldx().s[235]++;
        res.status(500).json({
          success: false,
          error: 'Error procesando retiro'
        });
      }
    });
  }
  /**
   * Obtener estadísticas de pagos (admin)
   */
  getPaymentStatistics(req, res) {
    /* istanbul ignore next */
    cov_2lmjziyldx().f[50]++;
    cov_2lmjziyldx().s[236]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2lmjziyldx().f[51]++;
      cov_2lmjziyldx().s[237]++;
      try {
        const statistics =
        /* istanbul ignore next */
        (cov_2lmjziyldx().s[238]++, yield this.paymentService.getPaymentStatistics());
        /* istanbul ignore next */
        cov_2lmjziyldx().s[239]++;
        res.status(200).json({
          success: true,
          data: statistics
        });
      } catch (error) {
        /* istanbul ignore next */
        cov_2lmjziyldx().s[240]++;
        loggerService_1.logger.error('Error obteniendo estadísticas de pagos', error);
        /* istanbul ignore next */
        cov_2lmjziyldx().s[241]++;
        res.status(500).json({
          success: false,
          error: 'Error obteniendo estadísticas de pagos'
        });
      }
    });
  }
}
/* istanbul ignore next */
cov_2lmjziyldx().s[242]++;
exports.PaymentSystemController = PaymentSystemController;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,