#!/usr/bin/env node

/**
 * Script para desplegar √≠ndices de Firestore
 * 
 * Este script automatiza el despliegue de √≠ndices de Firestore
 * para optimizar las consultas del sistema MussikOn.
 * 
 * Uso:
 *   node scripts/deploy-indexes.js
 *   npm run deploy:indexes
 */

const { execSync } = require('child_process');
const fs = require('fs');
const path = require('path');

console.log('üöÄ Iniciando despliegue de √≠ndices de Firestore...\n');

// Verificar que firebase CLI est√© instalado
try {
  execSync('firebase --version', { stdio: 'pipe' });
  console.log('‚úÖ Firebase CLI detectado');
} catch (error) {
  console.error('‚ùå Firebase CLI no est√° instalado');
  console.log('üì¶ Instalando Firebase CLI...');
  try {
    execSync('npm install -g firebase-tools', { stdio: 'inherit' });
    console.log('‚úÖ Firebase CLI instalado correctamente');
  } catch (installError) {
    console.error('‚ùå Error al instalar Firebase CLI:', installError.message);
    process.exit(1);
  }
}

// Verificar que el archivo de √≠ndices existe
const indexPath = path.join(__dirname, '..', 'firestore.indexes.json');
if (!fs.existsSync(indexPath)) {
  console.error('‚ùå Archivo firestore.indexes.json no encontrado');
  process.exit(1);
}

console.log('üìÅ Archivo de √≠ndices encontrado');

// Verificar que estamos en el directorio correcto
const firebaseConfigPath = path.join(__dirname, '..', 'firebase.json');
if (!fs.existsSync(firebaseConfigPath)) {
  console.error('‚ùå Archivo firebase.json no encontrado');
  console.log('üí° Aseg√∫rate de estar en el directorio ra√≠z del proyecto');
  process.exit(1);
}

console.log('üìã Configuraci√≥n de Firebase encontrada\n');

// Funci√≥n para ejecutar comandos de Firebase
function runFirebaseCommand(command, description) {
  console.log(`üîÑ ${description}...`);
  try {
    const output = execSync(command, { 
      stdio: 'pipe',
      encoding: 'utf8',
      cwd: path.join(__dirname, '..')
    });
    console.log(`‚úÖ ${description} completado`);
    return output;
  } catch (error) {
    console.error(`‚ùå Error en ${description}:`, error.message);
    if (error.stdout) {
      console.log('üì§ Salida:', error.stdout);
    }
    if (error.stderr) {
      console.log('üì• Error:', error.stderr);
    }
    throw error;
  }
}

// Funci√≥n principal
async function deployIndexes() {
  try {
    // Verificar autenticaci√≥n
    console.log('üîê Verificando autenticaci√≥n...');
    try {
      execSync('firebase projects:list', { stdio: 'pipe' });
      console.log('‚úÖ Autenticaci√≥n verificada');
    } catch (authError) {
      console.log('üîë Iniciando autenticaci√≥n...');
      runFirebaseCommand('firebase login', 'Autenticaci√≥n con Firebase');
    }

    // Desplegar √≠ndices
    console.log('\nüìä Desplegando √≠ndices de Firestore...');
    const output = runFirebaseCommand(
      'firebase deploy --only firestore:indexes',
      'Despliegue de √≠ndices'
    );

    console.log('\nüìã Resumen del despliegue:');
    console.log(output);

    // Verificar estado de los √≠ndices
    console.log('\nüîç Verificando estado de los √≠ndices...');
    const statusOutput = runFirebaseCommand(
      'firebase firestore:indexes',
      'Verificaci√≥n de estado'
    );

    console.log('\nüìä Estado actual de los √≠ndices:');
    console.log(statusOutput);

    console.log('\nüéâ ¬°Despliegue de √≠ndices completado exitosamente!');
    console.log('\nüìù Pr√≥ximos pasos:');
    console.log('   1. Los √≠ndices pueden tardar varios minutos en construirse');
    console.log('   2. Puedes monitorear el progreso en la consola de Firebase');
    console.log('   3. Las consultas optimizadas estar√°n disponibles una vez que los √≠ndices est√©n listos');

  } catch (error) {
    console.error('\n‚ùå Error durante el despliegue:', error.message);
    console.log('\nüîß Soluciones comunes:');
    console.log('   1. Verifica que tienes permisos en el proyecto de Firebase');
    console.log('   2. Aseg√∫rate de que Firestore est√© habilitado en tu proyecto');
    console.log('   3. Verifica que el archivo firestore.indexes.json sea v√°lido');
    process.exit(1);
  }
}

// Funci√≥n para mostrar informaci√≥n de ayuda
function showHelp() {
  console.log(`
üìö Script de Despliegue de √çndices de Firestore

Uso:
  node scripts/deploy-indexes.js [opciones]

Opciones:
  --help, -h     Mostrar esta ayuda
  --dry-run      Simular el despliegue sin ejecutarlo
  --force        Forzar el despliegue sin confirmaciones

Ejemplos:
  node scripts/deploy-indexes.js
  node scripts/deploy-indexes.js --dry-run
  node scripts/deploy-indexes.js --force

Archivos requeridos:
  - firestore.indexes.json (configuraci√≥n de √≠ndices)
  - firebase.json (configuraci√≥n del proyecto)
  - .firebaserc (configuraci√≥n del proyecto de Firebase)

Notas:
  - Requiere Firebase CLI instalado
  - Requiere autenticaci√≥n con Firebase
  - Los √≠ndices pueden tardar varios minutos en construirse
  `);
}

// Procesar argumentos de l√≠nea de comandos
const args = process.argv.slice(2);

if (args.includes('--help') || args.includes('-h')) {
  showHelp();
  process.exit(0);
}

if (args.includes('--dry-run')) {
  console.log('üîç Modo de simulaci√≥n activado');
  console.log('üìã √çndices que se desplegar√≠an:');
  
  try {
    const indexes = JSON.parse(fs.readFileSync(indexPath, 'utf8'));
    console.log(`   - Total de √≠ndices: ${indexes.indexes.length}`);
    indexes.indexes.forEach((index, i) => {
      console.log(`   ${i + 1}. Colecci√≥n: ${index.collectionGroup}`);
      console.log(`      Campos: ${index.fields.map(f => f.fieldPath).join(', ')}`);
    });
  } catch (error) {
    console.error('‚ùå Error al leer el archivo de √≠ndices:', error.message);
  }
  
  process.exit(0);
}

// Ejecutar el despliegue
deployIndexes(); 