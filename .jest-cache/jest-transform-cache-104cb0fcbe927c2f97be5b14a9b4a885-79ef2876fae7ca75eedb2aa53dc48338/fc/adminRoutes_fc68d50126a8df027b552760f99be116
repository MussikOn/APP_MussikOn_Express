275eaa98f2f2668389c002f63918ea11
"use strict";

/* istanbul ignore next */
function cov_r82eiu62i() {
  var path = "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\routes\\adminRoutes.ts";
  var hash = "bbc446ea79ea33227da0d478eac62a19ae87a3c7";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\routes\\adminRoutes.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 18
        },
        end: {
          line: 3,
          column: 36
        }
      },
      "2": {
        start: {
          line: 4,
          column: 20
        },
        end: {
          line: 4,
          column: 54
        }
      },
      "3": {
        start: {
          line: 5,
          column: 26
        },
        end: {
          line: 5,
          column: 67
        }
      },
      "4": {
        start: {
          line: 6,
          column: 20
        },
        end: {
          line: 6,
          column: 43
        }
      },
      "5": {
        start: {
          line: 122,
          column: 0
        },
        end: {
          line: 122,
          column: 85
        }
      },
      "6": {
        start: {
          line: 123,
          column: 0
        },
        end: {
          line: 123,
          column: 90
        }
      },
      "7": {
        start: {
          line: 124,
          column: 0
        },
        end: {
          line: 124,
          column: 86
        }
      },
      "8": {
        start: {
          line: 125,
          column: 0
        },
        end: {
          line: 125,
          column: 89
        }
      },
      "9": {
        start: {
          line: 126,
          column: 0
        },
        end: {
          line: 126,
          column: 92
        }
      },
      "10": {
        start: {
          line: 127,
          column: 0
        },
        end: {
          line: 127,
          column: 90
        }
      },
      "11": {
        start: {
          line: 217,
          column: 0
        },
        end: {
          line: 217,
          column: 87
        }
      },
      "12": {
        start: {
          line: 218,
          column: 0
        },
        end: {
          line: 218,
          column: 92
        }
      },
      "13": {
        start: {
          line: 219,
          column: 0
        },
        end: {
          line: 219,
          column: 88
        }
      },
      "14": {
        start: {
          line: 220,
          column: 0
        },
        end: {
          line: 220,
          column: 91
        }
      },
      "15": {
        start: {
          line: 221,
          column: 0
        },
        end: {
          line: 221,
          column: 94
        }
      },
      "16": {
        start: {
          line: 294,
          column: 0
        },
        end: {
          line: 294,
          column: 93
        }
      },
      "17": {
        start: {
          line: 295,
          column: 0
        },
        end: {
          line: 295,
          column: 98
        }
      },
      "18": {
        start: {
          line: 296,
          column: 0
        },
        end: {
          line: 296,
          column: 97
        }
      },
      "19": {
        start: {
          line: 297,
          column: 0
        },
        end: {
          line: 297,
          column: 100
        }
      },
      "20": {
        start: {
          line: 348,
          column: 0
        },
        end: {
          line: 348,
          column: 87
        }
      },
      "21": {
        start: {
          line: 349,
          column: 0
        },
        end: {
          line: 349,
          column: 92
        }
      },
      "22": {
        start: {
          line: 350,
          column: 0
        },
        end: {
          line: 350,
          column: 94
        }
      },
      "23": {
        start: {
          line: 401,
          column: 0
        },
        end: {
          line: 401,
          column: 108
        }
      },
      "24": {
        start: {
          line: 402,
          column: 0
        },
        end: {
          line: 402,
          column: 109
        }
      },
      "25": {
        start: {
          line: 403,
          column: 0
        },
        end: {
          line: 403,
          column: 113
        }
      },
      "26": {
        start: {
          line: 404,
          column: 0
        },
        end: {
          line: 404,
          column: 112
        }
      },
      "27": {
        start: {
          line: 405,
          column: 0
        },
        end: {
          line: 405,
          column: 115
        }
      },
      "28": {
        start: {
          line: 406,
          column: 0
        },
        end: {
          line: 406,
          column: 113
        }
      },
      "29": {
        start: {
          line: 446,
          column: 0
        },
        end: {
          line: 446,
          column: 94
        }
      },
      "30": {
        start: {
          line: 461,
          column: 0
        },
        end: {
          line: 461,
          column: 106
        }
      },
      "31": {
        start: {
          line: 489,
          column: 0
        },
        end: {
          line: 489,
          column: 97
        }
      },
      "32": {
        start: {
          line: 517,
          column: 0
        },
        end: {
          line: 517,
          column: 99
        }
      },
      "33": {
        start: {
          line: 545,
          column: 0
        },
        end: {
          line: 545,
          column: 103
        }
      },
      "34": {
        start: {
          line: 581,
          column: 0
        },
        end: {
          line: 581,
          column: 97
        }
      },
      "35": {
        start: {
          line: 597,
          column: 0
        },
        end: {
          line: 597,
          column: 101
        }
      },
      "36": {
        start: {
          line: 620,
          column: 0
        },
        end: {
          line: 620,
          column: 115
        }
      },
      "37": {
        start: {
          line: 643,
          column: 0
        },
        end: {
          line: 643,
          column: 115
        }
      },
      "38": {
        start: {
          line: 658,
          column: 0
        },
        end: {
          line: 658,
          column: 111
        }
      },
      "39": {
        start: {
          line: 659,
          column: 0
        },
        end: {
          line: 659,
          column: 30
        }
      }
    },
    fnMap: {},
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0
    },
    f: {},
    b: {},
    inputSourceMap: {
      file: "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\routes\\adminRoutes.ts",
      mappings: ";;AAAA,qCAAiC;AACjC,uDAAoD;AACpD,oEAqCwC;AAExC,MAAM,WAAW,GAAG,IAAA,gBAAM,GAAE,CAAC;AAE7B;;;;;;;;;;;;;GAaG;AAEH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAmGG;AAEH,mBAAmB;AACnB,WAAW,CAAC,GAAG,CAAC,QAAQ,EAAE,qBAAS,EAAE,kCAAgB,CAAC,CAAC;AACvD,WAAW,CAAC,GAAG,CAAC,YAAY,EAAE,qBAAS,EAAE,mCAAiB,CAAC,CAAC;AAC5D,WAAW,CAAC,IAAI,CAAC,QAAQ,EAAE,qBAAS,EAAE,kCAAgB,CAAC,CAAC;AACxD,WAAW,CAAC,GAAG,CAAC,YAAY,EAAE,qBAAS,EAAE,kCAAgB,CAAC,CAAC;AAC3D,WAAW,CAAC,MAAM,CAAC,YAAY,EAAE,qBAAS,EAAE,kCAAgB,CAAC,CAAC;AAC9D,WAAW,CAAC,GAAG,CAAC,cAAc,EAAE,qBAAS,EAAE,iCAAe,CAAC,CAAC;AAE5D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAuFG;AAEH,kBAAkB;AAClB,WAAW,CAAC,GAAG,CAAC,SAAS,EAAE,qBAAS,EAAE,mCAAiB,CAAC,CAAC;AACzD,WAAW,CAAC,GAAG,CAAC,aAAa,EAAE,qBAAS,EAAE,oCAAkB,CAAC,CAAC;AAC9D,WAAW,CAAC,IAAI,CAAC,SAAS,EAAE,qBAAS,EAAE,mCAAiB,CAAC,CAAC;AAC1D,WAAW,CAAC,GAAG,CAAC,aAAa,EAAE,qBAAS,EAAE,mCAAiB,CAAC,CAAC;AAC7D,WAAW,CAAC,MAAM,CAAC,aAAa,EAAE,qBAAS,EAAE,mCAAiB,CAAC,CAAC;AAEhE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAsEG;AAEH,kBAAkB;AAClB,WAAW,CAAC,GAAG,CAAC,YAAY,EAAE,qBAAS,EAAE,sCAAoB,CAAC,CAAC;AAC/D,WAAW,CAAC,GAAG,CAAC,gBAAgB,EAAE,qBAAS,EAAE,uCAAqB,CAAC,CAAC;AACpE,WAAW,CAAC,GAAG,CAAC,gBAAgB,EAAE,qBAAS,EAAE,sCAAoB,CAAC,CAAC;AACnE,WAAW,CAAC,MAAM,CAAC,gBAAgB,EAAE,qBAAS,EAAE,sCAAoB,CAAC,CAAC;AAEtE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAgDG;AAEH,mBAAmB;AACnB,WAAW,CAAC,GAAG,CAAC,SAAS,EAAE,qBAAS,EAAE,mCAAiB,CAAC,CAAC;AACzD,WAAW,CAAC,GAAG,CAAC,aAAa,EAAE,qBAAS,EAAE,oCAAkB,CAAC,CAAC;AAC9D,WAAW,CAAC,MAAM,CAAC,aAAa,EAAE,qBAAS,EAAE,mCAAiB,CAAC,CAAC;AAEhE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAgDG;AAEH,gCAAgC;AAChC,WAAW,CAAC,GAAG,CAAC,oBAAoB,EAAE,qBAAS,EAAE,6CAA2B,CAAC,CAAC;AAC9E,WAAW,CAAC,IAAI,CAAC,oBAAoB,EAAE,qBAAS,EAAE,6CAA2B,CAAC,CAAC;AAC/E,WAAW,CAAC,GAAG,CACb,wBAAwB,EACxB,qBAAS,EACT,8CAA4B,CAC7B,CAAC;AACF,WAAW,CAAC,GAAG,CACb,wBAAwB,EACxB,qBAAS,EACT,6CAA2B,CAC5B,CAAC;AACF,WAAW,CAAC,MAAM,CAChB,wBAAwB,EACxB,qBAAS,EACT,6CAA2B,CAC5B,CAAC;AACF,WAAW,CAAC,GAAG,CACb,0BAA0B,EAC1B,qBAAS,EACT,4CAA0B,CAC3B,CAAC;AAEF,6CAA6C;AAE7C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAqCG;AACH,WAAW,CAAC,GAAG,CAAC,gBAAgB,EAAE,qBAAS,EAAE,mCAAiB,CAAC,CAAC;AAEhE;;;;;;;;;;;;;GAaG;AACH,WAAW,CAAC,GAAG,CAAC,sBAAsB,EAAE,qBAAS,EAAE,yCAAuB,CAAC,CAAC;AAE5E;;;;;;;;;;;;;;;;;;;;;;;;;;GA0BG;AACH,WAAW,CAAC,GAAG,CAAC,kBAAkB,EAAE,qBAAS,EAAE,oCAAkB,CAAC,CAAC;AAEnE;;;;;;;;;;;;;;;;;;;;;;;;;;GA0BG;AACH,WAAW,CAAC,GAAG,CAAC,mBAAmB,EAAE,qBAAS,EAAE,qCAAmB,CAAC,CAAC;AAErE;;;;;;;;;;;;;;;;;;;;;;;;;;GA0BG;AACH,WAAW,CAAC,GAAG,CAAC,qBAAqB,EAAE,qBAAS,EAAE,uCAAqB,CAAC,CAAC;AAEzE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAkCG;AACH,WAAW,CAAC,GAAG,CAAC,mBAAmB,EAAE,qBAAS,EAAE,mCAAiB,CAAC,CAAC;AAEnE,8DAA8D;AAE9D;;;;;;;;;;;;;GAaG;AACH,WAAW,CAAC,GAAG,CAAC,kBAAkB,EAAE,qBAAS,EAAE,wCAAsB,CAAC,CAAC;AAEvE;;;;;;;;;;;;;;;;;;;;;GAqBG;AACH,WAAW,CAAC,IAAI,CAAC,6BAA6B,EAAE,qBAAS,EAAE,0CAAwB,CAAC,CAAC;AAErF;;;;;;;;;;;;;;;;;;;;;GAqBG;AACH,WAAW,CAAC,IAAI,CAAC,6BAA6B,EAAE,qBAAS,EAAE,0CAAwB,CAAC,CAAC;AAErF;;;;;;;;;;;;;GAaG;AACH,WAAW,CAAC,GAAG,CAAC,wBAAwB,EAAE,qBAAS,EAAE,4CAA0B,CAAC,CAAC;AAEjF,kBAAe,WAAW,CAAC",
      names: [],
      sources: ["C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\routes\\adminRoutes.ts"],
      sourcesContent: ["import { Router } from 'express';\nimport { adminOnly } from '../middleware/adminOnly';\nimport {\n  adminUsersGetAll,\n  adminUsersGetById,\n  adminUsersCreate,\n  adminUsersUpdate,\n  adminUsersRemove,\n  adminUsersStats,\n  adminEventsGetAll,\n  adminEventsGetById,\n  adminEventsCreate,\n  adminEventsUpdate,\n  adminEventsRemove,\n  adminMusiciansGetAll,\n  adminMusiciansGetById,\n  adminMusiciansUpdate,\n  adminMusiciansRemove,\n  adminImagesGetAll,\n  adminImagesGetById,\n  adminImagesRemove,\n  adminMusicianRequestsGetAll,\n  adminMusicianRequestsCreate,\n  adminMusicianRequestsGetById,\n  adminMusicianRequestsUpdate,\n  adminMusicianRequestsRemove,\n  adminMusicianRequestsStats,\n  // Nuevos controladores para admin system\n  adminGlobalSearch,\n  adminDashboardAnalytics,\n  adminUserAnalytics,\n  adminEventAnalytics,\n  adminRequestAnalytics,\n  adminExportReport,\n  // Nuevos controladores para verificaci\xF3n de pagos m\xF3viles\n  adminGetMobilePayments,\n  adminVerifyMobilePayment,\n  adminRejectMobilePayment,\n  adminGetMobilePaymentStats,\n} from '../controllers/adminController';\n\nconst adminRoutes = Router();\n\n/**\n * @swagger\n * tags:\n *   - name: Admin\n *     description: Endpoints de administraci\xF3n de usuarios\n *   - name: AdminEvents\n *     description: Endpoints de administraci\xF3n de eventos\n *   - name: AdminMusicians\n *     description: Endpoints de administraci\xF3n de m\xFAsicos\n *   - name: AdminImages\n *     description: Endpoints de administraci\xF3n de im\xE1genes\n *   - name: AdminMusicianRequests\n *     description: Endpoints de administraci\xF3n de solicitudes de m\xFAsico\n */\n\n/**\n * @swagger\n * /admin/users:\n *   get:\n *     summary: Obtener todos los usuarios\n *     tags: [Admin]\n *     security:\n *       - bearerAuth: []\n *     responses:\n *       200:\n *         description: Lista de usuarios\n *       403:\n *         description: Acceso solo para administradores\n *   post:\n *     summary: Crear usuario\n *     tags: [Admin]\n *     security:\n *       - bearerAuth: []\n *     requestBody:\n *       required: true\n *       content:\n *         application/json:\n *           schema:\n *             type: object\n *             properties:\n *               name:\n *                 type: string\n *               lastName:\n *                 type: string\n *               userEmail:\n *                 type: string\n *               roll:\n *                 type: string\n *               status:\n *                 type: boolean\n *     responses:\n *       201:\n *         description: Usuario creado\n *       403:\n *         description: Acceso solo para administradores\n *\n * /admin/users/{id}:\n *   get:\n *     summary: Obtener usuario por ID\n *     tags: [Admin]\n *     security:\n *       - bearerAuth: []\n *     parameters:\n *       - in: path\n *         name: id\n *         schema:\n *           type: string\n *         required: true\n *         description: ID del usuario\n *     responses:\n *       200:\n *         description: Usuario encontrado\n *       404:\n *         description: Usuario no encontrado\n *       403:\n *         description: Acceso solo para administradores\n *   put:\n *     summary: Actualizar usuario\n *     tags: [Admin]\n *     security:\n *       - bearerAuth: []\n *     parameters:\n *       - in: path\n *         name: id\n *         schema:\n *           type: string\n *         required: true\n *     requestBody:\n *       required: true\n *       content:\n *         application/json:\n *           schema:\n *             type: object\n *     responses:\n *       200:\n *         description: Usuario actualizado\n *       403:\n *         description: Acceso solo para administradores\n *   delete:\n *     summary: Eliminar usuario\n *     tags: [Admin]\n *     security:\n *       - bearerAuth: []\n *     parameters:\n *       - in: path\n *         name: id\n *         schema:\n *           type: string\n *         required: true\n *     responses:\n *       200:\n *         description: Usuario eliminado\n *       403:\n *         description: Acceso solo para administradores\n */\n\n// --- Usuarios ---\nadminRoutes.get('/users', adminOnly, adminUsersGetAll);\nadminRoutes.get('/users/:id', adminOnly, adminUsersGetById);\nadminRoutes.post('/users', adminOnly, adminUsersCreate);\nadminRoutes.put('/users/:id', adminOnly, adminUsersUpdate);\nadminRoutes.delete('/users/:id', adminOnly, adminUsersRemove);\nadminRoutes.get('/users/stats', adminOnly, adminUsersStats);\n\n/**\n * @swagger\n * /admin/events:\n *   get:\n *     summary: Obtener todos los eventos\n *     tags: [AdminEvents]\n *     security:\n *       - bearerAuth: []\n *     responses:\n *       200:\n *         description: Lista de eventos\n *       403:\n *         description: Acceso solo para administradores\n *   post:\n *     summary: Crear evento\n *     tags: [AdminEvents]\n *     security:\n *       - bearerAuth: []\n *     requestBody:\n *       required: true\n *       content:\n *         application/json:\n *           schema:\n *             type: object\n *     responses:\n *       201:\n *         description: Evento creado\n *       403:\n *         description: Acceso solo para administradores\n *\n * /admin/events/{id}:\n *   get:\n *     summary: Obtener evento por ID\n *     tags: [AdminEvents]\n *     security:\n *       - bearerAuth: []\n *     parameters:\n *       - in: path\n *         name: id\n *         schema:\n *           type: string\n *         required: true\n *     responses:\n *       200:\n *         description: Evento encontrado\n *       404:\n *         description: Evento no encontrado\n *       403:\n *         description: Acceso solo para administradores\n *   put:\n *     summary: Actualizar evento\n *     tags: [AdminEvents]\n *     security:\n *       - bearerAuth: []\n *     parameters:\n *       - in: path\n *         name: id\n *         schema:\n *           type: string\n *         required: true\n *     requestBody:\n *       required: true\n *       content:\n *         application/json:\n *           schema:\n *             type: object\n *     responses:\n *       200:\n *         description: Evento actualizado\n *       403:\n *         description: Acceso solo para administradores\n *   delete:\n *     summary: Eliminar evento\n *     tags: [AdminEvents]\n *     security:\n *       - bearerAuth: []\n *     parameters:\n *       - in: path\n *         name: id\n *         schema:\n *           type: string\n *         required: true\n *     responses:\n *       200:\n *         description: Evento eliminado\n *       403:\n *         description: Acceso solo para administradores\n */\n\n// --- Eventos ---\nadminRoutes.get('/events', adminOnly, adminEventsGetAll);\nadminRoutes.get('/events/:id', adminOnly, adminEventsGetById);\nadminRoutes.post('/events', adminOnly, adminEventsCreate);\nadminRoutes.put('/events/:id', adminOnly, adminEventsUpdate);\nadminRoutes.delete('/events/:id', adminOnly, adminEventsRemove);\n\n/**\n * @swagger\n * /admin/musicians:\n *   get:\n *     summary: Obtener todos los m\xFAsicos\n *     tags: [AdminMusicians]\n *     security:\n *       - bearerAuth: []\n *     responses:\n *       200:\n *         description: Lista de m\xFAsicos\n *       403:\n *         description: Acceso solo para administradores\n * /admin/musicians/{id}:\n *   get:\n *     summary: Obtener m\xFAsico por ID\n *     tags: [AdminMusicians]\n *     security:\n *       - bearerAuth: []\n *     parameters:\n *       - in: path\n *         name: id\n *         schema:\n *           type: string\n *         required: true\n *     responses:\n *       200:\n *         description: M\xFAsico encontrado\n *       404:\n *         description: M\xFAsico no encontrado\n *       403:\n *         description: Acceso solo para administradores\n *   put:\n *     summary: Actualizar m\xFAsico\n *     tags: [AdminMusicians]\n *     security:\n *       - bearerAuth: []\n *     parameters:\n *       - in: path\n *         name: id\n *         schema:\n *           type: string\n *         required: true\n *     requestBody:\n *       required: true\n *       content:\n *         application/json:\n *           schema:\n *             type: object\n *     responses:\n *       200:\n *         description: M\xFAsico actualizado\n *       403:\n *         description: Acceso solo para administradores\n *   delete:\n *     summary: Eliminar m\xFAsico\n *     tags: [AdminMusicians]\n *     security:\n *       - bearerAuth: []\n *     parameters:\n *       - in: path\n *         name: id\n *         schema:\n *           type: string\n *         required: true\n *     responses:\n *       200:\n *         description: M\xFAsico eliminado\n *       403:\n *         description: Acceso solo para administradores\n */\n\n// --- M\xFAsicos ---\nadminRoutes.get('/musicians', adminOnly, adminMusiciansGetAll);\nadminRoutes.get('/musicians/:id', adminOnly, adminMusiciansGetById);\nadminRoutes.put('/musicians/:id', adminOnly, adminMusiciansUpdate);\nadminRoutes.delete('/musicians/:id', adminOnly, adminMusiciansRemove);\n\n/**\n * @swagger\n * /admin/images:\n *   get:\n *     summary: Obtener todas las im\xE1genes\n *     tags: [AdminImages]\n *     security:\n *       - bearerAuth: []\n *     responses:\n *       200:\n *         description: Lista de im\xE1genes\n *       403:\n *         description: Acceso solo para administradores\n * /admin/images/{id}:\n *   get:\n *     summary: Obtener imagen por ID\n *     tags: [AdminImages]\n *     security:\n *       - bearerAuth: []\n *     parameters:\n *       - in: path\n *         name: id\n *         schema:\n *           type: string\n *         required: true\n *     responses:\n *       200:\n *         description: Imagen encontrada\n *       404:\n *         description: Imagen no encontrada\n *       403:\n *         description: Acceso solo para administradores\n *   delete:\n *     summary: Eliminar imagen\n *     tags: [AdminImages]\n *     security:\n *       - bearerAuth: []\n *     parameters:\n *       - in: path\n *         name: id\n *         schema:\n *           type: string\n *         required: true\n *     responses:\n *       200:\n *         description: Imagen eliminada\n *       403:\n *         description: Acceso solo para administradores\n */\n\n// --- Im\xE1genes ---\nadminRoutes.get('/images', adminOnly, adminImagesGetAll);\nadminRoutes.get('/images/:id', adminOnly, adminImagesGetById);\nadminRoutes.delete('/images/:id', adminOnly, adminImagesRemove);\n\n/**\n * @swagger\n * /admin/musician-requests:\n *   get:\n *     summary: Obtener todas las solicitudes de m\xFAsico\n *     tags: [AdminMusicianRequests]\n *     security:\n *       - bearerAuth: []\n *     responses:\n *       200:\n *         description: Lista de solicitudes\n *       403:\n *         description: Acceso solo para administradores\n * /admin/musician-requests/{id}:\n *   get:\n *     summary: Obtener solicitud de m\xFAsico por ID\n *     tags: [AdminMusicianRequests]\n *     security:\n *       - bearerAuth: []\n *     parameters:\n *       - in: path\n *         name: id\n *         schema:\n *           type: string\n *         required: true\n *     responses:\n *       200:\n *         description: Solicitud encontrada\n *       404:\n *         description: Solicitud no encontrada\n *       403:\n *         description: Acceso solo para administradores\n *   delete:\n *     summary: Eliminar solicitud de m\xFAsico\n *     tags: [AdminMusicianRequests]\n *     security:\n *       - bearerAuth: []\n *     parameters:\n *       - in: path\n *         name: id\n *         schema:\n *           type: string\n *         required: true\n *     responses:\n *       200:\n *         description: Solicitud eliminada\n *       403:\n *         description: Acceso solo para administradores\n */\n\n// --- Solicitudes de M\xFAsico ---\nadminRoutes.get('/musician-requests', adminOnly, adminMusicianRequestsGetAll);\nadminRoutes.post('/musician-requests', adminOnly, adminMusicianRequestsCreate);\nadminRoutes.get(\n  '/musician-requests/:id',\n  adminOnly,\n  adminMusicianRequestsGetById\n);\nadminRoutes.put(\n  '/musician-requests/:id',\n  adminOnly,\n  adminMusicianRequestsUpdate\n);\nadminRoutes.delete(\n  '/musician-requests/:id',\n  adminOnly,\n  adminMusicianRequestsRemove\n);\nadminRoutes.get(\n  '/musician-requests/stats',\n  adminOnly,\n  adminMusicianRequestsStats\n);\n\n// ===== NUEVAS RUTAS PARA ADMIN SYSTEM =====\n\n/**\n * @swagger\n * /admin/search/global:\n *   get:\n *     summary: B\xFAsqueda global en toda la plataforma\n *     tags: [Admin]\n *     security:\n *       - bearerAuth: []\n *     parameters:\n *       - in: query\n *         name: query\n *         schema:\n *           type: string\n *         required: true\n *         description: T\xE9rmino de b\xFAsqueda\n *       - in: query\n *         name: types\n *         schema:\n *           type: string\n *         description: Tipos de contenido a buscar (users,events,requests)\n *       - in: query\n *         name: page\n *         schema:\n *           type: integer\n *         description: N\xFAmero de p\xE1gina\n *       - in: query\n *         name: limit\n *         schema:\n *           type: integer\n *         description: L\xEDmite de resultados\n *     responses:\n *       200:\n *         description: Resultados de b\xFAsqueda\n *       400:\n *         description: Query de b\xFAsqueda requerida\n *       403:\n *         description: Acceso solo para administradores\n */\nadminRoutes.get('/search/global', adminOnly, adminGlobalSearch);\n\n/**\n * @swagger\n * /admin/analytics/dashboard:\n *   get:\n *     summary: Analytics del dashboard\n *     tags: [Admin]\n *     security:\n *       - bearerAuth: []\n *     responses:\n *       200:\n *         description: Analytics del dashboard\n *       403:\n *         description: Acceso solo para administradores\n */\nadminRoutes.get('/analytics/dashboard', adminOnly, adminDashboardAnalytics);\n\n/**\n * @swagger\n * /admin/analytics/users:\n *   get:\n *     summary: Analytics de usuarios\n *     tags: [Admin]\n *     security:\n *       - bearerAuth: []\n *     parameters:\n *       - in: query\n *         name: period\n *         schema:\n *           type: string\n *           enum: [day, week, month]\n *         description: Per\xEDodo de an\xE1lisis\n *       - in: query\n *         name: groupBy\n *         schema:\n *           type: string\n *           enum: [role, status]\n *         description: Agrupaci\xF3n de datos\n *     responses:\n *       200:\n *         description: Analytics de usuarios\n *       403:\n *         description: Acceso solo para administradores\n */\nadminRoutes.get('/analytics/users', adminOnly, adminUserAnalytics);\n\n/**\n * @swagger\n * /admin/analytics/events:\n *   get:\n *     summary: Analytics de eventos\n *     tags: [Admin]\n *     security:\n *       - bearerAuth: []\n *     parameters:\n *       - in: query\n *         name: period\n *         schema:\n *           type: string\n *           enum: [week, month, quarter]\n *         description: Per\xEDodo de an\xE1lisis\n *       - in: query\n *         name: groupBy\n *         schema:\n *           type: string\n *           enum: [status, category]\n *         description: Agrupaci\xF3n de datos\n *     responses:\n *       200:\n *         description: Analytics de eventos\n *       403:\n *         description: Acceso solo para administradores\n */\nadminRoutes.get('/analytics/events', adminOnly, adminEventAnalytics);\n\n/**\n * @swagger\n * /admin/analytics/requests:\n *   get:\n *     summary: Analytics de solicitudes\n *     tags: [Admin]\n *     security:\n *       - bearerAuth: []\n *     parameters:\n *       - in: query\n *         name: period\n *         schema:\n *           type: string\n *           enum: [week, month, quarter]\n *         description: Per\xEDodo de an\xE1lisis\n *       - in: query\n *         name: groupBy\n *         schema:\n *           type: string\n *           enum: [instrument, status]\n *         description: Agrupaci\xF3n de datos\n *     responses:\n *       200:\n *         description: Analytics de solicitudes\n *       403:\n *         description: Acceso solo para administradores\n */\nadminRoutes.get('/analytics/requests', adminOnly, adminRequestAnalytics);\n\n/**\n * @swagger\n * /admin/analytics/export:\n *   get:\n *     summary: Exportar reportes\n *     tags: [Admin]\n *     security:\n *       - bearerAuth: []\n *     parameters:\n *       - in: query\n *         name: type\n *         schema:\n *           type: string\n *           enum: [users, events, requests]\n *         required: true\n *         description: Tipo de reporte\n *       - in: query\n *         name: filters\n *         schema:\n *           type: string\n *         description: Filtros en formato JSON\n *       - in: query\n *         name: format\n *         schema:\n *           type: string\n *           enum: [csv, json]\n *         description: Formato de exportaci\xF3n\n *     responses:\n *       200:\n *         description: Reporte exportado\n *       400:\n *         description: Tipo de reporte no v\xE1lido\n *       403:\n *         description: Acceso solo para administradores\n */\nadminRoutes.get('/analytics/export', adminOnly, adminExportReport);\n\n// ===== NUEVAS RUTAS PARA VERIFICACI\xD3N DE PAGOS M\xD3VILES =====\n\n/**\n * @swagger\n * /admin/mobile-payments:\n *   get:\n *     summary: Obtener todas las solicitudes de pago m\xF3vil\n *     tags: [Admin]\n *     security:\n *       - bearerAuth: []\n *     responses:\n *       200:\n *         description: Lista de solicitudes de pago m\xF3vil\n *       403:\n *         description: Acceso solo para administradores\n */\nadminRoutes.get('/mobile-payments', adminOnly, adminGetMobilePayments);\n\n/**\n * @swagger\n * /admin/mobile-payments/{id}/verify:\n *   post:\n *     summary: Verificar pago m\xF3vil\n *     tags: [Admin]\n *     security:\n *       - bearerAuth: []\n *     parameters:\n *       - in: path\n *         name: id\n *         schema:\n *           type: string\n *         required: true\n *     responses:\n *       200:\n *         description: Pago m\xF3vil verificado\n *       403:\n *         description: Acceso solo para administradores\n *       404:\n *         description: Solicitud de pago no encontrada\n */\nadminRoutes.post('/mobile-payments/:id/verify', adminOnly, adminVerifyMobilePayment);\n\n/**\n * @swagger\n * /admin/mobile-payments/{id}/reject:\n *   post:\n *     summary: Rechazar pago m\xF3vil\n *     tags: [Admin]\n *     security:\n *       - bearerAuth: []\n *     parameters:\n *       - in: path\n *         name: id\n *         schema:\n *           type: string\n *         required: true\n *     responses:\n *       200:\n *         description: Pago m\xF3vil rechazado\n *       403:\n *         description: Acceso solo para administradores\n *       404:\n *         description: Solicitud de pago no encontrada\n */\nadminRoutes.post('/mobile-payments/:id/reject', adminOnly, adminRejectMobilePayment);\n\n/**\n * @swagger\n * /admin/mobile-payments/stats:\n *   get:\n *     summary: Obtener estad\xEDsticas de pagos m\xF3viles\n *     tags: [Admin]\n *     security:\n *       - bearerAuth: []\n *     responses:\n *       200:\n *         description: Estad\xEDsticas de pagos m\xF3viles\n *       403:\n *         description: Acceso solo para administradores\n */\nadminRoutes.get('/mobile-payments/stats', adminOnly, adminGetMobilePaymentStats);\n\nexport default adminRoutes;\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "bbc446ea79ea33227da0d478eac62a19ae87a3c7"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_r82eiu62i = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_r82eiu62i();
cov_r82eiu62i().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const express_1 =
/* istanbul ignore next */
(cov_r82eiu62i().s[1]++, require("express"));
const adminOnly_1 =
/* istanbul ignore next */
(cov_r82eiu62i().s[2]++, require("../middleware/adminOnly"));
const adminController_1 =
/* istanbul ignore next */
(cov_r82eiu62i().s[3]++, require("../controllers/adminController"));
const adminRoutes =
/* istanbul ignore next */
(cov_r82eiu62i().s[4]++, (0, express_1.Router)());
/**
 * @swagger
 * tags:
 *   - name: Admin
 *     description: Endpoints de administración de usuarios
 *   - name: AdminEvents
 *     description: Endpoints de administración de eventos
 *   - name: AdminMusicians
 *     description: Endpoints de administración de músicos
 *   - name: AdminImages
 *     description: Endpoints de administración de imágenes
 *   - name: AdminMusicianRequests
 *     description: Endpoints de administración de solicitudes de músico
 */
/**
 * @swagger
 * /admin/users:
 *   get:
 *     summary: Obtener todos los usuarios
 *     tags: [Admin]
 *     security:
 *       - bearerAuth: []
 *     responses:
 *       200:
 *         description: Lista de usuarios
 *       403:
 *         description: Acceso solo para administradores
 *   post:
 *     summary: Crear usuario
 *     tags: [Admin]
 *     security:
 *       - bearerAuth: []
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             type: object
 *             properties:
 *               name:
 *                 type: string
 *               lastName:
 *                 type: string
 *               userEmail:
 *                 type: string
 *               roll:
 *                 type: string
 *               status:
 *                 type: boolean
 *     responses:
 *       201:
 *         description: Usuario creado
 *       403:
 *         description: Acceso solo para administradores
 *
 * /admin/users/{id}:
 *   get:
 *     summary: Obtener usuario por ID
 *     tags: [Admin]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: path
 *         name: id
 *         schema:
 *           type: string
 *         required: true
 *         description: ID del usuario
 *     responses:
 *       200:
 *         description: Usuario encontrado
 *       404:
 *         description: Usuario no encontrado
 *       403:
 *         description: Acceso solo para administradores
 *   put:
 *     summary: Actualizar usuario
 *     tags: [Admin]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: path
 *         name: id
 *         schema:
 *           type: string
 *         required: true
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             type: object
 *     responses:
 *       200:
 *         description: Usuario actualizado
 *       403:
 *         description: Acceso solo para administradores
 *   delete:
 *     summary: Eliminar usuario
 *     tags: [Admin]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: path
 *         name: id
 *         schema:
 *           type: string
 *         required: true
 *     responses:
 *       200:
 *         description: Usuario eliminado
 *       403:
 *         description: Acceso solo para administradores
 */
// --- Usuarios ---
/* istanbul ignore next */
cov_r82eiu62i().s[5]++;
adminRoutes.get('/users', adminOnly_1.adminOnly, adminController_1.adminUsersGetAll);
/* istanbul ignore next */
cov_r82eiu62i().s[6]++;
adminRoutes.get('/users/:id', adminOnly_1.adminOnly, adminController_1.adminUsersGetById);
/* istanbul ignore next */
cov_r82eiu62i().s[7]++;
adminRoutes.post('/users', adminOnly_1.adminOnly, adminController_1.adminUsersCreate);
/* istanbul ignore next */
cov_r82eiu62i().s[8]++;
adminRoutes.put('/users/:id', adminOnly_1.adminOnly, adminController_1.adminUsersUpdate);
/* istanbul ignore next */
cov_r82eiu62i().s[9]++;
adminRoutes.delete('/users/:id', adminOnly_1.adminOnly, adminController_1.adminUsersRemove);
/* istanbul ignore next */
cov_r82eiu62i().s[10]++;
adminRoutes.get('/users/stats', adminOnly_1.adminOnly, adminController_1.adminUsersStats);
/**
 * @swagger
 * /admin/events:
 *   get:
 *     summary: Obtener todos los eventos
 *     tags: [AdminEvents]
 *     security:
 *       - bearerAuth: []
 *     responses:
 *       200:
 *         description: Lista de eventos
 *       403:
 *         description: Acceso solo para administradores
 *   post:
 *     summary: Crear evento
 *     tags: [AdminEvents]
 *     security:
 *       - bearerAuth: []
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             type: object
 *     responses:
 *       201:
 *         description: Evento creado
 *       403:
 *         description: Acceso solo para administradores
 *
 * /admin/events/{id}:
 *   get:
 *     summary: Obtener evento por ID
 *     tags: [AdminEvents]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: path
 *         name: id
 *         schema:
 *           type: string
 *         required: true
 *     responses:
 *       200:
 *         description: Evento encontrado
 *       404:
 *         description: Evento no encontrado
 *       403:
 *         description: Acceso solo para administradores
 *   put:
 *     summary: Actualizar evento
 *     tags: [AdminEvents]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: path
 *         name: id
 *         schema:
 *           type: string
 *         required: true
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             type: object
 *     responses:
 *       200:
 *         description: Evento actualizado
 *       403:
 *         description: Acceso solo para administradores
 *   delete:
 *     summary: Eliminar evento
 *     tags: [AdminEvents]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: path
 *         name: id
 *         schema:
 *           type: string
 *         required: true
 *     responses:
 *       200:
 *         description: Evento eliminado
 *       403:
 *         description: Acceso solo para administradores
 */
// --- Eventos ---
/* istanbul ignore next */
cov_r82eiu62i().s[11]++;
adminRoutes.get('/events', adminOnly_1.adminOnly, adminController_1.adminEventsGetAll);
/* istanbul ignore next */
cov_r82eiu62i().s[12]++;
adminRoutes.get('/events/:id', adminOnly_1.adminOnly, adminController_1.adminEventsGetById);
/* istanbul ignore next */
cov_r82eiu62i().s[13]++;
adminRoutes.post('/events', adminOnly_1.adminOnly, adminController_1.adminEventsCreate);
/* istanbul ignore next */
cov_r82eiu62i().s[14]++;
adminRoutes.put('/events/:id', adminOnly_1.adminOnly, adminController_1.adminEventsUpdate);
/* istanbul ignore next */
cov_r82eiu62i().s[15]++;
adminRoutes.delete('/events/:id', adminOnly_1.adminOnly, adminController_1.adminEventsRemove);
/**
 * @swagger
 * /admin/musicians:
 *   get:
 *     summary: Obtener todos los músicos
 *     tags: [AdminMusicians]
 *     security:
 *       - bearerAuth: []
 *     responses:
 *       200:
 *         description: Lista de músicos
 *       403:
 *         description: Acceso solo para administradores
 * /admin/musicians/{id}:
 *   get:
 *     summary: Obtener músico por ID
 *     tags: [AdminMusicians]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: path
 *         name: id
 *         schema:
 *           type: string
 *         required: true
 *     responses:
 *       200:
 *         description: Músico encontrado
 *       404:
 *         description: Músico no encontrado
 *       403:
 *         description: Acceso solo para administradores
 *   put:
 *     summary: Actualizar músico
 *     tags: [AdminMusicians]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: path
 *         name: id
 *         schema:
 *           type: string
 *         required: true
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             type: object
 *     responses:
 *       200:
 *         description: Músico actualizado
 *       403:
 *         description: Acceso solo para administradores
 *   delete:
 *     summary: Eliminar músico
 *     tags: [AdminMusicians]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: path
 *         name: id
 *         schema:
 *           type: string
 *         required: true
 *     responses:
 *       200:
 *         description: Músico eliminado
 *       403:
 *         description: Acceso solo para administradores
 */
// --- Músicos ---
/* istanbul ignore next */
cov_r82eiu62i().s[16]++;
adminRoutes.get('/musicians', adminOnly_1.adminOnly, adminController_1.adminMusiciansGetAll);
/* istanbul ignore next */
cov_r82eiu62i().s[17]++;
adminRoutes.get('/musicians/:id', adminOnly_1.adminOnly, adminController_1.adminMusiciansGetById);
/* istanbul ignore next */
cov_r82eiu62i().s[18]++;
adminRoutes.put('/musicians/:id', adminOnly_1.adminOnly, adminController_1.adminMusiciansUpdate);
/* istanbul ignore next */
cov_r82eiu62i().s[19]++;
adminRoutes.delete('/musicians/:id', adminOnly_1.adminOnly, adminController_1.adminMusiciansRemove);
/**
 * @swagger
 * /admin/images:
 *   get:
 *     summary: Obtener todas las imágenes
 *     tags: [AdminImages]
 *     security:
 *       - bearerAuth: []
 *     responses:
 *       200:
 *         description: Lista de imágenes
 *       403:
 *         description: Acceso solo para administradores
 * /admin/images/{id}:
 *   get:
 *     summary: Obtener imagen por ID
 *     tags: [AdminImages]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: path
 *         name: id
 *         schema:
 *           type: string
 *         required: true
 *     responses:
 *       200:
 *         description: Imagen encontrada
 *       404:
 *         description: Imagen no encontrada
 *       403:
 *         description: Acceso solo para administradores
 *   delete:
 *     summary: Eliminar imagen
 *     tags: [AdminImages]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: path
 *         name: id
 *         schema:
 *           type: string
 *         required: true
 *     responses:
 *       200:
 *         description: Imagen eliminada
 *       403:
 *         description: Acceso solo para administradores
 */
// --- Imágenes ---
/* istanbul ignore next */
cov_r82eiu62i().s[20]++;
adminRoutes.get('/images', adminOnly_1.adminOnly, adminController_1.adminImagesGetAll);
/* istanbul ignore next */
cov_r82eiu62i().s[21]++;
adminRoutes.get('/images/:id', adminOnly_1.adminOnly, adminController_1.adminImagesGetById);
/* istanbul ignore next */
cov_r82eiu62i().s[22]++;
adminRoutes.delete('/images/:id', adminOnly_1.adminOnly, adminController_1.adminImagesRemove);
/**
 * @swagger
 * /admin/musician-requests:
 *   get:
 *     summary: Obtener todas las solicitudes de músico
 *     tags: [AdminMusicianRequests]
 *     security:
 *       - bearerAuth: []
 *     responses:
 *       200:
 *         description: Lista de solicitudes
 *       403:
 *         description: Acceso solo para administradores
 * /admin/musician-requests/{id}:
 *   get:
 *     summary: Obtener solicitud de músico por ID
 *     tags: [AdminMusicianRequests]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: path
 *         name: id
 *         schema:
 *           type: string
 *         required: true
 *     responses:
 *       200:
 *         description: Solicitud encontrada
 *       404:
 *         description: Solicitud no encontrada
 *       403:
 *         description: Acceso solo para administradores
 *   delete:
 *     summary: Eliminar solicitud de músico
 *     tags: [AdminMusicianRequests]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: path
 *         name: id
 *         schema:
 *           type: string
 *         required: true
 *     responses:
 *       200:
 *         description: Solicitud eliminada
 *       403:
 *         description: Acceso solo para administradores
 */
// --- Solicitudes de Músico ---
/* istanbul ignore next */
cov_r82eiu62i().s[23]++;
adminRoutes.get('/musician-requests', adminOnly_1.adminOnly, adminController_1.adminMusicianRequestsGetAll);
/* istanbul ignore next */
cov_r82eiu62i().s[24]++;
adminRoutes.post('/musician-requests', adminOnly_1.adminOnly, adminController_1.adminMusicianRequestsCreate);
/* istanbul ignore next */
cov_r82eiu62i().s[25]++;
adminRoutes.get('/musician-requests/:id', adminOnly_1.adminOnly, adminController_1.adminMusicianRequestsGetById);
/* istanbul ignore next */
cov_r82eiu62i().s[26]++;
adminRoutes.put('/musician-requests/:id', adminOnly_1.adminOnly, adminController_1.adminMusicianRequestsUpdate);
/* istanbul ignore next */
cov_r82eiu62i().s[27]++;
adminRoutes.delete('/musician-requests/:id', adminOnly_1.adminOnly, adminController_1.adminMusicianRequestsRemove);
/* istanbul ignore next */
cov_r82eiu62i().s[28]++;
adminRoutes.get('/musician-requests/stats', adminOnly_1.adminOnly, adminController_1.adminMusicianRequestsStats);
// ===== NUEVAS RUTAS PARA ADMIN SYSTEM =====
/**
 * @swagger
 * /admin/search/global:
 *   get:
 *     summary: Búsqueda global en toda la plataforma
 *     tags: [Admin]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: query
 *         name: query
 *         schema:
 *           type: string
 *         required: true
 *         description: Término de búsqueda
 *       - in: query
 *         name: types
 *         schema:
 *           type: string
 *         description: Tipos de contenido a buscar (users,events,requests)
 *       - in: query
 *         name: page
 *         schema:
 *           type: integer
 *         description: Número de página
 *       - in: query
 *         name: limit
 *         schema:
 *           type: integer
 *         description: Límite de resultados
 *     responses:
 *       200:
 *         description: Resultados de búsqueda
 *       400:
 *         description: Query de búsqueda requerida
 *       403:
 *         description: Acceso solo para administradores
 */
/* istanbul ignore next */
cov_r82eiu62i().s[29]++;
adminRoutes.get('/search/global', adminOnly_1.adminOnly, adminController_1.adminGlobalSearch);
/**
 * @swagger
 * /admin/analytics/dashboard:
 *   get:
 *     summary: Analytics del dashboard
 *     tags: [Admin]
 *     security:
 *       - bearerAuth: []
 *     responses:
 *       200:
 *         description: Analytics del dashboard
 *       403:
 *         description: Acceso solo para administradores
 */
/* istanbul ignore next */
cov_r82eiu62i().s[30]++;
adminRoutes.get('/analytics/dashboard', adminOnly_1.adminOnly, adminController_1.adminDashboardAnalytics);
/**
 * @swagger
 * /admin/analytics/users:
 *   get:
 *     summary: Analytics de usuarios
 *     tags: [Admin]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: query
 *         name: period
 *         schema:
 *           type: string
 *           enum: [day, week, month]
 *         description: Período de análisis
 *       - in: query
 *         name: groupBy
 *         schema:
 *           type: string
 *           enum: [role, status]
 *         description: Agrupación de datos
 *     responses:
 *       200:
 *         description: Analytics de usuarios
 *       403:
 *         description: Acceso solo para administradores
 */
/* istanbul ignore next */
cov_r82eiu62i().s[31]++;
adminRoutes.get('/analytics/users', adminOnly_1.adminOnly, adminController_1.adminUserAnalytics);
/**
 * @swagger
 * /admin/analytics/events:
 *   get:
 *     summary: Analytics de eventos
 *     tags: [Admin]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: query
 *         name: period
 *         schema:
 *           type: string
 *           enum: [week, month, quarter]
 *         description: Período de análisis
 *       - in: query
 *         name: groupBy
 *         schema:
 *           type: string
 *           enum: [status, category]
 *         description: Agrupación de datos
 *     responses:
 *       200:
 *         description: Analytics de eventos
 *       403:
 *         description: Acceso solo para administradores
 */
/* istanbul ignore next */
cov_r82eiu62i().s[32]++;
adminRoutes.get('/analytics/events', adminOnly_1.adminOnly, adminController_1.adminEventAnalytics);
/**
 * @swagger
 * /admin/analytics/requests:
 *   get:
 *     summary: Analytics de solicitudes
 *     tags: [Admin]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: query
 *         name: period
 *         schema:
 *           type: string
 *           enum: [week, month, quarter]
 *         description: Período de análisis
 *       - in: query
 *         name: groupBy
 *         schema:
 *           type: string
 *           enum: [instrument, status]
 *         description: Agrupación de datos
 *     responses:
 *       200:
 *         description: Analytics de solicitudes
 *       403:
 *         description: Acceso solo para administradores
 */
/* istanbul ignore next */
cov_r82eiu62i().s[33]++;
adminRoutes.get('/analytics/requests', adminOnly_1.adminOnly, adminController_1.adminRequestAnalytics);
/**
 * @swagger
 * /admin/analytics/export:
 *   get:
 *     summary: Exportar reportes
 *     tags: [Admin]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: query
 *         name: type
 *         schema:
 *           type: string
 *           enum: [users, events, requests]
 *         required: true
 *         description: Tipo de reporte
 *       - in: query
 *         name: filters
 *         schema:
 *           type: string
 *         description: Filtros en formato JSON
 *       - in: query
 *         name: format
 *         schema:
 *           type: string
 *           enum: [csv, json]
 *         description: Formato de exportación
 *     responses:
 *       200:
 *         description: Reporte exportado
 *       400:
 *         description: Tipo de reporte no válido
 *       403:
 *         description: Acceso solo para administradores
 */
/* istanbul ignore next */
cov_r82eiu62i().s[34]++;
adminRoutes.get('/analytics/export', adminOnly_1.adminOnly, adminController_1.adminExportReport);
// ===== NUEVAS RUTAS PARA VERIFICACIÓN DE PAGOS MÓVILES =====
/**
 * @swagger
 * /admin/mobile-payments:
 *   get:
 *     summary: Obtener todas las solicitudes de pago móvil
 *     tags: [Admin]
 *     security:
 *       - bearerAuth: []
 *     responses:
 *       200:
 *         description: Lista de solicitudes de pago móvil
 *       403:
 *         description: Acceso solo para administradores
 */
/* istanbul ignore next */
cov_r82eiu62i().s[35]++;
adminRoutes.get('/mobile-payments', adminOnly_1.adminOnly, adminController_1.adminGetMobilePayments);
/**
 * @swagger
 * /admin/mobile-payments/{id}/verify:
 *   post:
 *     summary: Verificar pago móvil
 *     tags: [Admin]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: path
 *         name: id
 *         schema:
 *           type: string
 *         required: true
 *     responses:
 *       200:
 *         description: Pago móvil verificado
 *       403:
 *         description: Acceso solo para administradores
 *       404:
 *         description: Solicitud de pago no encontrada
 */
/* istanbul ignore next */
cov_r82eiu62i().s[36]++;
adminRoutes.post('/mobile-payments/:id/verify', adminOnly_1.adminOnly, adminController_1.adminVerifyMobilePayment);
/**
 * @swagger
 * /admin/mobile-payments/{id}/reject:
 *   post:
 *     summary: Rechazar pago móvil
 *     tags: [Admin]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: path
 *         name: id
 *         schema:
 *           type: string
 *         required: true
 *     responses:
 *       200:
 *         description: Pago móvil rechazado
 *       403:
 *         description: Acceso solo para administradores
 *       404:
 *         description: Solicitud de pago no encontrada
 */
/* istanbul ignore next */
cov_r82eiu62i().s[37]++;
adminRoutes.post('/mobile-payments/:id/reject', adminOnly_1.adminOnly, adminController_1.adminRejectMobilePayment);
/**
 * @swagger
 * /admin/mobile-payments/stats:
 *   get:
 *     summary: Obtener estadísticas de pagos móviles
 *     tags: [Admin]
 *     security:
 *       - bearerAuth: []
 *     responses:
 *       200:
 *         description: Estadísticas de pagos móviles
 *       403:
 *         description: Acceso solo para administradores
 */
/* istanbul ignore next */
cov_r82eiu62i().s[38]++;
adminRoutes.get('/mobile-payments/stats', adminOnly_1.adminOnly, adminController_1.adminGetMobilePaymentStats);
/* istanbul ignore next */
cov_r82eiu62i().s[39]++;
exports.default = adminRoutes;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,