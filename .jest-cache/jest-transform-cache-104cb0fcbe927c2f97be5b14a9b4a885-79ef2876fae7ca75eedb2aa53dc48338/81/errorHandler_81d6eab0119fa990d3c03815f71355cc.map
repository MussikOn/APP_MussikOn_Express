{"version":3,"names":["cov_1bb7gn8ex1","actualCoverage","s","exports","errorHandler","asyncHandler","notFoundHandler","OperationalError","Error","constructor","message","statusCode","b","f","isOperational","captureStackTrace","err","req","res","next","error","Object","assign","console","stack","url","method","ip","userAgent","get","timestamp","Date","toISOString","name","code","status","json","success","process","env","NODE_ENV","fn","Promise","resolve","catch","originalUrl"],"sources":["C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\middleware\\errorHandler.ts"],"sourcesContent":["import { Request, Response, NextFunction } from 'express';\r\n\r\nexport interface AppError extends Error {\r\n  statusCode?: number;\r\n  isOperational?: boolean;\r\n}\r\n\r\n/**\r\n * Clase para errores operacionales de la aplicación\r\n */\r\nexport class OperationalError extends Error implements AppError {\r\n  public statusCode: number;\r\n  public isOperational: boolean;\r\n\r\n  constructor(message: string, statusCode: number = 500) {\r\n    super(message);\r\n    this.statusCode = statusCode;\r\n    this.isOperational = true;\r\n\r\n    Error.captureStackTrace(this, this.constructor);\r\n  }\r\n}\r\n\r\n/**\r\n * Middleware para manejar errores de forma centralizada\r\n */\r\nexport function errorHandler(\r\n  err: AppError,\r\n  req: Request,\r\n  res: Response,\r\n  next: NextFunction\r\n): void {\r\n  let error = { ...err };\r\n  error.message = err.message;\r\n\r\n  // Log del error\r\n  console.error('Error:', {\r\n    message: err.message,\r\n    stack: err.stack,\r\n    url: req.url,\r\n    method: req.method,\r\n    ip: req.ip,\r\n    userAgent: req.get('User-Agent'),\r\n    timestamp: new Date().toISOString(),\r\n  });\r\n\r\n  // Error de validación de Joi\r\n  if (err.name === 'ValidationError') {\r\n    const message = 'Datos de entrada inválidos';\r\n    error = new OperationalError(message, 400);\r\n  }\r\n\r\n  // Error de JWT\r\n  if (err.name === 'JsonWebTokenError') {\r\n    const message = 'Token inválido';\r\n    error = new OperationalError(message, 401);\r\n  }\r\n\r\n  // Error de JWT expirado\r\n  if (err.name === 'TokenExpiredError') {\r\n    const message = 'Token expirado';\r\n    error = new OperationalError(message, 401);\r\n  }\r\n\r\n  // Error de Cast (ID inválido)\r\n  if (err.name === 'CastError') {\r\n    const message = 'ID inválido';\r\n    error = new OperationalError(message, 400);\r\n  }\r\n\r\n  // Error de duplicación de clave única\r\n  if (err.name === 'MongoError' && (err as any).code === 11000) {\r\n    const message = 'Datos duplicados';\r\n    error = new OperationalError(message, 409);\r\n  }\r\n\r\n  // Error de Firestore\r\n  if (err.name === 'FirebaseError') {\r\n    const message = 'Error en la base de datos';\r\n    error = new OperationalError(message, 500);\r\n  }\r\n\r\n  res.status(error.statusCode || 500).json({\r\n    success: false,\r\n    error: error.message || 'Error interno del servidor',\r\n    ...(process.env.NODE_ENV === 'development' && { stack: err.stack }),\r\n  });\r\n}\r\n\r\n/**\r\n * Middleware para capturar errores asíncronos\r\n */\r\nexport function asyncHandler(fn: Function) {\r\n  return (req: Request, res: Response, next: NextFunction) => {\r\n    Promise.resolve(fn(req, res, next)).catch(next);\r\n  };\r\n}\r\n\r\n/**\r\n * Middleware para manejar rutas no encontradas\r\n */\r\nexport function notFoundHandler(\r\n  req: Request,\r\n  res: Response,\r\n  next: NextFunction\r\n): void {\r\n  const error = new OperationalError(\r\n    `Ruta no encontrada: ${req.originalUrl}`,\r\n    404\r\n  );\r\n  next(error);\r\n}\r\n"],"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","ignoreList":[]}