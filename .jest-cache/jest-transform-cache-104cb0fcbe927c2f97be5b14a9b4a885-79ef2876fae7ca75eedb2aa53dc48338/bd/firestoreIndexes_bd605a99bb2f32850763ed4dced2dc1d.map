{"version":3,"names":["cov_15ip25a7av","actualCoverage","loggerService_1","s","require","REQUIRED_INDEXES","bank_accounts","name","fields","fieldPath","order","user_deposits","withdrawal_requests","musician_earnings","FirestoreIndexManager","initializeIndexes","f","logger","info","collection","indexes","Object","entries","indexConfig","map","join","error","getRequiredIndexes","isIndexConfigured","indexName","collectionIndexes","b","some","index","getIndexesForCollection","checkIndexStatus","status","generateIndexCreationUrl","_a","find","toLowerCase","exports"],"sources":["C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\utils\\firestoreIndexes.ts"],"sourcesContent":["import { db } from './firebase';\nimport { logger } from '../services/loggerService';\n\n/**\n * Configuraci√≥n de √≠ndices necesarios para el sistema\n */\nconst REQUIRED_INDEXES = {\n  bank_accounts: [\n    {\n      name: 'bank_accounts_user_default_created',\n      fields: [\n        { fieldPath: 'userId', order: 'ASCENDING' },\n        { fieldPath: 'isDefault', order: 'DESCENDING' },\n        { fieldPath: 'createdAt', order: 'DESCENDING' }\n      ]\n    }\n  ],\n  user_deposits: [\n    {\n      name: 'user_deposits_status_created',\n      fields: [\n        { fieldPath: 'status', order: 'ASCENDING' },\n        { fieldPath: 'createdAt', order: 'DESCENDING' }\n      ]\n    }\n  ],\n  withdrawal_requests: [\n    {\n      name: 'withdrawal_requests_status_created',\n      fields: [\n        { fieldPath: 'status', order: 'ASCENDING' },\n        { fieldPath: 'createdAt', order: 'DESCENDING' }\n      ]\n    }\n  ],\n  musician_earnings: [\n    {\n      name: 'musician_earnings_musician_created',\n      fields: [\n        { fieldPath: 'musicianId', order: 'ASCENDING' },\n        { fieldPath: 'createdAt', order: 'DESCENDING' }\n      ]\n    }\n  ]\n};\n\n/**\n * Clase para gestionar √≠ndices de Firestore\n * Nota: Los √≠ndices deben crearse manualmente en Firebase Console\n * Esta clase proporciona informaci√≥n y validaci√≥n\n */\nexport class FirestoreIndexManager {\n  /**\n   * Inicializar verificaci√≥n de √≠ndices\n   */\n  static async initializeIndexes(): Promise<void> {\n    try {\n      logger.info('üîß Verificando configuraci√≥n de √≠ndices de Firestore...');\n      \n      // Log de √≠ndices requeridos para referencia manual\n      for (const [collection, indexes] of Object.entries(REQUIRED_INDEXES)) {\n        for (const indexConfig of indexes) {\n          logger.info(`üìã √çndice requerido: ${collection} - ${indexConfig.name}`);\n          logger.info(`   Campos: ${indexConfig.fields.map(f => `${f.fieldPath}(${f.order})`).join(', ')}`);\n        }\n      }\n      \n      logger.info('‚úÖ Verificaci√≥n de √≠ndices completada. Los √≠ndices deben crearse manualmente en Firebase Console.');\n    } catch (error) {\n      logger.error('‚ùå Error verificando √≠ndices de Firestore', error as Error);\n    }\n  }\n\n  /**\n   * Obtener configuraci√≥n de √≠ndices requeridos\n   */\n  static getRequiredIndexes(): typeof REQUIRED_INDEXES {\n    return REQUIRED_INDEXES;\n  }\n\n  /**\n   * Verificar si un √≠ndice espec√≠fico est√° configurado\n   */\n  static isIndexConfigured(collection: string, indexName: string): boolean {\n    const collectionIndexes = REQUIRED_INDEXES[collection as keyof typeof REQUIRED_INDEXES];\n    if (!collectionIndexes) return false;\n    \n    return collectionIndexes.some(index => index.name === indexName);\n  }\n\n  /**\n   * Obtener informaci√≥n de √≠ndices para una colecci√≥n\n   */\n  static getIndexesForCollection(collection: string): Array<{ name: string; fields: Array<{ fieldPath: string; order: string }> }> {\n    return REQUIRED_INDEXES[collection as keyof typeof REQUIRED_INDEXES] || [];\n  }\n\n  /**\n   * Verificar estado de √≠ndices (simulado)\n   */\n  static async checkIndexStatus(): Promise<{ [key: string]: boolean }> {\n    const status: { [key: string]: boolean } = {};\n    \n    try {\n      for (const [collection, indexes] of Object.entries(REQUIRED_INDEXES)) {\n        for (const indexConfig of indexes) {\n          // Por ahora, asumimos que los √≠ndices est√°n configurados\n          // En producci√≥n, esto deber√≠a verificar contra la API de Firebase\n          status[`${collection}_${indexConfig.name}`] = true;\n        }\n      }\n      \n      logger.info('üìä Estado de √≠ndices verificado (simulado)');\n    } catch (error) {\n      logger.error('Error verificando estado de √≠ndices', error as Error);\n    }\n    \n    return status;\n  }\n\n  /**\n   * Generar URL para crear √≠ndice en Firebase Console\n   */\n  static generateIndexCreationUrl(collection: string, indexName: string): string {\n    const indexConfig = REQUIRED_INDEXES[collection as keyof typeof REQUIRED_INDEXES]?.find(\n      index => index.name === indexName\n    );\n    \n    if (!indexConfig) {\n      return '';\n    }\n    \n    // Generar URL b√°sica para Firebase Console\n    const fields = indexConfig.fields.map(f => `${f.fieldPath}:${f.order.toLowerCase()}`).join(',');\n    return `https://console.firebase.google.com/project/_/firestore/indexes?create_composite=${collection}&query_mode=COLLECTION&fields=${fields}`;\n  }\n} "],"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","ignoreList":[]}