{"version":3,"names":["cov_25vao7zrk3","actualCoverage","s","errorHandler_1","require","requireRole","allowedRoles","f","req","res","next","user","b","OperationalError","includes","role","join","error","exports","requireAdmin","requireSuperAdmin","requireMusician","requireUser"],"sources":["C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\middleware\\requireRole.ts"],"sourcesContent":["import { Request, Response, NextFunction } from 'express';\r\nimport { OperationalError } from './errorHandler';\r\n\r\n// Role-based access control middleware\r\nexport const requireRole = (allowedRoles: string[]) => {\r\n  return (req: Request, res: Response, next: NextFunction) => {\r\n    try {\r\n      const user = req.user;\r\n\r\n      if (!user) {\r\n        throw new OperationalError('Usuario no autenticado', 401);\r\n      }\r\n\r\n      if (!allowedRoles.includes(user.role)) {\r\n        throw new OperationalError(\r\n          `Acceso denegado. Roles permitidos: ${allowedRoles.join(', ')}`,\r\n          403\r\n        );\r\n      }\r\n\r\n      next();\r\n    } catch (error) {\r\n      next(error);\r\n    }\r\n  };\r\n};\r\n\r\n// Middleware espec√≠ficos para roles comunes\r\nexport const requireAdmin = requireRole(['admin', 'super_admin']);\r\nexport const requireSuperAdmin = requireRole(['super_admin']);\r\nexport const requireMusician = requireRole([\r\n  'musician',\r\n  'admin',\r\n  'super_admin',\r\n]);\r\nexport const requireUser = requireRole([\r\n  'user',\r\n  'musician',\r\n  'admin',\r\n  'super_admin',\r\n]);\r\n"],"mappings":"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","ignoreList":[]}