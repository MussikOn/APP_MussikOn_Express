517c6d8be3866c5f90128c3640b1a67f
"use strict";

/* istanbul ignore next */
function cov_qq0cfhyj2() {
  var path = "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\services\\analyticsService.ts";
  var hash = "daa6c57772a2c419aeba1ddce2a110e1627eb54f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\services\\analyticsService.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 16
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 28
        },
        end: {
          line: 3,
          column: 110
        }
      },
      "2": {
        start: {
          line: 3,
          column: 91
        },
        end: {
          line: 3,
          column: 106
        }
      },
      "3": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "4": {
        start: {
          line: 5,
          column: 36
        },
        end: {
          line: 5,
          column: 97
        }
      },
      "5": {
        start: {
          line: 5,
          column: 42
        },
        end: {
          line: 5,
          column: 70
        }
      },
      "6": {
        start: {
          line: 5,
          column: 85
        },
        end: {
          line: 5,
          column: 95
        }
      },
      "7": {
        start: {
          line: 6,
          column: 35
        },
        end: {
          line: 6,
          column: 100
        }
      },
      "8": {
        start: {
          line: 6,
          column: 41
        },
        end: {
          line: 6,
          column: 73
        }
      },
      "9": {
        start: {
          line: 6,
          column: 88
        },
        end: {
          line: 6,
          column: 98
        }
      },
      "10": {
        start: {
          line: 7,
          column: 32
        },
        end: {
          line: 7,
          column: 116
        }
      },
      "11": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 78
        }
      },
      "12": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 62
        }
      },
      "13": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 61
        }
      },
      "14": {
        start: {
          line: 13,
          column: 19
        },
        end: {
          line: 13,
          column: 47
        }
      },
      "15": {
        start: {
          line: 14,
          column: 24
        },
        end: {
          line: 14,
          column: 50
        }
      },
      "16": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 91,
          column: 11
        }
      },
      "17": {
        start: {
          line: 21,
          column: 12
        },
        end: {
          line: 90,
          column: 13
        }
      },
      "18": {
        start: {
          line: 22,
          column: 28
        },
        end: {
          line: 22,
          column: 62
        }
      },
      "19": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 25,
          column: 17
        }
      },
      "20": {
        start: {
          line: 24,
          column: 20
        },
        end: {
          line: 24,
          column: 77
        }
      },
      "21": {
        start: {
          line: 26,
          column: 16
        },
        end: {
          line: 28,
          column: 17
        }
      },
      "22": {
        start: {
          line: 27,
          column: 20
        },
        end: {
          line: 27,
          column: 75
        }
      },
      "23": {
        start: {
          line: 29,
          column: 33
        },
        end: {
          line: 29,
          column: 50
        }
      },
      "24": {
        start: {
          line: 30,
          column: 31
        },
        end: {
          line: 30,
          column: 69
        }
      },
      "25": {
        start: {
          line: 30,
          column: 58
        },
        end: {
          line: 30,
          column: 68
        }
      },
      "26": {
        start: {
          line: 31,
          column: 39
        },
        end: {
          line: 31,
          column: 41
        }
      },
      "27": {
        start: {
          line: 32,
          column: 37
        },
        end: {
          line: 32,
          column: 39
        }
      },
      "28": {
        start: {
          line: 33,
          column: 38
        },
        end: {
          line: 33,
          column: 40
        }
      },
      "29": {
        start: {
          line: 34,
          column: 34
        },
        end: {
          line: 34,
          column: 35
        }
      },
      "30": {
        start: {
          line: 35,
          column: 38
        },
        end: {
          line: 35,
          column: 39
        }
      },
      "31": {
        start: {
          line: 36,
          column: 38
        },
        end: {
          line: 36,
          column: 39
        }
      },
      "32": {
        start: {
          line: 37,
          column: 16
        },
        end: {
          line: 72,
          column: 19
        }
      },
      "33": {
        start: {
          line: 39,
          column: 20
        },
        end: {
          line: 39,
          column: 91
        }
      },
      "34": {
        start: {
          line: 41,
          column: 20
        },
        end: {
          line: 42,
          column: 65
        }
      },
      "35": {
        start: {
          line: 45,
          column: 20
        },
        end: {
          line: 62,
          column: 21
        }
      },
      "36": {
        start: {
          line: 46,
          column: 42
        },
        end: {
          line: 48,
          column: 40
        }
      },
      "37": {
        start: {
          line: 49,
          column: 24
        },
        end: {
          line: 56,
          column: 25
        }
      },
      "38": {
        start: {
          line: 50,
          column: 28
        },
        end: {
          line: 50,
          column: 88
        }
      },
      "39": {
        start: {
          line: 51,
          column: 28
        },
        end: {
          line: 51,
          column: 96
        }
      },
      "40": {
        start: {
          line: 52,
          column: 28
        },
        end: {
          line: 52,
          column: 77
        }
      },
      "41": {
        start: {
          line: 55,
          column: 28
        },
        end: {
          line: 55,
          column: 76
        }
      },
      "42": {
        start: {
          line: 59,
          column: 24
        },
        end: {
          line: 59,
          column: 84
        }
      },
      "43": {
        start: {
          line: 60,
          column: 24
        },
        end: {
          line: 60,
          column: 91
        }
      },
      "44": {
        start: {
          line: 61,
          column: 24
        },
        end: {
          line: 61,
          column: 73
        }
      },
      "45": {
        start: {
          line: 63,
          column: 20
        },
        end: {
          line: 63,
          column: 75
        }
      },
      "46": {
        start: {
          line: 65,
          column: 20
        },
        end: {
          line: 65,
          column: 53
        }
      },
      "47": {
        start: {
          line: 67,
          column: 20
        },
        end: {
          line: 68,
          column: 42
        }
      },
      "48": {
        start: {
          line: 68,
          column: 24
        },
        end: {
          line: 68,
          column: 42
        }
      },
      "49": {
        start: {
          line: 70,
          column: 20
        },
        end: {
          line: 71,
          column: 42
        }
      },
      "50": {
        start: {
          line: 71,
          column: 24
        },
        end: {
          line: 71,
          column: 42
        }
      },
      "51": {
        start: {
          line: 73,
          column: 38
        },
        end: {
          line: 73,
          column: 89
        }
      },
      "52": {
        start: {
          line: 74,
          column: 39
        },
        end: {
          line: 74,
          column: 102
        }
      },
      "53": {
        start: {
          line: 75,
          column: 41
        },
        end: {
          line: 75,
          column: 104
        }
      },
      "54": {
        start: {
          line: 76,
          column: 16
        },
        end: {
          line: 85,
          column: 18
        }
      },
      "55": {
        start: {
          line: 88,
          column: 16
        },
        end: {
          line: 88,
          column: 94
        }
      },
      "56": {
        start: {
          line: 89,
          column: 16
        },
        end: {
          line: 89,
          column: 73
        }
      },
      "57": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 236,
          column: 11
        }
      },
      "58": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 235,
          column: 13
        }
      },
      "59": {
        start: {
          line: 99,
          column: 28
        },
        end: {
          line: 99,
          column: 72
        }
      },
      "60": {
        start: {
          line: 100,
          column: 16
        },
        end: {
          line: 102,
          column: 17
        }
      },
      "61": {
        start: {
          line: 101,
          column: 20
        },
        end: {
          line: 101,
          column: 77
        }
      },
      "62": {
        start: {
          line: 103,
          column: 16
        },
        end: {
          line: 105,
          column: 17
        }
      },
      "63": {
        start: {
          line: 104,
          column: 20
        },
        end: {
          line: 104,
          column: 75
        }
      },
      "64": {
        start: {
          line: 106,
          column: 33
        },
        end: {
          line: 106,
          column: 50
        }
      },
      "65": {
        start: {
          line: 107,
          column: 33
        },
        end: {
          line: 107,
          column: 71
        }
      },
      "66": {
        start: {
          line: 107,
          column: 60
        },
        end: {
          line: 107,
          column: 70
        }
      },
      "67": {
        start: {
          line: 108,
          column: 41
        },
        end: {
          line: 108,
          column: 43
        }
      },
      "68": {
        start: {
          line: 109,
          column: 39
        },
        end: {
          line: 109,
          column: 41
        }
      },
      "69": {
        start: {
          line: 110,
          column: 40
        },
        end: {
          line: 110,
          column: 42
        }
      },
      "70": {
        start: {
          line: 111,
          column: 34
        },
        end: {
          line: 111,
          column: 35
        }
      },
      "71": {
        start: {
          line: 112,
          column: 39
        },
        end: {
          line: 112,
          column: 40
        }
      },
      "72": {
        start: {
          line: 113,
          column: 40
        },
        end: {
          line: 113,
          column: 41
        }
      },
      "73": {
        start: {
          line: 114,
          column: 40
        },
        end: {
          line: 114,
          column: 41
        }
      },
      "74": {
        start: {
          line: 115,
          column: 16
        },
        end: {
          line: 217,
          column: 19
        }
      },
      "75": {
        start: {
          line: 117,
          column: 20
        },
        end: {
          line: 118,
          column: 68
        }
      },
      "76": {
        start: {
          line: 120,
          column: 20
        },
        end: {
          line: 121,
          column: 69
        }
      },
      "77": {
        start: {
          line: 124,
          column: 20
        },
        end: {
          line: 163,
          column: 21
        }
      },
      "78": {
        start: {
          line: 127,
          column: 24
        },
        end: {
          line: 147,
          column: 25
        }
      },
      "79": {
        start: {
          line: 128,
          column: 28
        },
        end: {
          line: 143,
          column: 29
        }
      },
      "80": {
        start: {
          line: 130,
          column: 32
        },
        end: {
          line: 130,
          column: 71
        }
      },
      "81": {
        start: {
          line: 132,
          column: 33
        },
        end: {
          line: 143,
          column: 29
        }
      },
      "82": {
        start: {
          line: 134,
          column: 32
        },
        end: {
          line: 134,
          column: 62
        }
      },
      "83": {
        start: {
          line: 136,
          column: 33
        },
        end: {
          line: 143,
          column: 29
        }
      },
      "84": {
        start: {
          line: 138,
          column: 32
        },
        end: {
          line: 138,
          column: 72
        }
      },
      "85": {
        start: {
          line: 142,
          column: 32
        },
        end: {
          line: 142,
          column: 55
        }
      },
      "86": {
        start: {
          line: 146,
          column: 28
        },
        end: {
          line: 146,
          column: 51
        }
      },
      "87": {
        start: {
          line: 148,
          column: 24
        },
        end: {
          line: 156,
          column: 25
        }
      },
      "88": {
        start: {
          line: 149,
          column: 28
        },
        end: {
          line: 151,
          column: 31
        }
      },
      "89": {
        start: {
          line: 152,
          column: 28
        },
        end: {
          line: 152,
          column: 77
        }
      },
      "90": {
        start: {
          line: 155,
          column: 28
        },
        end: {
          line: 155,
          column: 76
        }
      },
      "91": {
        start: {
          line: 159,
          column: 24
        },
        end: {
          line: 161,
          column: 27
        }
      },
      "92": {
        start: {
          line: 162,
          column: 24
        },
        end: {
          line: 162,
          column: 73
        }
      },
      "93": {
        start: {
          line: 164,
          column: 20
        },
        end: {
          line: 164,
          column: 79
        }
      },
      "94": {
        start: {
          line: 166,
          column: 20
        },
        end: {
          line: 166,
          column: 55
        }
      },
      "95": {
        start: {
          line: 168,
          column: 20
        },
        end: {
          line: 169,
          column: 43
        }
      },
      "96": {
        start: {
          line: 169,
          column: 24
        },
        end: {
          line: 169,
          column: 43
        }
      },
      "97": {
        start: {
          line: 171,
          column: 20
        },
        end: {
          line: 216,
          column: 21
        }
      },
      "98": {
        start: {
          line: 172,
          column: 24
        },
        end: {
          line: 215,
          column: 25
        }
      },
      "99": {
        start: {
          line: 176,
          column: 28
        },
        end: {
          line: 192,
          column: 29
        }
      },
      "100": {
        start: {
          line: 177,
          column: 32
        },
        end: {
          line: 188,
          column: 33
        }
      },
      "101": {
        start: {
          line: 178,
          column: 36
        },
        end: {
          line: 178,
          column: 73
        }
      },
      "102": {
        start: {
          line: 180,
          column: 37
        },
        end: {
          line: 188,
          column: 33
        }
      },
      "103": {
        start: {
          line: 181,
          column: 36
        },
        end: {
          line: 181,
          column: 64
        }
      },
      "104": {
        start: {
          line: 183,
          column: 37
        },
        end: {
          line: 188,
          column: 33
        }
      },
      "105": {
        start: {
          line: 184,
          column: 36
        },
        end: {
          line: 184,
          column: 74
        }
      },
      "106": {
        start: {
          line: 187,
          column: 36
        },
        end: {
          line: 187,
          column: 57
        }
      },
      "107": {
        start: {
          line: 191,
          column: 32
        },
        end: {
          line: 191,
          column: 53
        }
      },
      "108": {
        start: {
          line: 194,
          column: 28
        },
        end: {
          line: 205,
          column: 29
        }
      },
      "109": {
        start: {
          line: 195,
          column: 32
        },
        end: {
          line: 195,
          column: 69
        }
      },
      "110": {
        start: {
          line: 197,
          column: 33
        },
        end: {
          line: 205,
          column: 29
        }
      },
      "111": {
        start: {
          line: 198,
          column: 32
        },
        end: {
          line: 198,
          column: 60
        }
      },
      "112": {
        start: {
          line: 200,
          column: 33
        },
        end: {
          line: 205,
          column: 29
        }
      },
      "113": {
        start: {
          line: 201,
          column: 32
        },
        end: {
          line: 201,
          column: 70
        }
      },
      "114": {
        start: {
          line: 204,
          column: 32
        },
        end: {
          line: 204,
          column: 53
        }
      },
      "115": {
        start: {
          line: 206,
          column: 28
        },
        end: {
          line: 209,
          column: 29
        }
      },
      "116": {
        start: {
          line: 207,
          column: 32
        },
        end: {
          line: 207,
          column: 91
        }
      },
      "117": {
        start: {
          line: 208,
          column: 32
        },
        end: {
          line: 208,
          column: 52
        }
      },
      "118": {
        start: {
          line: 212,
          column: 28
        },
        end: {
          line: 214,
          column: 31
        }
      },
      "119": {
        start: {
          line: 218,
          column: 38
        },
        end: {
          line: 218,
          column: 93
        }
      },
      "120": {
        start: {
          line: 219,
          column: 39
        },
        end: {
          line: 219,
          column: 107
        }
      },
      "121": {
        start: {
          line: 220,
          column: 44
        },
        end: {
          line: 220,
          column: 109
        }
      },
      "122": {
        start: {
          line: 221,
          column: 16
        },
        end: {
          line: 230,
          column: 18
        }
      },
      "123": {
        start: {
          line: 233,
          column: 16
        },
        end: {
          line: 233,
          column: 98
        }
      },
      "124": {
        start: {
          line: 234,
          column: 16
        },
        end: {
          line: 234,
          column: 77
        }
      },
      "125": {
        start: {
          line: 242,
          column: 8
        },
        end: {
          line: 309,
          column: 11
        }
      },
      "126": {
        start: {
          line: 243,
          column: 12
        },
        end: {
          line: 308,
          column: 13
        }
      },
      "127": {
        start: {
          line: 244,
          column: 28
        },
        end: {
          line: 244,
          column: 61
        }
      },
      "128": {
        start: {
          line: 245,
          column: 16
        },
        end: {
          line: 247,
          column: 17
        }
      },
      "129": {
        start: {
          line: 246,
          column: 20
        },
        end: {
          line: 246,
          column: 72
        }
      },
      "130": {
        start: {
          line: 248,
          column: 33
        },
        end: {
          line: 248,
          column: 50
        }
      },
      "131": {
        start: {
          line: 249,
          column: 30
        },
        end: {
          line: 249,
          column: 68
        }
      },
      "132": {
        start: {
          line: 249,
          column: 57
        },
        end: {
          line: 249,
          column: 67
        }
      },
      "133": {
        start: {
          line: 250,
          column: 36
        },
        end: {
          line: 250,
          column: 38
        }
      },
      "134": {
        start: {
          line: 251,
          column: 37
        },
        end: {
          line: 251,
          column: 39
        }
      },
      "135": {
        start: {
          line: 252,
          column: 34
        },
        end: {
          line: 252,
          column: 35
        }
      },
      "136": {
        start: {
          line: 253,
          column: 40
        },
        end: {
          line: 253,
          column: 41
        }
      },
      "137": {
        start: {
          line: 254,
          column: 37
        },
        end: {
          line: 254,
          column: 77
        }
      },
      "138": {
        start: {
          line: 255,
          column: 34
        },
        end: {
          line: 257,
          column: 36
        }
      },
      "139": {
        start: {
          line: 258,
          column: 16
        },
        end: {
          line: 288,
          column: 19
        }
      },
      "140": {
        start: {
          line: 260,
          column: 20
        },
        end: {
          line: 260,
          column: 79
        }
      },
      "141": {
        start: {
          line: 263,
          column: 20
        },
        end: {
          line: 280,
          column: 21
        }
      },
      "142": {
        start: {
          line: 264,
          column: 41
        },
        end: {
          line: 266,
          column: 40
        }
      },
      "143": {
        start: {
          line: 267,
          column: 24
        },
        end: {
          line: 274,
          column: 25
        }
      },
      "144": {
        start: {
          line: 268,
          column: 28
        },
        end: {
          line: 268,
          column: 88
        }
      },
      "145": {
        start: {
          line: 269,
          column: 28
        },
        end: {
          line: 269,
          column: 93
        }
      },
      "146": {
        start: {
          line: 270,
          column: 28
        },
        end: {
          line: 270,
          column: 77
        }
      },
      "147": {
        start: {
          line: 273,
          column: 28
        },
        end: {
          line: 273,
          column: 75
        }
      },
      "148": {
        start: {
          line: 277,
          column: 24
        },
        end: {
          line: 277,
          column: 84
        }
      },
      "149": {
        start: {
          line: 278,
          column: 24
        },
        end: {
          line: 278,
          column: 89
        }
      },
      "150": {
        start: {
          line: 279,
          column: 24
        },
        end: {
          line: 279,
          column: 73
        }
      },
      "151": {
        start: {
          line: 281,
          column: 20
        },
        end: {
          line: 281,
          column: 73
        }
      },
      "152": {
        start: {
          line: 283,
          column: 20
        },
        end: {
          line: 284,
          column: 38
        }
      },
      "153": {
        start: {
          line: 284,
          column: 24
        },
        end: {
          line: 284,
          column: 38
        }
      },
      "154": {
        start: {
          line: 286,
          column: 20
        },
        end: {
          line: 287,
          column: 44
        }
      },
      "155": {
        start: {
          line: 287,
          column: 24
        },
        end: {
          line: 287,
          column: 44
        }
      },
      "156": {
        start: {
          line: 290,
          column: 43
        },
        end: {
          line: 290,
          column: 71
        }
      },
      "157": {
        start: {
          line: 291,
          column: 42
        },
        end: {
          line: 291,
          column: 73
        }
      },
      "158": {
        start: {
          line: 292,
          column: 39
        },
        end: {
          line: 295,
          column: 23
        }
      },
      "159": {
        start: {
          line: 296,
          column: 16
        },
        end: {
          line: 303,
          column: 18
        }
      },
      "160": {
        start: {
          line: 306,
          column: 16
        },
        end: {
          line: 306,
          column: 95
        }
      },
      "161": {
        start: {
          line: 307,
          column: 16
        },
        end: {
          line: 307,
          column: 74
        }
      },
      "162": {
        start: {
          line: 315,
          column: 8
        },
        end: {
          line: 374,
          column: 11
        }
      },
      "163": {
        start: {
          line: 316,
          column: 12
        },
        end: {
          line: 373,
          column: 13
        }
      },
      "164": {
        start: {
          line: 317,
          column: 74
        },
        end: {
          line: 321,
          column: 18
        }
      },
      "165": {
        start: {
          line: 323,
          column: 37
        },
        end: {
          line: 323,
          column: 69
        }
      },
      "166": {
        start: {
          line: 324,
          column: 42
        },
        end: {
          line: 326,
          column: 23
        }
      },
      "167": {
        start: {
          line: 328,
          column: 38
        },
        end: {
          line: 335,
          column: 32
        }
      },
      "168": {
        start: {
          line: 329,
          column: 45
        },
        end: {
          line: 333,
          column: 17
        }
      },
      "169": {
        start: {
          line: 334,
          column: 36
        },
        end: {
          line: 334,
          column: 53
        }
      },
      "170": {
        start: {
          line: 337,
          column: 37
        },
        end: {
          line: 343,
          column: 17
        }
      },
      "171": {
        start: {
          line: 345,
          column: 38
        },
        end: {
          line: 347,
          column: 23
        }
      },
      "172": {
        start: {
          line: 348,
          column: 40
        },
        end: {
          line: 350,
          column: 23
        }
      },
      "173": {
        start: {
          line: 352,
          column: 36
        },
        end: {
          line: 356,
          column: 17
        }
      },
      "174": {
        start: {
          line: 357,
          column: 16
        },
        end: {
          line: 368,
          column: 18
        }
      },
      "175": {
        start: {
          line: 371,
          column: 16
        },
        end: {
          line: 371,
          column: 97
        }
      },
      "176": {
        start: {
          line: 372,
          column: 16
        },
        end: {
          line: 372,
          column: 76
        }
      },
      "177": {
        start: {
          line: 380,
          column: 8
        },
        end: {
          line: 422,
          column: 11
        }
      },
      "178": {
        start: {
          line: 381,
          column: 12
        },
        end: {
          line: 421,
          column: 13
        }
      },
      "179": {
        start: {
          line: 382,
          column: 31
        },
        end: {
          line: 386,
          column: 17
        }
      },
      "180": {
        start: {
          line: 388,
          column: 16
        },
        end: {
          line: 414,
          column: 17
        }
      },
      "181": {
        start: {
          line: 388,
          column: 29
        },
        end: {
          line: 388,
          column: 39
        }
      },
      "182": {
        start: {
          line: 389,
          column: 33
        },
        end: {
          line: 389,
          column: 43
        }
      },
      "183": {
        start: {
          line: 390,
          column: 20
        },
        end: {
          line: 390,
          column: 55
        }
      },
      "184": {
        start: {
          line: 391,
          column: 34
        },
        end: {
          line: 391,
          column: 68
        }
      },
      "185": {
        start: {
          line: 393,
          column: 39
        },
        end: {
          line: 393,
          column: 74
        }
      },
      "186": {
        start: {
          line: 394,
          column: 41
        },
        end: {
          line: 394,
          column: 81
        }
      },
      "187": {
        start: {
          line: 395,
          column: 41
        },
        end: {
          line: 395,
          column: 76
        }
      },
      "188": {
        start: {
          line: 396,
          column: 43
        },
        end: {
          line: 396,
          column: 66
        }
      },
      "189": {
        start: {
          line: 397,
          column: 37
        },
        end: {
          line: 397,
          column: 71
        }
      },
      "190": {
        start: {
          line: 398,
          column: 40
        },
        end: {
          line: 398,
          column: 76
        }
      },
      "191": {
        start: {
          line: 399,
          column: 20
        },
        end: {
          line: 403,
          column: 23
        }
      },
      "192": {
        start: {
          line: 404,
          column: 20
        },
        end: {
          line: 408,
          column: 23
        }
      },
      "193": {
        start: {
          line: 409,
          column: 20
        },
        end: {
          line: 413,
          column: 23
        }
      },
      "194": {
        start: {
          line: 415,
          column: 16
        },
        end: {
          line: 415,
          column: 30
        }
      },
      "195": {
        start: {
          line: 418,
          column: 16
        },
        end: {
          line: 418,
          column: 76
        }
      },
      "196": {
        start: {
          line: 419,
          column: 16
        },
        end: {
          line: 419,
          column: 95
        }
      },
      "197": {
        start: {
          line: 420,
          column: 16
        },
        end: {
          line: 420,
          column: 74
        }
      },
      "198": {
        start: {
          line: 428,
          column: 8
        },
        end: {
          line: 458,
          column: 11
        }
      },
      "199": {
        start: {
          line: 429,
          column: 12
        },
        end: {
          line: 457,
          column: 13
        }
      },
      "200": {
        start: {
          line: 431,
          column: 34
        },
        end: {
          line: 442,
          column: 17
        }
      },
      "201": {
        start: {
          line: 443,
          column: 16
        },
        end: {
          line: 451,
          column: 20
        }
      },
      "202": {
        start: {
          line: 443,
          column: 50
        },
        end: {
          line: 451,
          column: 17
        }
      },
      "203": {
        start: {
          line: 454,
          column: 16
        },
        end: {
          line: 454,
          column: 76
        }
      },
      "204": {
        start: {
          line: 455,
          column: 16
        },
        end: {
          line: 455,
          column: 110
        }
      },
      "205": {
        start: {
          line: 456,
          column: 16
        },
        end: {
          line: 456,
          column: 89
        }
      },
      "206": {
        start: {
          line: 464,
          column: 8
        },
        end: {
          line: 486,
          column: 11
        }
      },
      "207": {
        start: {
          line: 465,
          column: 12
        },
        end: {
          line: 485,
          column: 13
        }
      },
      "208": {
        start: {
          line: 467,
          column: 38
        },
        end: {
          line: 467,
          column: 96
        }
      },
      "209": {
        start: {
          line: 468,
          column: 30
        },
        end: {
          line: 468,
          column: 71
        }
      },
      "210": {
        start: {
          line: 468,
          column: 60
        },
        end: {
          line: 468,
          column: 70
        }
      },
      "211": {
        start: {
          line: 470,
          column: 16
        },
        end: {
          line: 479,
          column: 69
        }
      },
      "212": {
        start: {
          line: 471,
          column: 34
        },
        end: {
          line: 478,
          column: 17
        }
      },
      "213": {
        start: {
          line: 479,
          column: 36
        },
        end: {
          line: 479,
          column: 67
        }
      },
      "214": {
        start: {
          line: 482,
          column: 16
        },
        end: {
          line: 482,
          column: 76
        }
      },
      "215": {
        start: {
          line: 483,
          column: 16
        },
        end: {
          line: 483,
          column: 105
        }
      },
      "216": {
        start: {
          line: 484,
          column: 16
        },
        end: {
          line: 484,
          column: 84
        }
      },
      "217": {
        start: {
          line: 489,
          column: 0
        },
        end: {
          line: 489,
          column: 44
        }
      },
      "218": {
        start: {
          line: 490,
          column: 0
        },
        end: {
          line: 490,
          column: 50
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 2,
            column: 45
          }
        },
        loc: {
          start: {
            line: 2,
            column: 89
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "adopt",
        decl: {
          start: {
            line: 3,
            column: 13
          },
          end: {
            line: 3,
            column: 18
          }
        },
        loc: {
          start: {
            line: 3,
            column: 26
          },
          end: {
            line: 3,
            column: 112
          }
        },
        line: 3
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 3,
            column: 70
          },
          end: {
            line: 3,
            column: 71
          }
        },
        loc: {
          start: {
            line: 3,
            column: 89
          },
          end: {
            line: 3,
            column: 108
          }
        },
        line: 3
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 4,
            column: 36
          },
          end: {
            line: 4,
            column: 37
          }
        },
        loc: {
          start: {
            line: 4,
            column: 63
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 4
      },
      "4": {
        name: "fulfilled",
        decl: {
          start: {
            line: 5,
            column: 17
          },
          end: {
            line: 5,
            column: 26
          }
        },
        loc: {
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 99
          }
        },
        line: 5
      },
      "5": {
        name: "rejected",
        decl: {
          start: {
            line: 6,
            column: 17
          },
          end: {
            line: 6,
            column: 25
          }
        },
        loc: {
          start: {
            line: 6,
            column: 33
          },
          end: {
            line: 6,
            column: 102
          }
        },
        line: 6
      },
      "6": {
        name: "step",
        decl: {
          start: {
            line: 7,
            column: 17
          },
          end: {
            line: 7,
            column: 21
          }
        },
        loc: {
          start: {
            line: 7,
            column: 30
          },
          end: {
            line: 7,
            column: 118
          }
        },
        line: 7
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 24
          },
          end: {
            line: 92,
            column: 5
          }
        },
        line: 19
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 20,
            column: 50
          },
          end: {
            line: 20,
            column: 51
          }
        },
        loc: {
          start: {
            line: 20,
            column: 75
          },
          end: {
            line: 91,
            column: 9
          }
        },
        line: 20
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 30,
            column: 49
          },
          end: {
            line: 30,
            column: 50
          }
        },
        loc: {
          start: {
            line: 30,
            column: 58
          },
          end: {
            line: 30,
            column: 68
          }
        },
        line: 30
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 37,
            column: 31
          },
          end: {
            line: 37,
            column: 32
          }
        },
        loc: {
          start: {
            line: 37,
            column: 42
          },
          end: {
            line: 72,
            column: 17
          }
        },
        line: 37
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 96,
            column: 4
          },
          end: {
            line: 96,
            column: 5
          }
        },
        loc: {
          start: {
            line: 96,
            column: 26
          },
          end: {
            line: 237,
            column: 5
          }
        },
        line: 96
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 97,
            column: 50
          },
          end: {
            line: 97,
            column: 51
          }
        },
        loc: {
          start: {
            line: 97,
            column: 75
          },
          end: {
            line: 236,
            column: 9
          }
        },
        line: 97
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 107,
            column: 51
          },
          end: {
            line: 107,
            column: 52
          }
        },
        loc: {
          start: {
            line: 107,
            column: 60
          },
          end: {
            line: 107,
            column: 70
          }
        },
        line: 107
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 115,
            column: 33
          },
          end: {
            line: 115,
            column: 34
          }
        },
        loc: {
          start: {
            line: 115,
            column: 46
          },
          end: {
            line: 217,
            column: 17
          }
        },
        line: 115
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 241,
            column: 4
          },
          end: {
            line: 241,
            column: 5
          }
        },
        loc: {
          start: {
            line: 241,
            column: 23
          },
          end: {
            line: 310,
            column: 5
          }
        },
        line: 241
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 242,
            column: 50
          },
          end: {
            line: 242,
            column: 51
          }
        },
        loc: {
          start: {
            line: 242,
            column: 75
          },
          end: {
            line: 309,
            column: 9
          }
        },
        line: 242
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 249,
            column: 48
          },
          end: {
            line: 249,
            column: 49
          }
        },
        loc: {
          start: {
            line: 249,
            column: 57
          },
          end: {
            line: 249,
            column: 67
          }
        },
        line: 249
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 258,
            column: 30
          },
          end: {
            line: 258,
            column: 31
          }
        },
        loc: {
          start: {
            line: 258,
            column: 40
          },
          end: {
            line: 288,
            column: 17
          }
        },
        line: 258
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 314,
            column: 4
          },
          end: {
            line: 314,
            column: 5
          }
        },
        loc: {
          start: {
            line: 314,
            column: 27
          },
          end: {
            line: 375,
            column: 5
          }
        },
        line: 314
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 315,
            column: 50
          },
          end: {
            line: 315,
            column: 51
          }
        },
        loc: {
          start: {
            line: 315,
            column: 75
          },
          end: {
            line: 374,
            column: 9
          }
        },
        line: 315
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 329,
            column: 25
          },
          end: {
            line: 329,
            column: 26
          }
        },
        loc: {
          start: {
            line: 329,
            column: 45
          },
          end: {
            line: 333,
            column: 17
          }
        },
        line: 329
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 334,
            column: 26
          },
          end: {
            line: 334,
            column: 27
          }
        },
        loc: {
          start: {
            line: 334,
            column: 36
          },
          end: {
            line: 334,
            column: 53
          }
        },
        line: 334
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 379,
            column: 4
          },
          end: {
            line: 379,
            column: 5
          }
        },
        loc: {
          start: {
            line: 379,
            column: 22
          },
          end: {
            line: 423,
            column: 5
          }
        },
        line: 379
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 380,
            column: 50
          },
          end: {
            line: 380,
            column: 51
          }
        },
        loc: {
          start: {
            line: 380,
            column: 73
          },
          end: {
            line: 422,
            column: 9
          }
        },
        line: 380
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 427,
            column: 4
          },
          end: {
            line: 427,
            column: 5
          }
        },
        loc: {
          start: {
            line: 427,
            column: 35
          },
          end: {
            line: 459,
            column: 5
          }
        },
        line: 427
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 428,
            column: 47
          },
          end: {
            line: 428,
            column: 48
          }
        },
        loc: {
          start: {
            line: 428,
            column: 60
          },
          end: {
            line: 458,
            column: 9
          }
        },
        line: 428
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 443,
            column: 37
          },
          end: {
            line: 443,
            column: 38
          }
        },
        loc: {
          start: {
            line: 443,
            column: 50
          },
          end: {
            line: 451,
            column: 17
          }
        },
        line: 443
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 463,
            column: 4
          },
          end: {
            line: 463,
            column: 5
          }
        },
        loc: {
          start: {
            line: 463,
            column: 30
          },
          end: {
            line: 487,
            column: 5
          }
        },
        line: 463
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 464,
            column: 50
          },
          end: {
            line: 464,
            column: 51
          }
        },
        loc: {
          start: {
            line: 464,
            column: 73
          },
          end: {
            line: 486,
            column: 9
          }
        },
        line: 464
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 468,
            column: 53
          },
          end: {
            line: 468,
            column: 54
          }
        },
        loc: {
          start: {
            line: 468,
            column: 60
          },
          end: {
            line: 468,
            column: 70
          }
        },
        line: 468
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 471,
            column: 25
          },
          end: {
            line: 471,
            column: 26
          }
        },
        loc: {
          start: {
            line: 471,
            column: 34
          },
          end: {
            line: 478,
            column: 17
          }
        },
        line: 471
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 479,
            column: 26
          },
          end: {
            line: 479,
            column: 27
          }
        },
        loc: {
          start: {
            line: 479,
            column: 36
          },
          end: {
            line: 479,
            column: 67
          }
        },
        line: 479
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 16
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 17
          },
          end: {
            line: 2,
            column: 21
          }
        }, {
          start: {
            line: 2,
            column: 25
          },
          end: {
            line: 2,
            column: 39
          }
        }, {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 35
          },
          end: {
            line: 3,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 56
          },
          end: {
            line: 3,
            column: 61
          }
        }, {
          start: {
            line: 3,
            column: 64
          },
          end: {
            line: 3,
            column: 109
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 17
          }
        }, {
          start: {
            line: 4,
            column: 22
          },
          end: {
            line: 4,
            column: 33
          }
        }],
        line: 4
      },
      "3": {
        loc: {
          start: {
            line: 7,
            column: 32
          },
          end: {
            line: 7,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 7,
            column: 46
          },
          end: {
            line: 7,
            column: 67
          }
        }, {
          start: {
            line: 7,
            column: 70
          },
          end: {
            line: 7,
            column: 115
          }
        }],
        line: 7
      },
      "4": {
        loc: {
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 61
          }
        }, {
          start: {
            line: 8,
            column: 65
          },
          end: {
            line: 8,
            column: 67
          }
        }],
        line: 8
      },
      "5": {
        loc: {
          start: {
            line: 20,
            column: 61
          },
          end: {
            line: 20,
            column: 73
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 20,
            column: 71
          },
          end: {
            line: 20,
            column: 73
          }
        }],
        line: 20
      },
      "6": {
        loc: {
          start: {
            line: 23,
            column: 16
          },
          end: {
            line: 25,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 23,
            column: 16
          },
          end: {
            line: 25,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 23
      },
      "7": {
        loc: {
          start: {
            line: 26,
            column: 16
          },
          end: {
            line: 28,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 26,
            column: 16
          },
          end: {
            line: 28,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 26
      },
      "8": {
        loc: {
          start: {
            line: 39,
            column: 52
          },
          end: {
            line: 39,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 39,
            column: 52
          },
          end: {
            line: 39,
            column: 80
          }
        }, {
          start: {
            line: 39,
            column: 84
          },
          end: {
            line: 39,
            column: 85
          }
        }],
        line: 39
      },
      "9": {
        loc: {
          start: {
            line: 42,
            column: 25
          },
          end: {
            line: 42,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 25
          },
          end: {
            line: 42,
            column: 54
          }
        }, {
          start: {
            line: 42,
            column: 58
          },
          end: {
            line: 42,
            column: 59
          }
        }],
        line: 42
      },
      "10": {
        loc: {
          start: {
            line: 46,
            column: 42
          },
          end: {
            line: 48,
            column: 40
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 47,
            column: 30
          },
          end: {
            line: 47,
            column: 55
          }
        }, {
          start: {
            line: 48,
            column: 30
          },
          end: {
            line: 48,
            column: 40
          }
        }],
        line: 46
      },
      "11": {
        loc: {
          start: {
            line: 49,
            column: 24
          },
          end: {
            line: 56,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 24
          },
          end: {
            line: 56,
            column: 25
          }
        }, {
          start: {
            line: 54,
            column: 29
          },
          end: {
            line: 56,
            column: 25
          }
        }],
        line: 49
      },
      "12": {
        loc: {
          start: {
            line: 63,
            column: 44
          },
          end: {
            line: 63,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 63,
            column: 44
          },
          end: {
            line: 63,
            column: 64
          }
        }, {
          start: {
            line: 63,
            column: 68
          },
          end: {
            line: 63,
            column: 69
          }
        }],
        line: 63
      },
      "13": {
        loc: {
          start: {
            line: 65,
            column: 35
          },
          end: {
            line: 65,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 65,
            column: 35
          },
          end: {
            line: 65,
            column: 47
          }
        }, {
          start: {
            line: 65,
            column: 51
          },
          end: {
            line: 65,
            column: 52
          }
        }],
        line: 65
      },
      "14": {
        loc: {
          start: {
            line: 67,
            column: 20
          },
          end: {
            line: 68,
            column: 42
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 67,
            column: 20
          },
          end: {
            line: 68,
            column: 42
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 67
      },
      "15": {
        loc: {
          start: {
            line: 70,
            column: 20
          },
          end: {
            line: 71,
            column: 42
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 70,
            column: 20
          },
          end: {
            line: 71,
            column: 42
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 70
      },
      "16": {
        loc: {
          start: {
            line: 73,
            column: 38
          },
          end: {
            line: 73,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 73,
            column: 58
          },
          end: {
            line: 73,
            column: 85
          }
        }, {
          start: {
            line: 73,
            column: 88
          },
          end: {
            line: 73,
            column: 89
          }
        }],
        line: 73
      },
      "17": {
        loc: {
          start: {
            line: 74,
            column: 39
          },
          end: {
            line: 74,
            column: 102
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 74,
            column: 59
          },
          end: {
            line: 74,
            column: 98
          }
        }, {
          start: {
            line: 74,
            column: 101
          },
          end: {
            line: 74,
            column: 102
          }
        }],
        line: 74
      },
      "18": {
        loc: {
          start: {
            line: 75,
            column: 41
          },
          end: {
            line: 75,
            column: 104
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 75,
            column: 61
          },
          end: {
            line: 75,
            column: 100
          }
        }, {
          start: {
            line: 75,
            column: 103
          },
          end: {
            line: 75,
            column: 104
          }
        }],
        line: 75
      },
      "19": {
        loc: {
          start: {
            line: 97,
            column: 61
          },
          end: {
            line: 97,
            column: 73
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 97,
            column: 71
          },
          end: {
            line: 97,
            column: 73
          }
        }],
        line: 97
      },
      "20": {
        loc: {
          start: {
            line: 100,
            column: 16
          },
          end: {
            line: 102,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 100,
            column: 16
          },
          end: {
            line: 102,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 100
      },
      "21": {
        loc: {
          start: {
            line: 103,
            column: 16
          },
          end: {
            line: 105,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 103,
            column: 16
          },
          end: {
            line: 105,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 103
      },
      "22": {
        loc: {
          start: {
            line: 118,
            column: 25
          },
          end: {
            line: 118,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 118,
            column: 25
          },
          end: {
            line: 118,
            column: 57
          }
        }, {
          start: {
            line: 118,
            column: 61
          },
          end: {
            line: 118,
            column: 62
          }
        }],
        line: 118
      },
      "23": {
        loc: {
          start: {
            line: 121,
            column: 25
          },
          end: {
            line: 121,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 121,
            column: 25
          },
          end: {
            line: 121,
            column: 58
          }
        }, {
          start: {
            line: 121,
            column: 62
          },
          end: {
            line: 121,
            column: 63
          }
        }],
        line: 121
      },
      "24": {
        loc: {
          start: {
            line: 127,
            column: 24
          },
          end: {
            line: 147,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 127,
            column: 24
          },
          end: {
            line: 147,
            column: 25
          }
        }, {
          start: {
            line: 145,
            column: 29
          },
          end: {
            line: 147,
            column: 25
          }
        }],
        line: 127
      },
      "25": {
        loc: {
          start: {
            line: 128,
            column: 28
          },
          end: {
            line: 143,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 128,
            column: 28
          },
          end: {
            line: 143,
            column: 29
          }
        }, {
          start: {
            line: 132,
            column: 33
          },
          end: {
            line: 143,
            column: 29
          }
        }],
        line: 128
      },
      "26": {
        loc: {
          start: {
            line: 132,
            column: 33
          },
          end: {
            line: 143,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 132,
            column: 33
          },
          end: {
            line: 143,
            column: 29
          }
        }, {
          start: {
            line: 136,
            column: 33
          },
          end: {
            line: 143,
            column: 29
          }
        }],
        line: 132
      },
      "27": {
        loc: {
          start: {
            line: 136,
            column: 33
          },
          end: {
            line: 143,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 136,
            column: 33
          },
          end: {
            line: 143,
            column: 29
          }
        }, {
          start: {
            line: 140,
            column: 33
          },
          end: {
            line: 143,
            column: 29
          }
        }],
        line: 136
      },
      "28": {
        loc: {
          start: {
            line: 148,
            column: 24
          },
          end: {
            line: 156,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 148,
            column: 24
          },
          end: {
            line: 156,
            column: 25
          }
        }, {
          start: {
            line: 154,
            column: 29
          },
          end: {
            line: 156,
            column: 25
          }
        }],
        line: 148
      },
      "29": {
        loc: {
          start: {
            line: 164,
            column: 46
          },
          end: {
            line: 164,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 164,
            column: 46
          },
          end: {
            line: 164,
            column: 68
          }
        }, {
          start: {
            line: 164,
            column: 72
          },
          end: {
            line: 164,
            column: 73
          }
        }],
        line: 164
      },
      "30": {
        loc: {
          start: {
            line: 166,
            column: 35
          },
          end: {
            line: 166,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 166,
            column: 35
          },
          end: {
            line: 166,
            column: 49
          }
        }, {
          start: {
            line: 166,
            column: 53
          },
          end: {
            line: 166,
            column: 54
          }
        }],
        line: 166
      },
      "31": {
        loc: {
          start: {
            line: 168,
            column: 20
          },
          end: {
            line: 169,
            column: 43
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 168,
            column: 20
          },
          end: {
            line: 169,
            column: 43
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 168
      },
      "32": {
        loc: {
          start: {
            line: 171,
            column: 20
          },
          end: {
            line: 216,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 171,
            column: 20
          },
          end: {
            line: 216,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 171
      },
      "33": {
        loc: {
          start: {
            line: 171,
            column: 24
          },
          end: {
            line: 171,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 171,
            column: 24
          },
          end: {
            line: 171,
            column: 50
          }
        }, {
          start: {
            line: 171,
            column: 54
          },
          end: {
            line: 171,
            column: 71
          }
        }],
        line: 171
      },
      "34": {
        loc: {
          start: {
            line: 176,
            column: 28
          },
          end: {
            line: 192,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 176,
            column: 28
          },
          end: {
            line: 192,
            column: 29
          }
        }, {
          start: {
            line: 190,
            column: 33
          },
          end: {
            line: 192,
            column: 29
          }
        }],
        line: 176
      },
      "35": {
        loc: {
          start: {
            line: 177,
            column: 32
          },
          end: {
            line: 188,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 177,
            column: 32
          },
          end: {
            line: 188,
            column: 33
          }
        }, {
          start: {
            line: 180,
            column: 37
          },
          end: {
            line: 188,
            column: 33
          }
        }],
        line: 177
      },
      "36": {
        loc: {
          start: {
            line: 180,
            column: 37
          },
          end: {
            line: 188,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 180,
            column: 37
          },
          end: {
            line: 188,
            column: 33
          }
        }, {
          start: {
            line: 183,
            column: 37
          },
          end: {
            line: 188,
            column: 33
          }
        }],
        line: 180
      },
      "37": {
        loc: {
          start: {
            line: 183,
            column: 37
          },
          end: {
            line: 188,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 183,
            column: 37
          },
          end: {
            line: 188,
            column: 33
          }
        }, {
          start: {
            line: 186,
            column: 37
          },
          end: {
            line: 188,
            column: 33
          }
        }],
        line: 183
      },
      "38": {
        loc: {
          start: {
            line: 194,
            column: 28
          },
          end: {
            line: 205,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 194,
            column: 28
          },
          end: {
            line: 205,
            column: 29
          }
        }, {
          start: {
            line: 197,
            column: 33
          },
          end: {
            line: 205,
            column: 29
          }
        }],
        line: 194
      },
      "39": {
        loc: {
          start: {
            line: 197,
            column: 33
          },
          end: {
            line: 205,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 197,
            column: 33
          },
          end: {
            line: 205,
            column: 29
          }
        }, {
          start: {
            line: 200,
            column: 33
          },
          end: {
            line: 205,
            column: 29
          }
        }],
        line: 197
      },
      "40": {
        loc: {
          start: {
            line: 200,
            column: 33
          },
          end: {
            line: 205,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 200,
            column: 33
          },
          end: {
            line: 205,
            column: 29
          }
        }, {
          start: {
            line: 203,
            column: 33
          },
          end: {
            line: 205,
            column: 29
          }
        }],
        line: 200
      },
      "41": {
        loc: {
          start: {
            line: 206,
            column: 28
          },
          end: {
            line: 209,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 206,
            column: 28
          },
          end: {
            line: 209,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 206
      },
      "42": {
        loc: {
          start: {
            line: 206,
            column: 32
          },
          end: {
            line: 206,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 206,
            column: 32
          },
          end: {
            line: 206,
            column: 57
          }
        }, {
          start: {
            line: 206,
            column: 61
          },
          end: {
            line: 206,
            column: 86
          }
        }],
        line: 206
      },
      "43": {
        loc: {
          start: {
            line: 218,
            column: 38
          },
          end: {
            line: 218,
            column: 93
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 218,
            column: 60
          },
          end: {
            line: 218,
            column: 89
          }
        }, {
          start: {
            line: 218,
            column: 92
          },
          end: {
            line: 218,
            column: 93
          }
        }],
        line: 218
      },
      "44": {
        loc: {
          start: {
            line: 219,
            column: 39
          },
          end: {
            line: 219,
            column: 107
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 219,
            column: 61
          },
          end: {
            line: 219,
            column: 103
          }
        }, {
          start: {
            line: 219,
            column: 106
          },
          end: {
            line: 219,
            column: 107
          }
        }],
        line: 219
      },
      "45": {
        loc: {
          start: {
            line: 220,
            column: 44
          },
          end: {
            line: 220,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 220,
            column: 68
          },
          end: {
            line: 220,
            column: 105
          }
        }, {
          start: {
            line: 220,
            column: 108
          },
          end: {
            line: 220,
            column: 109
          }
        }],
        line: 220
      },
      "46": {
        loc: {
          start: {
            line: 242,
            column: 61
          },
          end: {
            line: 242,
            column: 73
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 242,
            column: 71
          },
          end: {
            line: 242,
            column: 73
          }
        }],
        line: 242
      },
      "47": {
        loc: {
          start: {
            line: 245,
            column: 16
          },
          end: {
            line: 247,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 245,
            column: 16
          },
          end: {
            line: 247,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 245
      },
      "48": {
        loc: {
          start: {
            line: 260,
            column: 46
          },
          end: {
            line: 260,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 260,
            column: 46
          },
          end: {
            line: 260,
            column: 68
          }
        }, {
          start: {
            line: 260,
            column: 72
          },
          end: {
            line: 260,
            column: 73
          }
        }],
        line: 260
      },
      "49": {
        loc: {
          start: {
            line: 264,
            column: 41
          },
          end: {
            line: 266,
            column: 40
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 265,
            column: 30
          },
          end: {
            line: 265,
            column: 54
          }
        }, {
          start: {
            line: 266,
            column: 30
          },
          end: {
            line: 266,
            column: 40
          }
        }],
        line: 264
      },
      "50": {
        loc: {
          start: {
            line: 267,
            column: 24
          },
          end: {
            line: 274,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 267,
            column: 24
          },
          end: {
            line: 274,
            column: 25
          }
        }, {
          start: {
            line: 272,
            column: 29
          },
          end: {
            line: 274,
            column: 25
          }
        }],
        line: 267
      },
      "51": {
        loc: {
          start: {
            line: 281,
            column: 43
          },
          end: {
            line: 281,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 281,
            column: 43
          },
          end: {
            line: 281,
            column: 62
          }
        }, {
          start: {
            line: 281,
            column: 66
          },
          end: {
            line: 281,
            column: 67
          }
        }],
        line: 281
      },
      "52": {
        loc: {
          start: {
            line: 283,
            column: 20
          },
          end: {
            line: 284,
            column: 38
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 283,
            column: 20
          },
          end: {
            line: 284,
            column: 38
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 283
      },
      "53": {
        loc: {
          start: {
            line: 286,
            column: 20
          },
          end: {
            line: 287,
            column: 44
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 286,
            column: 20
          },
          end: {
            line: 287,
            column: 44
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 286
      },
      "54": {
        loc: {
          start: {
            line: 290,
            column: 43
          },
          end: {
            line: 290,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 290,
            column: 43
          },
          end: {
            line: 290,
            column: 66
          }
        }, {
          start: {
            line: 290,
            column: 70
          },
          end: {
            line: 290,
            column: 71
          }
        }],
        line: 290
      },
      "55": {
        loc: {
          start: {
            line: 291,
            column: 42
          },
          end: {
            line: 291,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 291,
            column: 42
          },
          end: {
            line: 291,
            column: 68
          }
        }, {
          start: {
            line: 291,
            column: 72
          },
          end: {
            line: 291,
            column: 73
          }
        }],
        line: 291
      },
      "56": {
        loc: {
          start: {
            line: 292,
            column: 39
          },
          end: {
            line: 295,
            column: 23
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 293,
            column: 22
          },
          end: {
            line: 294,
            column: 27
          }
        }, {
          start: {
            line: 295,
            column: 22
          },
          end: {
            line: 295,
            column: 23
          }
        }],
        line: 292
      },
      "57": {
        loc: {
          start: {
            line: 315,
            column: 61
          },
          end: {
            line: 315,
            column: 73
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 315,
            column: 71
          },
          end: {
            line: 315,
            column: 73
          }
        }],
        line: 315
      },
      "58": {
        loc: {
          start: {
            line: 324,
            column: 42
          },
          end: {
            line: 326,
            column: 23
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 325,
            column: 22
          },
          end: {
            line: 325,
            column: 77
          }
        }, {
          start: {
            line: 326,
            column: 22
          },
          end: {
            line: 326,
            column: 23
          }
        }],
        line: 324
      },
      "59": {
        loc: {
          start: {
            line: 345,
            column: 38
          },
          end: {
            line: 347,
            column: 23
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 346,
            column: 22
          },
          end: {
            line: 346,
            column: 75
          }
        }, {
          start: {
            line: 347,
            column: 22
          },
          end: {
            line: 347,
            column: 23
          }
        }],
        line: 345
      },
      "60": {
        loc: {
          start: {
            line: 348,
            column: 40
          },
          end: {
            line: 350,
            column: 23
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 349,
            column: 22
          },
          end: {
            line: 349,
            column: 79
          }
        }, {
          start: {
            line: 350,
            column: 22
          },
          end: {
            line: 350,
            column: 23
          }
        }],
        line: 348
      },
      "61": {
        loc: {
          start: {
            line: 380,
            column: 61
          },
          end: {
            line: 380,
            column: 71
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 380,
            column: 70
          },
          end: {
            line: 380,
            column: 71
          }
        }],
        line: 380
      },
      "62": {
        loc: {
          start: {
            line: 464,
            column: 61
          },
          end: {
            line: 464,
            column: 71
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 464,
            column: 69
          },
          end: {
            line: 464,
            column: 71
          }
        }],
        line: 464
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0],
      "62": [0]
    },
    inputSourceMap: {
      file: "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\services\\analyticsService.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\services\\analyticsService.ts"],
      sourcesContent: ["import { db } from '../utils/firebase';\r\nimport { Event, User } from '../utils/DataTypes';\r\nimport { logger } from './loggerService';\r\n\r\n// Definir tipo para MusicianRequest ya que no existe en DataTypes\r\nexport interface MusicianRequest {\r\n  id: string;\r\n  user: string;\r\n  eventName: string;\r\n  eventType: string;\r\n  date: string;\r\n  time: string;\r\n  location: string;\r\n  duration: string;\r\n  instrument: string;\r\n  bringInstrument: boolean;\r\n  comment: string;\r\n  budget: string;\r\n  flyerUrl?: string;\r\n  songs: string[];\r\n  recommendations: string[];\r\n  mapsLink: string;\r\n  status: 'pendiente' | 'asignada' | 'cancelada' | 'completada' | 'no_asignada';\r\n  assignedMusicianId?: string;\r\n  interestedMusicians?: string[];\r\n  createdAt: string;\r\n  updatedAt: string;\r\n  description?: string;\r\n  requirements?: string;\r\n}\r\n\r\nexport interface AnalyticsFilters {\r\n  dateFrom?: string;\r\n  dateTo?: string;\r\n  eventType?: string;\r\n  status?: string;\r\n  userRole?: string;\r\n  location?: string;\r\n}\r\n\r\nexport interface EventAnalytics {\r\n  totalEvents: number;\r\n  eventsByStatus: Record<string, number>;\r\n  eventsByType: Record<string, number>;\r\n  eventsByMonth: Record<string, number>;\r\n  averageBudget: number;\r\n  totalBudget: number;\r\n  completionRate: number;\r\n  cancellationRate: number;\r\n}\r\n\r\nexport interface RequestAnalytics {\r\n  totalRequests: number;\r\n  requestsByStatus: Record<string, number>;\r\n  requestsByType: Record<string, number>;\r\n  requestsByMonth: Record<string, number>;\r\n  averageBudget: number;\r\n  totalBudget: number;\r\n  acceptanceRate: number;\r\n  averageResponseTime: number;\r\n}\r\n\r\nexport interface UserAnalytics {\r\n  totalUsers: number;\r\n  usersByRole: Record<string, number>;\r\n  usersByMonth: Record<string, number>;\r\n  activeUsers: number;\r\n  newUsersThisMonth: number;\r\n  userGrowthRate: number;\r\n}\r\n\r\nexport interface PlatformAnalytics {\r\n  totalRevenue: number;\r\n  averageEventValue: number;\r\n  topEventTypes: Array<{ type: string; count: number; revenue: number }>;\r\n  topLocations: Array<{ location: string; count: number; revenue: number }>;\r\n  userEngagement: {\r\n    eventsPerUser: number;\r\n    requestsPerUser: number;\r\n    averageSessionDuration: number;\r\n  };\r\n  performance: {\r\n    averageResponseTime: number;\r\n    successRate: number;\r\n    errorRate: number;\r\n  };\r\n}\r\n\r\nexport class AnalyticsService {\r\n  /**\r\n   * Analytics de eventos\r\n   */\r\n  async getEventAnalytics(\r\n    filters: AnalyticsFilters = {}\r\n  ): Promise<EventAnalytics> {\r\n    try {\r\n      let query: any = db.collection('events');\r\n\r\n      if (filters.dateFrom) {\r\n        query = query.where('createdAt', '>=', filters.dateFrom);\r\n      }\r\n\r\n      if (filters.dateTo) {\r\n        query = query.where('createdAt', '<=', filters.dateTo);\r\n      }\r\n\r\n      const snapshot = await query.get();\r\n      const events = snapshot.docs.map((doc: any) => doc.data() as Event);\r\n\r\n      const eventsByStatus: Record<string, number> = {};\r\n      const eventsByType: Record<string, number> = {};\r\n      const eventsByMonth: Record<string, number> = {};\r\n      let totalBudget = 0;\r\n      let completedEvents = 0;\r\n      let cancelledEvents = 0;\r\n\r\n      events.forEach((event: any) => {\r\n        // Contar por estado\r\n        eventsByStatus[event.status] = (eventsByStatus[event.status] || 0) + 1;\r\n\r\n        // Contar por tipo\r\n        eventsByType[event.eventType] =\r\n          (eventsByType[event.eventType] || 0) + 1;\r\n\r\n        // Contar por mes - Validar fecha antes de convertir\r\n        let month: string;\r\n        try {\r\n          const createdAt = event.createdAt\r\n            ? new Date(event.createdAt)\r\n            : new Date();\r\n          if (isNaN(createdAt.getTime())) {\r\n            console.info('./src/services/analyticsService.ts line 126');\r\n            console.warn('Fecha inv\xE1lida en event:', event.id, event.createdAt);\r\n            month = new Date().toISOString().substring(0, 7);\r\n          } else {\r\n            month = createdAt.toISOString().substring(0, 7);\r\n          }\r\n        } catch (error) {\r\n          console.info('./src/services/analyticsService.ts line 133');\r\n          console.warn('Error al procesar fecha de event:', event.id, error);\r\n          month = new Date().toISOString().substring(0, 7);\r\n        }\r\n\r\n        eventsByMonth[month] = (eventsByMonth[month] || 0) + 1;\r\n\r\n        // Calcular presupuesto\r\n        totalBudget += event.budget || 0;\r\n\r\n        // Contar eventos completados\r\n        if (event.status === 'completado') completedEvents++;\r\n\r\n        // Contar eventos cancelados\r\n        if (event.status === 'cancelado') cancelledEvents++;\r\n      });\r\n\r\n      const averageBudget = events.length > 0 ? totalBudget / events.length : 0;\r\n      const completionRate =\r\n        events.length > 0 ? (completedEvents / events.length) * 100 : 0;\r\n      const cancellationRate =\r\n        events.length > 0 ? (cancelledEvents / events.length) * 100 : 0;\r\n\r\n      return {\r\n        totalEvents: events.length,\r\n        eventsByStatus,\r\n        eventsByType,\r\n        eventsByMonth,\r\n        averageBudget,\r\n        totalBudget,\r\n        completionRate,\r\n        cancellationRate,\r\n      };\r\n    } catch (error) {\r\n      logger.error('Error al obtener analytics de eventos:', error as Error);\r\n      throw new Error('Error al obtener analytics de eventos');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Analytics de solicitudes de m\xFAsicos\r\n   */\r\n  async getRequestAnalytics(\r\n    filters: AnalyticsFilters = {}\r\n  ): Promise<RequestAnalytics> {\r\n    try {\r\n      let query: any = db.collection('musicianRequests');\r\n\r\n      if (filters.dateFrom) {\r\n        query = query.where('createdAt', '>=', filters.dateFrom);\r\n      }\r\n\r\n      if (filters.dateTo) {\r\n        query = query.where('createdAt', '<=', filters.dateTo);\r\n      }\r\n\r\n      const snapshot = await query.get();\r\n      const requests = snapshot.docs.map(\r\n        (doc: any) => doc.data() as MusicianRequest\r\n      );\r\n\r\n      const requestsByStatus: Record<string, number> = {};\r\n      const requestsByType: Record<string, number> = {};\r\n      const requestsByMonth: Record<string, number> = {};\r\n      let totalBudget = 0;\r\n      let acceptedRequests = 0;\r\n      let totalResponseTime = 0;\r\n      let responseTimeCount = 0;\r\n\r\n      requests.forEach((request: any) => {\r\n        // Contar por estado\r\n        requestsByStatus[request.status] =\r\n          (requestsByStatus[request.status] || 0) + 1;\r\n\r\n        // Contar por tipo\r\n        requestsByType[request.eventType] =\r\n          (requestsByType[request.eventType] || 0) + 1;\r\n\r\n        // Contar por mes - Validar fecha antes de convertir\r\n        let month: string;\r\n        try {\r\n          let createdAt: Date;\r\n          \r\n          // Manejar diferentes tipos de fecha (Timestamp de Firestore, Date, string)\r\n          if (request.createdAt) {\r\n            if (request.createdAt.toDate) {\r\n              // Es un Timestamp de Firestore\r\n              createdAt = request.createdAt.toDate();\r\n            } else if (request.createdAt instanceof Date) {\r\n              // Ya es un Date\r\n              createdAt = request.createdAt;\r\n            } else if (typeof request.createdAt === 'string') {\r\n              // Es un string, intentar convertir\r\n              createdAt = new Date(request.createdAt);\r\n            } else {\r\n              // Otro tipo, usar fecha actual\r\n              createdAt = new Date();\r\n            }\r\n          } else {\r\n            createdAt = new Date();\r\n          }\r\n          \r\n          if (isNaN(createdAt.getTime())) {\r\n            logger.warn('Fecha inv\xE1lida en request', {\r\n              metadata: { requestId: request.id, createdAt: request.createdAt }\r\n            });\r\n            month = new Date().toISOString().substring(0, 7);\r\n          } else {\r\n            month = createdAt.toISOString().substring(0, 7);\r\n          }\r\n        } catch (error) {\r\n          logger.warn('Error al procesar fecha de request', {\r\n            metadata: { requestId: request.id, error: (error as Error).message }\r\n          });\r\n          month = new Date().toISOString().substring(0, 7);\r\n        }\r\n\r\n        requestsByMonth[month] = (requestsByMonth[month] || 0) + 1;\r\n\r\n        // Calcular presupuesto\r\n        totalBudget += request.budget || 0;\r\n\r\n        // Contar solicitudes aceptadas\r\n        if (request.status === 'asignada') acceptedRequests++;\r\n\r\n        // Calcular tiempo de respuesta - Validar fechas\r\n        if (request.assignedMusicianId && request.updatedAt) {\r\n          try {\r\n            let created: Date;\r\n            let updated: Date;\r\n            \r\n            // Manejar createdAt\r\n            if (request.createdAt) {\r\n              if (request.createdAt.toDate) {\r\n                created = request.createdAt.toDate();\r\n              } else if (request.createdAt instanceof Date) {\r\n                created = request.createdAt;\r\n              } else if (typeof request.createdAt === 'string') {\r\n                created = new Date(request.createdAt);\r\n              } else {\r\n                created = new Date();\r\n              }\r\n            } else {\r\n              created = new Date();\r\n            }\r\n            \r\n            // Manejar updatedAt\r\n            if (request.updatedAt.toDate) {\r\n              updated = request.updatedAt.toDate();\r\n            } else if (request.updatedAt instanceof Date) {\r\n              updated = request.updatedAt;\r\n            } else if (typeof request.updatedAt === 'string') {\r\n              updated = new Date(request.updatedAt);\r\n            } else {\r\n              updated = new Date();\r\n            }\r\n\r\n            if (!isNaN(created.getTime()) && !isNaN(updated.getTime())) {\r\n              totalResponseTime += updated.getTime() - created.getTime();\r\n              responseTimeCount++;\r\n            }\r\n          } catch (error) {\r\n            logger.warn('Error al calcular tiempo de respuesta', {\r\n              metadata: { requestId: request.id, error: (error as Error).message }\r\n            });\r\n          }\r\n        }\r\n      });\r\n\r\n      const averageBudget =\r\n        requests.length > 0 ? totalBudget / requests.length : 0;\r\n      const acceptanceRate =\r\n        requests.length > 0 ? (acceptedRequests / requests.length) * 100 : 0;\r\n      const averageResponseTime =\r\n        responseTimeCount > 0 ? totalResponseTime / responseTimeCount : 0;\r\n\r\n      return {\r\n        totalRequests: requests.length,\r\n        requestsByStatus,\r\n        requestsByType,\r\n        requestsByMonth,\r\n        averageBudget,\r\n        totalBudget,\r\n        acceptanceRate,\r\n        averageResponseTime,\r\n      };\r\n    } catch (error) {\r\n      logger.error('Error al obtener analytics de solicitudes:', error as Error);\r\n      throw new Error('Error al obtener analytics de solicitudes');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Analytics de usuarios\r\n   */\r\n  async getUserAnalytics(\r\n    filters: AnalyticsFilters = {}\r\n  ): Promise<UserAnalytics> {\r\n    try {\r\n      let query: any = db.collection('users');\r\n\r\n      if (filters.userRole) {\r\n        query = query.where('roll', '==', filters.userRole);\r\n      }\r\n\r\n      const snapshot = await query.get();\r\n      const users = snapshot.docs.map((doc: any) => doc.data() as User);\r\n\r\n      const usersByRole: Record<string, number> = {};\r\n      const usersByMonth: Record<string, number> = {};\r\n      let activeUsers = 0;\r\n      let newUsersThisMonth = 0;\r\n\r\n      const currentMonth = new Date().toISOString().substring(0, 7);\r\n      const lastMonth = new Date(Date.now() - 30 * 24 * 60 * 60 * 1000)\r\n        .toISOString()\r\n        .substring(0, 7);\r\n\r\n      users.forEach((user: any) => {\r\n        // Contar por rol\r\n        usersByRole[user.roll] = (usersByRole[user.roll] || 0) + 1;\r\n\r\n        // Contar por mes - Validar fecha antes de convertir\r\n        let month: string;\r\n        try {\r\n          const createAt = user.create_at\r\n            ? new Date(user.create_at)\r\n            : new Date();\r\n          if (isNaN(createAt.getTime())) {\r\n            console.info('./src/services/analyticsService.ts line 296');\r\n            console.warn('Fecha inv\xE1lida en user:', user.id, user.create_at);\r\n            month = new Date().toISOString().substring(0, 7);\r\n          } else {\r\n            month = createAt.toISOString().substring(0, 7);\r\n          }\r\n        } catch (error) {\r\n          console.info('./src/services/analyticsService.ts line 303');\r\n          console.warn('Error al procesar fecha de user:', user.id, error);\r\n          month = new Date().toISOString().substring(0, 7);\r\n        }\r\n\r\n        usersByMonth[month] = (usersByMonth[month] || 0) + 1;\r\n\r\n        // Contar usuarios activos (creados en el \xFAltimo mes)\r\n        if (month >= lastMonth) activeUsers++;\r\n\r\n        // Contar nuevos usuarios este mes\r\n        if (month === currentMonth) newUsersThisMonth++;\r\n      });\r\n\r\n      // Calcular tasa de crecimiento\r\n      const previousMonthUsers = usersByMonth[lastMonth] || 0;\r\n      const currentMonthUsers = usersByMonth[currentMonth] || 0;\r\n      const userGrowthRate =\r\n        previousMonthUsers > 0\r\n          ? ((currentMonthUsers - previousMonthUsers) / previousMonthUsers) *\r\n            100\r\n          : 0;\r\n\r\n      return {\r\n        totalUsers: users.length,\r\n        usersByRole,\r\n        usersByMonth,\r\n        activeUsers,\r\n        newUsersThisMonth,\r\n        userGrowthRate,\r\n      };\r\n    } catch (error) {\r\n      logger.error('Error al obtener analytics de usuarios:', error as Error);\r\n      throw new Error('Error al obtener analytics de usuarios');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Analytics de la plataforma completa\r\n   */\r\n  async getPlatformAnalytics(\r\n    filters: AnalyticsFilters = {}\r\n  ): Promise<PlatformAnalytics> {\r\n    try {\r\n      const [eventAnalytics, requestAnalytics, userAnalytics] =\r\n        await Promise.all([\r\n          this.getEventAnalytics(filters),\r\n          this.getRequestAnalytics(filters),\r\n          this.getUserAnalytics(filters),\r\n        ]);\r\n\r\n      // Calcular ingresos totales (simulado)\r\n      const totalRevenue = eventAnalytics.totalBudget * 0.1; // 10% de comisi\xF3n\r\n      const averageEventValue =\r\n        eventAnalytics.totalEvents > 0\r\n          ? eventAnalytics.totalBudget / eventAnalytics.totalEvents\r\n          : 0;\r\n\r\n      // Top tipos de eventos\r\n      const topEventTypes = Object.entries(eventAnalytics.eventsByType)\r\n        .map(([type, count]) => ({\r\n          type,\r\n          count,\r\n          revenue: count * averageEventValue,\r\n        }))\r\n        .sort((a, b) => b.count - a.count)\r\n        .slice(0, 5);\r\n\r\n      // Top ubicaciones (simulado)\r\n      const topLocations = [\r\n        { location: 'Santo Domingo', count: 150, revenue: 15000 },\r\n        { location: 'Santiago', count: 120, revenue: 12000 },\r\n        { location: 'La Romana', count: 80, revenue: 8000 },\r\n        { location: 'Puerto Plata', count: 60, revenue: 6000 },\r\n        { location: 'San Pedro de Macor\xEDs', count: 40, revenue: 4000 },\r\n      ];\r\n\r\n      // M\xE9tricas de engagement\r\n      const eventsPerUser =\r\n        userAnalytics.totalUsers > 0\r\n          ? eventAnalytics.totalEvents / userAnalytics.totalUsers\r\n          : 0;\r\n      const requestsPerUser =\r\n        userAnalytics.totalUsers > 0\r\n          ? requestAnalytics.totalRequests / userAnalytics.totalUsers\r\n          : 0;\r\n\r\n      // M\xE9tricas de performance (simuladas)\r\n      const performance = {\r\n        averageResponseTime: requestAnalytics.averageResponseTime,\r\n        successRate: 95.5, // Simulado\r\n        errorRate: 4.5, // Simulado\r\n      };\r\n\r\n      return {\r\n        totalRevenue,\r\n        averageEventValue,\r\n        topEventTypes,\r\n        topLocations,\r\n        userEngagement: {\r\n          eventsPerUser,\r\n          requestsPerUser,\r\n          averageSessionDuration: 25.5, // Simulado en minutos\r\n        },\r\n        performance,\r\n      };\r\n    } catch (error) {\r\n      logger.error('Error al obtener analytics de plataforma:', error as Error);\r\n      throw new Error('Error al obtener analytics de plataforma');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Reporte de tendencias\r\n   */\r\n  async getTrendsReport(months: number = 6): Promise<{\r\n    eventTrends: Array<{ month: string; count: number; revenue: number }>;\r\n    requestTrends: Array<{\r\n      month: string;\r\n      count: number;\r\n      acceptanceRate: number;\r\n    }>;\r\n    userTrends: Array<{ month: string; newUsers: number; activeUsers: number }>;\r\n  }> {\r\n    try {\r\n      const trends = {\r\n        eventTrends: [] as Array<{\r\n          month: string;\r\n          count: number;\r\n          revenue: number;\r\n        }>,\r\n        requestTrends: [] as Array<{\r\n          month: string;\r\n          count: number;\r\n          acceptanceRate: number;\r\n        }>,\r\n        userTrends: [] as Array<{\r\n          month: string;\r\n          newUsers: number;\r\n          activeUsers: number;\r\n        }>,\r\n      };\r\n\r\n      // Generar datos de tendencias para los \xFAltimos meses\r\n      for (let i = months - 1; i >= 0; i--) {\r\n        const date = new Date();\r\n        date.setMonth(date.getMonth() - i);\r\n        const month = date.toISOString().substring(0, 7);\r\n\r\n        // Simular datos de tendencias\r\n        const eventCount = Math.floor(Math.random() * 50) + 20;\r\n        const eventRevenue = eventCount * (Math.random() * 500 + 200);\r\n\r\n        const requestCount = Math.floor(Math.random() * 30) + 10;\r\n        const acceptanceRate = Math.random() * 30 + 60;\r\n\r\n        const newUsers = Math.floor(Math.random() * 20) + 5;\r\n        const activeUsers = Math.floor(Math.random() * 100) + 50;\r\n\r\n        trends.eventTrends.push({\r\n          month,\r\n          count: eventCount,\r\n          revenue: eventRevenue,\r\n        });\r\n\r\n        trends.requestTrends.push({\r\n          month,\r\n          count: requestCount,\r\n          acceptanceRate,\r\n        });\r\n\r\n        trends.userTrends.push({\r\n          month,\r\n          newUsers,\r\n          activeUsers,\r\n        });\r\n      }\r\n\r\n      return trends;\r\n    } catch (error) {\r\n      console.info('./src/services/analyticsService.ts line 459');\r\n      logger.error('Error al obtener reporte de tendencias:', error as Error);\r\n      throw new Error('Error al obtener reporte de tendencias');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Reporte de rendimiento por ubicaci\xF3n\r\n   */\r\n  async getLocationPerformanceReport(): Promise<\r\n    Array<{\r\n      location: string;\r\n      totalEvents: number;\r\n      totalRequests: number;\r\n      totalRevenue: number;\r\n      averageEventValue: number;\r\n      completionRate: number;\r\n      acceptanceRate: number;\r\n    }>\r\n  > {\r\n    try {\r\n      // Simular datos de rendimiento por ubicaci\xF3n\r\n      const locations = [\r\n        'Santo Domingo',\r\n        'Santiago',\r\n        'La Romana',\r\n        'Puerto Plata',\r\n        'San Pedro de Macor\xEDs',\r\n        'Hig\xFCey',\r\n        'San Francisco de Macor\xEDs',\r\n        'La Vega',\r\n        'Moca',\r\n        'Bonao',\r\n      ];\r\n\r\n      return locations.map(location => ({\r\n        location,\r\n        totalEvents: Math.floor(Math.random() * 100) + 20,\r\n        totalRequests: Math.floor(Math.random() * 60) + 10,\r\n        totalRevenue: Math.floor(Math.random() * 20000) + 5000,\r\n        averageEventValue: Math.floor(Math.random() * 500) + 200,\r\n        completionRate: Math.random() * 30 + 70,\r\n        acceptanceRate: Math.random() * 40 + 50,\r\n      }));\r\n    } catch (error) {\r\n      console.info('./src/services/analyticsService.ts line 502');\r\n      logger.error('Error al obtener reporte de rendimiento por ubicaci\xF3n:', error as Error);\r\n      throw new Error('Error al obtener reporte de rendimiento por ubicaci\xF3n');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Reporte de usuarios m\xE1s activos\r\n   */\r\n  async getTopActiveUsersReport(limit: number = 10): Promise<\r\n    Array<{\r\n      user: User;\r\n      eventsCreated: number;\r\n      requestsCreated: number;\r\n      eventsCompleted: number;\r\n      requestsAccepted: number;\r\n      totalRevenue: number;\r\n    }>\r\n  > {\r\n    try {\r\n      // Obtener usuarios\r\n      const usersSnapshot = await db.collection('users').limit(limit).get();\r\n      const users = usersSnapshot.docs.map(doc => doc.data() as User);\r\n\r\n      // Simular datos de actividad\r\n      return users\r\n        .map(user => ({\r\n          user,\r\n          eventsCreated: Math.floor(Math.random() * 20) + 1,\r\n          requestsCreated: Math.floor(Math.random() * 15) + 1,\r\n          eventsCompleted: Math.floor(Math.random() * 15) + 1,\r\n          requestsAccepted: Math.floor(Math.random() * 10) + 1,\r\n          totalRevenue: Math.floor(Math.random() * 5000) + 500,\r\n        }))\r\n        .sort((a, b) => b.totalRevenue - a.totalRevenue);\r\n    } catch (error) {\r\n      console.info('./src/services/analyticsService.ts line 534');\r\n      logger.error('Error al obtener reporte de usuarios m\xE1s activos:', error as Error);\r\n      throw new Error('Error al obtener reporte de usuarios m\xE1s activos');\r\n    }\r\n  }\r\n}\r\n\r\nexport const analyticsService = new AnalyticsService();\r\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "daa6c57772a2c419aeba1ddce2a110e1627eb54f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_qq0cfhyj2 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_qq0cfhyj2();
var __awaiter =
/* istanbul ignore next */
(cov_qq0cfhyj2().s[0]++,
/* istanbul ignore next */
(cov_qq0cfhyj2().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_qq0cfhyj2().b[0][1]++, this.__awaiter) ||
/* istanbul ignore next */
(cov_qq0cfhyj2().b[0][2]++, function (thisArg, _arguments, P, generator) {
  /* istanbul ignore next */
  cov_qq0cfhyj2().f[0]++;
  function adopt(value) {
    /* istanbul ignore next */
    cov_qq0cfhyj2().f[1]++;
    cov_qq0cfhyj2().s[1]++;
    return value instanceof P ?
    /* istanbul ignore next */
    (cov_qq0cfhyj2().b[1][0]++, value) :
    /* istanbul ignore next */
    (cov_qq0cfhyj2().b[1][1]++, new P(function (resolve) {
      /* istanbul ignore next */
      cov_qq0cfhyj2().f[2]++;
      cov_qq0cfhyj2().s[2]++;
      resolve(value);
    }));
  }
  /* istanbul ignore next */
  cov_qq0cfhyj2().s[3]++;
  return new (
  /* istanbul ignore next */
  (cov_qq0cfhyj2().b[2][0]++, P) ||
  /* istanbul ignore next */
  (cov_qq0cfhyj2().b[2][1]++, P = Promise))(function (resolve, reject) {
    /* istanbul ignore next */
    cov_qq0cfhyj2().f[3]++;
    function fulfilled(value) {
      /* istanbul ignore next */
      cov_qq0cfhyj2().f[4]++;
      cov_qq0cfhyj2().s[4]++;
      try {
        /* istanbul ignore next */
        cov_qq0cfhyj2().s[5]++;
        step(generator.next(value));
      } catch (e) {
        /* istanbul ignore next */
        cov_qq0cfhyj2().s[6]++;
        reject(e);
      }
    }
    function rejected(value) {
      /* istanbul ignore next */
      cov_qq0cfhyj2().f[5]++;
      cov_qq0cfhyj2().s[7]++;
      try {
        /* istanbul ignore next */
        cov_qq0cfhyj2().s[8]++;
        step(generator["throw"](value));
      } catch (e) {
        /* istanbul ignore next */
        cov_qq0cfhyj2().s[9]++;
        reject(e);
      }
    }
    function step(result) {
      /* istanbul ignore next */
      cov_qq0cfhyj2().f[6]++;
      cov_qq0cfhyj2().s[10]++;
      result.done ?
      /* istanbul ignore next */
      (cov_qq0cfhyj2().b[3][0]++, resolve(result.value)) :
      /* istanbul ignore next */
      (cov_qq0cfhyj2().b[3][1]++, adopt(result.value).then(fulfilled, rejected));
    }
    /* istanbul ignore next */
    cov_qq0cfhyj2().s[11]++;
    step((generator = generator.apply(thisArg,
    /* istanbul ignore next */
    (cov_qq0cfhyj2().b[4][0]++, _arguments) ||
    /* istanbul ignore next */
    (cov_qq0cfhyj2().b[4][1]++, []))).next());
  });
}));
/* istanbul ignore next */
cov_qq0cfhyj2().s[12]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_qq0cfhyj2().s[13]++;
exports.analyticsService = exports.AnalyticsService = void 0;
const firebase_1 =
/* istanbul ignore next */
(cov_qq0cfhyj2().s[14]++, require("../utils/firebase"));
const loggerService_1 =
/* istanbul ignore next */
(cov_qq0cfhyj2().s[15]++, require("./loggerService"));
class AnalyticsService {
  /**
   * Analytics de eventos
   */
  getEventAnalytics() {
    /* istanbul ignore next */
    cov_qq0cfhyj2().f[7]++;
    cov_qq0cfhyj2().s[16]++;
    return __awaiter(this, arguments, void 0, function* (filters =
    /* istanbul ignore next */
    (cov_qq0cfhyj2().b[5][0]++, {})) {
      /* istanbul ignore next */
      cov_qq0cfhyj2().f[8]++;
      cov_qq0cfhyj2().s[17]++;
      try {
        let query =
        /* istanbul ignore next */
        (cov_qq0cfhyj2().s[18]++, firebase_1.db.collection('events'));
        /* istanbul ignore next */
        cov_qq0cfhyj2().s[19]++;
        if (filters.dateFrom) {
          /* istanbul ignore next */
          cov_qq0cfhyj2().b[6][0]++;
          cov_qq0cfhyj2().s[20]++;
          query = query.where('createdAt', '>=', filters.dateFrom);
        } else
        /* istanbul ignore next */
        {
          cov_qq0cfhyj2().b[6][1]++;
        }
        cov_qq0cfhyj2().s[21]++;
        if (filters.dateTo) {
          /* istanbul ignore next */
          cov_qq0cfhyj2().b[7][0]++;
          cov_qq0cfhyj2().s[22]++;
          query = query.where('createdAt', '<=', filters.dateTo);
        } else
        /* istanbul ignore next */
        {
          cov_qq0cfhyj2().b[7][1]++;
        }
        const snapshot =
        /* istanbul ignore next */
        (cov_qq0cfhyj2().s[23]++, yield query.get());
        const events =
        /* istanbul ignore next */
        (cov_qq0cfhyj2().s[24]++, snapshot.docs.map(doc => {
          /* istanbul ignore next */
          cov_qq0cfhyj2().f[9]++;
          cov_qq0cfhyj2().s[25]++;
          return doc.data();
        }));
        const eventsByStatus =
        /* istanbul ignore next */
        (cov_qq0cfhyj2().s[26]++, {});
        const eventsByType =
        /* istanbul ignore next */
        (cov_qq0cfhyj2().s[27]++, {});
        const eventsByMonth =
        /* istanbul ignore next */
        (cov_qq0cfhyj2().s[28]++, {});
        let totalBudget =
        /* istanbul ignore next */
        (cov_qq0cfhyj2().s[29]++, 0);
        let completedEvents =
        /* istanbul ignore next */
        (cov_qq0cfhyj2().s[30]++, 0);
        let cancelledEvents =
        /* istanbul ignore next */
        (cov_qq0cfhyj2().s[31]++, 0);
        /* istanbul ignore next */
        cov_qq0cfhyj2().s[32]++;
        events.forEach(event => {
          /* istanbul ignore next */
          cov_qq0cfhyj2().f[10]++;
          cov_qq0cfhyj2().s[33]++;
          // Contar por estado
          eventsByStatus[event.status] = (
          /* istanbul ignore next */
          (cov_qq0cfhyj2().b[8][0]++, eventsByStatus[event.status]) ||
          /* istanbul ignore next */
          (cov_qq0cfhyj2().b[8][1]++, 0)) + 1;
          // Contar por tipo
          /* istanbul ignore next */
          cov_qq0cfhyj2().s[34]++;
          eventsByType[event.eventType] = (
          /* istanbul ignore next */
          (cov_qq0cfhyj2().b[9][0]++, eventsByType[event.eventType]) ||
          /* istanbul ignore next */
          (cov_qq0cfhyj2().b[9][1]++, 0)) + 1;
          // Contar por mes - Validar fecha antes de convertir
          let month;
          /* istanbul ignore next */
          cov_qq0cfhyj2().s[35]++;
          try {
            const createdAt =
            /* istanbul ignore next */
            (cov_qq0cfhyj2().s[36]++, event.createdAt ?
            /* istanbul ignore next */
            (cov_qq0cfhyj2().b[10][0]++, new Date(event.createdAt)) :
            /* istanbul ignore next */
            (cov_qq0cfhyj2().b[10][1]++, new Date()));
            /* istanbul ignore next */
            cov_qq0cfhyj2().s[37]++;
            if (isNaN(createdAt.getTime())) {
              /* istanbul ignore next */
              cov_qq0cfhyj2().b[11][0]++;
              cov_qq0cfhyj2().s[38]++;
              console.info('./src/services/analyticsService.ts line 126');
              /* istanbul ignore next */
              cov_qq0cfhyj2().s[39]++;
              console.warn('Fecha inválida en event:', event.id, event.createdAt);
              /* istanbul ignore next */
              cov_qq0cfhyj2().s[40]++;
              month = new Date().toISOString().substring(0, 7);
            } else {
              /* istanbul ignore next */
              cov_qq0cfhyj2().b[11][1]++;
              cov_qq0cfhyj2().s[41]++;
              month = createdAt.toISOString().substring(0, 7);
            }
          } catch (error) {
            /* istanbul ignore next */
            cov_qq0cfhyj2().s[42]++;
            console.info('./src/services/analyticsService.ts line 133');
            /* istanbul ignore next */
            cov_qq0cfhyj2().s[43]++;
            console.warn('Error al procesar fecha de event:', event.id, error);
            /* istanbul ignore next */
            cov_qq0cfhyj2().s[44]++;
            month = new Date().toISOString().substring(0, 7);
          }
          /* istanbul ignore next */
          cov_qq0cfhyj2().s[45]++;
          eventsByMonth[month] = (
          /* istanbul ignore next */
          (cov_qq0cfhyj2().b[12][0]++, eventsByMonth[month]) ||
          /* istanbul ignore next */
          (cov_qq0cfhyj2().b[12][1]++, 0)) + 1;
          // Calcular presupuesto
          /* istanbul ignore next */
          cov_qq0cfhyj2().s[46]++;
          totalBudget +=
          /* istanbul ignore next */
          (cov_qq0cfhyj2().b[13][0]++, event.budget) ||
          /* istanbul ignore next */
          (cov_qq0cfhyj2().b[13][1]++, 0);
          // Contar eventos completados
          /* istanbul ignore next */
          cov_qq0cfhyj2().s[47]++;
          if (event.status === 'completado') {
            /* istanbul ignore next */
            cov_qq0cfhyj2().b[14][0]++;
            cov_qq0cfhyj2().s[48]++;
            completedEvents++;
          } else
          /* istanbul ignore next */
          {
            cov_qq0cfhyj2().b[14][1]++;
          }
          // Contar eventos cancelados
          cov_qq0cfhyj2().s[49]++;
          if (event.status === 'cancelado') {
            /* istanbul ignore next */
            cov_qq0cfhyj2().b[15][0]++;
            cov_qq0cfhyj2().s[50]++;
            cancelledEvents++;
          } else
          /* istanbul ignore next */
          {
            cov_qq0cfhyj2().b[15][1]++;
          }
        });
        const averageBudget =
        /* istanbul ignore next */
        (cov_qq0cfhyj2().s[51]++, events.length > 0 ?
        /* istanbul ignore next */
        (cov_qq0cfhyj2().b[16][0]++, totalBudget / events.length) :
        /* istanbul ignore next */
        (cov_qq0cfhyj2().b[16][1]++, 0));
        const completionRate =
        /* istanbul ignore next */
        (cov_qq0cfhyj2().s[52]++, events.length > 0 ?
        /* istanbul ignore next */
        (cov_qq0cfhyj2().b[17][0]++, completedEvents / events.length * 100) :
        /* istanbul ignore next */
        (cov_qq0cfhyj2().b[17][1]++, 0));
        const cancellationRate =
        /* istanbul ignore next */
        (cov_qq0cfhyj2().s[53]++, events.length > 0 ?
        /* istanbul ignore next */
        (cov_qq0cfhyj2().b[18][0]++, cancelledEvents / events.length * 100) :
        /* istanbul ignore next */
        (cov_qq0cfhyj2().b[18][1]++, 0));
        /* istanbul ignore next */
        cov_qq0cfhyj2().s[54]++;
        return {
          totalEvents: events.length,
          eventsByStatus,
          eventsByType,
          eventsByMonth,
          averageBudget,
          totalBudget,
          completionRate,
          cancellationRate
        };
      } catch (error) {
        /* istanbul ignore next */
        cov_qq0cfhyj2().s[55]++;
        loggerService_1.logger.error('Error al obtener analytics de eventos:', error);
        /* istanbul ignore next */
        cov_qq0cfhyj2().s[56]++;
        throw new Error('Error al obtener analytics de eventos');
      }
    });
  }
  /**
   * Analytics de solicitudes de músicos
   */
  getRequestAnalytics() {
    /* istanbul ignore next */
    cov_qq0cfhyj2().f[11]++;
    cov_qq0cfhyj2().s[57]++;
    return __awaiter(this, arguments, void 0, function* (filters =
    /* istanbul ignore next */
    (cov_qq0cfhyj2().b[19][0]++, {})) {
      /* istanbul ignore next */
      cov_qq0cfhyj2().f[12]++;
      cov_qq0cfhyj2().s[58]++;
      try {
        let query =
        /* istanbul ignore next */
        (cov_qq0cfhyj2().s[59]++, firebase_1.db.collection('musicianRequests'));
        /* istanbul ignore next */
        cov_qq0cfhyj2().s[60]++;
        if (filters.dateFrom) {
          /* istanbul ignore next */
          cov_qq0cfhyj2().b[20][0]++;
          cov_qq0cfhyj2().s[61]++;
          query = query.where('createdAt', '>=', filters.dateFrom);
        } else
        /* istanbul ignore next */
        {
          cov_qq0cfhyj2().b[20][1]++;
        }
        cov_qq0cfhyj2().s[62]++;
        if (filters.dateTo) {
          /* istanbul ignore next */
          cov_qq0cfhyj2().b[21][0]++;
          cov_qq0cfhyj2().s[63]++;
          query = query.where('createdAt', '<=', filters.dateTo);
        } else
        /* istanbul ignore next */
        {
          cov_qq0cfhyj2().b[21][1]++;
        }
        const snapshot =
        /* istanbul ignore next */
        (cov_qq0cfhyj2().s[64]++, yield query.get());
        const requests =
        /* istanbul ignore next */
        (cov_qq0cfhyj2().s[65]++, snapshot.docs.map(doc => {
          /* istanbul ignore next */
          cov_qq0cfhyj2().f[13]++;
          cov_qq0cfhyj2().s[66]++;
          return doc.data();
        }));
        const requestsByStatus =
        /* istanbul ignore next */
        (cov_qq0cfhyj2().s[67]++, {});
        const requestsByType =
        /* istanbul ignore next */
        (cov_qq0cfhyj2().s[68]++, {});
        const requestsByMonth =
        /* istanbul ignore next */
        (cov_qq0cfhyj2().s[69]++, {});
        let totalBudget =
        /* istanbul ignore next */
        (cov_qq0cfhyj2().s[70]++, 0);
        let acceptedRequests =
        /* istanbul ignore next */
        (cov_qq0cfhyj2().s[71]++, 0);
        let totalResponseTime =
        /* istanbul ignore next */
        (cov_qq0cfhyj2().s[72]++, 0);
        let responseTimeCount =
        /* istanbul ignore next */
        (cov_qq0cfhyj2().s[73]++, 0);
        /* istanbul ignore next */
        cov_qq0cfhyj2().s[74]++;
        requests.forEach(request => {
          /* istanbul ignore next */
          cov_qq0cfhyj2().f[14]++;
          cov_qq0cfhyj2().s[75]++;
          // Contar por estado
          requestsByStatus[request.status] = (
          /* istanbul ignore next */
          (cov_qq0cfhyj2().b[22][0]++, requestsByStatus[request.status]) ||
          /* istanbul ignore next */
          (cov_qq0cfhyj2().b[22][1]++, 0)) + 1;
          // Contar por tipo
          /* istanbul ignore next */
          cov_qq0cfhyj2().s[76]++;
          requestsByType[request.eventType] = (
          /* istanbul ignore next */
          (cov_qq0cfhyj2().b[23][0]++, requestsByType[request.eventType]) ||
          /* istanbul ignore next */
          (cov_qq0cfhyj2().b[23][1]++, 0)) + 1;
          // Contar por mes - Validar fecha antes de convertir
          let month;
          /* istanbul ignore next */
          cov_qq0cfhyj2().s[77]++;
          try {
            let createdAt;
            // Manejar diferentes tipos de fecha (Timestamp de Firestore, Date, string)
            /* istanbul ignore next */
            cov_qq0cfhyj2().s[78]++;
            if (request.createdAt) {
              /* istanbul ignore next */
              cov_qq0cfhyj2().b[24][0]++;
              cov_qq0cfhyj2().s[79]++;
              if (request.createdAt.toDate) {
                /* istanbul ignore next */
                cov_qq0cfhyj2().b[25][0]++;
                cov_qq0cfhyj2().s[80]++;
                // Es un Timestamp de Firestore
                createdAt = request.createdAt.toDate();
              } else {
                /* istanbul ignore next */
                cov_qq0cfhyj2().b[25][1]++;
                cov_qq0cfhyj2().s[81]++;
                if (request.createdAt instanceof Date) {
                  /* istanbul ignore next */
                  cov_qq0cfhyj2().b[26][0]++;
                  cov_qq0cfhyj2().s[82]++;
                  // Ya es un Date
                  createdAt = request.createdAt;
                } else {
                  /* istanbul ignore next */
                  cov_qq0cfhyj2().b[26][1]++;
                  cov_qq0cfhyj2().s[83]++;
                  if (typeof request.createdAt === 'string') {
                    /* istanbul ignore next */
                    cov_qq0cfhyj2().b[27][0]++;
                    cov_qq0cfhyj2().s[84]++;
                    // Es un string, intentar convertir
                    createdAt = new Date(request.createdAt);
                  } else {
                    /* istanbul ignore next */
                    cov_qq0cfhyj2().b[27][1]++;
                    cov_qq0cfhyj2().s[85]++;
                    // Otro tipo, usar fecha actual
                    createdAt = new Date();
                  }
                }
              }
            } else {
              /* istanbul ignore next */
              cov_qq0cfhyj2().b[24][1]++;
              cov_qq0cfhyj2().s[86]++;
              createdAt = new Date();
            }
            /* istanbul ignore next */
            cov_qq0cfhyj2().s[87]++;
            if (isNaN(createdAt.getTime())) {
              /* istanbul ignore next */
              cov_qq0cfhyj2().b[28][0]++;
              cov_qq0cfhyj2().s[88]++;
              loggerService_1.logger.warn('Fecha inválida en request', {
                metadata: {
                  requestId: request.id,
                  createdAt: request.createdAt
                }
              });
              /* istanbul ignore next */
              cov_qq0cfhyj2().s[89]++;
              month = new Date().toISOString().substring(0, 7);
            } else {
              /* istanbul ignore next */
              cov_qq0cfhyj2().b[28][1]++;
              cov_qq0cfhyj2().s[90]++;
              month = createdAt.toISOString().substring(0, 7);
            }
          } catch (error) {
            /* istanbul ignore next */
            cov_qq0cfhyj2().s[91]++;
            loggerService_1.logger.warn('Error al procesar fecha de request', {
              metadata: {
                requestId: request.id,
                error: error.message
              }
            });
            /* istanbul ignore next */
            cov_qq0cfhyj2().s[92]++;
            month = new Date().toISOString().substring(0, 7);
          }
          /* istanbul ignore next */
          cov_qq0cfhyj2().s[93]++;
          requestsByMonth[month] = (
          /* istanbul ignore next */
          (cov_qq0cfhyj2().b[29][0]++, requestsByMonth[month]) ||
          /* istanbul ignore next */
          (cov_qq0cfhyj2().b[29][1]++, 0)) + 1;
          // Calcular presupuesto
          /* istanbul ignore next */
          cov_qq0cfhyj2().s[94]++;
          totalBudget +=
          /* istanbul ignore next */
          (cov_qq0cfhyj2().b[30][0]++, request.budget) ||
          /* istanbul ignore next */
          (cov_qq0cfhyj2().b[30][1]++, 0);
          // Contar solicitudes aceptadas
          /* istanbul ignore next */
          cov_qq0cfhyj2().s[95]++;
          if (request.status === 'asignada') {
            /* istanbul ignore next */
            cov_qq0cfhyj2().b[31][0]++;
            cov_qq0cfhyj2().s[96]++;
            acceptedRequests++;
          } else
          /* istanbul ignore next */
          {
            cov_qq0cfhyj2().b[31][1]++;
          }
          // Calcular tiempo de respuesta - Validar fechas
          cov_qq0cfhyj2().s[97]++;
          if (
          /* istanbul ignore next */
          (cov_qq0cfhyj2().b[33][0]++, request.assignedMusicianId) &&
          /* istanbul ignore next */
          (cov_qq0cfhyj2().b[33][1]++, request.updatedAt)) {
            /* istanbul ignore next */
            cov_qq0cfhyj2().b[32][0]++;
            cov_qq0cfhyj2().s[98]++;
            try {
              let created;
              let updated;
              // Manejar createdAt
              /* istanbul ignore next */
              cov_qq0cfhyj2().s[99]++;
              if (request.createdAt) {
                /* istanbul ignore next */
                cov_qq0cfhyj2().b[34][0]++;
                cov_qq0cfhyj2().s[100]++;
                if (request.createdAt.toDate) {
                  /* istanbul ignore next */
                  cov_qq0cfhyj2().b[35][0]++;
                  cov_qq0cfhyj2().s[101]++;
                  created = request.createdAt.toDate();
                } else {
                  /* istanbul ignore next */
                  cov_qq0cfhyj2().b[35][1]++;
                  cov_qq0cfhyj2().s[102]++;
                  if (request.createdAt instanceof Date) {
                    /* istanbul ignore next */
                    cov_qq0cfhyj2().b[36][0]++;
                    cov_qq0cfhyj2().s[103]++;
                    created = request.createdAt;
                  } else {
                    /* istanbul ignore next */
                    cov_qq0cfhyj2().b[36][1]++;
                    cov_qq0cfhyj2().s[104]++;
                    if (typeof request.createdAt === 'string') {
                      /* istanbul ignore next */
                      cov_qq0cfhyj2().b[37][0]++;
                      cov_qq0cfhyj2().s[105]++;
                      created = new Date(request.createdAt);
                    } else {
                      /* istanbul ignore next */
                      cov_qq0cfhyj2().b[37][1]++;
                      cov_qq0cfhyj2().s[106]++;
                      created = new Date();
                    }
                  }
                }
              } else {
                /* istanbul ignore next */
                cov_qq0cfhyj2().b[34][1]++;
                cov_qq0cfhyj2().s[107]++;
                created = new Date();
              }
              // Manejar updatedAt
              /* istanbul ignore next */
              cov_qq0cfhyj2().s[108]++;
              if (request.updatedAt.toDate) {
                /* istanbul ignore next */
                cov_qq0cfhyj2().b[38][0]++;
                cov_qq0cfhyj2().s[109]++;
                updated = request.updatedAt.toDate();
              } else {
                /* istanbul ignore next */
                cov_qq0cfhyj2().b[38][1]++;
                cov_qq0cfhyj2().s[110]++;
                if (request.updatedAt instanceof Date) {
                  /* istanbul ignore next */
                  cov_qq0cfhyj2().b[39][0]++;
                  cov_qq0cfhyj2().s[111]++;
                  updated = request.updatedAt;
                } else {
                  /* istanbul ignore next */
                  cov_qq0cfhyj2().b[39][1]++;
                  cov_qq0cfhyj2().s[112]++;
                  if (typeof request.updatedAt === 'string') {
                    /* istanbul ignore next */
                    cov_qq0cfhyj2().b[40][0]++;
                    cov_qq0cfhyj2().s[113]++;
                    updated = new Date(request.updatedAt);
                  } else {
                    /* istanbul ignore next */
                    cov_qq0cfhyj2().b[40][1]++;
                    cov_qq0cfhyj2().s[114]++;
                    updated = new Date();
                  }
                }
              }
              /* istanbul ignore next */
              cov_qq0cfhyj2().s[115]++;
              if (
              /* istanbul ignore next */
              (cov_qq0cfhyj2().b[42][0]++, !isNaN(created.getTime())) &&
              /* istanbul ignore next */
              (cov_qq0cfhyj2().b[42][1]++, !isNaN(updated.getTime()))) {
                /* istanbul ignore next */
                cov_qq0cfhyj2().b[41][0]++;
                cov_qq0cfhyj2().s[116]++;
                totalResponseTime += updated.getTime() - created.getTime();
                /* istanbul ignore next */
                cov_qq0cfhyj2().s[117]++;
                responseTimeCount++;
              } else
              /* istanbul ignore next */
              {
                cov_qq0cfhyj2().b[41][1]++;
              }
            } catch (error) {
              /* istanbul ignore next */
              cov_qq0cfhyj2().s[118]++;
              loggerService_1.logger.warn('Error al calcular tiempo de respuesta', {
                metadata: {
                  requestId: request.id,
                  error: error.message
                }
              });
            }
          } else
          /* istanbul ignore next */
          {
            cov_qq0cfhyj2().b[32][1]++;
          }
        });
        const averageBudget =
        /* istanbul ignore next */
        (cov_qq0cfhyj2().s[119]++, requests.length > 0 ?
        /* istanbul ignore next */
        (cov_qq0cfhyj2().b[43][0]++, totalBudget / requests.length) :
        /* istanbul ignore next */
        (cov_qq0cfhyj2().b[43][1]++, 0));
        const acceptanceRate =
        /* istanbul ignore next */
        (cov_qq0cfhyj2().s[120]++, requests.length > 0 ?
        /* istanbul ignore next */
        (cov_qq0cfhyj2().b[44][0]++, acceptedRequests / requests.length * 100) :
        /* istanbul ignore next */
        (cov_qq0cfhyj2().b[44][1]++, 0));
        const averageResponseTime =
        /* istanbul ignore next */
        (cov_qq0cfhyj2().s[121]++, responseTimeCount > 0 ?
        /* istanbul ignore next */
        (cov_qq0cfhyj2().b[45][0]++, totalResponseTime / responseTimeCount) :
        /* istanbul ignore next */
        (cov_qq0cfhyj2().b[45][1]++, 0));
        /* istanbul ignore next */
        cov_qq0cfhyj2().s[122]++;
        return {
          totalRequests: requests.length,
          requestsByStatus,
          requestsByType,
          requestsByMonth,
          averageBudget,
          totalBudget,
          acceptanceRate,
          averageResponseTime
        };
      } catch (error) {
        /* istanbul ignore next */
        cov_qq0cfhyj2().s[123]++;
        loggerService_1.logger.error('Error al obtener analytics de solicitudes:', error);
        /* istanbul ignore next */
        cov_qq0cfhyj2().s[124]++;
        throw new Error('Error al obtener analytics de solicitudes');
      }
    });
  }
  /**
   * Analytics de usuarios
   */
  getUserAnalytics() {
    /* istanbul ignore next */
    cov_qq0cfhyj2().f[15]++;
    cov_qq0cfhyj2().s[125]++;
    return __awaiter(this, arguments, void 0, function* (filters =
    /* istanbul ignore next */
    (cov_qq0cfhyj2().b[46][0]++, {})) {
      /* istanbul ignore next */
      cov_qq0cfhyj2().f[16]++;
      cov_qq0cfhyj2().s[126]++;
      try {
        let query =
        /* istanbul ignore next */
        (cov_qq0cfhyj2().s[127]++, firebase_1.db.collection('users'));
        /* istanbul ignore next */
        cov_qq0cfhyj2().s[128]++;
        if (filters.userRole) {
          /* istanbul ignore next */
          cov_qq0cfhyj2().b[47][0]++;
          cov_qq0cfhyj2().s[129]++;
          query = query.where('roll', '==', filters.userRole);
        } else
        /* istanbul ignore next */
        {
          cov_qq0cfhyj2().b[47][1]++;
        }
        const snapshot =
        /* istanbul ignore next */
        (cov_qq0cfhyj2().s[130]++, yield query.get());
        const users =
        /* istanbul ignore next */
        (cov_qq0cfhyj2().s[131]++, snapshot.docs.map(doc => {
          /* istanbul ignore next */
          cov_qq0cfhyj2().f[17]++;
          cov_qq0cfhyj2().s[132]++;
          return doc.data();
        }));
        const usersByRole =
        /* istanbul ignore next */
        (cov_qq0cfhyj2().s[133]++, {});
        const usersByMonth =
        /* istanbul ignore next */
        (cov_qq0cfhyj2().s[134]++, {});
        let activeUsers =
        /* istanbul ignore next */
        (cov_qq0cfhyj2().s[135]++, 0);
        let newUsersThisMonth =
        /* istanbul ignore next */
        (cov_qq0cfhyj2().s[136]++, 0);
        const currentMonth =
        /* istanbul ignore next */
        (cov_qq0cfhyj2().s[137]++, new Date().toISOString().substring(0, 7));
        const lastMonth =
        /* istanbul ignore next */
        (cov_qq0cfhyj2().s[138]++, new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString().substring(0, 7));
        /* istanbul ignore next */
        cov_qq0cfhyj2().s[139]++;
        users.forEach(user => {
          /* istanbul ignore next */
          cov_qq0cfhyj2().f[18]++;
          cov_qq0cfhyj2().s[140]++;
          // Contar por rol
          usersByRole[user.roll] = (
          /* istanbul ignore next */
          (cov_qq0cfhyj2().b[48][0]++, usersByRole[user.roll]) ||
          /* istanbul ignore next */
          (cov_qq0cfhyj2().b[48][1]++, 0)) + 1;
          // Contar por mes - Validar fecha antes de convertir
          let month;
          /* istanbul ignore next */
          cov_qq0cfhyj2().s[141]++;
          try {
            const createAt =
            /* istanbul ignore next */
            (cov_qq0cfhyj2().s[142]++, user.create_at ?
            /* istanbul ignore next */
            (cov_qq0cfhyj2().b[49][0]++, new Date(user.create_at)) :
            /* istanbul ignore next */
            (cov_qq0cfhyj2().b[49][1]++, new Date()));
            /* istanbul ignore next */
            cov_qq0cfhyj2().s[143]++;
            if (isNaN(createAt.getTime())) {
              /* istanbul ignore next */
              cov_qq0cfhyj2().b[50][0]++;
              cov_qq0cfhyj2().s[144]++;
              console.info('./src/services/analyticsService.ts line 296');
              /* istanbul ignore next */
              cov_qq0cfhyj2().s[145]++;
              console.warn('Fecha inválida en user:', user.id, user.create_at);
              /* istanbul ignore next */
              cov_qq0cfhyj2().s[146]++;
              month = new Date().toISOString().substring(0, 7);
            } else {
              /* istanbul ignore next */
              cov_qq0cfhyj2().b[50][1]++;
              cov_qq0cfhyj2().s[147]++;
              month = createAt.toISOString().substring(0, 7);
            }
          } catch (error) {
            /* istanbul ignore next */
            cov_qq0cfhyj2().s[148]++;
            console.info('./src/services/analyticsService.ts line 303');
            /* istanbul ignore next */
            cov_qq0cfhyj2().s[149]++;
            console.warn('Error al procesar fecha de user:', user.id, error);
            /* istanbul ignore next */
            cov_qq0cfhyj2().s[150]++;
            month = new Date().toISOString().substring(0, 7);
          }
          /* istanbul ignore next */
          cov_qq0cfhyj2().s[151]++;
          usersByMonth[month] = (
          /* istanbul ignore next */
          (cov_qq0cfhyj2().b[51][0]++, usersByMonth[month]) ||
          /* istanbul ignore next */
          (cov_qq0cfhyj2().b[51][1]++, 0)) + 1;
          // Contar usuarios activos (creados en el último mes)
          /* istanbul ignore next */
          cov_qq0cfhyj2().s[152]++;
          if (month >= lastMonth) {
            /* istanbul ignore next */
            cov_qq0cfhyj2().b[52][0]++;
            cov_qq0cfhyj2().s[153]++;
            activeUsers++;
          } else
          /* istanbul ignore next */
          {
            cov_qq0cfhyj2().b[52][1]++;
          }
          // Contar nuevos usuarios este mes
          cov_qq0cfhyj2().s[154]++;
          if (month === currentMonth) {
            /* istanbul ignore next */
            cov_qq0cfhyj2().b[53][0]++;
            cov_qq0cfhyj2().s[155]++;
            newUsersThisMonth++;
          } else
          /* istanbul ignore next */
          {
            cov_qq0cfhyj2().b[53][1]++;
          }
        });
        // Calcular tasa de crecimiento
        const previousMonthUsers =
        /* istanbul ignore next */
        (cov_qq0cfhyj2().s[156]++,
        /* istanbul ignore next */
        (cov_qq0cfhyj2().b[54][0]++, usersByMonth[lastMonth]) ||
        /* istanbul ignore next */
        (cov_qq0cfhyj2().b[54][1]++, 0));
        const currentMonthUsers =
        /* istanbul ignore next */
        (cov_qq0cfhyj2().s[157]++,
        /* istanbul ignore next */
        (cov_qq0cfhyj2().b[55][0]++, usersByMonth[currentMonth]) ||
        /* istanbul ignore next */
        (cov_qq0cfhyj2().b[55][1]++, 0));
        const userGrowthRate =
        /* istanbul ignore next */
        (cov_qq0cfhyj2().s[158]++, previousMonthUsers > 0 ?
        /* istanbul ignore next */
        (cov_qq0cfhyj2().b[56][0]++, (currentMonthUsers - previousMonthUsers) / previousMonthUsers * 100) :
        /* istanbul ignore next */
        (cov_qq0cfhyj2().b[56][1]++, 0));
        /* istanbul ignore next */
        cov_qq0cfhyj2().s[159]++;
        return {
          totalUsers: users.length,
          usersByRole,
          usersByMonth,
          activeUsers,
          newUsersThisMonth,
          userGrowthRate
        };
      } catch (error) {
        /* istanbul ignore next */
        cov_qq0cfhyj2().s[160]++;
        loggerService_1.logger.error('Error al obtener analytics de usuarios:', error);
        /* istanbul ignore next */
        cov_qq0cfhyj2().s[161]++;
        throw new Error('Error al obtener analytics de usuarios');
      }
    });
  }
  /**
   * Analytics de la plataforma completa
   */
  getPlatformAnalytics() {
    /* istanbul ignore next */
    cov_qq0cfhyj2().f[19]++;
    cov_qq0cfhyj2().s[162]++;
    return __awaiter(this, arguments, void 0, function* (filters =
    /* istanbul ignore next */
    (cov_qq0cfhyj2().b[57][0]++, {})) {
      /* istanbul ignore next */
      cov_qq0cfhyj2().f[20]++;
      cov_qq0cfhyj2().s[163]++;
      try {
        const [eventAnalytics, requestAnalytics, userAnalytics] =
        /* istanbul ignore next */
        (cov_qq0cfhyj2().s[164]++, yield Promise.all([this.getEventAnalytics(filters), this.getRequestAnalytics(filters), this.getUserAnalytics(filters)]));
        // Calcular ingresos totales (simulado)
        const totalRevenue =
        /* istanbul ignore next */
        (cov_qq0cfhyj2().s[165]++, eventAnalytics.totalBudget * 0.1); // 10% de comisión
        const averageEventValue =
        /* istanbul ignore next */
        (cov_qq0cfhyj2().s[166]++, eventAnalytics.totalEvents > 0 ?
        /* istanbul ignore next */
        (cov_qq0cfhyj2().b[58][0]++, eventAnalytics.totalBudget / eventAnalytics.totalEvents) :
        /* istanbul ignore next */
        (cov_qq0cfhyj2().b[58][1]++, 0));
        // Top tipos de eventos
        const topEventTypes =
        /* istanbul ignore next */
        (cov_qq0cfhyj2().s[167]++, Object.entries(eventAnalytics.eventsByType).map(([type, count]) => {
          /* istanbul ignore next */
          cov_qq0cfhyj2().f[21]++;
          cov_qq0cfhyj2().s[168]++;
          return {
            type,
            count,
            revenue: count * averageEventValue
          };
        }).sort((a, b) => {
          /* istanbul ignore next */
          cov_qq0cfhyj2().f[22]++;
          cov_qq0cfhyj2().s[169]++;
          return b.count - a.count;
        }).slice(0, 5));
        // Top ubicaciones (simulado)
        const topLocations =
        /* istanbul ignore next */
        (cov_qq0cfhyj2().s[170]++, [{
          location: 'Santo Domingo',
          count: 150,
          revenue: 15000
        }, {
          location: 'Santiago',
          count: 120,
          revenue: 12000
        }, {
          location: 'La Romana',
          count: 80,
          revenue: 8000
        }, {
          location: 'Puerto Plata',
          count: 60,
          revenue: 6000
        }, {
          location: 'San Pedro de Macorís',
          count: 40,
          revenue: 4000
        }]);
        // Métricas de engagement
        const eventsPerUser =
        /* istanbul ignore next */
        (cov_qq0cfhyj2().s[171]++, userAnalytics.totalUsers > 0 ?
        /* istanbul ignore next */
        (cov_qq0cfhyj2().b[59][0]++, eventAnalytics.totalEvents / userAnalytics.totalUsers) :
        /* istanbul ignore next */
        (cov_qq0cfhyj2().b[59][1]++, 0));
        const requestsPerUser =
        /* istanbul ignore next */
        (cov_qq0cfhyj2().s[172]++, userAnalytics.totalUsers > 0 ?
        /* istanbul ignore next */
        (cov_qq0cfhyj2().b[60][0]++, requestAnalytics.totalRequests / userAnalytics.totalUsers) :
        /* istanbul ignore next */
        (cov_qq0cfhyj2().b[60][1]++, 0));
        // Métricas de performance (simuladas)
        const performance =
        /* istanbul ignore next */
        (cov_qq0cfhyj2().s[173]++, {
          averageResponseTime: requestAnalytics.averageResponseTime,
          successRate: 95.5,
          // Simulado
          errorRate: 4.5 // Simulado
        });
        /* istanbul ignore next */
        cov_qq0cfhyj2().s[174]++;
        return {
          totalRevenue,
          averageEventValue,
          topEventTypes,
          topLocations,
          userEngagement: {
            eventsPerUser,
            requestsPerUser,
            averageSessionDuration: 25.5 // Simulado en minutos
          },
          performance
        };
      } catch (error) {
        /* istanbul ignore next */
        cov_qq0cfhyj2().s[175]++;
        loggerService_1.logger.error('Error al obtener analytics de plataforma:', error);
        /* istanbul ignore next */
        cov_qq0cfhyj2().s[176]++;
        throw new Error('Error al obtener analytics de plataforma');
      }
    });
  }
  /**
   * Reporte de tendencias
   */
  getTrendsReport() {
    /* istanbul ignore next */
    cov_qq0cfhyj2().f[23]++;
    cov_qq0cfhyj2().s[177]++;
    return __awaiter(this, arguments, void 0, function* (months =
    /* istanbul ignore next */
    (cov_qq0cfhyj2().b[61][0]++, 6)) {
      /* istanbul ignore next */
      cov_qq0cfhyj2().f[24]++;
      cov_qq0cfhyj2().s[178]++;
      try {
        const trends =
        /* istanbul ignore next */
        (cov_qq0cfhyj2().s[179]++, {
          eventTrends: [],
          requestTrends: [],
          userTrends: []
        });
        // Generar datos de tendencias para los últimos meses
        /* istanbul ignore next */
        cov_qq0cfhyj2().s[180]++;
        for (let i =
        /* istanbul ignore next */
        (cov_qq0cfhyj2().s[181]++, months - 1); i >= 0; i--) {
          const date =
          /* istanbul ignore next */
          (cov_qq0cfhyj2().s[182]++, new Date());
          /* istanbul ignore next */
          cov_qq0cfhyj2().s[183]++;
          date.setMonth(date.getMonth() - i);
          const month =
          /* istanbul ignore next */
          (cov_qq0cfhyj2().s[184]++, date.toISOString().substring(0, 7));
          // Simular datos de tendencias
          const eventCount =
          /* istanbul ignore next */
          (cov_qq0cfhyj2().s[185]++, Math.floor(Math.random() * 50) + 20);
          const eventRevenue =
          /* istanbul ignore next */
          (cov_qq0cfhyj2().s[186]++, eventCount * (Math.random() * 500 + 200));
          const requestCount =
          /* istanbul ignore next */
          (cov_qq0cfhyj2().s[187]++, Math.floor(Math.random() * 30) + 10);
          const acceptanceRate =
          /* istanbul ignore next */
          (cov_qq0cfhyj2().s[188]++, Math.random() * 30 + 60);
          const newUsers =
          /* istanbul ignore next */
          (cov_qq0cfhyj2().s[189]++, Math.floor(Math.random() * 20) + 5);
          const activeUsers =
          /* istanbul ignore next */
          (cov_qq0cfhyj2().s[190]++, Math.floor(Math.random() * 100) + 50);
          /* istanbul ignore next */
          cov_qq0cfhyj2().s[191]++;
          trends.eventTrends.push({
            month,
            count: eventCount,
            revenue: eventRevenue
          });
          /* istanbul ignore next */
          cov_qq0cfhyj2().s[192]++;
          trends.requestTrends.push({
            month,
            count: requestCount,
            acceptanceRate
          });
          /* istanbul ignore next */
          cov_qq0cfhyj2().s[193]++;
          trends.userTrends.push({
            month,
            newUsers,
            activeUsers
          });
        }
        /* istanbul ignore next */
        cov_qq0cfhyj2().s[194]++;
        return trends;
      } catch (error) {
        /* istanbul ignore next */
        cov_qq0cfhyj2().s[195]++;
        console.info('./src/services/analyticsService.ts line 459');
        /* istanbul ignore next */
        cov_qq0cfhyj2().s[196]++;
        loggerService_1.logger.error('Error al obtener reporte de tendencias:', error);
        /* istanbul ignore next */
        cov_qq0cfhyj2().s[197]++;
        throw new Error('Error al obtener reporte de tendencias');
      }
    });
  }
  /**
   * Reporte de rendimiento por ubicación
   */
  getLocationPerformanceReport() {
    /* istanbul ignore next */
    cov_qq0cfhyj2().f[25]++;
    cov_qq0cfhyj2().s[198]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_qq0cfhyj2().f[26]++;
      cov_qq0cfhyj2().s[199]++;
      try {
        // Simular datos de rendimiento por ubicación
        const locations =
        /* istanbul ignore next */
        (cov_qq0cfhyj2().s[200]++, ['Santo Domingo', 'Santiago', 'La Romana', 'Puerto Plata', 'San Pedro de Macorís', 'Higüey', 'San Francisco de Macorís', 'La Vega', 'Moca', 'Bonao']);
        /* istanbul ignore next */
        cov_qq0cfhyj2().s[201]++;
        return locations.map(location => {
          /* istanbul ignore next */
          cov_qq0cfhyj2().f[27]++;
          cov_qq0cfhyj2().s[202]++;
          return {
            location,
            totalEvents: Math.floor(Math.random() * 100) + 20,
            totalRequests: Math.floor(Math.random() * 60) + 10,
            totalRevenue: Math.floor(Math.random() * 20000) + 5000,
            averageEventValue: Math.floor(Math.random() * 500) + 200,
            completionRate: Math.random() * 30 + 70,
            acceptanceRate: Math.random() * 40 + 50
          };
        });
      } catch (error) {
        /* istanbul ignore next */
        cov_qq0cfhyj2().s[203]++;
        console.info('./src/services/analyticsService.ts line 502');
        /* istanbul ignore next */
        cov_qq0cfhyj2().s[204]++;
        loggerService_1.logger.error('Error al obtener reporte de rendimiento por ubicación:', error);
        /* istanbul ignore next */
        cov_qq0cfhyj2().s[205]++;
        throw new Error('Error al obtener reporte de rendimiento por ubicación');
      }
    });
  }
  /**
   * Reporte de usuarios más activos
   */
  getTopActiveUsersReport() {
    /* istanbul ignore next */
    cov_qq0cfhyj2().f[28]++;
    cov_qq0cfhyj2().s[206]++;
    return __awaiter(this, arguments, void 0, function* (limit =
    /* istanbul ignore next */
    (cov_qq0cfhyj2().b[62][0]++, 10)) {
      /* istanbul ignore next */
      cov_qq0cfhyj2().f[29]++;
      cov_qq0cfhyj2().s[207]++;
      try {
        // Obtener usuarios
        const usersSnapshot =
        /* istanbul ignore next */
        (cov_qq0cfhyj2().s[208]++, yield firebase_1.db.collection('users').limit(limit).get());
        const users =
        /* istanbul ignore next */
        (cov_qq0cfhyj2().s[209]++, usersSnapshot.docs.map(doc => {
          /* istanbul ignore next */
          cov_qq0cfhyj2().f[30]++;
          cov_qq0cfhyj2().s[210]++;
          return doc.data();
        }));
        // Simular datos de actividad
        /* istanbul ignore next */
        cov_qq0cfhyj2().s[211]++;
        return users.map(user => {
          /* istanbul ignore next */
          cov_qq0cfhyj2().f[31]++;
          cov_qq0cfhyj2().s[212]++;
          return {
            user,
            eventsCreated: Math.floor(Math.random() * 20) + 1,
            requestsCreated: Math.floor(Math.random() * 15) + 1,
            eventsCompleted: Math.floor(Math.random() * 15) + 1,
            requestsAccepted: Math.floor(Math.random() * 10) + 1,
            totalRevenue: Math.floor(Math.random() * 5000) + 500
          };
        }).sort((a, b) => {
          /* istanbul ignore next */
          cov_qq0cfhyj2().f[32]++;
          cov_qq0cfhyj2().s[213]++;
          return b.totalRevenue - a.totalRevenue;
        });
      } catch (error) {
        /* istanbul ignore next */
        cov_qq0cfhyj2().s[214]++;
        console.info('./src/services/analyticsService.ts line 534');
        /* istanbul ignore next */
        cov_qq0cfhyj2().s[215]++;
        loggerService_1.logger.error('Error al obtener reporte de usuarios más activos:', error);
        /* istanbul ignore next */
        cov_qq0cfhyj2().s[216]++;
        throw new Error('Error al obtener reporte de usuarios más activos');
      }
    });
  }
}
/* istanbul ignore next */
cov_qq0cfhyj2().s[217]++;
exports.AnalyticsService = AnalyticsService;
/* istanbul ignore next */
cov_qq0cfhyj2().s[218]++;
exports.analyticsService = new AnalyticsService();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,