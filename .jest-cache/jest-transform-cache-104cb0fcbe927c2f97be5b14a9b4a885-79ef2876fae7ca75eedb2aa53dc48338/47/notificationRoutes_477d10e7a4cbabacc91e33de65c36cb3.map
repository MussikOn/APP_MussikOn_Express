{"version":3,"names":["express_1","cov_1jvncc5gtx","s","require","authMiddleware_1","requireRole_1","notificationController_1","notificationRoutes","Router","get","authMiddleware","getNotifications","put","markNotificationAsRead","markAllNotificationsAsRead","delete","deleteNotification","getUnreadCount","post","createNotification","requireRole","sendBulkNotification","getNotificationStats","exports","default"],"sources":["C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\routes\\notificationRoutes.ts"],"sourcesContent":["import { Router } from 'express';\r\nimport { authMiddleware } from '../middleware/authMiddleware';\r\nimport { requireRole } from '../middleware/requireRole';\r\nimport {\r\n  getNotifications,\r\n  markNotificationAsRead,\r\n  markAllNotificationsAsRead,\r\n  deleteNotification,\r\n  getUnreadCount,\r\n  createNotification,\r\n  sendBulkNotification,\r\n  getNotificationStats,\r\n} from '../controllers/notificationController';\r\n\r\nconst notificationRoutes = Router();\r\n\r\n/**\r\n * @swagger\r\n * tags:\r\n *   - name: Notifications\r\n *     description: Sistema de notificaciones en tiempo real\r\n */\r\n\r\n/**\r\n * @swagger\r\n * components:\r\n *   schemas:\r\n *     Notification:\r\n *       type: object\r\n *       properties:\r\n *         id:\r\n *           type: string\r\n *           description: ID único de la notificación\r\n *         userId:\r\n *           type: string\r\n *           description: ID del usuario destinatario\r\n *         title:\r\n *           type: string\r\n *           description: Título de la notificación\r\n *         message:\r\n *           type: string\r\n *           description: Mensaje de la notificación\r\n *         type:\r\n *           type: string\r\n *           enum: [info, success, warning, error]\r\n *           description: Tipo de notificación\r\n *         category:\r\n *           type: string\r\n *           enum: [system, user, event, request, payment]\r\n *           description: Categoría de la notificación\r\n *         isRead:\r\n *           type: boolean\r\n *           description: Estado de lectura\r\n *         createdAt:\r\n *           type: string\r\n *           format: date-time\r\n *           description: Fecha de creación\r\n *         updatedAt:\r\n *           type: string\r\n *           format: date-time\r\n *           description: Fecha de última actualización\r\n *         metadata:\r\n *           type: object\r\n *           description: Metadatos adicionales\r\n *       required:\r\n *         - userId\r\n *         - title\r\n *         - message\r\n *         - type\r\n *         - category\r\n *         - isRead\r\n *         - createdAt\r\n *         - updatedAt\r\n *\r\n *     CreateNotificationDTO:\r\n *       type: object\r\n *       properties:\r\n *         userId:\r\n *           type: string\r\n *           description: ID del usuario destinatario\r\n *         title:\r\n *           type: string\r\n *           description: Título de la notificación\r\n *         message:\r\n *           type: string\r\n *           description: Mensaje de la notificación\r\n *         type:\r\n *           type: string\r\n *           enum: [info, success, warning, error]\r\n *           description: Tipo de notificación\r\n *         category:\r\n *           type: string\r\n *           enum: [system, user, event, request, payment]\r\n *           description: Categoría de la notificación\r\n *         metadata:\r\n *           type: object\r\n *           description: Metadatos adicionales\r\n *       required:\r\n *         - userId\r\n *         - title\r\n *         - message\r\n *\r\n *     BulkNotificationDTO:\r\n *       type: object\r\n *       properties:\r\n *         title:\r\n *           type: string\r\n *           description: Título de la notificación\r\n *         message:\r\n *           type: string\r\n *           description: Mensaje de la notificación\r\n *         type:\r\n *           type: string\r\n *           enum: [info, success, warning, error]\r\n *           description: Tipo de notificación\r\n *         category:\r\n *           type: string\r\n *           enum: [system, user, event, request, payment]\r\n *           description: Categoría de la notificación\r\n *         targetUsers:\r\n *           type: array\r\n *           items:\r\n *             type: string\r\n *           description: Array de IDs de usuarios destinatarios\r\n *         metadata:\r\n *           type: object\r\n *           description: Metadatos adicionales\r\n *       required:\r\n *         - title\r\n *         - message\r\n *         - targetUsers\r\n */\r\n\r\n/**\r\n * @swagger\r\n * /notifications:\r\n *   get:\r\n *     summary: Obtener notificaciones del usuario\r\n *     tags: [Notifications]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     parameters:\r\n *       - in: query\r\n *         name: page\r\n *         schema:\r\n *           type: integer\r\n *           default: 1\r\n *         description: Número de página\r\n *       - in: query\r\n *         name: limit\r\n *         schema:\r\n *           type: integer\r\n *           default: 20\r\n *         description: Límite de notificaciones por página\r\n *       - in: query\r\n *         name: unreadOnly\r\n *         schema:\r\n *           type: boolean\r\n *           default: false\r\n *         description: Solo notificaciones no leídas\r\n *     responses:\r\n *       200:\r\n *         description: Notificaciones obtenidas exitosamente\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 data:\r\n *                   type: object\r\n *                   properties:\r\n *                     notifications:\r\n *                       type: array\r\n *                       items:\r\n *                         $ref: '#/components/schemas/Notification'\r\n *                     pagination:\r\n *                       type: object\r\n *                       properties:\r\n *                         page:\r\n *                           type: integer\r\n *                         limit:\r\n *                           type: integer\r\n *                         total:\r\n *                           type: integer\r\n *                         totalPages:\r\n *                           type: integer\r\n *                 message:\r\n *                   type: string\r\n *       401:\r\n *         description: No autorizado\r\n *       500:\r\n *         description: Error interno del servidor\r\n */\r\nnotificationRoutes.get('/', authMiddleware, getNotifications);\r\n\r\n/**\r\n * @swagger\r\n * /notifications/{notificationId}/read:\r\n *   put:\r\n *     summary: Marcar notificación como leída\r\n *     tags: [Notifications]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     parameters:\r\n *       - in: path\r\n *         name: notificationId\r\n *         schema:\r\n *           type: string\r\n *         required: true\r\n *         description: ID de la notificación\r\n *     responses:\r\n *       200:\r\n *         description: Notificación marcada como leída\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 message:\r\n *                   type: string\r\n *       401:\r\n *         description: No autorizado\r\n *       403:\r\n *         description: No autorizado para acceder a esta notificación\r\n *       404:\r\n *         description: Notificación no encontrada\r\n *       500:\r\n *         description: Error interno del servidor\r\n */\r\nnotificationRoutes.put(\r\n  '/:notificationId/read',\r\n  authMiddleware,\r\n  markNotificationAsRead\r\n);\r\n\r\n/**\r\n * @swagger\r\n * /notifications/read-all:\r\n *   put:\r\n *     summary: Marcar todas las notificaciones como leídas\r\n *     tags: [Notifications]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     responses:\r\n *       200:\r\n *         description: Todas las notificaciones marcadas como leídas\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 message:\r\n *                   type: string\r\n *       401:\r\n *         description: No autorizado\r\n *       500:\r\n *         description: Error interno del servidor\r\n */\r\nnotificationRoutes.put('/read-all', authMiddleware, markAllNotificationsAsRead);\r\n\r\n/**\r\n * @swagger\r\n * /notifications/{notificationId}:\r\n *   delete:\r\n *     summary: Eliminar notificación\r\n *     tags: [Notifications]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     parameters:\r\n *       - in: path\r\n *         name: notificationId\r\n *         schema:\r\n *           type: string\r\n *         required: true\r\n *         description: ID de la notificación\r\n *     responses:\r\n *       200:\r\n *         description: Notificación eliminada exitosamente\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 message:\r\n *                   type: string\r\n *       401:\r\n *         description: No autorizado\r\n *       403:\r\n *         description: No autorizado para eliminar esta notificación\r\n *       404:\r\n *         description: Notificación no encontrada\r\n *       500:\r\n *         description: Error interno del servidor\r\n */\r\nnotificationRoutes.delete(\r\n  '/:notificationId',\r\n  authMiddleware,\r\n  deleteNotification\r\n);\r\n\r\n/**\r\n * @swagger\r\n * /notifications/unread-count:\r\n *   get:\r\n *     summary: Obtener contador de notificaciones no leídas\r\n *     tags: [Notifications]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     responses:\r\n *       200:\r\n *         description: Contador de notificaciones no leídas\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 data:\r\n *                   type: object\r\n *                   properties:\r\n *                     count:\r\n *                       type: integer\r\n *                 message:\r\n *                   type: string\r\n *       401:\r\n *         description: No autorizado\r\n *       500:\r\n *         description: Error interno del servidor\r\n */\r\nnotificationRoutes.get('/unread-count', authMiddleware, getUnreadCount);\r\n\r\n/**\r\n * @swagger\r\n * /notifications:\r\n *   post:\r\n *     summary: Crear notificación (uso interno)\r\n *     tags: [Notifications]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             $ref: '#/components/schemas/CreateNotificationDTO'\r\n *     responses:\r\n *       201:\r\n *         description: Notificación creada exitosamente\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 data:\r\n *                   $ref: '#/components/schemas/Notification'\r\n *                 message:\r\n *                   type: string\r\n *       400:\r\n *         description: Datos de notificación incompletos\r\n *       401:\r\n *         description: No autorizado\r\n *       500:\r\n *         description: Error interno del servidor\r\n */\r\nnotificationRoutes.post('/', authMiddleware, createNotification);\r\n\r\n/**\r\n * @swagger\r\n * /notifications/bulk:\r\n *   post:\r\n *     summary: Enviar notificación masiva (solo superadmin)\r\n *     tags: [Notifications]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             $ref: '#/components/schemas/BulkNotificationDTO'\r\n *     responses:\r\n *       201:\r\n *         description: Notificación masiva enviada exitosamente\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 data:\r\n *                   type: object\r\n *                   properties:\r\n *                     notifications:\r\n *                       type: array\r\n *                       items:\r\n *                         $ref: '#/components/schemas/Notification'\r\n *                 message:\r\n *                   type: string\r\n *       400:\r\n *         description: Datos de notificación masiva incompletos\r\n *       401:\r\n *         description: No autorizado\r\n *       403:\r\n *         description: Acceso solo para superadmin\r\n *       500:\r\n *         description: Error interno del servidor\r\n */\r\nnotificationRoutes.post(\r\n  '/bulk',\r\n  authMiddleware,\r\n  requireRole(['super_admin']),\r\n  sendBulkNotification\r\n);\r\n\r\n/**\r\n * @swagger\r\n * /notifications/stats:\r\n *   get:\r\n *     summary: Obtener estadísticas de notificaciones\r\n *     tags: [Notifications]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     parameters:\r\n *       - in: query\r\n *         name: period\r\n *         schema:\r\n *           type: string\r\n *           enum: [day, week, month]\r\n *           default: week\r\n *         description: Período de análisis\r\n *     responses:\r\n *       200:\r\n *         description: Estadísticas de notificaciones\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 data:\r\n *                   type: object\r\n *                   properties:\r\n *                     total:\r\n *                       type: integer\r\n *                     unread:\r\n *                       type: integer\r\n *                     read:\r\n *                       type: integer\r\n *                     byType:\r\n *                       type: object\r\n *                       properties:\r\n *                         info:\r\n *                           type: integer\r\n *                         success:\r\n *                           type: integer\r\n *                         warning:\r\n *                           type: integer\r\n *                         error:\r\n *                           type: integer\r\n *                     byCategory:\r\n *                       type: object\r\n *                       properties:\r\n *                         system:\r\n *                           type: integer\r\n *                         user:\r\n *                           type: integer\r\n *                         event:\r\n *                           type: integer\r\n *                         request:\r\n *                           type: integer\r\n *                         payment:\r\n *                           type: integer\r\n *                     period:\r\n *                       type: string\r\n *                 message:\r\n *                   type: string\r\n *       401:\r\n *         description: No autorizado\r\n *       500:\r\n *         description: Error interno del servidor\r\n */\r\nnotificationRoutes.get('/stats', authMiddleware, getNotificationStats);\r\n\r\nexport default notificationRoutes;\r\n"],"mappings":"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","ignoreList":[]}