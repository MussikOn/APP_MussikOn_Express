db498c5f43c49abbbabb544bd4d1a8b4
"use strict";

/* istanbul ignore next */
function cov_1yjng99b0p() {
  var path = "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\routes\\paymentSystemRoutes.ts";
  var hash = "7bc0932c35f328207e062127c8a6017cbfabad3a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\routes\\paymentSystemRoutes.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 12,
          column: 3
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "2": {
        start: {
          line: 3,
          column: 26
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "3": {
        start: {
          line: 4,
          column: 15
        },
        end: {
          line: 4,
          column: 52
        }
      },
      "4": {
        start: {
          line: 5,
          column: 4
        },
        end: {
          line: 7,
          column: 5
        }
      },
      "5": {
        start: {
          line: 6,
          column: 6
        },
        end: {
          line: 6,
          column: 68
        }
      },
      "6": {
        start: {
          line: 6,
          column: 51
        },
        end: {
          line: 6,
          column: 63
        }
      },
      "7": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 39
        }
      },
      "8": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "9": {
        start: {
          line: 10,
          column: 26
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "10": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 17
        }
      },
      "11": {
        start: {
          line: 13,
          column: 25
        },
        end: {
          line: 17,
          column: 2
        }
      },
      "12": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 72
        }
      },
      "13": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 21
        }
      },
      "14": {
        start: {
          line: 18,
          column: 19
        },
        end: {
          line: 34,
          column: 4
        }
      },
      "15": {
        start: {
          line: 19,
          column: 18
        },
        end: {
          line: 26,
          column: 5
        }
      },
      "16": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 24,
          column: 10
        }
      },
      "17": {
        start: {
          line: 21,
          column: 21
        },
        end: {
          line: 21,
          column: 23
        }
      },
      "18": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "19": {
        start: {
          line: 22,
          column: 29
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "20": {
        start: {
          line: 22,
          column: 77
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "21": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 22
        }
      },
      "22": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 26
        }
      },
      "23": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 33,
          column: 6
        }
      },
      "24": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "25": {
        start: {
          line: 28,
          column: 35
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "26": {
        start: {
          line: 29,
          column: 21
        },
        end: {
          line: 29,
          column: 23
        }
      },
      "27": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "28": {
        start: {
          line: 30,
          column: 25
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "29": {
        start: {
          line: 30,
          column: 38
        },
        end: {
          line: 30,
          column: 50
        }
      },
      "30": {
        start: {
          line: 30,
          column: 56
        },
        end: {
          line: 30,
          column: 57
        }
      },
      "31": {
        start: {
          line: 30,
          column: 78
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "32": {
        start: {
          line: 30,
          column: 102
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "33": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 40
        }
      },
      "34": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 22
        }
      },
      "35": {
        start: {
          line: 35,
          column: 16
        },
        end: {
          line: 43,
          column: 1
        }
      },
      "36": {
        start: {
          line: 36,
          column: 28
        },
        end: {
          line: 36,
          column: 110
        }
      },
      "37": {
        start: {
          line: 36,
          column: 91
        },
        end: {
          line: 36,
          column: 106
        }
      },
      "38": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 42,
          column: 7
        }
      },
      "39": {
        start: {
          line: 38,
          column: 36
        },
        end: {
          line: 38,
          column: 97
        }
      },
      "40": {
        start: {
          line: 38,
          column: 42
        },
        end: {
          line: 38,
          column: 70
        }
      },
      "41": {
        start: {
          line: 38,
          column: 85
        },
        end: {
          line: 38,
          column: 95
        }
      },
      "42": {
        start: {
          line: 39,
          column: 35
        },
        end: {
          line: 39,
          column: 100
        }
      },
      "43": {
        start: {
          line: 39,
          column: 41
        },
        end: {
          line: 39,
          column: 73
        }
      },
      "44": {
        start: {
          line: 39,
          column: 88
        },
        end: {
          line: 39,
          column: 98
        }
      },
      "45": {
        start: {
          line: 40,
          column: 32
        },
        end: {
          line: 40,
          column: 116
        }
      },
      "46": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 78
        }
      },
      "47": {
        start: {
          line: 44,
          column: 0
        },
        end: {
          line: 44,
          column: 62
        }
      },
      "48": {
        start: {
          line: 45,
          column: 18
        },
        end: {
          line: 45,
          column: 36
        }
      },
      "49": {
        start: {
          line: 46,
          column: 34
        },
        end: {
          line: 46,
          column: 83
        }
      },
      "50": {
        start: {
          line: 47,
          column: 25
        },
        end: {
          line: 47,
          column: 64
        }
      },
      "51": {
        start: {
          line: 48,
          column: 22
        },
        end: {
          line: 48,
          column: 58
        }
      },
      "52": {
        start: {
          line: 49,
          column: 27
        },
        end: {
          line: 49,
          column: 68
        }
      },
      "53": {
        start: {
          line: 50,
          column: 24
        },
        end: {
          line: 50,
          column: 60
        }
      },
      "54": {
        start: {
          line: 51,
          column: 15
        },
        end: {
          line: 51,
          column: 38
        }
      },
      "55": {
        start: {
          line: 52,
          column: 32
        },
        end: {
          line: 52,
          column: 87
        }
      },
      "56": {
        start: {
          line: 227,
          column: 0
        },
        end: {
          line: 229,
          column: 4
        }
      },
      "57": {
        start: {
          line: 227,
          column: 73
        },
        end: {
          line: 229,
          column: 2
        }
      },
      "58": {
        start: {
          line: 228,
          column: 4
        },
        end: {
          line: 228,
          column: 59
        }
      },
      "59": {
        start: {
          line: 282,
          column: 0
        },
        end: {
          line: 284,
          column: 4
        }
      },
      "60": {
        start: {
          line: 282,
          column: 86
        },
        end: {
          line: 284,
          column: 2
        }
      },
      "61": {
        start: {
          line: 283,
          column: 4
        },
        end: {
          line: 283,
          column: 64
        }
      },
      "62": {
        start: {
          line: 314,
          column: 0
        },
        end: {
          line: 316,
          column: 4
        }
      },
      "63": {
        start: {
          line: 314,
          column: 88
        },
        end: {
          line: 316,
          column: 2
        }
      },
      "64": {
        start: {
          line: 315,
          column: 4
        },
        end: {
          line: 315,
          column: 64
        }
      },
      "65": {
        start: {
          line: 363,
          column: 0
        },
        end: {
          line: 365,
          column: 4
        }
      },
      "66": {
        start: {
          line: 363,
          column: 120
        },
        end: {
          line: 365,
          column: 2
        }
      },
      "67": {
        start: {
          line: 364,
          column: 4
        },
        end: {
          line: 364,
          column: 65
        }
      },
      "68": {
        start: {
          line: 395,
          column: 0
        },
        end: {
          line: 397,
          column: 4
        }
      },
      "69": {
        start: {
          line: 395,
          column: 74
        },
        end: {
          line: 397,
          column: 2
        }
      },
      "70": {
        start: {
          line: 396,
          column: 4
        },
        end: {
          line: 396,
          column: 60
        }
      },
      "71": {
        start: {
          line: 442,
          column: 0
        },
        end: {
          line: 444,
          column: 4
        }
      },
      "72": {
        start: {
          line: 442,
          column: 92
        },
        end: {
          line: 444,
          column: 2
        }
      },
      "73": {
        start: {
          line: 443,
          column: 4
        },
        end: {
          line: 443,
          column: 64
        }
      },
      "74": {
        start: {
          line: 474,
          column: 0
        },
        end: {
          line: 476,
          column: 4
        }
      },
      "75": {
        start: {
          line: 474,
          column: 81
        },
        end: {
          line: 476,
          column: 2
        }
      },
      "76": {
        start: {
          line: 475,
          column: 4
        },
        end: {
          line: 475,
          column: 64
        }
      },
      "77": {
        start: {
          line: 522,
          column: 0
        },
        end: {
          line: 524,
          column: 4
        }
      },
      "78": {
        start: {
          line: 522,
          column: 91
        },
        end: {
          line: 524,
          column: 2
        }
      },
      "79": {
        start: {
          line: 523,
          column: 4
        },
        end: {
          line: 523,
          column: 62
        }
      },
      "80": {
        start: {
          line: 555,
          column: 0
        },
        end: {
          line: 557,
          column: 4
        }
      },
      "81": {
        start: {
          line: 555,
          column: 189
        },
        end: {
          line: 557,
          column: 2
        }
      },
      "82": {
        start: {
          line: 556,
          column: 4
        },
        end: {
          line: 556,
          column: 63
        }
      },
      "83": {
        start: {
          line: 595,
          column: 0
        },
        end: {
          line: 597,
          column: 4
        }
      },
      "84": {
        start: {
          line: 595,
          column: 198
        },
        end: {
          line: 597,
          column: 2
        }
      },
      "85": {
        start: {
          line: 596,
          column: 4
        },
        end: {
          line: 596,
          column: 58
        }
      },
      "86": {
        start: {
          line: 627,
          column: 0
        },
        end: {
          line: 629,
          column: 4
        }
      },
      "87": {
        start: {
          line: 627,
          column: 192
        },
        end: {
          line: 629,
          column: 2
        }
      },
      "88": {
        start: {
          line: 628,
          column: 4
        },
        end: {
          line: 628,
          column: 66
        }
      },
      "89": {
        start: {
          line: 667,
          column: 0
        },
        end: {
          line: 669,
          column: 4
        }
      },
      "90": {
        start: {
          line: 667,
          column: 205
        },
        end: {
          line: 669,
          column: 2
        }
      },
      "91": {
        start: {
          line: 668,
          column: 4
        },
        end: {
          line: 668,
          column: 62
        }
      },
      "92": {
        start: {
          line: 723,
          column: 0
        },
        end: {
          line: 725,
          column: 4
        }
      },
      "93": {
        start: {
          line: 723,
          column: 183
        },
        end: {
          line: 725,
          column: 2
        }
      },
      "94": {
        start: {
          line: 724,
          column: 4
        },
        end: {
          line: 724,
          column: 65
        }
      },
      "95": {
        start: {
          line: 755,
          column: 0
        },
        end: {
          line: 772,
          column: 4
        }
      },
      "96": {
        start: {
          line: 755,
          column: 188
        },
        end: {
          line: 772,
          column: 2
        }
      },
      "97": {
        start: {
          line: 756,
          column: 4
        },
        end: {
          line: 771,
          column: 5
        }
      },
      "98": {
        start: {
          line: 757,
          column: 42
        },
        end: {
          line: 757,
          column: 128
        }
      },
      "99": {
        start: {
          line: 757,
          column: 77
        },
        end: {
          line: 757,
          column: 127
        }
      },
      "100": {
        start: {
          line: 758,
          column: 28
        },
        end: {
          line: 758,
          column: 74
        }
      },
      "101": {
        start: {
          line: 759,
          column: 8
        },
        end: {
          line: 763,
          column: 11
        }
      },
      "102": {
        start: {
          line: 766,
          column: 8
        },
        end: {
          line: 766,
          column: 83
        }
      },
      "103": {
        start: {
          line: 767,
          column: 8
        },
        end: {
          line: 770,
          column: 11
        }
      },
      "104": {
        start: {
          line: 773,
          column: 0
        },
        end: {
          line: 773,
          column: 25
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 2,
            column: 75
          }
        },
        loc: {
          start: {
            line: 2,
            column: 96
          },
          end: {
            line: 9,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 6,
            column: 38
          },
          end: {
            line: 6,
            column: 39
          }
        },
        loc: {
          start: {
            line: 6,
            column: 49
          },
          end: {
            line: 6,
            column: 65
          }
        },
        line: 6
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 9,
            column: 7
          }
        },
        loc: {
          start: {
            line: 9,
            column: 28
          },
          end: {
            line: 12,
            column: 1
          }
        },
        line: 9
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 13,
            column: 81
          }
        },
        loc: {
          start: {
            line: 13,
            column: 95
          },
          end: {
            line: 15,
            column: 1
          }
        },
        line: 13
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 15,
            column: 6
          }
        },
        loc: {
          start: {
            line: 15,
            column: 20
          },
          end: {
            line: 17,
            column: 1
          }
        },
        line: 15
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 18,
            column: 51
          },
          end: {
            line: 18,
            column: 52
          }
        },
        loc: {
          start: {
            line: 18,
            column: 63
          },
          end: {
            line: 34,
            column: 1
          }
        },
        line: 18
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 19,
            column: 18
          },
          end: {
            line: 19,
            column: 19
          }
        },
        loc: {
          start: {
            line: 19,
            column: 30
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 19
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 20,
            column: 49
          }
        },
        loc: {
          start: {
            line: 20,
            column: 61
          },
          end: {
            line: 24,
            column: 9
          }
        },
        line: 20
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 27,
            column: 11
          },
          end: {
            line: 27,
            column: 12
          }
        },
        loc: {
          start: {
            line: 27,
            column: 26
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 27
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 35,
            column: 44
          },
          end: {
            line: 35,
            column: 45
          }
        },
        loc: {
          start: {
            line: 35,
            column: 89
          },
          end: {
            line: 43,
            column: 1
          }
        },
        line: 35
      },
      "10": {
        name: "adopt",
        decl: {
          start: {
            line: 36,
            column: 13
          },
          end: {
            line: 36,
            column: 18
          }
        },
        loc: {
          start: {
            line: 36,
            column: 26
          },
          end: {
            line: 36,
            column: 112
          }
        },
        line: 36
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 36,
            column: 70
          },
          end: {
            line: 36,
            column: 71
          }
        },
        loc: {
          start: {
            line: 36,
            column: 89
          },
          end: {
            line: 36,
            column: 108
          }
        },
        line: 36
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 37,
            column: 36
          },
          end: {
            line: 37,
            column: 37
          }
        },
        loc: {
          start: {
            line: 37,
            column: 63
          },
          end: {
            line: 42,
            column: 5
          }
        },
        line: 37
      },
      "13": {
        name: "fulfilled",
        decl: {
          start: {
            line: 38,
            column: 17
          },
          end: {
            line: 38,
            column: 26
          }
        },
        loc: {
          start: {
            line: 38,
            column: 34
          },
          end: {
            line: 38,
            column: 99
          }
        },
        line: 38
      },
      "14": {
        name: "rejected",
        decl: {
          start: {
            line: 39,
            column: 17
          },
          end: {
            line: 39,
            column: 25
          }
        },
        loc: {
          start: {
            line: 39,
            column: 33
          },
          end: {
            line: 39,
            column: 102
          }
        },
        line: 39
      },
      "15": {
        name: "step",
        decl: {
          start: {
            line: 40,
            column: 17
          },
          end: {
            line: 40,
            column: 21
          }
        },
        loc: {
          start: {
            line: 40,
            column: 30
          },
          end: {
            line: 40,
            column: 118
          }
        },
        line: 40
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 227,
            column: 59
          },
          end: {
            line: 227,
            column: 60
          }
        },
        loc: {
          start: {
            line: 227,
            column: 73
          },
          end: {
            line: 229,
            column: 2
          }
        },
        line: 227
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 227,
            column: 107
          },
          end: {
            line: 227,
            column: 108
          }
        },
        loc: {
          start: {
            line: 227,
            column: 120
          },
          end: {
            line: 229,
            column: 1
          }
        },
        line: 227
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 282,
            column: 72
          },
          end: {
            line: 282,
            column: 73
          }
        },
        loc: {
          start: {
            line: 282,
            column: 86
          },
          end: {
            line: 284,
            column: 2
          }
        },
        line: 282
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 282,
            column: 120
          },
          end: {
            line: 282,
            column: 121
          }
        },
        loc: {
          start: {
            line: 282,
            column: 133
          },
          end: {
            line: 284,
            column: 1
          }
        },
        line: 282
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 314,
            column: 74
          },
          end: {
            line: 314,
            column: 75
          }
        },
        loc: {
          start: {
            line: 314,
            column: 88
          },
          end: {
            line: 316,
            column: 2
          }
        },
        line: 314
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 314,
            column: 122
          },
          end: {
            line: 314,
            column: 123
          }
        },
        loc: {
          start: {
            line: 314,
            column: 135
          },
          end: {
            line: 316,
            column: 1
          }
        },
        line: 314
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 363,
            column: 106
          },
          end: {
            line: 363,
            column: 107
          }
        },
        loc: {
          start: {
            line: 363,
            column: 120
          },
          end: {
            line: 365,
            column: 2
          }
        },
        line: 363
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 363,
            column: 154
          },
          end: {
            line: 363,
            column: 155
          }
        },
        loc: {
          start: {
            line: 363,
            column: 167
          },
          end: {
            line: 365,
            column: 1
          }
        },
        line: 363
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 395,
            column: 60
          },
          end: {
            line: 395,
            column: 61
          }
        },
        loc: {
          start: {
            line: 395,
            column: 74
          },
          end: {
            line: 397,
            column: 2
          }
        },
        line: 395
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 395,
            column: 108
          },
          end: {
            line: 395,
            column: 109
          }
        },
        loc: {
          start: {
            line: 395,
            column: 121
          },
          end: {
            line: 397,
            column: 1
          }
        },
        line: 395
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 442,
            column: 78
          },
          end: {
            line: 442,
            column: 79
          }
        },
        loc: {
          start: {
            line: 442,
            column: 92
          },
          end: {
            line: 444,
            column: 2
          }
        },
        line: 442
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 442,
            column: 126
          },
          end: {
            line: 442,
            column: 127
          }
        },
        loc: {
          start: {
            line: 442,
            column: 139
          },
          end: {
            line: 444,
            column: 1
          }
        },
        line: 442
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 474,
            column: 67
          },
          end: {
            line: 474,
            column: 68
          }
        },
        loc: {
          start: {
            line: 474,
            column: 81
          },
          end: {
            line: 476,
            column: 2
          }
        },
        line: 474
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 474,
            column: 115
          },
          end: {
            line: 474,
            column: 116
          }
        },
        loc: {
          start: {
            line: 474,
            column: 128
          },
          end: {
            line: 476,
            column: 1
          }
        },
        line: 474
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 522,
            column: 77
          },
          end: {
            line: 522,
            column: 78
          }
        },
        loc: {
          start: {
            line: 522,
            column: 91
          },
          end: {
            line: 524,
            column: 2
          }
        },
        line: 522
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 522,
            column: 125
          },
          end: {
            line: 522,
            column: 126
          }
        },
        loc: {
          start: {
            line: 522,
            column: 138
          },
          end: {
            line: 524,
            column: 1
          }
        },
        line: 522
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 555,
            column: 175
          },
          end: {
            line: 555,
            column: 176
          }
        },
        loc: {
          start: {
            line: 555,
            column: 189
          },
          end: {
            line: 557,
            column: 2
          }
        },
        line: 555
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 555,
            column: 223
          },
          end: {
            line: 555,
            column: 224
          }
        },
        loc: {
          start: {
            line: 555,
            column: 236
          },
          end: {
            line: 557,
            column: 1
          }
        },
        line: 555
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 595,
            column: 184
          },
          end: {
            line: 595,
            column: 185
          }
        },
        loc: {
          start: {
            line: 595,
            column: 198
          },
          end: {
            line: 597,
            column: 2
          }
        },
        line: 595
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 595,
            column: 232
          },
          end: {
            line: 595,
            column: 233
          }
        },
        loc: {
          start: {
            line: 595,
            column: 245
          },
          end: {
            line: 597,
            column: 1
          }
        },
        line: 595
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 627,
            column: 178
          },
          end: {
            line: 627,
            column: 179
          }
        },
        loc: {
          start: {
            line: 627,
            column: 192
          },
          end: {
            line: 629,
            column: 2
          }
        },
        line: 627
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 627,
            column: 226
          },
          end: {
            line: 627,
            column: 227
          }
        },
        loc: {
          start: {
            line: 627,
            column: 239
          },
          end: {
            line: 629,
            column: 1
          }
        },
        line: 627
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 667,
            column: 191
          },
          end: {
            line: 667,
            column: 192
          }
        },
        loc: {
          start: {
            line: 667,
            column: 205
          },
          end: {
            line: 669,
            column: 2
          }
        },
        line: 667
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 667,
            column: 239
          },
          end: {
            line: 667,
            column: 240
          }
        },
        loc: {
          start: {
            line: 667,
            column: 252
          },
          end: {
            line: 669,
            column: 1
          }
        },
        line: 667
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 723,
            column: 169
          },
          end: {
            line: 723,
            column: 170
          }
        },
        loc: {
          start: {
            line: 723,
            column: 183
          },
          end: {
            line: 725,
            column: 2
          }
        },
        line: 723
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 723,
            column: 217
          },
          end: {
            line: 723,
            column: 218
          }
        },
        loc: {
          start: {
            line: 723,
            column: 230
          },
          end: {
            line: 725,
            column: 1
          }
        },
        line: 723
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 755,
            column: 174
          },
          end: {
            line: 755,
            column: 175
          }
        },
        loc: {
          start: {
            line: 755,
            column: 188
          },
          end: {
            line: 772,
            column: 2
          }
        },
        line: 755
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 755,
            column: 222
          },
          end: {
            line: 755,
            column: 223
          }
        },
        loc: {
          start: {
            line: 755,
            column: 235
          },
          end: {
            line: 772,
            column: 1
          }
        },
        line: 755
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 757,
            column: 71
          },
          end: {
            line: 757,
            column: 72
          }
        },
        loc: {
          start: {
            line: 757,
            column: 77
          },
          end: {
            line: 757,
            column: 127
          }
        },
        line: 757
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 12,
            column: 3
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 9,
            column: 1
          }
        }, {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 12,
            column: 1
          }
        }],
        line: 2
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "4": {
        loc: {
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 13
          }
        }, {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 47
          }
        }, {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 63
          }
        }, {
          start: {
            line: 5,
            column: 67
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 10
      },
      "8": {
        loc: {
          start: {
            line: 13,
            column: 25
          },
          end: {
            line: 17,
            column: 2
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 26
          },
          end: {
            line: 13,
            column: 30
          }
        }, {
          start: {
            line: 13,
            column: 34
          },
          end: {
            line: 13,
            column: 57
          }
        }, {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "9": {
        loc: {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 15,
            column: 1
          }
        }, {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "10": {
        loc: {
          start: {
            line: 18,
            column: 19
          },
          end: {
            line: 34,
            column: 4
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 20
          },
          end: {
            line: 18,
            column: 24
          }
        }, {
          start: {
            line: 18,
            column: 28
          },
          end: {
            line: 18,
            column: 45
          }
        }, {
          start: {
            line: 18,
            column: 50
          },
          end: {
            line: 34,
            column: 4
          }
        }],
        line: 18
      },
      "11": {
        loc: {
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 24,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 20,
            column: 44
          }
        }, {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 24,
            column: 9
          }
        }],
        line: 20
      },
      "12": {
        loc: {
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 95
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 95
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "13": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "14": {
        loc: {
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 15
          }
        }, {
          start: {
            line: 28,
            column: 19
          },
          end: {
            line: 28,
            column: 33
          }
        }],
        line: 28
      },
      "15": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "16": {
        loc: {
          start: {
            line: 30,
            column: 78
          },
          end: {
            line: 30,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 78
          },
          end: {
            line: 30,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "17": {
        loc: {
          start: {
            line: 35,
            column: 16
          },
          end: {
            line: 43,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 17
          },
          end: {
            line: 35,
            column: 21
          }
        }, {
          start: {
            line: 35,
            column: 25
          },
          end: {
            line: 35,
            column: 39
          }
        }, {
          start: {
            line: 35,
            column: 44
          },
          end: {
            line: 43,
            column: 1
          }
        }],
        line: 35
      },
      "18": {
        loc: {
          start: {
            line: 36,
            column: 35
          },
          end: {
            line: 36,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 36,
            column: 56
          },
          end: {
            line: 36,
            column: 61
          }
        }, {
          start: {
            line: 36,
            column: 64
          },
          end: {
            line: 36,
            column: 109
          }
        }],
        line: 36
      },
      "19": {
        loc: {
          start: {
            line: 37,
            column: 16
          },
          end: {
            line: 37,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 37,
            column: 16
          },
          end: {
            line: 37,
            column: 17
          }
        }, {
          start: {
            line: 37,
            column: 22
          },
          end: {
            line: 37,
            column: 33
          }
        }],
        line: 37
      },
      "20": {
        loc: {
          start: {
            line: 40,
            column: 32
          },
          end: {
            line: 40,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 40,
            column: 46
          },
          end: {
            line: 40,
            column: 67
          }
        }, {
          start: {
            line: 40,
            column: 70
          },
          end: {
            line: 40,
            column: 115
          }
        }],
        line: 40
      },
      "21": {
        loc: {
          start: {
            line: 41,
            column: 51
          },
          end: {
            line: 41,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 51
          },
          end: {
            line: 41,
            column: 61
          }
        }, {
          start: {
            line: 41,
            column: 65
          },
          end: {
            line: 41,
            column: 67
          }
        }],
        line: 41
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\routes\\paymentSystemRoutes.ts",
      mappings: ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,qCAAiC;AACjC,oFAAiF;AACjF,iEAA8D;AAC9D,2DAAwD;AACxD,qEAAwD;AACxD,6DAAmD;AAEnD,MAAM,MAAM,GAAG,IAAA,gBAAM,GAAE,CAAC;AACxB,MAAM,uBAAuB,GAAG,IAAI,iDAAuB,EAAE,CAAC;AAE9D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAiJG;AAEH,kCAAkC;AAElC;;;;;;;;;;;;;;;;;;;;;;;;;;GA0BG;AACH,MAAM,CAAC,GAAG,CAAC,aAAa,EAAE,+BAAc,EAAE,CAAO,GAAG,EAAE,GAAG,EAAE,EAAE;IAC3D,MAAM,uBAAuB,CAAC,cAAc,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AACzD,CAAC,CAAA,CAAC,CAAC;AAEH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAmDG;AACH,MAAM,CAAC,IAAI,CAAC,yBAAyB,EAAE,+BAAc,EAAE,CAAO,GAAG,EAAE,GAAG,EAAE,EAAE;IACxE,MAAM,uBAAuB,CAAC,mBAAmB,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC9D,CAAC,CAAA,CAAC,CAAC;AAEH;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA4BG;AACH,MAAM,CAAC,GAAG,CAAC,4BAA4B,EAAE,+BAAc,EAAE,CAAO,GAAG,EAAE,GAAG,EAAE,EAAE;IAC1E,MAAM,uBAAuB,CAAC,mBAAmB,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC9D,CAAC,CAAA,CAAC,CAAC;AAEH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA6CG;AACH,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,+BAAc,EAAE,yBAAM,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE,CAAO,GAAG,EAAE,GAAG,EAAE,EAAE;IACvF,MAAM,uBAAuB,CAAC,oBAAoB,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC/D,CAAC,CAAA,CAAC,CAAC;AAEH;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA4BG;AACH,MAAM,CAAC,GAAG,CAAC,cAAc,EAAE,+BAAc,EAAE,CAAO,GAAG,EAAE,GAAG,EAAE,EAAE;IAC5D,MAAM,uBAAuB,CAAC,eAAe,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC1D,CAAC,CAAA,CAAC,CAAC;AAEH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA2CG;AACH,MAAM,CAAC,IAAI,CAAC,+BAA+B,EAAE,+BAAc,EAAE,CAAO,GAAG,EAAE,GAAG,EAAE,EAAE;IAC9E,MAAM,uBAAuB,CAAC,mBAAmB,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC9D,CAAC,CAAA,CAAC,CAAC;AAEH;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA4BG;AACH,MAAM,CAAC,GAAG,CAAC,qBAAqB,EAAE,+BAAc,EAAE,CAAO,GAAG,EAAE,GAAG,EAAE,EAAE;IACnE,MAAM,uBAAuB,CAAC,mBAAmB,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC9D,CAAC,CAAA,CAAC,CAAC;AAEH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA4CG;AACH,MAAM,CAAC,IAAI,CAAC,8BAA8B,EAAE,+BAAc,EAAE,CAAO,GAAG,EAAE,GAAG,EAAE,EAAE;IAC7E,MAAM,uBAAuB,CAAC,iBAAiB,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC5D,CAAC,CAAA,CAAC,CAAC;AAEH,sCAAsC;AAEtC;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA4BG;AACH,MAAM,CAAC,GAAG,CAAC,kCAAkC,EAAE,+BAAc,EAAE,IAAA,yBAAW,EAAC,CAAC,aAAa,EAAE,eAAe,EAAE,aAAa,EAAE,YAAY,CAAC,CAAC,EAAE,CAAO,GAAG,EAAE,GAAG,EAAE,EAAE;IAC5J,MAAM,uBAAuB,CAAC,kBAAkB,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC7D,CAAC,CAAA,CAAC,CAAC;AAEH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAoCG;AACH,MAAM,CAAC,GAAG,CAAC,2CAA2C,EAAE,+BAAc,EAAE,IAAA,yBAAW,EAAC,CAAC,aAAa,EAAE,eAAe,EAAE,aAAa,EAAE,YAAY,CAAC,CAAC,EAAE,CAAO,GAAG,EAAE,GAAG,EAAE,EAAE;IACrK,MAAM,uBAAuB,CAAC,aAAa,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AACxD,CAAC,CAAA,CAAC,CAAC;AAEH;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA4BG;AACH,MAAM,CAAC,GAAG,CAAC,qCAAqC,EAAE,+BAAc,EAAE,IAAA,yBAAW,EAAC,CAAC,aAAa,EAAE,eAAe,EAAE,aAAa,EAAE,YAAY,CAAC,CAAC,EAAE,CAAO,GAAG,EAAE,GAAG,EAAE,EAAE;IAC/J,MAAM,uBAAuB,CAAC,qBAAqB,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAChE,CAAC,CAAA,CAAC,CAAC;AAEH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAoCG;AACH,MAAM,CAAC,GAAG,CAAC,kDAAkD,EAAE,+BAAc,EAAE,IAAA,yBAAW,EAAC,CAAC,aAAa,EAAE,eAAe,EAAE,aAAa,EAAE,YAAY,CAAC,CAAC,EAAE,CAAO,GAAG,EAAE,GAAG,EAAE,EAAE;IAC5K,MAAM,uBAAuB,CAAC,iBAAiB,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC5D,CAAC,CAAA,CAAC,CAAC;AAEH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAoDG;AACH,MAAM,CAAC,GAAG,CAAC,4BAA4B,EAAE,+BAAc,EAAE,IAAA,yBAAW,EAAC,CAAC,aAAa,EAAE,eAAe,EAAE,aAAa,EAAE,YAAY,CAAC,CAAC,EAAE,CAAO,GAAG,EAAE,GAAG,EAAE,EAAE;IACtJ,MAAM,uBAAuB,CAAC,oBAAoB,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC/D,CAAC,CAAA,CAAC,CAAC;AAEH;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA4BG;AACH,MAAM,CAAC,GAAG,CAAC,iCAAiC,EAAE,+BAAc,EAAE,IAAA,yBAAW,EAAC,CAAC,aAAa,EAAE,eAAe,EAAE,aAAa,EAAE,YAAY,CAAC,CAAC,EAAE,CAAO,GAAG,EAAE,GAAG,EAAE,EAAE;IAC3J,IAAI,CAAC;QACH,MAAM,EAAE,qBAAqB,EAAE,GAAG,wDAAa,2BAA2B,GAAC,CAAC;QAC5E,MAAM,WAAW,GAAG,MAAM,qBAAqB,CAAC,gBAAgB,EAAE,CAAC;QAEnE,GAAG,CAAC,IAAI,CAAC;YACP,OAAO,EAAE,IAAI;YACb,IAAI,EAAE,WAAW;YACjB,OAAO,EAAE,yCAAyC;SACnD,CAAC,CAAC;IACL,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,sBAAM,CAAC,KAAK,CAAC,qCAAqC,EAAE,KAAc,CAAC,CAAC;QACpE,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;YACnB,OAAO,EAAE,KAAK;YACd,KAAK,EAAE,qCAAqC;SAC7C,CAAC,CAAC;IACL,CAAC;AACH,CAAC,CAAA,CAAC,CAAC;AAEH,kBAAe,MAAM,CAAC",
      names: [],
      sources: ["C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\routes\\paymentSystemRoutes.ts"],
      sourcesContent: ["import { Router } from 'express';\nimport { PaymentSystemController } from '../controllers/paymentSystemController';\nimport { authMiddleware } from '../middleware/authMiddleware';\nimport { requireRole } from '../middleware/requireRole';\nimport { upload } from '../middleware/uploadMiddleware';\nimport { logger } from '../services/loggerService';\n\nconst router = Router();\nconst paymentSystemController = new PaymentSystemController();\n\n/**\n * @swagger\n * components:\n *   schemas:\n *     BankAccount:\n *       type: object\n *       properties:\n *         id:\n *           type: string\n *         userId:\n *           type: string\n *         accountHolder:\n *           type: string\n *         accountNumber:\n *           type: string\n *         bankName:\n *           type: string\n *         accountType:\n *           type: string\n *           enum: [savings, checking]\n *         routingNumber:\n *           type: string\n *         isVerified:\n *           type: boolean\n *         isDefault:\n *           type: boolean\n *         createdAt:\n *           type: string\n *         updatedAt:\n *           type: string\n *     \n *     UserBalance:\n *       type: object\n *       properties:\n *         userId:\n *           type: string\n *         userType:\n *           type: string\n *           enum: [musician, event_organizer]\n *         currentBalance:\n *           type: number\n *         currency:\n *           type: string\n *         totalDeposited:\n *           type: number\n *         totalWithdrawn:\n *           type: number\n *         totalEarned:\n *           type: number\n *         pendingEarnings:\n *           type: number\n *         lastTransactionAt:\n *           type: string\n *         updatedAt:\n *           type: string\n *     \n *     UserDeposit:\n *       type: object\n *       properties:\n *         id:\n *           type: string\n *         userId:\n *           type: string\n *         amount:\n *           type: number\n *         currency:\n *           type: string\n *         voucherFile:\n *           type: object\n *           properties:\n *             url:\n *               type: string\n *             filename:\n *               type: string\n *             uploadedAt:\n *               type: string\n *         status:\n *           type: string\n *           enum: [pending, verified, rejected]\n *         adminNotes:\n *           type: string\n *         verifiedBy:\n *           type: string\n *         verifiedAt:\n *           type: string\n *         createdAt:\n *           type: string\n *         updatedAt:\n *           type: string\n *     \n *     MusicianEarnings:\n *       type: object\n *       properties:\n *         id:\n *           type: string\n *         musicianId:\n *           type: string\n *         eventId:\n *           type: string\n *         eventPaymentId:\n *           type: string\n *         amount:\n *           type: number\n *         currency:\n *           type: string\n *         status:\n *           type: string\n *           enum: [pending, available, withdrawn]\n *         eventDate:\n *           type: string\n *         eventTitle:\n *           type: string\n *         organizerName:\n *           type: string\n *         createdAt:\n *           type: string\n *         updatedAt:\n *           type: string\n *     \n *     WithdrawalRequest:\n *       type: object\n *       properties:\n *         id:\n *           type: string\n *         musicianId:\n *           type: string\n *         bankAccountId:\n *           type: string\n *         amount:\n *           type: number\n *         currency:\n *           type: string\n *         status:\n *           type: string\n *           enum: [pending, processing, completed, rejected]\n *         adminNotes:\n *           type: string\n *         processedBy:\n *           type: string\n *         processedAt:\n *           type: string\n *         createdAt:\n *           type: string\n *         updatedAt:\n *           type: string\n */\n\n// ===== RUTAS PARA USUARIOS =====\n\n/**\n * @swagger\n * /payments/my-balance:\n *   get:\n *     summary: Obtener balance actual del usuario\n *     tags: [Sistema de Pagos]\n *     security:\n *       - bearerAuth: []\n *     responses:\n *       200:\n *         description: Balance obtenido exitosamente\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 success:\n *                   type: boolean\n *                 data:\n *                   $ref: '#/components/schemas/UserBalance'\n *                 message:\n *                   type: string\n *       401:\n *         description: Usuario no autenticado\n *       500:\n *         description: Error del servidor\n */\nrouter.get('/my-balance', authMiddleware, async (req, res) => {\n  await paymentSystemController.getUserBalance(req, res);\n});\n\n/**\n * @swagger\n * /bank-accounts/register:\n *   post:\n *     summary: Registrar cuenta bancaria\n *     tags: [Sistema de Pagos]\n *     security:\n *       - bearerAuth: []\n *     requestBody:\n *       required: true\n *       content:\n *         application/json:\n *           schema:\n *             type: object\n *             required:\n *               - accountHolder\n *               - accountNumber\n *               - bankName\n *               - accountType\n *             properties:\n *               accountHolder:\n *                 type: string\n *               accountNumber:\n *                 type: string\n *               bankName:\n *                 type: string\n *               accountType:\n *                 type: string\n *                 enum: [savings, checking]\n *               routingNumber:\n *                 type: string\n *     responses:\n *       201:\n *         description: Cuenta bancaria registrada exitosamente\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 success:\n *                   type: boolean\n *                 data:\n *                   $ref: '#/components/schemas/BankAccount'\n *                 message:\n *                   type: string\n *       400:\n *         description: Datos incompletos\n *       401:\n *         description: Usuario no autenticado\n *       500:\n *         description: Error del servidor\n */\nrouter.post('/bank-accounts/register', authMiddleware, async (req, res) => {\n  await paymentSystemController.registerBankAccount(req, res);\n});\n\n/**\n * @swagger\n * /bank-accounts/my-accounts:\n *   get:\n *     summary: Obtener cuentas bancarias del usuario\n *     tags: [Sistema de Pagos]\n *     security:\n *       - bearerAuth: []\n *     responses:\n *       200:\n *         description: Cuentas bancarias obtenidas exitosamente\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 success:\n *                   type: boolean\n *                 data:\n *                   type: array\n *                   items:\n *                     $ref: '#/components/schemas/BankAccount'\n *                 message:\n *                   type: string\n *       401:\n *         description: Usuario no autenticado\n *       500:\n *         description: Error del servidor\n */\nrouter.get('/bank-accounts/my-accounts', authMiddleware, async (req, res) => {\n  await paymentSystemController.getUserBankAccounts(req, res);\n});\n\n/**\n * @swagger\n * /payments/deposit:\n *   post:\n *     summary: Subir comprobante de dep\xF3sito\n *     tags: [Sistema de Pagos]\n *     security:\n *       - bearerAuth: []\n *     requestBody:\n *       required: true\n *       content:\n *         multipart/form-data:\n *           schema:\n *             type: object\n *             required:\n *               - amount\n *               - voucherFile\n *             properties:\n *               amount:\n *                 type: number\n *               voucherFile:\n *                 type: string\n *                 format: binary\n *               description:\n *                 type: string\n *     responses:\n *       201:\n *         description: Comprobante subido exitosamente\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 success:\n *                   type: boolean\n *                 data:\n *                   $ref: '#/components/schemas/UserDeposit'\n *                 message:\n *                   type: string\n *       400:\n *         description: Datos incompletos\n *       401:\n *         description: Usuario no autenticado\n *       500:\n *         description: Error del servidor\n */\nrouter.post('/deposit', authMiddleware, upload.single('voucherFile'), async (req, res) => {\n  await paymentSystemController.uploadDepositVoucher(req, res);\n});\n\n/**\n * @swagger\n * /payments/my-deposits:\n *   get:\n *     summary: Obtener historial de dep\xF3sitos del usuario\n *     tags: [Sistema de Pagos]\n *     security:\n *       - bearerAuth: []\n *     responses:\n *       200:\n *         description: Historial obtenido exitosamente\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 success:\n *                   type: boolean\n *                 data:\n *                   type: array\n *                   items:\n *                     $ref: '#/components/schemas/UserDeposit'\n *                 message:\n *                   type: string\n *       401:\n *         description: Usuario no autenticado\n *       500:\n *         description: Error del servidor\n */\nrouter.get('/my-deposits', authMiddleware, async (req, res) => {\n  await paymentSystemController.getUserDeposits(req, res);\n});\n\n/**\n * @swagger\n * /events/{eventId}/pay-musician:\n *   post:\n *     summary: Pagar a m\xFAsico por evento\n *     tags: [Sistema de Pagos]\n *     security:\n *       - bearerAuth: []\n *     parameters:\n *       - in: path\n *         name: eventId\n *         required: true\n *         schema:\n *           type: string\n *     requestBody:\n *       required: true\n *       content:\n *         application/json:\n *           schema:\n *             type: object\n *             required:\n *               - musicianId\n *               - amount\n *             properties:\n *               musicianId:\n *                 type: string\n *               amount:\n *                 type: number\n *               paymentMethod:\n *                 type: string\n *                 enum: [balance, bank_transfer]\n *                 default: balance\n *               description:\n *                 type: string\n *     responses:\n *       201:\n *         description: Pago procesado exitosamente\n *       400:\n *         description: Datos incompletos\n *       401:\n *         description: Usuario no autenticado\n *       500:\n *         description: Error del servidor\n */\nrouter.post('/events/:eventId/pay-musician', authMiddleware, async (req, res) => {\n  await paymentSystemController.payMusicianForEvent(req, res);\n});\n\n/**\n * @swagger\n * /musicians/earnings:\n *   get:\n *     summary: Obtener ganancias del m\xFAsico\n *     tags: [Sistema de Pagos]\n *     security:\n *       - bearerAuth: []\n *     responses:\n *       200:\n *         description: Ganancias obtenidas exitosamente\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 success:\n *                   type: boolean\n *                 data:\n *                   type: array\n *                   items:\n *                     $ref: '#/components/schemas/MusicianEarnings'\n *                 message:\n *                   type: string\n *       401:\n *         description: Usuario no autenticado\n *       500:\n *         description: Error del servidor\n */\nrouter.get('/musicians/earnings', authMiddleware, async (req, res) => {\n  await paymentSystemController.getMusicianEarnings(req, res);\n});\n\n/**\n * @swagger\n * /musicians/withdraw-earnings:\n *   post:\n *     summary: Solicitar retiro de ganancias\n *     tags: [Sistema de Pagos]\n *     security:\n *       - bearerAuth: []\n *     requestBody:\n *       required: true\n *       content:\n *         application/json:\n *           schema:\n *             type: object\n *             required:\n *               - bankAccountId\n *               - amount\n *             properties:\n *               bankAccountId:\n *                 type: string\n *               amount:\n *                 type: number\n *               description:\n *                 type: string\n *     responses:\n *       201:\n *         description: Solicitud de retiro creada exitosamente\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 success:\n *                   type: boolean\n *                 data:\n *                   $ref: '#/components/schemas/WithdrawalRequest'\n *                 message:\n *                   type: string\n *       400:\n *         description: Datos incompletos\n *       401:\n *         description: Usuario no autenticado\n *       500:\n *         description: Error del servidor\n */\nrouter.post('/musicians/withdraw-earnings', authMiddleware, async (req, res) => {\n  await paymentSystemController.requestWithdrawal(req, res);\n});\n\n// ===== RUTAS DE ADMINISTRACI\xD3N =====\n\n/**\n * @swagger\n * /admin/payments/pending-deposits:\n *   get:\n *     summary: Obtener dep\xF3sitos pendientes (admin)\n *     tags: [Administraci\xF3n - Pagos]\n *     security:\n *       - bearerAuth: []\n *     responses:\n *       200:\n *         description: Dep\xF3sitos pendientes obtenidos exitosamente\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 success:\n *                   type: boolean\n *                 data:\n *                   type: array\n *                   items:\n *                     $ref: '#/components/schemas/UserDeposit'\n *                 message:\n *                   type: string\n *       401:\n *         description: No autorizado\n *       500:\n *         description: Error del servidor\n */\nrouter.get('/admin/payments/pending-deposits', authMiddleware, requireRole(['adminJunior', 'adminMidLevel', 'adminSenior', 'superAdmin']), async (req, res) => {\n  await paymentSystemController.getPendingDeposits(req, res);\n});\n\n/**\n * @swagger\n * /admin/payments/verify-deposit/{depositId}:\n *   put:\n *     summary: Verificar dep\xF3sito (admin)\n *     tags: [Administraci\xF3n - Pagos]\n *     security:\n *       - bearerAuth: []\n *     parameters:\n *       - in: path\n *         name: depositId\n *         required: true\n *         schema:\n *           type: string\n *     requestBody:\n *       required: true\n *       content:\n *         application/json:\n *           schema:\n *             type: object\n *             required:\n *               - approved\n *             properties:\n *               approved:\n *                 type: boolean\n *               notes:\n *                 type: string\n *     responses:\n *       200:\n *         description: Dep\xF3sito verificado exitosamente\n *       400:\n *         description: Datos incompletos\n *       401:\n *         description: No autorizado\n *       500:\n *         description: Error del servidor\n */\nrouter.put('/admin/payments/verify-deposit/:depositId', authMiddleware, requireRole(['adminJunior', 'adminMidLevel', 'adminSenior', 'superAdmin']), async (req, res) => {\n  await paymentSystemController.verifyDeposit(req, res);\n});\n\n/**\n * @swagger\n * /admin/payments/pending-withdrawals:\n *   get:\n *     summary: Obtener retiros pendientes (admin)\n *     tags: [Administraci\xF3n - Pagos]\n *     security:\n *       - bearerAuth: []\n *     responses:\n *       200:\n *         description: Retiros pendientes obtenidos exitosamente\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 success:\n *                   type: boolean\n *                 data:\n *                   type: array\n *                   items:\n *                     $ref: '#/components/schemas/WithdrawalRequest'\n *                 message:\n *                   type: string\n *       401:\n *         description: No autorizado\n *       500:\n *         description: Error del servidor\n */\nrouter.get('/admin/payments/pending-withdrawals', authMiddleware, requireRole(['adminJunior', 'adminMidLevel', 'adminSenior', 'superAdmin']), async (req, res) => {\n  await paymentSystemController.getPendingWithdrawals(req, res);\n});\n\n/**\n * @swagger\n * /admin/payments/process-withdrawal/{withdrawalId}:\n *   put:\n *     summary: Procesar retiro (admin)\n *     tags: [Administraci\xF3n - Pagos]\n *     security:\n *       - bearerAuth: []\n *     parameters:\n *       - in: path\n *         name: withdrawalId\n *         required: true\n *         schema:\n *           type: string\n *     requestBody:\n *       required: true\n *       content:\n *         application/json:\n *           schema:\n *             type: object\n *             required:\n *               - approved\n *             properties:\n *               approved:\n *                 type: boolean\n *               notes:\n *                 type: string\n *     responses:\n *       200:\n *         description: Retiro procesado exitosamente\n *       400:\n *         description: Datos incompletos\n *       401:\n *         description: No autorizado\n *       500:\n *         description: Error del servidor\n */\nrouter.put('/admin/payments/process-withdrawal/:withdrawalId', authMiddleware, requireRole(['adminJunior', 'adminMidLevel', 'adminSenior', 'superAdmin']), async (req, res) => {\n  await paymentSystemController.processWithdrawal(req, res);\n});\n\n/**\n * @swagger\n * /admin/payments/statistics:\n *   get:\n *     summary: Obtener estad\xEDsticas de pagos (admin)\n *     tags: [Administraci\xF3n - Pagos]\n *     security:\n *       - bearerAuth: []\n *     responses:\n *       200:\n *         description: Estad\xEDsticas obtenidas exitosamente\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 success:\n *                   type: boolean\n *                 data:\n *                   type: object\n *                   properties:\n *                     totalDeposits:\n *                       type: number\n *                     totalWithdrawals:\n *                       type: number\n *                     totalCommissions:\n *                       type: number\n *                     pendingDeposits:\n *                       type: number\n *                     pendingWithdrawals:\n *                       type: number\n *                     averageTransactionAmount:\n *                       type: number\n *                     monthlyRevenue:\n *                       type: number\n *                     topEarningMusicians:\n *                       type: array\n *                       items:\n *                         type: object\n *                         properties:\n *                           musicianId:\n *                             type: string\n *                           musicianName:\n *                             type: string\n *                           totalEarnings:\n *                             type: number\n *                 message:\n *                   type: string\n *       401:\n *         description: No autorizado\n *       500:\n *         description: Error del servidor\n */\nrouter.get('/admin/payments/statistics', authMiddleware, requireRole(['adminJunior', 'adminMidLevel', 'adminSenior', 'superAdmin']), async (req, res) => {\n  await paymentSystemController.getPaymentStatistics(req, res);\n});\n\n/**\n * @swagger\n * /admin/firestore/indexes/status:\n *   get:\n *     summary: Verificar estado de \xEDndices de Firestore (admin)\n *     tags: [Administraci\xF3n - Sistema]\n *     security:\n *       - bearerAuth: []\n *     responses:\n *       200:\n *         description: Estado de \xEDndices obtenido exitosamente\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 success:\n *                   type: boolean\n *                 data:\n *                   type: object\n *                   additionalProperties:\n *                     type: boolean\n *                 message:\n *                   type: string\n *       401:\n *         description: No autorizado\n *       500:\n *         description: Error del servidor\n */\nrouter.get('/admin/firestore/indexes/status', authMiddleware, requireRole(['adminJunior', 'adminMidLevel', 'adminSenior', 'superAdmin']), async (req, res) => {\n  try {\n    const { FirestoreIndexManager } = await import('../utils/firestoreIndexes');\n    const indexStatus = await FirestoreIndexManager.checkIndexStatus();\n    \n    res.json({\n      success: true,\n      data: indexStatus,\n      message: 'Estado de \xEDndices obtenido exitosamente'\n    });\n  } catch (error) {\n    logger.error('Error verificando estado de \xEDndices', error as Error);\n    res.status(500).json({\n      success: false,\n      error: 'Error verificando estado de \xEDndices'\n    });\n  }\n});\n\nexport default router; "],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "7bc0932c35f328207e062127c8a6017cbfabad3a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1yjng99b0p = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1yjng99b0p();
var __createBinding =
/* istanbul ignore next */
(cov_1yjng99b0p().s[0]++,
/* istanbul ignore next */
(cov_1yjng99b0p().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1yjng99b0p().b[0][1]++, this.__createBinding) ||
/* istanbul ignore next */
(cov_1yjng99b0p().b[0][2]++, Object.create ?
/* istanbul ignore next */
(cov_1yjng99b0p().b[1][0]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_1yjng99b0p().f[0]++;
  cov_1yjng99b0p().s[1]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_1yjng99b0p().b[2][0]++;
    cov_1yjng99b0p().s[2]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_1yjng99b0p().b[2][1]++;
  }
  var desc =
  /* istanbul ignore next */
  (cov_1yjng99b0p().s[3]++, Object.getOwnPropertyDescriptor(m, k));
  /* istanbul ignore next */
  cov_1yjng99b0p().s[4]++;
  if (
  /* istanbul ignore next */
  (cov_1yjng99b0p().b[4][0]++, !desc) ||
  /* istanbul ignore next */
  (cov_1yjng99b0p().b[4][1]++, "get" in desc ?
  /* istanbul ignore next */
  (cov_1yjng99b0p().b[5][0]++, !m.__esModule) :
  /* istanbul ignore next */
  (cov_1yjng99b0p().b[5][1]++,
  /* istanbul ignore next */
  (cov_1yjng99b0p().b[6][0]++, desc.writable) ||
  /* istanbul ignore next */
  (cov_1yjng99b0p().b[6][1]++, desc.configurable)))) {
    /* istanbul ignore next */
    cov_1yjng99b0p().b[3][0]++;
    cov_1yjng99b0p().s[5]++;
    desc = {
      enumerable: true,
      get: function () {
        /* istanbul ignore next */
        cov_1yjng99b0p().f[1]++;
        cov_1yjng99b0p().s[6]++;
        return m[k];
      }
    };
  } else
  /* istanbul ignore next */
  {
    cov_1yjng99b0p().b[3][1]++;
  }
  cov_1yjng99b0p().s[7]++;
  Object.defineProperty(o, k2, desc);
}) :
/* istanbul ignore next */
(cov_1yjng99b0p().b[1][1]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_1yjng99b0p().f[2]++;
  cov_1yjng99b0p().s[8]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_1yjng99b0p().b[7][0]++;
    cov_1yjng99b0p().s[9]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_1yjng99b0p().b[7][1]++;
  }
  cov_1yjng99b0p().s[10]++;
  o[k2] = m[k];
})));
var __setModuleDefault =
/* istanbul ignore next */
(cov_1yjng99b0p().s[11]++,
/* istanbul ignore next */
(cov_1yjng99b0p().b[8][0]++, this) &&
/* istanbul ignore next */
(cov_1yjng99b0p().b[8][1]++, this.__setModuleDefault) ||
/* istanbul ignore next */
(cov_1yjng99b0p().b[8][2]++, Object.create ?
/* istanbul ignore next */
(cov_1yjng99b0p().b[9][0]++, function (o, v) {
  /* istanbul ignore next */
  cov_1yjng99b0p().f[3]++;
  cov_1yjng99b0p().s[12]++;
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
}) :
/* istanbul ignore next */
(cov_1yjng99b0p().b[9][1]++, function (o, v) {
  /* istanbul ignore next */
  cov_1yjng99b0p().f[4]++;
  cov_1yjng99b0p().s[13]++;
  o["default"] = v;
})));
var __importStar =
/* istanbul ignore next */
(cov_1yjng99b0p().s[14]++,
/* istanbul ignore next */
(cov_1yjng99b0p().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_1yjng99b0p().b[10][1]++, this.__importStar) ||
/* istanbul ignore next */
(cov_1yjng99b0p().b[10][2]++, function () {
  /* istanbul ignore next */
  cov_1yjng99b0p().f[5]++;
  cov_1yjng99b0p().s[15]++;
  var ownKeys = function (o) {
    /* istanbul ignore next */
    cov_1yjng99b0p().f[6]++;
    cov_1yjng99b0p().s[16]++;
    ownKeys =
    /* istanbul ignore next */
    (cov_1yjng99b0p().b[11][0]++, Object.getOwnPropertyNames) ||
    /* istanbul ignore next */
    (cov_1yjng99b0p().b[11][1]++, function (o) {
      /* istanbul ignore next */
      cov_1yjng99b0p().f[7]++;
      var ar =
      /* istanbul ignore next */
      (cov_1yjng99b0p().s[17]++, []);
      /* istanbul ignore next */
      cov_1yjng99b0p().s[18]++;
      for (var k in o) {
        /* istanbul ignore next */
        cov_1yjng99b0p().s[19]++;
        if (Object.prototype.hasOwnProperty.call(o, k)) {
          /* istanbul ignore next */
          cov_1yjng99b0p().b[12][0]++;
          cov_1yjng99b0p().s[20]++;
          ar[ar.length] = k;
        } else
        /* istanbul ignore next */
        {
          cov_1yjng99b0p().b[12][1]++;
        }
      }
      /* istanbul ignore next */
      cov_1yjng99b0p().s[21]++;
      return ar;
    });
    /* istanbul ignore next */
    cov_1yjng99b0p().s[22]++;
    return ownKeys(o);
  };
  /* istanbul ignore next */
  cov_1yjng99b0p().s[23]++;
  return function (mod) {
    /* istanbul ignore next */
    cov_1yjng99b0p().f[8]++;
    cov_1yjng99b0p().s[24]++;
    if (
    /* istanbul ignore next */
    (cov_1yjng99b0p().b[14][0]++, mod) &&
    /* istanbul ignore next */
    (cov_1yjng99b0p().b[14][1]++, mod.__esModule)) {
      /* istanbul ignore next */
      cov_1yjng99b0p().b[13][0]++;
      cov_1yjng99b0p().s[25]++;
      return mod;
    } else
    /* istanbul ignore next */
    {
      cov_1yjng99b0p().b[13][1]++;
    }
    var result =
    /* istanbul ignore next */
    (cov_1yjng99b0p().s[26]++, {});
    /* istanbul ignore next */
    cov_1yjng99b0p().s[27]++;
    if (mod != null) {
      /* istanbul ignore next */
      cov_1yjng99b0p().b[15][0]++;
      cov_1yjng99b0p().s[28]++;
      for (var k =
        /* istanbul ignore next */
        (cov_1yjng99b0p().s[29]++, ownKeys(mod)), i =
        /* istanbul ignore next */
        (cov_1yjng99b0p().s[30]++, 0); i < k.length; i++) {
        /* istanbul ignore next */
        cov_1yjng99b0p().s[31]++;
        if (k[i] !== "default") {
          /* istanbul ignore next */
          cov_1yjng99b0p().b[16][0]++;
          cov_1yjng99b0p().s[32]++;
          __createBinding(result, mod, k[i]);
        } else
        /* istanbul ignore next */
        {
          cov_1yjng99b0p().b[16][1]++;
        }
      }
    } else
    /* istanbul ignore next */
    {
      cov_1yjng99b0p().b[15][1]++;
    }
    cov_1yjng99b0p().s[33]++;
    __setModuleDefault(result, mod);
    /* istanbul ignore next */
    cov_1yjng99b0p().s[34]++;
    return result;
  };
}()));
var __awaiter =
/* istanbul ignore next */
(cov_1yjng99b0p().s[35]++,
/* istanbul ignore next */
(cov_1yjng99b0p().b[17][0]++, this) &&
/* istanbul ignore next */
(cov_1yjng99b0p().b[17][1]++, this.__awaiter) ||
/* istanbul ignore next */
(cov_1yjng99b0p().b[17][2]++, function (thisArg, _arguments, P, generator) {
  /* istanbul ignore next */
  cov_1yjng99b0p().f[9]++;
  function adopt(value) {
    /* istanbul ignore next */
    cov_1yjng99b0p().f[10]++;
    cov_1yjng99b0p().s[36]++;
    return value instanceof P ?
    /* istanbul ignore next */
    (cov_1yjng99b0p().b[18][0]++, value) :
    /* istanbul ignore next */
    (cov_1yjng99b0p().b[18][1]++, new P(function (resolve) {
      /* istanbul ignore next */
      cov_1yjng99b0p().f[11]++;
      cov_1yjng99b0p().s[37]++;
      resolve(value);
    }));
  }
  /* istanbul ignore next */
  cov_1yjng99b0p().s[38]++;
  return new (
  /* istanbul ignore next */
  (cov_1yjng99b0p().b[19][0]++, P) ||
  /* istanbul ignore next */
  (cov_1yjng99b0p().b[19][1]++, P = Promise))(function (resolve, reject) {
    /* istanbul ignore next */
    cov_1yjng99b0p().f[12]++;
    function fulfilled(value) {
      /* istanbul ignore next */
      cov_1yjng99b0p().f[13]++;
      cov_1yjng99b0p().s[39]++;
      try {
        /* istanbul ignore next */
        cov_1yjng99b0p().s[40]++;
        step(generator.next(value));
      } catch (e) {
        /* istanbul ignore next */
        cov_1yjng99b0p().s[41]++;
        reject(e);
      }
    }
    function rejected(value) {
      /* istanbul ignore next */
      cov_1yjng99b0p().f[14]++;
      cov_1yjng99b0p().s[42]++;
      try {
        /* istanbul ignore next */
        cov_1yjng99b0p().s[43]++;
        step(generator["throw"](value));
      } catch (e) {
        /* istanbul ignore next */
        cov_1yjng99b0p().s[44]++;
        reject(e);
      }
    }
    function step(result) {
      /* istanbul ignore next */
      cov_1yjng99b0p().f[15]++;
      cov_1yjng99b0p().s[45]++;
      result.done ?
      /* istanbul ignore next */
      (cov_1yjng99b0p().b[20][0]++, resolve(result.value)) :
      /* istanbul ignore next */
      (cov_1yjng99b0p().b[20][1]++, adopt(result.value).then(fulfilled, rejected));
    }
    /* istanbul ignore next */
    cov_1yjng99b0p().s[46]++;
    step((generator = generator.apply(thisArg,
    /* istanbul ignore next */
    (cov_1yjng99b0p().b[21][0]++, _arguments) ||
    /* istanbul ignore next */
    (cov_1yjng99b0p().b[21][1]++, []))).next());
  });
}));
/* istanbul ignore next */
cov_1yjng99b0p().s[47]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const express_1 =
/* istanbul ignore next */
(cov_1yjng99b0p().s[48]++, require("express"));
const paymentSystemController_1 =
/* istanbul ignore next */
(cov_1yjng99b0p().s[49]++, require("../controllers/paymentSystemController"));
const authMiddleware_1 =
/* istanbul ignore next */
(cov_1yjng99b0p().s[50]++, require("../middleware/authMiddleware"));
const requireRole_1 =
/* istanbul ignore next */
(cov_1yjng99b0p().s[51]++, require("../middleware/requireRole"));
const uploadMiddleware_1 =
/* istanbul ignore next */
(cov_1yjng99b0p().s[52]++, require("../middleware/uploadMiddleware"));
const loggerService_1 =
/* istanbul ignore next */
(cov_1yjng99b0p().s[53]++, require("../services/loggerService"));
const router =
/* istanbul ignore next */
(cov_1yjng99b0p().s[54]++, (0, express_1.Router)());
const paymentSystemController =
/* istanbul ignore next */
(cov_1yjng99b0p().s[55]++, new paymentSystemController_1.PaymentSystemController());
/**
 * @swagger
 * components:
 *   schemas:
 *     BankAccount:
 *       type: object
 *       properties:
 *         id:
 *           type: string
 *         userId:
 *           type: string
 *         accountHolder:
 *           type: string
 *         accountNumber:
 *           type: string
 *         bankName:
 *           type: string
 *         accountType:
 *           type: string
 *           enum: [savings, checking]
 *         routingNumber:
 *           type: string
 *         isVerified:
 *           type: boolean
 *         isDefault:
 *           type: boolean
 *         createdAt:
 *           type: string
 *         updatedAt:
 *           type: string
 *
 *     UserBalance:
 *       type: object
 *       properties:
 *         userId:
 *           type: string
 *         userType:
 *           type: string
 *           enum: [musician, event_organizer]
 *         currentBalance:
 *           type: number
 *         currency:
 *           type: string
 *         totalDeposited:
 *           type: number
 *         totalWithdrawn:
 *           type: number
 *         totalEarned:
 *           type: number
 *         pendingEarnings:
 *           type: number
 *         lastTransactionAt:
 *           type: string
 *         updatedAt:
 *           type: string
 *
 *     UserDeposit:
 *       type: object
 *       properties:
 *         id:
 *           type: string
 *         userId:
 *           type: string
 *         amount:
 *           type: number
 *         currency:
 *           type: string
 *         voucherFile:
 *           type: object
 *           properties:
 *             url:
 *               type: string
 *             filename:
 *               type: string
 *             uploadedAt:
 *               type: string
 *         status:
 *           type: string
 *           enum: [pending, verified, rejected]
 *         adminNotes:
 *           type: string
 *         verifiedBy:
 *           type: string
 *         verifiedAt:
 *           type: string
 *         createdAt:
 *           type: string
 *         updatedAt:
 *           type: string
 *
 *     MusicianEarnings:
 *       type: object
 *       properties:
 *         id:
 *           type: string
 *         musicianId:
 *           type: string
 *         eventId:
 *           type: string
 *         eventPaymentId:
 *           type: string
 *         amount:
 *           type: number
 *         currency:
 *           type: string
 *         status:
 *           type: string
 *           enum: [pending, available, withdrawn]
 *         eventDate:
 *           type: string
 *         eventTitle:
 *           type: string
 *         organizerName:
 *           type: string
 *         createdAt:
 *           type: string
 *         updatedAt:
 *           type: string
 *
 *     WithdrawalRequest:
 *       type: object
 *       properties:
 *         id:
 *           type: string
 *         musicianId:
 *           type: string
 *         bankAccountId:
 *           type: string
 *         amount:
 *           type: number
 *         currency:
 *           type: string
 *         status:
 *           type: string
 *           enum: [pending, processing, completed, rejected]
 *         adminNotes:
 *           type: string
 *         processedBy:
 *           type: string
 *         processedAt:
 *           type: string
 *         createdAt:
 *           type: string
 *         updatedAt:
 *           type: string
 */
// ===== RUTAS PARA USUARIOS =====
/**
 * @swagger
 * /payments/my-balance:
 *   get:
 *     summary: Obtener balance actual del usuario
 *     tags: [Sistema de Pagos]
 *     security:
 *       - bearerAuth: []
 *     responses:
 *       200:
 *         description: Balance obtenido exitosamente
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 data:
 *                   $ref: '#/components/schemas/UserBalance'
 *                 message:
 *                   type: string
 *       401:
 *         description: Usuario no autenticado
 *       500:
 *         description: Error del servidor
 */
/* istanbul ignore next */
cov_1yjng99b0p().s[56]++;
router.get('/my-balance', authMiddleware_1.authMiddleware, (req, res) => {
  /* istanbul ignore next */
  cov_1yjng99b0p().f[16]++;
  cov_1yjng99b0p().s[57]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1yjng99b0p().f[17]++;
    cov_1yjng99b0p().s[58]++;
    yield paymentSystemController.getUserBalance(req, res);
  });
});
/**
 * @swagger
 * /bank-accounts/register:
 *   post:
 *     summary: Registrar cuenta bancaria
 *     tags: [Sistema de Pagos]
 *     security:
 *       - bearerAuth: []
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             type: object
 *             required:
 *               - accountHolder
 *               - accountNumber
 *               - bankName
 *               - accountType
 *             properties:
 *               accountHolder:
 *                 type: string
 *               accountNumber:
 *                 type: string
 *               bankName:
 *                 type: string
 *               accountType:
 *                 type: string
 *                 enum: [savings, checking]
 *               routingNumber:
 *                 type: string
 *     responses:
 *       201:
 *         description: Cuenta bancaria registrada exitosamente
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 data:
 *                   $ref: '#/components/schemas/BankAccount'
 *                 message:
 *                   type: string
 *       400:
 *         description: Datos incompletos
 *       401:
 *         description: Usuario no autenticado
 *       500:
 *         description: Error del servidor
 */
/* istanbul ignore next */
cov_1yjng99b0p().s[59]++;
router.post('/bank-accounts/register', authMiddleware_1.authMiddleware, (req, res) => {
  /* istanbul ignore next */
  cov_1yjng99b0p().f[18]++;
  cov_1yjng99b0p().s[60]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1yjng99b0p().f[19]++;
    cov_1yjng99b0p().s[61]++;
    yield paymentSystemController.registerBankAccount(req, res);
  });
});
/**
 * @swagger
 * /bank-accounts/my-accounts:
 *   get:
 *     summary: Obtener cuentas bancarias del usuario
 *     tags: [Sistema de Pagos]
 *     security:
 *       - bearerAuth: []
 *     responses:
 *       200:
 *         description: Cuentas bancarias obtenidas exitosamente
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 data:
 *                   type: array
 *                   items:
 *                     $ref: '#/components/schemas/BankAccount'
 *                 message:
 *                   type: string
 *       401:
 *         description: Usuario no autenticado
 *       500:
 *         description: Error del servidor
 */
/* istanbul ignore next */
cov_1yjng99b0p().s[62]++;
router.get('/bank-accounts/my-accounts', authMiddleware_1.authMiddleware, (req, res) => {
  /* istanbul ignore next */
  cov_1yjng99b0p().f[20]++;
  cov_1yjng99b0p().s[63]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1yjng99b0p().f[21]++;
    cov_1yjng99b0p().s[64]++;
    yield paymentSystemController.getUserBankAccounts(req, res);
  });
});
/**
 * @swagger
 * /payments/deposit:
 *   post:
 *     summary: Subir comprobante de depósito
 *     tags: [Sistema de Pagos]
 *     security:
 *       - bearerAuth: []
 *     requestBody:
 *       required: true
 *       content:
 *         multipart/form-data:
 *           schema:
 *             type: object
 *             required:
 *               - amount
 *               - voucherFile
 *             properties:
 *               amount:
 *                 type: number
 *               voucherFile:
 *                 type: string
 *                 format: binary
 *               description:
 *                 type: string
 *     responses:
 *       201:
 *         description: Comprobante subido exitosamente
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 data:
 *                   $ref: '#/components/schemas/UserDeposit'
 *                 message:
 *                   type: string
 *       400:
 *         description: Datos incompletos
 *       401:
 *         description: Usuario no autenticado
 *       500:
 *         description: Error del servidor
 */
/* istanbul ignore next */
cov_1yjng99b0p().s[65]++;
router.post('/deposit', authMiddleware_1.authMiddleware, uploadMiddleware_1.upload.single('voucherFile'), (req, res) => {
  /* istanbul ignore next */
  cov_1yjng99b0p().f[22]++;
  cov_1yjng99b0p().s[66]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1yjng99b0p().f[23]++;
    cov_1yjng99b0p().s[67]++;
    yield paymentSystemController.uploadDepositVoucher(req, res);
  });
});
/**
 * @swagger
 * /payments/my-deposits:
 *   get:
 *     summary: Obtener historial de depósitos del usuario
 *     tags: [Sistema de Pagos]
 *     security:
 *       - bearerAuth: []
 *     responses:
 *       200:
 *         description: Historial obtenido exitosamente
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 data:
 *                   type: array
 *                   items:
 *                     $ref: '#/components/schemas/UserDeposit'
 *                 message:
 *                   type: string
 *       401:
 *         description: Usuario no autenticado
 *       500:
 *         description: Error del servidor
 */
/* istanbul ignore next */
cov_1yjng99b0p().s[68]++;
router.get('/my-deposits', authMiddleware_1.authMiddleware, (req, res) => {
  /* istanbul ignore next */
  cov_1yjng99b0p().f[24]++;
  cov_1yjng99b0p().s[69]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1yjng99b0p().f[25]++;
    cov_1yjng99b0p().s[70]++;
    yield paymentSystemController.getUserDeposits(req, res);
  });
});
/**
 * @swagger
 * /events/{eventId}/pay-musician:
 *   post:
 *     summary: Pagar a músico por evento
 *     tags: [Sistema de Pagos]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: path
 *         name: eventId
 *         required: true
 *         schema:
 *           type: string
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             type: object
 *             required:
 *               - musicianId
 *               - amount
 *             properties:
 *               musicianId:
 *                 type: string
 *               amount:
 *                 type: number
 *               paymentMethod:
 *                 type: string
 *                 enum: [balance, bank_transfer]
 *                 default: balance
 *               description:
 *                 type: string
 *     responses:
 *       201:
 *         description: Pago procesado exitosamente
 *       400:
 *         description: Datos incompletos
 *       401:
 *         description: Usuario no autenticado
 *       500:
 *         description: Error del servidor
 */
/* istanbul ignore next */
cov_1yjng99b0p().s[71]++;
router.post('/events/:eventId/pay-musician', authMiddleware_1.authMiddleware, (req, res) => {
  /* istanbul ignore next */
  cov_1yjng99b0p().f[26]++;
  cov_1yjng99b0p().s[72]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1yjng99b0p().f[27]++;
    cov_1yjng99b0p().s[73]++;
    yield paymentSystemController.payMusicianForEvent(req, res);
  });
});
/**
 * @swagger
 * /musicians/earnings:
 *   get:
 *     summary: Obtener ganancias del músico
 *     tags: [Sistema de Pagos]
 *     security:
 *       - bearerAuth: []
 *     responses:
 *       200:
 *         description: Ganancias obtenidas exitosamente
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 data:
 *                   type: array
 *                   items:
 *                     $ref: '#/components/schemas/MusicianEarnings'
 *                 message:
 *                   type: string
 *       401:
 *         description: Usuario no autenticado
 *       500:
 *         description: Error del servidor
 */
/* istanbul ignore next */
cov_1yjng99b0p().s[74]++;
router.get('/musicians/earnings', authMiddleware_1.authMiddleware, (req, res) => {
  /* istanbul ignore next */
  cov_1yjng99b0p().f[28]++;
  cov_1yjng99b0p().s[75]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1yjng99b0p().f[29]++;
    cov_1yjng99b0p().s[76]++;
    yield paymentSystemController.getMusicianEarnings(req, res);
  });
});
/**
 * @swagger
 * /musicians/withdraw-earnings:
 *   post:
 *     summary: Solicitar retiro de ganancias
 *     tags: [Sistema de Pagos]
 *     security:
 *       - bearerAuth: []
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             type: object
 *             required:
 *               - bankAccountId
 *               - amount
 *             properties:
 *               bankAccountId:
 *                 type: string
 *               amount:
 *                 type: number
 *               description:
 *                 type: string
 *     responses:
 *       201:
 *         description: Solicitud de retiro creada exitosamente
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 data:
 *                   $ref: '#/components/schemas/WithdrawalRequest'
 *                 message:
 *                   type: string
 *       400:
 *         description: Datos incompletos
 *       401:
 *         description: Usuario no autenticado
 *       500:
 *         description: Error del servidor
 */
/* istanbul ignore next */
cov_1yjng99b0p().s[77]++;
router.post('/musicians/withdraw-earnings', authMiddleware_1.authMiddleware, (req, res) => {
  /* istanbul ignore next */
  cov_1yjng99b0p().f[30]++;
  cov_1yjng99b0p().s[78]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1yjng99b0p().f[31]++;
    cov_1yjng99b0p().s[79]++;
    yield paymentSystemController.requestWithdrawal(req, res);
  });
});
// ===== RUTAS DE ADMINISTRACIÓN =====
/**
 * @swagger
 * /admin/payments/pending-deposits:
 *   get:
 *     summary: Obtener depósitos pendientes (admin)
 *     tags: [Administración - Pagos]
 *     security:
 *       - bearerAuth: []
 *     responses:
 *       200:
 *         description: Depósitos pendientes obtenidos exitosamente
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 data:
 *                   type: array
 *                   items:
 *                     $ref: '#/components/schemas/UserDeposit'
 *                 message:
 *                   type: string
 *       401:
 *         description: No autorizado
 *       500:
 *         description: Error del servidor
 */
/* istanbul ignore next */
cov_1yjng99b0p().s[80]++;
router.get('/admin/payments/pending-deposits', authMiddleware_1.authMiddleware, (0, requireRole_1.requireRole)(['adminJunior', 'adminMidLevel', 'adminSenior', 'superAdmin']), (req, res) => {
  /* istanbul ignore next */
  cov_1yjng99b0p().f[32]++;
  cov_1yjng99b0p().s[81]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1yjng99b0p().f[33]++;
    cov_1yjng99b0p().s[82]++;
    yield paymentSystemController.getPendingDeposits(req, res);
  });
});
/**
 * @swagger
 * /admin/payments/verify-deposit/{depositId}:
 *   put:
 *     summary: Verificar depósito (admin)
 *     tags: [Administración - Pagos]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: path
 *         name: depositId
 *         required: true
 *         schema:
 *           type: string
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             type: object
 *             required:
 *               - approved
 *             properties:
 *               approved:
 *                 type: boolean
 *               notes:
 *                 type: string
 *     responses:
 *       200:
 *         description: Depósito verificado exitosamente
 *       400:
 *         description: Datos incompletos
 *       401:
 *         description: No autorizado
 *       500:
 *         description: Error del servidor
 */
/* istanbul ignore next */
cov_1yjng99b0p().s[83]++;
router.put('/admin/payments/verify-deposit/:depositId', authMiddleware_1.authMiddleware, (0, requireRole_1.requireRole)(['adminJunior', 'adminMidLevel', 'adminSenior', 'superAdmin']), (req, res) => {
  /* istanbul ignore next */
  cov_1yjng99b0p().f[34]++;
  cov_1yjng99b0p().s[84]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1yjng99b0p().f[35]++;
    cov_1yjng99b0p().s[85]++;
    yield paymentSystemController.verifyDeposit(req, res);
  });
});
/**
 * @swagger
 * /admin/payments/pending-withdrawals:
 *   get:
 *     summary: Obtener retiros pendientes (admin)
 *     tags: [Administración - Pagos]
 *     security:
 *       - bearerAuth: []
 *     responses:
 *       200:
 *         description: Retiros pendientes obtenidos exitosamente
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 data:
 *                   type: array
 *                   items:
 *                     $ref: '#/components/schemas/WithdrawalRequest'
 *                 message:
 *                   type: string
 *       401:
 *         description: No autorizado
 *       500:
 *         description: Error del servidor
 */
/* istanbul ignore next */
cov_1yjng99b0p().s[86]++;
router.get('/admin/payments/pending-withdrawals', authMiddleware_1.authMiddleware, (0, requireRole_1.requireRole)(['adminJunior', 'adminMidLevel', 'adminSenior', 'superAdmin']), (req, res) => {
  /* istanbul ignore next */
  cov_1yjng99b0p().f[36]++;
  cov_1yjng99b0p().s[87]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1yjng99b0p().f[37]++;
    cov_1yjng99b0p().s[88]++;
    yield paymentSystemController.getPendingWithdrawals(req, res);
  });
});
/**
 * @swagger
 * /admin/payments/process-withdrawal/{withdrawalId}:
 *   put:
 *     summary: Procesar retiro (admin)
 *     tags: [Administración - Pagos]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: path
 *         name: withdrawalId
 *         required: true
 *         schema:
 *           type: string
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             type: object
 *             required:
 *               - approved
 *             properties:
 *               approved:
 *                 type: boolean
 *               notes:
 *                 type: string
 *     responses:
 *       200:
 *         description: Retiro procesado exitosamente
 *       400:
 *         description: Datos incompletos
 *       401:
 *         description: No autorizado
 *       500:
 *         description: Error del servidor
 */
/* istanbul ignore next */
cov_1yjng99b0p().s[89]++;
router.put('/admin/payments/process-withdrawal/:withdrawalId', authMiddleware_1.authMiddleware, (0, requireRole_1.requireRole)(['adminJunior', 'adminMidLevel', 'adminSenior', 'superAdmin']), (req, res) => {
  /* istanbul ignore next */
  cov_1yjng99b0p().f[38]++;
  cov_1yjng99b0p().s[90]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1yjng99b0p().f[39]++;
    cov_1yjng99b0p().s[91]++;
    yield paymentSystemController.processWithdrawal(req, res);
  });
});
/**
 * @swagger
 * /admin/payments/statistics:
 *   get:
 *     summary: Obtener estadísticas de pagos (admin)
 *     tags: [Administración - Pagos]
 *     security:
 *       - bearerAuth: []
 *     responses:
 *       200:
 *         description: Estadísticas obtenidas exitosamente
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 data:
 *                   type: object
 *                   properties:
 *                     totalDeposits:
 *                       type: number
 *                     totalWithdrawals:
 *                       type: number
 *                     totalCommissions:
 *                       type: number
 *                     pendingDeposits:
 *                       type: number
 *                     pendingWithdrawals:
 *                       type: number
 *                     averageTransactionAmount:
 *                       type: number
 *                     monthlyRevenue:
 *                       type: number
 *                     topEarningMusicians:
 *                       type: array
 *                       items:
 *                         type: object
 *                         properties:
 *                           musicianId:
 *                             type: string
 *                           musicianName:
 *                             type: string
 *                           totalEarnings:
 *                             type: number
 *                 message:
 *                   type: string
 *       401:
 *         description: No autorizado
 *       500:
 *         description: Error del servidor
 */
/* istanbul ignore next */
cov_1yjng99b0p().s[92]++;
router.get('/admin/payments/statistics', authMiddleware_1.authMiddleware, (0, requireRole_1.requireRole)(['adminJunior', 'adminMidLevel', 'adminSenior', 'superAdmin']), (req, res) => {
  /* istanbul ignore next */
  cov_1yjng99b0p().f[40]++;
  cov_1yjng99b0p().s[93]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1yjng99b0p().f[41]++;
    cov_1yjng99b0p().s[94]++;
    yield paymentSystemController.getPaymentStatistics(req, res);
  });
});
/**
 * @swagger
 * /admin/firestore/indexes/status:
 *   get:
 *     summary: Verificar estado de índices de Firestore (admin)
 *     tags: [Administración - Sistema]
 *     security:
 *       - bearerAuth: []
 *     responses:
 *       200:
 *         description: Estado de índices obtenido exitosamente
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 data:
 *                   type: object
 *                   additionalProperties:
 *                     type: boolean
 *                 message:
 *                   type: string
 *       401:
 *         description: No autorizado
 *       500:
 *         description: Error del servidor
 */
/* istanbul ignore next */
cov_1yjng99b0p().s[95]++;
router.get('/admin/firestore/indexes/status', authMiddleware_1.authMiddleware, (0, requireRole_1.requireRole)(['adminJunior', 'adminMidLevel', 'adminSenior', 'superAdmin']), (req, res) => {
  /* istanbul ignore next */
  cov_1yjng99b0p().f[42]++;
  cov_1yjng99b0p().s[96]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1yjng99b0p().f[43]++;
    cov_1yjng99b0p().s[97]++;
    try {
      const {
        FirestoreIndexManager
      } =
      /* istanbul ignore next */
      (cov_1yjng99b0p().s[98]++, yield Promise.resolve().then(() => {
        /* istanbul ignore next */
        cov_1yjng99b0p().f[44]++;
        cov_1yjng99b0p().s[99]++;
        return __importStar(require('../utils/firestoreIndexes'));
      }));
      const indexStatus =
      /* istanbul ignore next */
      (cov_1yjng99b0p().s[100]++, yield FirestoreIndexManager.checkIndexStatus());
      /* istanbul ignore next */
      cov_1yjng99b0p().s[101]++;
      res.json({
        success: true,
        data: indexStatus,
        message: 'Estado de índices obtenido exitosamente'
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1yjng99b0p().s[102]++;
      loggerService_1.logger.error('Error verificando estado de índices', error);
      /* istanbul ignore next */
      cov_1yjng99b0p().s[103]++;
      res.status(500).json({
        success: false,
        error: 'Error verificando estado de índices'
      });
    }
  });
});
/* istanbul ignore next */
cov_1yjng99b0p().s[104]++;
exports.default = router;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,