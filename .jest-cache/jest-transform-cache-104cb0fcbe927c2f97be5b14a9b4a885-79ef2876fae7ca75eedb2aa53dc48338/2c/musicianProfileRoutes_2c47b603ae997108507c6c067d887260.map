{"version":3,"names":["express_1","cov_1bjs8xk7np","s","require","multer_1","__importDefault","musicianProfileController_1","musician","Router","storage","default","memoryStorage","upload","use","single","post","uploadFile","get","getFileUrl","exports"],"sources":["C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\routes\\musicianProfileRoutes.ts"],"sourcesContent":["import { Router } from 'express';\r\nimport multer from 'multer';\r\nimport {\r\n  getFileUrl,\r\n  uploadFile,\r\n} from '../controllers/musicianProfileController';\r\n\r\nconst musician = Router();\r\nconst storage = multer.memoryStorage();\r\nconst upload = multer({ storage });\r\nmusician.use(upload.single('file'));\r\n\r\n/**\r\n * @swagger\r\n * tags:\r\n *   name: Media\r\n *   description: Endpoints para gestión de imágenes de perfil de músico\r\n */\r\n\r\n/**\r\n * @swagger\r\n * /media/saveImage:\r\n *   post:\r\n *     tags: [Media]\r\n *     summary: Sube una imagen de perfil de músico\r\n *     consumes:\r\n *       - multipart/form-data\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         multipart/form-data:\r\n *           schema:\r\n *             type: object\r\n *             properties:\r\n *               file:\r\n *                 type: string\r\n *                 format: binary\r\n *     responses:\r\n *       200:\r\n *         description: Imagen subida exitosamente\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 message:\r\n *                   type: string\r\n *                 url:\r\n *                   type: string\r\n *                 key:\r\n *                   type: string\r\n *       400:\r\n *         description: No file uploaded\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 error:\r\n *                   type: string\r\n *       500:\r\n *         description: Error al subir la imagen\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 error:\r\n *                   type: string\r\n */\r\nmusician.post('/saveImage', uploadFile);\r\n\r\n/**\r\n * @swagger\r\n * /media/getImage/{key}:\r\n *   get:\r\n *     tags: [Media]\r\n *     summary: Obtiene la URL firmada de una imagen subida\r\n *     parameters:\r\n *       - in: path\r\n *         name: key\r\n *         schema:\r\n *           type: string\r\n *         required: true\r\n *         description: Clave de la imagen\r\n *     responses:\r\n *       200:\r\n *         description: URL firmada obtenida\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 url:\r\n *                   type: string\r\n *       400:\r\n *         description: Missing file key\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 error:\r\n *                   type: string\r\n *       500:\r\n *         description: Error al generar la URL\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 error:\r\n *                   type: string\r\n */\r\nmusician.get('/getImage/:key', getFileUrl);\r\n\r\nexport default musician;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAAA,SAAA;AAAA;AAAA,CAAAC,cAAA,GAAAC,CAAA,OAAAC,OAAA;AACA,MAAAC,QAAA;AAAA;AAAA,CAAAH,cAAA,GAAAC,CAAA,OAAAG,eAAA,CAAAF,OAAA;AACA,MAAAG,2BAAA;AAAA;AAAA,CAAAL,cAAA,GAAAC,CAAA,OAAAC,OAAA;AAKA,MAAMI,QAAQ;AAAA;AAAA,CAAAN,cAAA,GAAAC,CAAA,OAAG,IAAAF,SAAA,CAAAQ,MAAM,GAAE;AACzB,MAAMC,OAAO;AAAA;AAAA,CAAAR,cAAA,GAAAC,CAAA,OAAGE,QAAA,CAAAM,OAAM,CAACC,aAAa,EAAE;AACtC,MAAMC,MAAM;AAAA;AAAA,CAAAX,cAAA,GAAAC,CAAA,OAAG,IAAAE,QAAA,CAAAM,OAAM,EAAC;EAAED;AAAO,CAAE,CAAC;AAAC;AAAAR,cAAA,GAAAC,CAAA;AACnCK,QAAQ,CAACM,GAAG,CAACD,MAAM,CAACE,MAAM,CAAC,MAAM,CAAC,CAAC;AAEnC;;;;;;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAAb,cAAA,GAAAC,CAAA;AAmDAK,QAAQ,CAACQ,IAAI,CAAC,YAAY,EAAET,2BAAA,CAAAU,UAAU,CAAC;AAEvC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAAf,cAAA,GAAAC,CAAA;AA0CAK,QAAQ,CAACU,GAAG,CAAC,gBAAgB,EAAEX,2BAAA,CAAAY,UAAU,CAAC;AAAC;AAAAjB,cAAA,GAAAC,CAAA;AAE3CiB,OAAA,CAAAT,OAAA,GAAeH,QAAQ","ignoreList":[]}