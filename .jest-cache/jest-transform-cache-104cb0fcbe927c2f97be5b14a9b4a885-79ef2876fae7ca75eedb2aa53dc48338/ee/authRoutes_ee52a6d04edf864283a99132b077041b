9f5b73e87f49723bd6e62bf87687c1c1
"use strict";

/* istanbul ignore next */
function cov_3b06ulla2() {
  var path = "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\routes\\authRoutes.ts";
  var hash = "f4dd1161448ff2943971d0b5495fe2dcca42c18e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\routes\\authRoutes.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 16
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 28
        },
        end: {
          line: 3,
          column: 110
        }
      },
      "2": {
        start: {
          line: 3,
          column: 91
        },
        end: {
          line: 3,
          column: 106
        }
      },
      "3": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "4": {
        start: {
          line: 5,
          column: 36
        },
        end: {
          line: 5,
          column: 97
        }
      },
      "5": {
        start: {
          line: 5,
          column: 42
        },
        end: {
          line: 5,
          column: 70
        }
      },
      "6": {
        start: {
          line: 5,
          column: 85
        },
        end: {
          line: 5,
          column: 95
        }
      },
      "7": {
        start: {
          line: 6,
          column: 35
        },
        end: {
          line: 6,
          column: 100
        }
      },
      "8": {
        start: {
          line: 6,
          column: 41
        },
        end: {
          line: 6,
          column: 73
        }
      },
      "9": {
        start: {
          line: 6,
          column: 88
        },
        end: {
          line: 6,
          column: 98
        }
      },
      "10": {
        start: {
          line: 7,
          column: 32
        },
        end: {
          line: 7,
          column: 116
        }
      },
      "11": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 78
        }
      },
      "12": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 62
        }
      },
      "13": {
        start: {
          line: 12,
          column: 18
        },
        end: {
          line: 12,
          column: 36
        }
      },
      "14": {
        start: {
          line: 13,
          column: 25
        },
        end: {
          line: 13,
          column: 64
        }
      },
      "15": {
        start: {
          line: 14,
          column: 31
        },
        end: {
          line: 14,
          column: 76
        }
      },
      "16": {
        start: {
          line: 15,
          column: 23
        },
        end: {
          line: 15,
          column: 60
        }
      },
      "17": {
        start: {
          line: 16,
          column: 24
        },
        end: {
          line: 16,
          column: 60
        }
      },
      "18": {
        start: {
          line: 17,
          column: 28
        },
        end: {
          line: 17,
          column: 65
        }
      },
      "19": {
        start: {
          line: 18,
          column: 25
        },
        end: {
          line: 18,
          column: 65
        }
      },
      "20": {
        start: {
          line: 19,
          column: 15
        },
        end: {
          line: 19,
          column: 38
        }
      },
      "21": {
        start: {
          line: 46,
          column: 0
        },
        end: {
          line: 50,
          column: 5
        }
      },
      "22": {
        start: {
          line: 46,
          column: 146
        },
        end: {
          line: 50,
          column: 2
        }
      },
      "23": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 47,
          column: 78
        }
      },
      "24": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 48,
          column: 61
        }
      },
      "25": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 49,
          column: 75
        }
      },
      "26": {
        start: {
          line: 119,
          column: 0
        },
        end: {
          line: 123,
          column: 5
        }
      },
      "27": {
        start: {
          line: 119,
          column: 166
        },
        end: {
          line: 123,
          column: 2
        }
      },
      "28": {
        start: {
          line: 120,
          column: 4
        },
        end: {
          line: 120,
          column: 93
        }
      },
      "29": {
        start: {
          line: 121,
          column: 4
        },
        end: {
          line: 121,
          column: 77
        }
      },
      "30": {
        start: {
          line: 122,
          column: 4
        },
        end: {
          line: 122,
          column: 88
        }
      },
      "31": {
        start: {
          line: 182,
          column: 0
        },
        end: {
          line: 186,
          column: 5
        }
      },
      "32": {
        start: {
          line: 182,
          column: 96
        },
        end: {
          line: 186,
          column: 2
        }
      },
      "33": {
        start: {
          line: 183,
          column: 4
        },
        end: {
          line: 183,
          column: 92
        }
      },
      "34": {
        start: {
          line: 184,
          column: 4
        },
        end: {
          line: 184,
          column: 82
        }
      },
      "35": {
        start: {
          line: 185,
          column: 4
        },
        end: {
          line: 185,
          column: 91
        }
      },
      "36": {
        start: {
          line: 223,
          column: 0
        },
        end: {
          line: 227,
          column: 5
        }
      },
      "37": {
        start: {
          line: 223,
          column: 140
        },
        end: {
          line: 227,
          column: 2
        }
      },
      "38": {
        start: {
          line: 224,
          column: 4
        },
        end: {
          line: 224,
          column: 75
        }
      },
      "39": {
        start: {
          line: 225,
          column: 4
        },
        end: {
          line: 225,
          column: 58
        }
      },
      "40": {
        start: {
          line: 226,
          column: 4
        },
        end: {
          line: 226,
          column: 72
        }
      },
      "41": {
        start: {
          line: 246,
          column: 0
        },
        end: {
          line: 250,
          column: 5
        }
      },
      "42": {
        start: {
          line: 246,
          column: 152
        },
        end: {
          line: 250,
          column: 2
        }
      },
      "43": {
        start: {
          line: 247,
          column: 4
        },
        end: {
          line: 247,
          column: 88
        }
      },
      "44": {
        start: {
          line: 248,
          column: 4
        },
        end: {
          line: 248,
          column: 66
        }
      },
      "45": {
        start: {
          line: 249,
          column: 4
        },
        end: {
          line: 249,
          column: 85
        }
      },
      "46": {
        start: {
          line: 282,
          column: 0
        },
        end: {
          line: 290,
          column: 5
        }
      },
      "47": {
        start: {
          line: 282,
          column: 224
        },
        end: {
          line: 290,
          column: 2
        }
      },
      "48": {
        start: {
          line: 284,
          column: 22
        },
        end: {
          line: 284,
          column: 42
        }
      },
      "49": {
        start: {
          line: 285,
          column: 4
        },
        end: {
          line: 287,
          column: 7
        }
      },
      "50": {
        start: {
          line: 288,
          column: 4
        },
        end: {
          line: 288,
          column: 70
        }
      },
      "51": {
        start: {
          line: 289,
          column: 4
        },
        end: {
          line: 289,
          column: 82
        }
      },
      "52": {
        start: {
          line: 314,
          column: 0
        },
        end: {
          line: 318,
          column: 5
        }
      },
      "53": {
        start: {
          line: 314,
          column: 122
        },
        end: {
          line: 318,
          column: 2
        }
      },
      "54": {
        start: {
          line: 315,
          column: 22
        },
        end: {
          line: 315,
          column: 42
        }
      },
      "55": {
        start: {
          line: 316,
          column: 4
        },
        end: {
          line: 316,
          column: 81
        }
      },
      "56": {
        start: {
          line: 317,
          column: 4
        },
        end: {
          line: 317,
          column: 64
        }
      },
      "57": {
        start: {
          line: 351,
          column: 0
        },
        end: {
          line: 362,
          column: 5
        }
      },
      "58": {
        start: {
          line: 351,
          column: 117
        },
        end: {
          line: 362,
          column: 2
        }
      },
      "59": {
        start: {
          line: 353,
          column: 22
        },
        end: {
          line: 353,
          column: 42
        }
      },
      "60": {
        start: {
          line: 354,
          column: 20
        },
        end: {
          line: 354,
          column: 36
        }
      },
      "61": {
        start: {
          line: 355,
          column: 4
        },
        end: {
          line: 357,
          column: 7
        }
      },
      "62": {
        start: {
          line: 358,
          column: 4
        },
        end: {
          line: 358,
          column: 67
        }
      },
      "63": {
        start: {
          line: 359,
          column: 4
        },
        end: {
          line: 361,
          column: 7
        }
      },
      "64": {
        start: {
          line: 386,
          column: 0
        },
        end: {
          line: 394,
          column: 5
        }
      },
      "65": {
        start: {
          line: 386,
          column: 116
        },
        end: {
          line: 394,
          column: 2
        }
      },
      "66": {
        start: {
          line: 388,
          column: 22
        },
        end: {
          line: 388,
          column: 42
        }
      },
      "67": {
        start: {
          line: 389,
          column: 4
        },
        end: {
          line: 391,
          column: 7
        }
      },
      "68": {
        start: {
          line: 392,
          column: 4
        },
        end: {
          line: 392,
          column: 70
        }
      },
      "69": {
        start: {
          line: 393,
          column: 4
        },
        end: {
          line: 393,
          column: 80
        }
      },
      "70": {
        start: {
          line: 421,
          column: 0
        },
        end: {
          line: 426,
          column: 5
        }
      },
      "71": {
        start: {
          line: 421,
          column: 79
        },
        end: {
          line: 426,
          column: 2
        }
      },
      "72": {
        start: {
          line: 422,
          column: 22
        },
        end: {
          line: 422,
          column: 40
        }
      },
      "73": {
        start: {
          line: 423,
          column: 4
        },
        end: {
          line: 423,
          column: 89
        }
      },
      "74": {
        start: {
          line: 424,
          column: 4
        },
        end: {
          line: 424,
          column: 67
        }
      },
      "75": {
        start: {
          line: 425,
          column: 4
        },
        end: {
          line: 425,
          column: 80
        }
      },
      "76": {
        start: {
          line: 457,
          column: 0
        },
        end: {
          line: 465,
          column: 5
        }
      },
      "77": {
        start: {
          line: 457,
          column: 75
        },
        end: {
          line: 465,
          column: 2
        }
      },
      "78": {
        start: {
          line: 458,
          column: 22
        },
        end: {
          line: 458,
          column: 40
        }
      },
      "79": {
        start: {
          line: 459,
          column: 17
        },
        end: {
          line: 459,
          column: 30
        }
      },
      "80": {
        start: {
          line: 460,
          column: 4
        },
        end: {
          line: 462,
          column: 7
        }
      },
      "81": {
        start: {
          line: 463,
          column: 4
        },
        end: {
          line: 463,
          column: 63
        }
      },
      "82": {
        start: {
          line: 464,
          column: 4
        },
        end: {
          line: 464,
          column: 80
        }
      },
      "83": {
        start: {
          line: 499,
          column: 0
        },
        end: {
          line: 504,
          column: 5
        }
      },
      "84": {
        start: {
          line: 499,
          column: 78
        },
        end: {
          line: 504,
          column: 2
        }
      },
      "85": {
        start: {
          line: 500,
          column: 22
        },
        end: {
          line: 500,
          column: 40
        }
      },
      "86": {
        start: {
          line: 501,
          column: 4
        },
        end: {
          line: 501,
          column: 91
        }
      },
      "87": {
        start: {
          line: 502,
          column: 4
        },
        end: {
          line: 502,
          column: 66
        }
      },
      "88": {
        start: {
          line: 503,
          column: 4
        },
        end: {
          line: 503,
          column: 86
        }
      },
      "89": {
        start: {
          line: 505,
          column: 0
        },
        end: {
          line: 505,
          column: 25
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 2,
            column: 45
          }
        },
        loc: {
          start: {
            line: 2,
            column: 89
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "adopt",
        decl: {
          start: {
            line: 3,
            column: 13
          },
          end: {
            line: 3,
            column: 18
          }
        },
        loc: {
          start: {
            line: 3,
            column: 26
          },
          end: {
            line: 3,
            column: 112
          }
        },
        line: 3
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 3,
            column: 70
          },
          end: {
            line: 3,
            column: 71
          }
        },
        loc: {
          start: {
            line: 3,
            column: 89
          },
          end: {
            line: 3,
            column: 108
          }
        },
        line: 3
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 4,
            column: 36
          },
          end: {
            line: 4,
            column: 37
          }
        },
        loc: {
          start: {
            line: 4,
            column: 63
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 4
      },
      "4": {
        name: "fulfilled",
        decl: {
          start: {
            line: 5,
            column: 17
          },
          end: {
            line: 5,
            column: 26
          }
        },
        loc: {
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 99
          }
        },
        line: 5
      },
      "5": {
        name: "rejected",
        decl: {
          start: {
            line: 6,
            column: 17
          },
          end: {
            line: 6,
            column: 25
          }
        },
        loc: {
          start: {
            line: 6,
            column: 33
          },
          end: {
            line: 6,
            column: 102
          }
        },
        line: 6
      },
      "6": {
        name: "step",
        decl: {
          start: {
            line: 7,
            column: 17
          },
          end: {
            line: 7,
            column: 21
          }
        },
        loc: {
          start: {
            line: 7,
            column: 30
          },
          end: {
            line: 7,
            column: 118
          }
        },
        line: 7
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 46,
            column: 132
          },
          end: {
            line: 46,
            column: 133
          }
        },
        loc: {
          start: {
            line: 46,
            column: 146
          },
          end: {
            line: 50,
            column: 2
          }
        },
        line: 46
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 46,
            column: 180
          },
          end: {
            line: 46,
            column: 181
          }
        },
        loc: {
          start: {
            line: 46,
            column: 193
          },
          end: {
            line: 50,
            column: 1
          }
        },
        line: 46
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 119,
            column: 152
          },
          end: {
            line: 119,
            column: 153
          }
        },
        loc: {
          start: {
            line: 119,
            column: 166
          },
          end: {
            line: 123,
            column: 2
          }
        },
        line: 119
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 119,
            column: 200
          },
          end: {
            line: 119,
            column: 201
          }
        },
        loc: {
          start: {
            line: 119,
            column: 213
          },
          end: {
            line: 123,
            column: 1
          }
        },
        line: 119
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 182,
            column: 82
          },
          end: {
            line: 182,
            column: 83
          }
        },
        loc: {
          start: {
            line: 182,
            column: 96
          },
          end: {
            line: 186,
            column: 2
          }
        },
        line: 182
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 182,
            column: 130
          },
          end: {
            line: 182,
            column: 131
          }
        },
        loc: {
          start: {
            line: 182,
            column: 143
          },
          end: {
            line: 186,
            column: 1
          }
        },
        line: 182
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 223,
            column: 126
          },
          end: {
            line: 223,
            column: 127
          }
        },
        loc: {
          start: {
            line: 223,
            column: 140
          },
          end: {
            line: 227,
            column: 2
          }
        },
        line: 223
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 223,
            column: 174
          },
          end: {
            line: 223,
            column: 175
          }
        },
        loc: {
          start: {
            line: 223,
            column: 187
          },
          end: {
            line: 227,
            column: 1
          }
        },
        line: 223
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 246,
            column: 138
          },
          end: {
            line: 246,
            column: 139
          }
        },
        loc: {
          start: {
            line: 246,
            column: 152
          },
          end: {
            line: 250,
            column: 2
          }
        },
        line: 246
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 246,
            column: 186
          },
          end: {
            line: 246,
            column: 187
          }
        },
        loc: {
          start: {
            line: 246,
            column: 199
          },
          end: {
            line: 250,
            column: 1
          }
        },
        line: 246
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 282,
            column: 210
          },
          end: {
            line: 282,
            column: 211
          }
        },
        loc: {
          start: {
            line: 282,
            column: 224
          },
          end: {
            line: 290,
            column: 2
          }
        },
        line: 282
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 282,
            column: 258
          },
          end: {
            line: 282,
            column: 259
          }
        },
        loc: {
          start: {
            line: 282,
            column: 271
          },
          end: {
            line: 290,
            column: 1
          }
        },
        line: 282
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 314,
            column: 108
          },
          end: {
            line: 314,
            column: 109
          }
        },
        loc: {
          start: {
            line: 314,
            column: 122
          },
          end: {
            line: 318,
            column: 2
          }
        },
        line: 314
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 314,
            column: 156
          },
          end: {
            line: 314,
            column: 157
          }
        },
        loc: {
          start: {
            line: 314,
            column: 169
          },
          end: {
            line: 318,
            column: 1
          }
        },
        line: 314
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 351,
            column: 103
          },
          end: {
            line: 351,
            column: 104
          }
        },
        loc: {
          start: {
            line: 351,
            column: 117
          },
          end: {
            line: 362,
            column: 2
          }
        },
        line: 351
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 351,
            column: 151
          },
          end: {
            line: 351,
            column: 152
          }
        },
        loc: {
          start: {
            line: 351,
            column: 164
          },
          end: {
            line: 362,
            column: 1
          }
        },
        line: 351
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 386,
            column: 102
          },
          end: {
            line: 386,
            column: 103
          }
        },
        loc: {
          start: {
            line: 386,
            column: 116
          },
          end: {
            line: 394,
            column: 2
          }
        },
        line: 386
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 386,
            column: 150
          },
          end: {
            line: 386,
            column: 151
          }
        },
        loc: {
          start: {
            line: 386,
            column: 163
          },
          end: {
            line: 394,
            column: 1
          }
        },
        line: 386
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 421,
            column: 65
          },
          end: {
            line: 421,
            column: 66
          }
        },
        loc: {
          start: {
            line: 421,
            column: 79
          },
          end: {
            line: 426,
            column: 2
          }
        },
        line: 421
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 421,
            column: 113
          },
          end: {
            line: 421,
            column: 114
          }
        },
        loc: {
          start: {
            line: 421,
            column: 126
          },
          end: {
            line: 426,
            column: 1
          }
        },
        line: 421
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 457,
            column: 61
          },
          end: {
            line: 457,
            column: 62
          }
        },
        loc: {
          start: {
            line: 457,
            column: 75
          },
          end: {
            line: 465,
            column: 2
          }
        },
        line: 457
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 457,
            column: 109
          },
          end: {
            line: 457,
            column: 110
          }
        },
        loc: {
          start: {
            line: 457,
            column: 122
          },
          end: {
            line: 465,
            column: 1
          }
        },
        line: 457
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 499,
            column: 64
          },
          end: {
            line: 499,
            column: 65
          }
        },
        loc: {
          start: {
            line: 499,
            column: 78
          },
          end: {
            line: 504,
            column: 2
          }
        },
        line: 499
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 499,
            column: 112
          },
          end: {
            line: 499,
            column: 113
          }
        },
        loc: {
          start: {
            line: 499,
            column: 125
          },
          end: {
            line: 504,
            column: 1
          }
        },
        line: 499
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 16
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 17
          },
          end: {
            line: 2,
            column: 21
          }
        }, {
          start: {
            line: 2,
            column: 25
          },
          end: {
            line: 2,
            column: 39
          }
        }, {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 35
          },
          end: {
            line: 3,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 56
          },
          end: {
            line: 3,
            column: 61
          }
        }, {
          start: {
            line: 3,
            column: 64
          },
          end: {
            line: 3,
            column: 109
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 17
          }
        }, {
          start: {
            line: 4,
            column: 22
          },
          end: {
            line: 4,
            column: 33
          }
        }],
        line: 4
      },
      "3": {
        loc: {
          start: {
            line: 7,
            column: 32
          },
          end: {
            line: 7,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 7,
            column: 46
          },
          end: {
            line: 7,
            column: 67
          }
        }, {
          start: {
            line: 7,
            column: 70
          },
          end: {
            line: 7,
            column: 115
          }
        }],
        line: 7
      },
      "4": {
        loc: {
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 61
          }
        }, {
          start: {
            line: 8,
            column: 65
          },
          end: {
            line: 8,
            column: 67
          }
        }],
        line: 8
      },
      "5": {
        loc: {
          start: {
            line: 286,
            column: 31
          },
          end: {
            line: 286,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 286,
            column: 75
          },
          end: {
            line: 286,
            column: 81
          }
        }, {
          start: {
            line: 286,
            column: 84
          },
          end: {
            line: 286,
            column: 96
          }
        }],
        line: 286
      },
      "6": {
        loc: {
          start: {
            line: 286,
            column: 31
          },
          end: {
            line: 286,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 286,
            column: 31
          },
          end: {
            line: 286,
            column: 55
          }
        }, {
          start: {
            line: 286,
            column: 59
          },
          end: {
            line: 286,
            column: 72
          }
        }],
        line: 286
      },
      "7": {
        loc: {
          start: {
            line: 356,
            column: 38
          },
          end: {
            line: 356,
            column: 103
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 356,
            column: 82
          },
          end: {
            line: 356,
            column: 88
          }
        }, {
          start: {
            line: 356,
            column: 91
          },
          end: {
            line: 356,
            column: 103
          }
        }],
        line: 356
      },
      "8": {
        loc: {
          start: {
            line: 356,
            column: 38
          },
          end: {
            line: 356,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 356,
            column: 38
          },
          end: {
            line: 356,
            column: 62
          }
        }, {
          start: {
            line: 356,
            column: 66
          },
          end: {
            line: 356,
            column: 79
          }
        }],
        line: 356
      },
      "9": {
        loc: {
          start: {
            line: 390,
            column: 31
          },
          end: {
            line: 390,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 390,
            column: 75
          },
          end: {
            line: 390,
            column: 81
          }
        }, {
          start: {
            line: 390,
            column: 84
          },
          end: {
            line: 390,
            column: 96
          }
        }],
        line: 390
      },
      "10": {
        loc: {
          start: {
            line: 390,
            column: 31
          },
          end: {
            line: 390,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 390,
            column: 31
          },
          end: {
            line: 390,
            column: 55
          }
        }, {
          start: {
            line: 390,
            column: 59
          },
          end: {
            line: 390,
            column: 72
          }
        }],
        line: 390
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\routes\\authRoutes.ts",
      mappings: ";;;;;;;;;;;AAAA,qCAA6D;AAC7D,iEAA8D;AAC9D,6EAA0E;AAC1E,6DAA0D;AAC1D,6DAAmD;AACnD,kEAKoC;AACpC,kEAauC;AAEvC,MAAM,MAAM,GAAG,IAAA,gBAAM,GAAE,CAAC;AAExB;;;;;GAKG;AAEH;;;;;;;;;;;;;;;;;;;GAmBG;AACH,MAAM,CAAC,IAAI,CACT,WAAW,EACX,IAAA,+BAAQ,EAAC,kCAAc,CAAC,EACxB,IAAA,2BAAY,EAAC,CAAO,GAAY,EAAE,GAAa,EAAE,EAAE;IACjD,sBAAM,CAAC,OAAO,CAAC,qBAAqB,EAAE,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAC1D,MAAM,IAAA,mCAAkB,EAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IACnC,sBAAM,CAAC,OAAO,CAAC,kBAAkB,EAAE,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACzD,CAAC,CAAA,CAAC,CACH,CAAC;AAEF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAmEG;AACH,MAAM,CAAC,IAAI,CACT,uBAAuB,EACvB,IAAA,+BAAQ,EAAC,0CAAsB,CAAC,EAChC,IAAA,2BAAY,EAAC,CAAO,GAAY,EAAE,GAAa,EAAE,EAAE;IACjD,sBAAM,CAAC,OAAO,CAAC,oCAAoC,EAAE,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACzE,MAAM,IAAA,mDAAkC,EAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IACnD,sBAAM,CAAC,OAAO,CAAC,+BAA+B,EAAE,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACtE,CAAC,CAAA,CAAC,CACH,CAAC;AAEF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAyDG;AACH,MAAM,CAAC,IAAI,CACT,mCAAmC,EACnC,IAAA,2BAAY,EAAC,CAAO,GAAY,EAAE,GAAa,EAAE,EAAE;IACjD,sBAAM,CAAC,OAAO,CAAC,mCAAmC,EAAE,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACxE,MAAM,IAAA,wDAAuC,EAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IACxD,sBAAM,CAAC,OAAO,CAAC,kCAAkC,EAAE,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACzE,CAAC,CAAA,CAAC,CACH,CAAC;AAEF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAmCG;AACH,MAAM,CAAC,IAAI,CACT,QAAQ,EACR,IAAA,+BAAQ,EAAC,+BAAW,CAAC,EACrB,IAAA,2BAAY,EAAC,CAAO,GAAY,EAAE,GAAa,EAAE,EAAE;IACjD,sBAAM,CAAC,OAAO,CAAC,kBAAkB,EAAE,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACvD,MAAM,IAAA,gCAAe,EAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAChC,sBAAM,CAAC,OAAO,CAAC,eAAe,EAAE,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACtD,CAAC,CAAA,CAAC,CACH,CAAC;AAEF;;;;;;;;;;;;;;;;;GAiBG;AACH,MAAM,CAAC,IAAI,CACT,iBAAiB,EACjB,IAAA,+BAAQ,EAAC,kCAAc,CAAC,EACxB,IAAA,2BAAY,EAAC,CAAO,GAAY,EAAE,GAAa,EAAE,EAAE;IACjD,sBAAM,CAAC,OAAO,CAAC,+BAA+B,EAAE,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACpE,MAAM,IAAA,wCAAuB,EAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IACxC,sBAAM,CAAC,OAAO,CAAC,4BAA4B,EAAE,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACnE,CAAC,CAAA,CAAC,CACH,CAAC;AAEF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA8BG;AACH,MAAM,CAAC,GAAG,CACR,oBAAoB,EACpB,+BAAc,EACd,iCAAU,EACV,IAAA,+BAAQ,EAAC,oCAAgB,CAAC,EAC1B,IAAA,2BAAY,EAAC,CAAO,GAAY,EAAE,GAAa,EAAE,EAAE;;IACjD,MAAM,SAAS,GAAG,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC;IACvC,sBAAM,CAAC,OAAO,CAAC,qCAAqC,EAAE,SAAS,EAAE;QAC/D,QAAQ,EAAE,EAAE,SAAS,EAAE,MAAC,GAAW,CAAC,IAAI,0CAAE,SAAS,EAAE;KACtD,CAAC,CAAC;IACH,MAAM,IAAA,4CAA2B,EAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC5C,sBAAM,CAAC,OAAO,CAAC,kCAAkC,EAAE,SAAS,CAAC,CAAC;AAChE,CAAC,CAAA,CAAC,CACH,CAAC;AAEF;;;;;;;;;;;;;;;;;;;;;;GAsBG;AACH,MAAM,CAAC,GAAG,CACR,6BAA6B,EAC7B,+BAAc,EACd,IAAA,2BAAY,EAAC,CAAO,GAAY,EAAE,GAAa,EAAE,EAAE;IACjD,MAAM,SAAS,GAAG,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC;IACvC,sBAAM,CAAC,OAAO,CAAC,iCAAiC,EAAE,SAAS,CAAC,CAAC;IAC7D,MAAM,IAAA,sCAAqB,EAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AACxC,CAAC,CAAA,CAAC,CACH,CAAC;AAEF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA+BG;AACH,MAAM,CAAC,IAAI,CACT,uBAAuB,EACvB,+BAAc,EACd,IAAA,2BAAY,EAAC,CAAO,GAAY,EAAE,GAAa,EAAE,EAAE;;IACjD,MAAM,SAAS,GAAG,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC;IACvC,MAAM,OAAO,GAAG,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;IACjC,sBAAM,CAAC,OAAO,CAAC,4BAA4B,EAAE,SAAS,EAAE;QACtD,QAAQ,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,MAAC,GAAW,CAAC,IAAI,0CAAE,SAAS,EAAE;KAC7D,CAAC,CAAC;IACH,MAAM,IAAA,yCAAwB,EAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IACzC,sBAAM,CAAC,OAAO,CAAC,8BAA8B,EAAE,SAAS,EAAE;QACxD,QAAQ,EAAE,EAAE,OAAO,EAAE;KACtB,CAAC,CAAC;AACL,CAAC,CAAA,CAAC,CACH,CAAC;AAEF;;;;;;;;;;;;;;;;;;;;;;GAsBG;AACH,MAAM,CAAC,MAAM,CACX,oBAAoB,EACpB,+BAAc,EACd,IAAA,2BAAY,EAAC,CAAO,GAAY,EAAE,GAAa,EAAE,EAAE;;IACjD,MAAM,SAAS,GAAG,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC;IACvC,sBAAM,CAAC,OAAO,CAAC,mCAAmC,EAAE,SAAS,EAAE;QAC7D,QAAQ,EAAE,EAAE,SAAS,EAAE,MAAC,GAAW,CAAC,IAAI,0CAAE,SAAS,EAAE;KACtD,CAAC,CAAC;IACH,MAAM,IAAA,4CAA2B,EAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC5C,sBAAM,CAAC,OAAO,CAAC,gCAAgC,EAAE,SAAS,CAAC,CAAC;AAC9D,CAAC,CAAA,CAAC,CACH,CAAC;AAEF;;;;;;;;;;;;;;;;;;;;;;;;;GAyBG;AACH,MAAM,CAAC,IAAI,CACT,kBAAkB,EAClB,IAAA,2BAAY,EAAC,CAAO,GAAY,EAAE,GAAa,EAAE,EAAE;IACjD,MAAM,SAAS,GAAG,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;IACrC,sBAAM,CAAC,OAAO,CAAC,yCAAyC,EAAE,SAAS,CAAC,CAAC;IACrE,MAAM,IAAA,yCAAwB,EAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IACzC,sBAAM,CAAC,OAAO,CAAC,gCAAgC,EAAE,SAAS,CAAC,CAAC;AAC9D,CAAC,CAAA,CAAC,CACH,CAAC;AAEF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA6BG;AACH,MAAM,CAAC,IAAI,CACT,cAAc,EACd,IAAA,2BAAY,EAAC,CAAO,GAAY,EAAE,GAAa,EAAE,EAAE;IACjD,MAAM,SAAS,GAAG,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;IACrC,MAAM,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;IAC3B,sBAAM,CAAC,OAAO,CAAC,mCAAmC,EAAE,SAAS,EAAE;QAC7D,QAAQ,EAAE,EAAE,IAAI,EAAE;KACnB,CAAC,CAAC;IACH,MAAM,IAAA,qCAAoB,EAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IACrC,sBAAM,CAAC,OAAO,CAAC,gCAAgC,EAAE,SAAS,CAAC,CAAC;AAC9D,CAAC,CAAA,CAAC,CACH,CAAC;AAEF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAgCG;AACH,MAAM,CAAC,IAAI,CACT,iBAAiB,EACjB,IAAA,2BAAY,EAAC,CAAO,GAAY,EAAE,GAAa,EAAE,EAAE;IACjD,MAAM,SAAS,GAAG,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;IACrC,sBAAM,CAAC,OAAO,CAAC,2CAA2C,EAAE,SAAS,CAAC,CAAC;IACvE,MAAM,IAAA,wCAAuB,EAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IACxC,sBAAM,CAAC,OAAO,CAAC,sCAAsC,EAAE,SAAS,CAAC,CAAC;AACpE,CAAC,CAAA,CAAC,CACH,CAAC;AAEF,kBAAe,MAAM,CAAC",
      names: [],
      sources: ["C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\routes\\authRoutes.ts"],
      sourcesContent: ["import express, { Request, Response, Router } from 'express';\r\nimport { authMiddleware } from '../middleware/authMiddleware';\r\nimport { validate, validateId } from '../middleware/validationMiddleware';\r\nimport { asyncHandler } from '../middleware/errorHandler';\r\nimport { logger } from '../services/loggerService';\r\nimport {\r\n  registerSchema,\r\n  loginSchema,\r\n  updateUserSchema,\r\n  musicianRegisterSchema,\r\n} from '../utils/validationSchemas';\r\nimport {\r\n  emailRegisterController,\r\n  loginController,\r\n  registerController,\r\n  updateUserByEmailController,\r\n  validNumberGetByEmail,\r\n  addEventToUserController,\r\n  deleteUserByEmailController,\r\n  forgotPasswordController,\r\n  verifyCodeController,\r\n  resetPasswordController,\r\n  requestEmailVerificationController,\r\n  verifyAndCompleteRegistrationController,\r\n} from '../controllers/authController';\r\n\r\nconst router = Router();\r\n\r\n/**\r\n * @swagger\r\n * tags:\r\n *   name: Auth\r\n *   description: Endpoints de autenticaci\xF3n y gesti\xF3n de usuario\r\n */\r\n\r\n/**\r\n * @swagger\r\n * /auth/Register:\r\n *   post:\r\n *     tags: [Auth]\r\n *     summary: Registro de usuario\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             $ref: '#/components/schemas/AuthUserRegister'\r\n *     responses:\r\n *       201:\r\n *         description: Usuario registrado exitosamente\r\n *       400:\r\n *         description: Datos de entrada inv\xE1lidos\r\n *       409:\r\n *         description: Usuario ya existe\r\n */\r\nrouter.post(\r\n  '/Register',\r\n  validate(registerSchema),\r\n  asyncHandler(async (req: Request, res: Response) => {\r\n    logger.logAuth('Intento de registro', req.body.userEmail);\r\n    await registerController(req, res);\r\n    logger.logAuth('Registro exitoso', req.body.userEmail);\r\n  })\r\n);\r\n\r\n/**\r\n * @swagger\r\n * /auth/request-verification:\r\n *   post:\r\n *     tags: [Auth]\r\n *     summary: Solicitar verificaci\xF3n de email para registro\r\n *     description: Env\xEDa un c\xF3digo de verificaci\xF3n al email para completar el registro de m\xFAsicos o creadores de eventos.\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             type: object\r\n *             required:\r\n *               - name\r\n *               - lastName\r\n *               - userEmail\r\n *               - userPassword\r\n *               - roll\r\n *             properties:\r\n *               name:\r\n *                 type: string\r\n *                 minLength: 2\r\n *                 maxLength: 50\r\n *                 description: Nombre del usuario\r\n *               lastName:\r\n *                 type: string\r\n *                 minLength: 2\r\n *                 maxLength: 50\r\n *                 description: Apellido del usuario\r\n *               userEmail:\r\n *                 type: string\r\n *                 format: email\r\n *                 description: Email del usuario\r\n *               userPassword:\r\n *                 type: string\r\n *                 minLength: 8\r\n *                 description: Contrase\xF1a del usuario\r\n *               roll:\r\n *                 type: string\r\n *                 enum: [musico, eventCreator]\r\n *                 description: Rol del usuario (m\xFAsico o creador de eventos)\r\n *     responses:\r\n *       200:\r\n *         description: Email de verificaci\xF3n enviado exitosamente\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 message:\r\n *                   type: string\r\n *                 data:\r\n *                   type: object\r\n *                   properties:\r\n *                     userEmail:\r\n *                       type: string\r\n *                     roll:\r\n *                       type: string\r\n *                     expiresIn:\r\n *                       type: string\r\n *       400:\r\n *         description: Datos de entrada inv\xE1lidos\r\n *       409:\r\n *         description: Usuario ya existe\r\n */\r\nrouter.post(\r\n  '/request-verification',\r\n  validate(musicianRegisterSchema),\r\n  asyncHandler(async (req: Request, res: Response) => {\r\n    logger.logAuth('Solicitud de verificaci\xF3n de email', req.body.userEmail);\r\n    await requestEmailVerificationController(req, res);\r\n    logger.logAuth('Email de verificaci\xF3n enviado', req.body.userEmail);\r\n  })\r\n);\r\n\r\n/**\r\n * @swagger\r\n * /auth/verify-and-complete-registration:\r\n *   post:\r\n *     tags: [Auth]\r\n *     summary: Verificar c\xF3digo y completar registro\r\n *     description: Verifica el c\xF3digo enviado por email y completa el registro del usuario.\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             type: object\r\n *             required:\r\n *               - userEmail\r\n *               - code\r\n *             properties:\r\n *               userEmail:\r\n *                 type: string\r\n *                 format: email\r\n *                 description: Email del usuario\r\n *               code:\r\n *                 type: string\r\n *                 minLength: 6\r\n *                 maxLength: 6\r\n *                 description: C\xF3digo de verificaci\xF3n enviado por email\r\n *     responses:\r\n *       201:\r\n *         description: Usuario registrado exitosamente\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 message:\r\n *                   type: string\r\n *                 data:\r\n *                   type: object\r\n *                   properties:\r\n *                     userEmail:\r\n *                       type: string\r\n *                     name:\r\n *                       type: string\r\n *                     lastName:\r\n *                       type: string\r\n *                     roll:\r\n *                       type: string\r\n *                     status:\r\n *                       type: string\r\n *                     token:\r\n *                       type: string\r\n *       400:\r\n *         description: C\xF3digo inv\xE1lido o expirado\r\n *       404:\r\n *         description: Datos de registro no encontrados\r\n */\r\nrouter.post(\r\n  '/verify-and-complete-registration',\r\n  asyncHandler(async (req: Request, res: Response) => {\r\n    logger.logAuth('Verificaci\xF3n de c\xF3digo solicitada', req.body.userEmail);\r\n    await verifyAndCompleteRegistrationController(req, res);\r\n    logger.logAuth('Registro completado exitosamente', req.body.userEmail);\r\n  })\r\n);\r\n\r\n/**\r\n * @swagger\r\n * /auth/login:\r\n *   post:\r\n *     tags: [Auth]\r\n *     summary: Login de usuario\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             type: object\r\n *             properties:\r\n *               userEmail:\r\n *                 type: string\r\n *                 format: email\r\n *               userPassword:\r\n *                 type: string\r\n *                 minLength: 6\r\n *     responses:\r\n *       200:\r\n *         description: Login exitoso\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 msg:\r\n *                   type: string\r\n *                 token:\r\n *                   type: string\r\n *       401:\r\n *         description: Credenciales incorrectas\r\n *       400:\r\n *         description: Datos de entrada inv\xE1lidos\r\n */\r\nrouter.post(\r\n  '/login',\r\n  validate(loginSchema),\r\n  asyncHandler(async (req: Request, res: Response) => {\r\n    logger.logAuth('Intento de login', req.body.userEmail);\r\n    await loginController(req, res);\r\n    logger.logAuth('Login exitoso', req.body.userEmail);\r\n  })\r\n);\r\n\r\n/**\r\n * @swagger\r\n * /auth/email-register:\r\n *   post:\r\n *     tags: [Auth]\r\n *     summary: Registro con email\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             $ref: '#/components/schemas/AuthUserRegister'\r\n *     responses:\r\n *       201:\r\n *         description: Usuario registrado exitosamente\r\n *       400:\r\n *         description: Datos de entrada inv\xE1lidos\r\n */\r\nrouter.post(\r\n  '/email-register',\r\n  validate(registerSchema),\r\n  asyncHandler(async (req: Request, res: Response) => {\r\n    logger.logAuth('Intento de registro con email', req.body.userEmail);\r\n    await emailRegisterController(req, res);\r\n    logger.logAuth('Registro con email exitoso', req.body.userEmail);\r\n  })\r\n);\r\n\r\n/**\r\n * @swagger\r\n * /auth/update/{userEmail}:\r\n *   put:\r\n *     tags: [Auth]\r\n *     summary: Actualizar usuario por email\r\n *     security:\r\n *       - bearerAuth: []\r\n *     parameters:\r\n *       - in: path\r\n *         name: userEmail\r\n *         required: true\r\n *         schema:\r\n *           type: string\r\n *           format: email\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             $ref: '#/components/schemas/UpdateUser'\r\n *     responses:\r\n *       200:\r\n *         description: Usuario actualizado exitosamente\r\n *       400:\r\n *         description: Datos de entrada inv\xE1lidos\r\n *       401:\r\n *         description: No autorizado\r\n *       404:\r\n *         description: Usuario no encontrado\r\n */\r\nrouter.put(\r\n  '/update/:userEmail',\r\n  authMiddleware,\r\n  validateId,\r\n  validate(updateUserSchema),\r\n  asyncHandler(async (req: Request, res: Response) => {\r\n    const userEmail = req.params.userEmail;\r\n    logger.logAuth('Intento de actualizaci\xF3n de usuario', userEmail, {\r\n      metadata: { updatedBy: (req as any).user?.userEmail },\r\n    });\r\n    await updateUserByEmailController(req, res);\r\n    logger.logAuth('Actualizaci\xF3n de usuario exitosa', userEmail);\r\n  })\r\n);\r\n\r\n/**\r\n * @swagger\r\n * /auth/validate-number/{userEmail}:\r\n *   get:\r\n *     tags: [Auth]\r\n *     summary: Validar n\xFAmero de tel\xE9fono por email\r\n *     security:\r\n *       - bearerAuth: []\r\n *     parameters:\r\n *       - in: path\r\n *         name: userEmail\r\n *         required: true\r\n *         schema:\r\n *           type: string\r\n *           format: email\r\n *     responses:\r\n *       200:\r\n *         description: N\xFAmero validado exitosamente\r\n *       401:\r\n *         description: No autorizado\r\n *       404:\r\n *         description: Usuario no encontrado\r\n */\r\nrouter.get(\r\n  '/validate-number/:userEmail',\r\n  authMiddleware,\r\n  asyncHandler(async (req: Request, res: Response) => {\r\n    const userEmail = req.params.userEmail;\r\n    logger.logAuth('Validaci\xF3n de n\xFAmero solicitada', userEmail);\r\n    await validNumberGetByEmail(req, res);\r\n  })\r\n);\r\n\r\n/**\r\n * @swagger\r\n * /auth/add-event/{userEmail}:\r\n *   post:\r\n *     tags: [Auth]\r\n *     summary: Agregar evento a usuario\r\n *     security:\r\n *       - bearerAuth: []\r\n *     parameters:\r\n *       - in: path\r\n *         name: userEmail\r\n *         required: true\r\n *         schema:\r\n *           type: string\r\n *           format: email\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             type: object\r\n *             properties:\r\n *               eventId:\r\n *                 type: string\r\n *     responses:\r\n *       200:\r\n *         description: Evento agregado exitosamente\r\n *       401:\r\n *         description: No autorizado\r\n *       404:\r\n *         description: Usuario o evento no encontrado\r\n */\r\nrouter.post(\r\n  '/add-event/:userEmail',\r\n  authMiddleware,\r\n  asyncHandler(async (req: Request, res: Response) => {\r\n    const userEmail = req.params.userEmail;\r\n    const eventId = req.body.eventId;\r\n    logger.logAuth('Agregando evento a usuario', userEmail, {\r\n      metadata: { eventId, addedBy: (req as any).user?.userEmail },\r\n    });\r\n    await addEventToUserController(req, res);\r\n    logger.logAuth('Evento agregado exitosamente', userEmail, {\r\n      metadata: { eventId },\r\n    });\r\n  })\r\n);\r\n\r\n/**\r\n * @swagger\r\n * /auth/delete/{userEmail}:\r\n *   delete:\r\n *     tags: [Auth]\r\n *     summary: Eliminar usuario por email\r\n *     security:\r\n *       - bearerAuth: []\r\n *     parameters:\r\n *       - in: path\r\n *         name: userEmail\r\n *         required: true\r\n *         schema:\r\n *           type: string\r\n *           format: email\r\n *     responses:\r\n *       200:\r\n *         description: Usuario eliminado exitosamente\r\n *       401:\r\n *         description: No autorizado\r\n *       404:\r\n *         description: Usuario no encontrado\r\n */\r\nrouter.delete(\r\n  '/delete/:userEmail',\r\n  authMiddleware,\r\n  asyncHandler(async (req: Request, res: Response) => {\r\n    const userEmail = req.params.userEmail;\r\n    logger.logAuth('Eliminaci\xF3n de usuario solicitada', userEmail, {\r\n      metadata: { deletedBy: (req as any).user?.userEmail },\r\n    });\r\n    await deleteUserByEmailController(req, res);\r\n    logger.logAuth('Usuario eliminado exitosamente', userEmail);\r\n  })\r\n);\r\n\r\n/**\r\n * @swagger\r\n * /auth/forgot-password:\r\n *   post:\r\n *     tags: [Auth]\r\n *     summary: Solicitar recuperaci\xF3n de contrase\xF1a (solo superadmin)\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             type: object\r\n *             properties:\r\n *               userEmail:\r\n *                 type: string\r\n *                 format: email\r\n *     responses:\r\n *       200:\r\n *         description: C\xF3digo de verificaci\xF3n enviado\r\n *       400:\r\n *         description: Email inv\xE1lido\r\n *       403:\r\n *         description: Solo superadmin puede recuperar contrase\xF1a\r\n *       404:\r\n *         description: Usuario no encontrado\r\n */\r\nrouter.post(\r\n  '/forgot-password',\r\n  asyncHandler(async (req: Request, res: Response) => {\r\n    const userEmail = req.body.userEmail;\r\n    logger.logAuth('Solicitud de recuperaci\xF3n de contrase\xF1a', userEmail);\r\n    await forgotPasswordController(req, res);\r\n    logger.logAuth('C\xF3digo de verificaci\xF3n enviado', userEmail);\r\n  })\r\n);\r\n\r\n/**\r\n * @swagger\r\n * /auth/verify-code:\r\n *   post:\r\n *     tags: [Auth]\r\n *     summary: Verificar c\xF3digo de recuperaci\xF3n\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             type: object\r\n *             properties:\r\n *               userEmail:\r\n *                 type: string\r\n *                 format: email\r\n *               code:\r\n *                 type: string\r\n *                 minLength: 6\r\n *                 maxLength: 6\r\n *     responses:\r\n *       200:\r\n *         description: C\xF3digo verificado correctamente\r\n *       400:\r\n *         description: C\xF3digo inv\xE1lido o expirado\r\n *       403:\r\n *         description: Solo superadmin puede recuperar contrase\xF1a\r\n *       404:\r\n *         description: Usuario no encontrado\r\n */\r\nrouter.post(\r\n  '/verify-code',\r\n  asyncHandler(async (req: Request, res: Response) => {\r\n    const userEmail = req.body.userEmail;\r\n    const code = req.body.code;\r\n    logger.logAuth('Verificaci\xF3n de c\xF3digo solicitada', userEmail, {\r\n      metadata: { code },\r\n    });\r\n    await verifyCodeController(req, res);\r\n    logger.logAuth('C\xF3digo verificado exitosamente', userEmail);\r\n  })\r\n);\r\n\r\n/**\r\n * @swagger\r\n * /auth/reset-password:\r\n *   post:\r\n *     tags: [Auth]\r\n *     summary: Restablecer contrase\xF1a\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             type: object\r\n *             properties:\r\n *               userEmail:\r\n *                 type: string\r\n *                 format: email\r\n *               code:\r\n *                 type: string\r\n *                 minLength: 6\r\n *                 maxLength: 6\r\n *               newPassword:\r\n *                 type: string\r\n *                 minLength: 6\r\n *     responses:\r\n *       200:\r\n *         description: Contrase\xF1a actualizada correctamente\r\n *       400:\r\n *         description: C\xF3digo inv\xE1lido o contrase\xF1a d\xE9bil\r\n *       403:\r\n *         description: Solo superadmin puede recuperar contrase\xF1a\r\n *       404:\r\n *         description: Usuario no encontrado\r\n */\r\nrouter.post(\r\n  '/reset-password',\r\n  asyncHandler(async (req: Request, res: Response) => {\r\n    const userEmail = req.body.userEmail;\r\n    logger.logAuth('Restablecimiento de contrase\xF1a solicitado', userEmail);\r\n    await resetPasswordController(req, res);\r\n    logger.logAuth('Contrase\xF1a restablecida exitosamente', userEmail);\r\n  })\r\n);\r\n\r\nexport default router;\r\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f4dd1161448ff2943971d0b5495fe2dcca42c18e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_3b06ulla2 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_3b06ulla2();
var __awaiter =
/* istanbul ignore next */
(cov_3b06ulla2().s[0]++,
/* istanbul ignore next */
(cov_3b06ulla2().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_3b06ulla2().b[0][1]++, this.__awaiter) ||
/* istanbul ignore next */
(cov_3b06ulla2().b[0][2]++, function (thisArg, _arguments, P, generator) {
  /* istanbul ignore next */
  cov_3b06ulla2().f[0]++;
  function adopt(value) {
    /* istanbul ignore next */
    cov_3b06ulla2().f[1]++;
    cov_3b06ulla2().s[1]++;
    return value instanceof P ?
    /* istanbul ignore next */
    (cov_3b06ulla2().b[1][0]++, value) :
    /* istanbul ignore next */
    (cov_3b06ulla2().b[1][1]++, new P(function (resolve) {
      /* istanbul ignore next */
      cov_3b06ulla2().f[2]++;
      cov_3b06ulla2().s[2]++;
      resolve(value);
    }));
  }
  /* istanbul ignore next */
  cov_3b06ulla2().s[3]++;
  return new (
  /* istanbul ignore next */
  (cov_3b06ulla2().b[2][0]++, P) ||
  /* istanbul ignore next */
  (cov_3b06ulla2().b[2][1]++, P = Promise))(function (resolve, reject) {
    /* istanbul ignore next */
    cov_3b06ulla2().f[3]++;
    function fulfilled(value) {
      /* istanbul ignore next */
      cov_3b06ulla2().f[4]++;
      cov_3b06ulla2().s[4]++;
      try {
        /* istanbul ignore next */
        cov_3b06ulla2().s[5]++;
        step(generator.next(value));
      } catch (e) {
        /* istanbul ignore next */
        cov_3b06ulla2().s[6]++;
        reject(e);
      }
    }
    function rejected(value) {
      /* istanbul ignore next */
      cov_3b06ulla2().f[5]++;
      cov_3b06ulla2().s[7]++;
      try {
        /* istanbul ignore next */
        cov_3b06ulla2().s[8]++;
        step(generator["throw"](value));
      } catch (e) {
        /* istanbul ignore next */
        cov_3b06ulla2().s[9]++;
        reject(e);
      }
    }
    function step(result) {
      /* istanbul ignore next */
      cov_3b06ulla2().f[6]++;
      cov_3b06ulla2().s[10]++;
      result.done ?
      /* istanbul ignore next */
      (cov_3b06ulla2().b[3][0]++, resolve(result.value)) :
      /* istanbul ignore next */
      (cov_3b06ulla2().b[3][1]++, adopt(result.value).then(fulfilled, rejected));
    }
    /* istanbul ignore next */
    cov_3b06ulla2().s[11]++;
    step((generator = generator.apply(thisArg,
    /* istanbul ignore next */
    (cov_3b06ulla2().b[4][0]++, _arguments) ||
    /* istanbul ignore next */
    (cov_3b06ulla2().b[4][1]++, []))).next());
  });
}));
/* istanbul ignore next */
cov_3b06ulla2().s[12]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const express_1 =
/* istanbul ignore next */
(cov_3b06ulla2().s[13]++, require("express"));
const authMiddleware_1 =
/* istanbul ignore next */
(cov_3b06ulla2().s[14]++, require("../middleware/authMiddleware"));
const validationMiddleware_1 =
/* istanbul ignore next */
(cov_3b06ulla2().s[15]++, require("../middleware/validationMiddleware"));
const errorHandler_1 =
/* istanbul ignore next */
(cov_3b06ulla2().s[16]++, require("../middleware/errorHandler"));
const loggerService_1 =
/* istanbul ignore next */
(cov_3b06ulla2().s[17]++, require("../services/loggerService"));
const validationSchemas_1 =
/* istanbul ignore next */
(cov_3b06ulla2().s[18]++, require("../utils/validationSchemas"));
const authController_1 =
/* istanbul ignore next */
(cov_3b06ulla2().s[19]++, require("../controllers/authController"));
const router =
/* istanbul ignore next */
(cov_3b06ulla2().s[20]++, (0, express_1.Router)());
/**
 * @swagger
 * tags:
 *   name: Auth
 *   description: Endpoints de autenticación y gestión de usuario
 */
/**
 * @swagger
 * /auth/Register:
 *   post:
 *     tags: [Auth]
 *     summary: Registro de usuario
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             $ref: '#/components/schemas/AuthUserRegister'
 *     responses:
 *       201:
 *         description: Usuario registrado exitosamente
 *       400:
 *         description: Datos de entrada inválidos
 *       409:
 *         description: Usuario ya existe
 */
/* istanbul ignore next */
cov_3b06ulla2().s[21]++;
router.post('/Register', (0, validationMiddleware_1.validate)(validationSchemas_1.registerSchema), (0, errorHandler_1.asyncHandler)((req, res) => {
  /* istanbul ignore next */
  cov_3b06ulla2().f[7]++;
  cov_3b06ulla2().s[22]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_3b06ulla2().f[8]++;
    cov_3b06ulla2().s[23]++;
    loggerService_1.logger.logAuth('Intento de registro', req.body.userEmail);
    /* istanbul ignore next */
    cov_3b06ulla2().s[24]++;
    yield (0, authController_1.registerController)(req, res);
    /* istanbul ignore next */
    cov_3b06ulla2().s[25]++;
    loggerService_1.logger.logAuth('Registro exitoso', req.body.userEmail);
  });
}));
/**
 * @swagger
 * /auth/request-verification:
 *   post:
 *     tags: [Auth]
 *     summary: Solicitar verificación de email para registro
 *     description: Envía un código de verificación al email para completar el registro de músicos o creadores de eventos.
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             type: object
 *             required:
 *               - name
 *               - lastName
 *               - userEmail
 *               - userPassword
 *               - roll
 *             properties:
 *               name:
 *                 type: string
 *                 minLength: 2
 *                 maxLength: 50
 *                 description: Nombre del usuario
 *               lastName:
 *                 type: string
 *                 minLength: 2
 *                 maxLength: 50
 *                 description: Apellido del usuario
 *               userEmail:
 *                 type: string
 *                 format: email
 *                 description: Email del usuario
 *               userPassword:
 *                 type: string
 *                 minLength: 8
 *                 description: Contraseña del usuario
 *               roll:
 *                 type: string
 *                 enum: [musico, eventCreator]
 *                 description: Rol del usuario (músico o creador de eventos)
 *     responses:
 *       200:
 *         description: Email de verificación enviado exitosamente
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 message:
 *                   type: string
 *                 data:
 *                   type: object
 *                   properties:
 *                     userEmail:
 *                       type: string
 *                     roll:
 *                       type: string
 *                     expiresIn:
 *                       type: string
 *       400:
 *         description: Datos de entrada inválidos
 *       409:
 *         description: Usuario ya existe
 */
/* istanbul ignore next */
cov_3b06ulla2().s[26]++;
router.post('/request-verification', (0, validationMiddleware_1.validate)(validationSchemas_1.musicianRegisterSchema), (0, errorHandler_1.asyncHandler)((req, res) => {
  /* istanbul ignore next */
  cov_3b06ulla2().f[9]++;
  cov_3b06ulla2().s[27]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_3b06ulla2().f[10]++;
    cov_3b06ulla2().s[28]++;
    loggerService_1.logger.logAuth('Solicitud de verificación de email', req.body.userEmail);
    /* istanbul ignore next */
    cov_3b06ulla2().s[29]++;
    yield (0, authController_1.requestEmailVerificationController)(req, res);
    /* istanbul ignore next */
    cov_3b06ulla2().s[30]++;
    loggerService_1.logger.logAuth('Email de verificación enviado', req.body.userEmail);
  });
}));
/**
 * @swagger
 * /auth/verify-and-complete-registration:
 *   post:
 *     tags: [Auth]
 *     summary: Verificar código y completar registro
 *     description: Verifica el código enviado por email y completa el registro del usuario.
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             type: object
 *             required:
 *               - userEmail
 *               - code
 *             properties:
 *               userEmail:
 *                 type: string
 *                 format: email
 *                 description: Email del usuario
 *               code:
 *                 type: string
 *                 minLength: 6
 *                 maxLength: 6
 *                 description: Código de verificación enviado por email
 *     responses:
 *       201:
 *         description: Usuario registrado exitosamente
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 message:
 *                   type: string
 *                 data:
 *                   type: object
 *                   properties:
 *                     userEmail:
 *                       type: string
 *                     name:
 *                       type: string
 *                     lastName:
 *                       type: string
 *                     roll:
 *                       type: string
 *                     status:
 *                       type: string
 *                     token:
 *                       type: string
 *       400:
 *         description: Código inválido o expirado
 *       404:
 *         description: Datos de registro no encontrados
 */
/* istanbul ignore next */
cov_3b06ulla2().s[31]++;
router.post('/verify-and-complete-registration', (0, errorHandler_1.asyncHandler)((req, res) => {
  /* istanbul ignore next */
  cov_3b06ulla2().f[11]++;
  cov_3b06ulla2().s[32]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_3b06ulla2().f[12]++;
    cov_3b06ulla2().s[33]++;
    loggerService_1.logger.logAuth('Verificación de código solicitada', req.body.userEmail);
    /* istanbul ignore next */
    cov_3b06ulla2().s[34]++;
    yield (0, authController_1.verifyAndCompleteRegistrationController)(req, res);
    /* istanbul ignore next */
    cov_3b06ulla2().s[35]++;
    loggerService_1.logger.logAuth('Registro completado exitosamente', req.body.userEmail);
  });
}));
/**
 * @swagger
 * /auth/login:
 *   post:
 *     tags: [Auth]
 *     summary: Login de usuario
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             type: object
 *             properties:
 *               userEmail:
 *                 type: string
 *                 format: email
 *               userPassword:
 *                 type: string
 *                 minLength: 6
 *     responses:
 *       200:
 *         description: Login exitoso
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 msg:
 *                   type: string
 *                 token:
 *                   type: string
 *       401:
 *         description: Credenciales incorrectas
 *       400:
 *         description: Datos de entrada inválidos
 */
/* istanbul ignore next */
cov_3b06ulla2().s[36]++;
router.post('/login', (0, validationMiddleware_1.validate)(validationSchemas_1.loginSchema), (0, errorHandler_1.asyncHandler)((req, res) => {
  /* istanbul ignore next */
  cov_3b06ulla2().f[13]++;
  cov_3b06ulla2().s[37]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_3b06ulla2().f[14]++;
    cov_3b06ulla2().s[38]++;
    loggerService_1.logger.logAuth('Intento de login', req.body.userEmail);
    /* istanbul ignore next */
    cov_3b06ulla2().s[39]++;
    yield (0, authController_1.loginController)(req, res);
    /* istanbul ignore next */
    cov_3b06ulla2().s[40]++;
    loggerService_1.logger.logAuth('Login exitoso', req.body.userEmail);
  });
}));
/**
 * @swagger
 * /auth/email-register:
 *   post:
 *     tags: [Auth]
 *     summary: Registro con email
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             $ref: '#/components/schemas/AuthUserRegister'
 *     responses:
 *       201:
 *         description: Usuario registrado exitosamente
 *       400:
 *         description: Datos de entrada inválidos
 */
/* istanbul ignore next */
cov_3b06ulla2().s[41]++;
router.post('/email-register', (0, validationMiddleware_1.validate)(validationSchemas_1.registerSchema), (0, errorHandler_1.asyncHandler)((req, res) => {
  /* istanbul ignore next */
  cov_3b06ulla2().f[15]++;
  cov_3b06ulla2().s[42]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_3b06ulla2().f[16]++;
    cov_3b06ulla2().s[43]++;
    loggerService_1.logger.logAuth('Intento de registro con email', req.body.userEmail);
    /* istanbul ignore next */
    cov_3b06ulla2().s[44]++;
    yield (0, authController_1.emailRegisterController)(req, res);
    /* istanbul ignore next */
    cov_3b06ulla2().s[45]++;
    loggerService_1.logger.logAuth('Registro con email exitoso', req.body.userEmail);
  });
}));
/**
 * @swagger
 * /auth/update/{userEmail}:
 *   put:
 *     tags: [Auth]
 *     summary: Actualizar usuario por email
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: path
 *         name: userEmail
 *         required: true
 *         schema:
 *           type: string
 *           format: email
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             $ref: '#/components/schemas/UpdateUser'
 *     responses:
 *       200:
 *         description: Usuario actualizado exitosamente
 *       400:
 *         description: Datos de entrada inválidos
 *       401:
 *         description: No autorizado
 *       404:
 *         description: Usuario no encontrado
 */
/* istanbul ignore next */
cov_3b06ulla2().s[46]++;
router.put('/update/:userEmail', authMiddleware_1.authMiddleware, validationMiddleware_1.validateId, (0, validationMiddleware_1.validate)(validationSchemas_1.updateUserSchema), (0, errorHandler_1.asyncHandler)((req, res) => {
  /* istanbul ignore next */
  cov_3b06ulla2().f[17]++;
  cov_3b06ulla2().s[47]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_3b06ulla2().f[18]++;
    var _a;
    const userEmail =
    /* istanbul ignore next */
    (cov_3b06ulla2().s[48]++, req.params.userEmail);
    /* istanbul ignore next */
    cov_3b06ulla2().s[49]++;
    loggerService_1.logger.logAuth('Intento de actualización de usuario', userEmail, {
      metadata: {
        updatedBy:
        /* istanbul ignore next */
        (cov_3b06ulla2().b[6][0]++, (_a = req.user) === null) ||
        /* istanbul ignore next */
        (cov_3b06ulla2().b[6][1]++, _a === void 0) ?
        /* istanbul ignore next */
        (cov_3b06ulla2().b[5][0]++, void 0) :
        /* istanbul ignore next */
        (cov_3b06ulla2().b[5][1]++, _a.userEmail)
      }
    });
    /* istanbul ignore next */
    cov_3b06ulla2().s[50]++;
    yield (0, authController_1.updateUserByEmailController)(req, res);
    /* istanbul ignore next */
    cov_3b06ulla2().s[51]++;
    loggerService_1.logger.logAuth('Actualización de usuario exitosa', userEmail);
  });
}));
/**
 * @swagger
 * /auth/validate-number/{userEmail}:
 *   get:
 *     tags: [Auth]
 *     summary: Validar número de teléfono por email
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: path
 *         name: userEmail
 *         required: true
 *         schema:
 *           type: string
 *           format: email
 *     responses:
 *       200:
 *         description: Número validado exitosamente
 *       401:
 *         description: No autorizado
 *       404:
 *         description: Usuario no encontrado
 */
/* istanbul ignore next */
cov_3b06ulla2().s[52]++;
router.get('/validate-number/:userEmail', authMiddleware_1.authMiddleware, (0, errorHandler_1.asyncHandler)((req, res) => {
  /* istanbul ignore next */
  cov_3b06ulla2().f[19]++;
  cov_3b06ulla2().s[53]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_3b06ulla2().f[20]++;
    const userEmail =
    /* istanbul ignore next */
    (cov_3b06ulla2().s[54]++, req.params.userEmail);
    /* istanbul ignore next */
    cov_3b06ulla2().s[55]++;
    loggerService_1.logger.logAuth('Validación de número solicitada', userEmail);
    /* istanbul ignore next */
    cov_3b06ulla2().s[56]++;
    yield (0, authController_1.validNumberGetByEmail)(req, res);
  });
}));
/**
 * @swagger
 * /auth/add-event/{userEmail}:
 *   post:
 *     tags: [Auth]
 *     summary: Agregar evento a usuario
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: path
 *         name: userEmail
 *         required: true
 *         schema:
 *           type: string
 *           format: email
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             type: object
 *             properties:
 *               eventId:
 *                 type: string
 *     responses:
 *       200:
 *         description: Evento agregado exitosamente
 *       401:
 *         description: No autorizado
 *       404:
 *         description: Usuario o evento no encontrado
 */
/* istanbul ignore next */
cov_3b06ulla2().s[57]++;
router.post('/add-event/:userEmail', authMiddleware_1.authMiddleware, (0, errorHandler_1.asyncHandler)((req, res) => {
  /* istanbul ignore next */
  cov_3b06ulla2().f[21]++;
  cov_3b06ulla2().s[58]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_3b06ulla2().f[22]++;
    var _a;
    const userEmail =
    /* istanbul ignore next */
    (cov_3b06ulla2().s[59]++, req.params.userEmail);
    const eventId =
    /* istanbul ignore next */
    (cov_3b06ulla2().s[60]++, req.body.eventId);
    /* istanbul ignore next */
    cov_3b06ulla2().s[61]++;
    loggerService_1.logger.logAuth('Agregando evento a usuario', userEmail, {
      metadata: {
        eventId,
        addedBy:
        /* istanbul ignore next */
        (cov_3b06ulla2().b[8][0]++, (_a = req.user) === null) ||
        /* istanbul ignore next */
        (cov_3b06ulla2().b[8][1]++, _a === void 0) ?
        /* istanbul ignore next */
        (cov_3b06ulla2().b[7][0]++, void 0) :
        /* istanbul ignore next */
        (cov_3b06ulla2().b[7][1]++, _a.userEmail)
      }
    });
    /* istanbul ignore next */
    cov_3b06ulla2().s[62]++;
    yield (0, authController_1.addEventToUserController)(req, res);
    /* istanbul ignore next */
    cov_3b06ulla2().s[63]++;
    loggerService_1.logger.logAuth('Evento agregado exitosamente', userEmail, {
      metadata: {
        eventId
      }
    });
  });
}));
/**
 * @swagger
 * /auth/delete/{userEmail}:
 *   delete:
 *     tags: [Auth]
 *     summary: Eliminar usuario por email
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: path
 *         name: userEmail
 *         required: true
 *         schema:
 *           type: string
 *           format: email
 *     responses:
 *       200:
 *         description: Usuario eliminado exitosamente
 *       401:
 *         description: No autorizado
 *       404:
 *         description: Usuario no encontrado
 */
/* istanbul ignore next */
cov_3b06ulla2().s[64]++;
router.delete('/delete/:userEmail', authMiddleware_1.authMiddleware, (0, errorHandler_1.asyncHandler)((req, res) => {
  /* istanbul ignore next */
  cov_3b06ulla2().f[23]++;
  cov_3b06ulla2().s[65]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_3b06ulla2().f[24]++;
    var _a;
    const userEmail =
    /* istanbul ignore next */
    (cov_3b06ulla2().s[66]++, req.params.userEmail);
    /* istanbul ignore next */
    cov_3b06ulla2().s[67]++;
    loggerService_1.logger.logAuth('Eliminación de usuario solicitada', userEmail, {
      metadata: {
        deletedBy:
        /* istanbul ignore next */
        (cov_3b06ulla2().b[10][0]++, (_a = req.user) === null) ||
        /* istanbul ignore next */
        (cov_3b06ulla2().b[10][1]++, _a === void 0) ?
        /* istanbul ignore next */
        (cov_3b06ulla2().b[9][0]++, void 0) :
        /* istanbul ignore next */
        (cov_3b06ulla2().b[9][1]++, _a.userEmail)
      }
    });
    /* istanbul ignore next */
    cov_3b06ulla2().s[68]++;
    yield (0, authController_1.deleteUserByEmailController)(req, res);
    /* istanbul ignore next */
    cov_3b06ulla2().s[69]++;
    loggerService_1.logger.logAuth('Usuario eliminado exitosamente', userEmail);
  });
}));
/**
 * @swagger
 * /auth/forgot-password:
 *   post:
 *     tags: [Auth]
 *     summary: Solicitar recuperación de contraseña (solo superadmin)
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             type: object
 *             properties:
 *               userEmail:
 *                 type: string
 *                 format: email
 *     responses:
 *       200:
 *         description: Código de verificación enviado
 *       400:
 *         description: Email inválido
 *       403:
 *         description: Solo superadmin puede recuperar contraseña
 *       404:
 *         description: Usuario no encontrado
 */
/* istanbul ignore next */
cov_3b06ulla2().s[70]++;
router.post('/forgot-password', (0, errorHandler_1.asyncHandler)((req, res) => {
  /* istanbul ignore next */
  cov_3b06ulla2().f[25]++;
  cov_3b06ulla2().s[71]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_3b06ulla2().f[26]++;
    const userEmail =
    /* istanbul ignore next */
    (cov_3b06ulla2().s[72]++, req.body.userEmail);
    /* istanbul ignore next */
    cov_3b06ulla2().s[73]++;
    loggerService_1.logger.logAuth('Solicitud de recuperación de contraseña', userEmail);
    /* istanbul ignore next */
    cov_3b06ulla2().s[74]++;
    yield (0, authController_1.forgotPasswordController)(req, res);
    /* istanbul ignore next */
    cov_3b06ulla2().s[75]++;
    loggerService_1.logger.logAuth('Código de verificación enviado', userEmail);
  });
}));
/**
 * @swagger
 * /auth/verify-code:
 *   post:
 *     tags: [Auth]
 *     summary: Verificar código de recuperación
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             type: object
 *             properties:
 *               userEmail:
 *                 type: string
 *                 format: email
 *               code:
 *                 type: string
 *                 minLength: 6
 *                 maxLength: 6
 *     responses:
 *       200:
 *         description: Código verificado correctamente
 *       400:
 *         description: Código inválido o expirado
 *       403:
 *         description: Solo superadmin puede recuperar contraseña
 *       404:
 *         description: Usuario no encontrado
 */
/* istanbul ignore next */
cov_3b06ulla2().s[76]++;
router.post('/verify-code', (0, errorHandler_1.asyncHandler)((req, res) => {
  /* istanbul ignore next */
  cov_3b06ulla2().f[27]++;
  cov_3b06ulla2().s[77]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_3b06ulla2().f[28]++;
    const userEmail =
    /* istanbul ignore next */
    (cov_3b06ulla2().s[78]++, req.body.userEmail);
    const code =
    /* istanbul ignore next */
    (cov_3b06ulla2().s[79]++, req.body.code);
    /* istanbul ignore next */
    cov_3b06ulla2().s[80]++;
    loggerService_1.logger.logAuth('Verificación de código solicitada', userEmail, {
      metadata: {
        code
      }
    });
    /* istanbul ignore next */
    cov_3b06ulla2().s[81]++;
    yield (0, authController_1.verifyCodeController)(req, res);
    /* istanbul ignore next */
    cov_3b06ulla2().s[82]++;
    loggerService_1.logger.logAuth('Código verificado exitosamente', userEmail);
  });
}));
/**
 * @swagger
 * /auth/reset-password:
 *   post:
 *     tags: [Auth]
 *     summary: Restablecer contraseña
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             type: object
 *             properties:
 *               userEmail:
 *                 type: string
 *                 format: email
 *               code:
 *                 type: string
 *                 minLength: 6
 *                 maxLength: 6
 *               newPassword:
 *                 type: string
 *                 minLength: 6
 *     responses:
 *       200:
 *         description: Contraseña actualizada correctamente
 *       400:
 *         description: Código inválido o contraseña débil
 *       403:
 *         description: Solo superadmin puede recuperar contraseña
 *       404:
 *         description: Usuario no encontrado
 */
/* istanbul ignore next */
cov_3b06ulla2().s[83]++;
router.post('/reset-password', (0, errorHandler_1.asyncHandler)((req, res) => {
  /* istanbul ignore next */
  cov_3b06ulla2().f[29]++;
  cov_3b06ulla2().s[84]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_3b06ulla2().f[30]++;
    const userEmail =
    /* istanbul ignore next */
    (cov_3b06ulla2().s[85]++, req.body.userEmail);
    /* istanbul ignore next */
    cov_3b06ulla2().s[86]++;
    loggerService_1.logger.logAuth('Restablecimiento de contraseña solicitado', userEmail);
    /* istanbul ignore next */
    cov_3b06ulla2().s[87]++;
    yield (0, authController_1.resetPasswordController)(req, res);
    /* istanbul ignore next */
    cov_3b06ulla2().s[88]++;
    loggerService_1.logger.logAuth('Contraseña restablecida exitosamente', userEmail);
  });
}));
/* istanbul ignore next */
cov_3b06ulla2().s[89]++;
exports.default = router;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,