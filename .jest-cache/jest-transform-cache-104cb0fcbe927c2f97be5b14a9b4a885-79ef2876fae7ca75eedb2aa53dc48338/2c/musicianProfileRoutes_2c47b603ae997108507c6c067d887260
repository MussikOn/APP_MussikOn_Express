c997638a36d252e2ff87dbf58fe852ec
"use strict";

/* istanbul ignore next */
function cov_1bjs8xk7np() {
  var path = "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\routes\\musicianProfileRoutes.ts";
  var hash = "771829906f6f70e522d0cbc2c98fcfaeb887024e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\routes\\musicianProfileRoutes.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 18
        },
        end: {
          line: 6,
          column: 36
        }
      },
      "4": {
        start: {
          line: 7,
          column: 17
        },
        end: {
          line: 7,
          column: 51
        }
      },
      "5": {
        start: {
          line: 8,
          column: 36
        },
        end: {
          line: 8,
          column: 87
        }
      },
      "6": {
        start: {
          line: 9,
          column: 17
        },
        end: {
          line: 9,
          column: 40
        }
      },
      "7": {
        start: {
          line: 10,
          column: 16
        },
        end: {
          line: 10,
          column: 48
        }
      },
      "8": {
        start: {
          line: 11,
          column: 15
        },
        end: {
          line: 11,
          column: 49
        }
      },
      "9": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 36
        }
      },
      "10": {
        start: {
          line: 70,
          column: 0
        },
        end: {
          line: 70,
          column: 68
        }
      },
      "11": {
        start: {
          line: 113,
          column: 0
        },
        end: {
          line: 113,
          column: 71
        }
      },
      "12": {
        start: {
          line: 114,
          column: 0
        },
        end: {
          line: 114,
          column: 27
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\routes\\musicianProfileRoutes.ts",
      mappings: ";;;;;AAAA,qCAAiC;AACjC,oDAA4B;AAC5B,wFAGkD;AAElD,MAAM,QAAQ,GAAG,IAAA,gBAAM,GAAE,CAAC;AAC1B,MAAM,OAAO,GAAG,gBAAM,CAAC,aAAa,EAAE,CAAC;AACvC,MAAM,MAAM,GAAG,IAAA,gBAAM,EAAC,EAAE,OAAO,EAAE,CAAC,CAAC;AACnC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;AAEpC;;;;;GAKG;AAEH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAkDG;AACH,QAAQ,CAAC,IAAI,CAAC,YAAY,EAAE,sCAAU,CAAC,CAAC;AAExC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAyCG;AACH,QAAQ,CAAC,GAAG,CAAC,gBAAgB,EAAE,sCAAU,CAAC,CAAC;AAE3C,kBAAe,QAAQ,CAAC",
      names: [],
      sources: ["C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\routes\\musicianProfileRoutes.ts"],
      sourcesContent: ["import { Router } from 'express';\r\nimport multer from 'multer';\r\nimport {\r\n  getFileUrl,\r\n  uploadFile,\r\n} from '../controllers/musicianProfileController';\r\n\r\nconst musician = Router();\r\nconst storage = multer.memoryStorage();\r\nconst upload = multer({ storage });\r\nmusician.use(upload.single('file'));\r\n\r\n/**\r\n * @swagger\r\n * tags:\r\n *   name: Media\r\n *   description: Endpoints para gesti\xF3n de im\xE1genes de perfil de m\xFAsico\r\n */\r\n\r\n/**\r\n * @swagger\r\n * /media/saveImage:\r\n *   post:\r\n *     tags: [Media]\r\n *     summary: Sube una imagen de perfil de m\xFAsico\r\n *     consumes:\r\n *       - multipart/form-data\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         multipart/form-data:\r\n *           schema:\r\n *             type: object\r\n *             properties:\r\n *               file:\r\n *                 type: string\r\n *                 format: binary\r\n *     responses:\r\n *       200:\r\n *         description: Imagen subida exitosamente\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 message:\r\n *                   type: string\r\n *                 url:\r\n *                   type: string\r\n *                 key:\r\n *                   type: string\r\n *       400:\r\n *         description: No file uploaded\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 error:\r\n *                   type: string\r\n *       500:\r\n *         description: Error al subir la imagen\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 error:\r\n *                   type: string\r\n */\r\nmusician.post('/saveImage', uploadFile);\r\n\r\n/**\r\n * @swagger\r\n * /media/getImage/{key}:\r\n *   get:\r\n *     tags: [Media]\r\n *     summary: Obtiene la URL firmada de una imagen subida\r\n *     parameters:\r\n *       - in: path\r\n *         name: key\r\n *         schema:\r\n *           type: string\r\n *         required: true\r\n *         description: Clave de la imagen\r\n *     responses:\r\n *       200:\r\n *         description: URL firmada obtenida\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 url:\r\n *                   type: string\r\n *       400:\r\n *         description: Missing file key\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 error:\r\n *                   type: string\r\n *       500:\r\n *         description: Error al generar la URL\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 error:\r\n *                   type: string\r\n */\r\nmusician.get('/getImage/:key', getFileUrl);\r\n\r\nexport default musician;\r\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "771829906f6f70e522d0cbc2c98fcfaeb887024e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1bjs8xk7np = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1bjs8xk7np();
var __importDefault =
/* istanbul ignore next */
(cov_1bjs8xk7np().s[0]++,
/* istanbul ignore next */
(cov_1bjs8xk7np().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1bjs8xk7np().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_1bjs8xk7np().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_1bjs8xk7np().f[0]++;
  cov_1bjs8xk7np().s[1]++;
  return /* istanbul ignore next */(cov_1bjs8xk7np().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_1bjs8xk7np().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_1bjs8xk7np().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_1bjs8xk7np().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_1bjs8xk7np().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const express_1 =
/* istanbul ignore next */
(cov_1bjs8xk7np().s[3]++, require("express"));
const multer_1 =
/* istanbul ignore next */
(cov_1bjs8xk7np().s[4]++, __importDefault(require("multer")));
const musicianProfileController_1 =
/* istanbul ignore next */
(cov_1bjs8xk7np().s[5]++, require("../controllers/musicianProfileController"));
const musician =
/* istanbul ignore next */
(cov_1bjs8xk7np().s[6]++, (0, express_1.Router)());
const storage =
/* istanbul ignore next */
(cov_1bjs8xk7np().s[7]++, multer_1.default.memoryStorage());
const upload =
/* istanbul ignore next */
(cov_1bjs8xk7np().s[8]++, (0, multer_1.default)({
  storage
}));
/* istanbul ignore next */
cov_1bjs8xk7np().s[9]++;
musician.use(upload.single('file'));
/**
 * @swagger
 * tags:
 *   name: Media
 *   description: Endpoints para gestión de imágenes de perfil de músico
 */
/**
 * @swagger
 * /media/saveImage:
 *   post:
 *     tags: [Media]
 *     summary: Sube una imagen de perfil de músico
 *     consumes:
 *       - multipart/form-data
 *     requestBody:
 *       required: true
 *       content:
 *         multipart/form-data:
 *           schema:
 *             type: object
 *             properties:
 *               file:
 *                 type: string
 *                 format: binary
 *     responses:
 *       200:
 *         description: Imagen subida exitosamente
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 message:
 *                   type: string
 *                 url:
 *                   type: string
 *                 key:
 *                   type: string
 *       400:
 *         description: No file uploaded
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 error:
 *                   type: string
 *       500:
 *         description: Error al subir la imagen
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 error:
 *                   type: string
 */
/* istanbul ignore next */
cov_1bjs8xk7np().s[10]++;
musician.post('/saveImage', musicianProfileController_1.uploadFile);
/**
 * @swagger
 * /media/getImage/{key}:
 *   get:
 *     tags: [Media]
 *     summary: Obtiene la URL firmada de una imagen subida
 *     parameters:
 *       - in: path
 *         name: key
 *         schema:
 *           type: string
 *         required: true
 *         description: Clave de la imagen
 *     responses:
 *       200:
 *         description: URL firmada obtenida
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 url:
 *                   type: string
 *       400:
 *         description: Missing file key
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 error:
 *                   type: string
 *       500:
 *         description: Error al generar la URL
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 error:
 *                   type: string
 */
/* istanbul ignore next */
cov_1bjs8xk7np().s[11]++;
musician.get('/getImage/:key', musicianProfileController_1.getFileUrl);
/* istanbul ignore next */
cov_1bjs8xk7np().s[12]++;
exports.default = musician;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJleHByZXNzXzEiLCJjb3ZfMWJqczh4azducCIsInMiLCJyZXF1aXJlIiwibXVsdGVyXzEiLCJfX2ltcG9ydERlZmF1bHQiLCJtdXNpY2lhblByb2ZpbGVDb250cm9sbGVyXzEiLCJtdXNpY2lhbiIsIlJvdXRlciIsInN0b3JhZ2UiLCJkZWZhdWx0IiwibWVtb3J5U3RvcmFnZSIsInVwbG9hZCIsInVzZSIsInNpbmdsZSIsInBvc3QiLCJ1cGxvYWRGaWxlIiwiZ2V0IiwiZ2V0RmlsZVVybCIsImV4cG9ydHMiXSwic291cmNlcyI6WyJDOlxcc3JjXFxBUFBfTXVzc2lrT25cXEFQUF9NdXNzaWtPbl9FeHByZXNzXFxzcmNcXHJvdXRlc1xcbXVzaWNpYW5Qcm9maWxlUm91dGVzLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJvdXRlciB9IGZyb20gJ2V4cHJlc3MnO1xyXG5pbXBvcnQgbXVsdGVyIGZyb20gJ211bHRlcic7XHJcbmltcG9ydCB7XHJcbiAgZ2V0RmlsZVVybCxcclxuICB1cGxvYWRGaWxlLFxyXG59IGZyb20gJy4uL2NvbnRyb2xsZXJzL211c2ljaWFuUHJvZmlsZUNvbnRyb2xsZXInO1xyXG5cclxuY29uc3QgbXVzaWNpYW4gPSBSb3V0ZXIoKTtcclxuY29uc3Qgc3RvcmFnZSA9IG11bHRlci5tZW1vcnlTdG9yYWdlKCk7XHJcbmNvbnN0IHVwbG9hZCA9IG11bHRlcih7IHN0b3JhZ2UgfSk7XHJcbm11c2ljaWFuLnVzZSh1cGxvYWQuc2luZ2xlKCdmaWxlJykpO1xyXG5cclxuLyoqXHJcbiAqIEBzd2FnZ2VyXHJcbiAqIHRhZ3M6XHJcbiAqICAgbmFtZTogTWVkaWFcclxuICogICBkZXNjcmlwdGlvbjogRW5kcG9pbnRzIHBhcmEgZ2VzdGnDs24gZGUgaW3DoWdlbmVzIGRlIHBlcmZpbCBkZSBtw7pzaWNvXHJcbiAqL1xyXG5cclxuLyoqXHJcbiAqIEBzd2FnZ2VyXHJcbiAqIC9tZWRpYS9zYXZlSW1hZ2U6XHJcbiAqICAgcG9zdDpcclxuICogICAgIHRhZ3M6IFtNZWRpYV1cclxuICogICAgIHN1bW1hcnk6IFN1YmUgdW5hIGltYWdlbiBkZSBwZXJmaWwgZGUgbcO6c2ljb1xyXG4gKiAgICAgY29uc3VtZXM6XHJcbiAqICAgICAgIC0gbXVsdGlwYXJ0L2Zvcm0tZGF0YVxyXG4gKiAgICAgcmVxdWVzdEJvZHk6XHJcbiAqICAgICAgIHJlcXVpcmVkOiB0cnVlXHJcbiAqICAgICAgIGNvbnRlbnQ6XHJcbiAqICAgICAgICAgbXVsdGlwYXJ0L2Zvcm0tZGF0YTpcclxuICogICAgICAgICAgIHNjaGVtYTpcclxuICogICAgICAgICAgICAgdHlwZTogb2JqZWN0XHJcbiAqICAgICAgICAgICAgIHByb3BlcnRpZXM6XHJcbiAqICAgICAgICAgICAgICAgZmlsZTpcclxuICogICAgICAgICAgICAgICAgIHR5cGU6IHN0cmluZ1xyXG4gKiAgICAgICAgICAgICAgICAgZm9ybWF0OiBiaW5hcnlcclxuICogICAgIHJlc3BvbnNlczpcclxuICogICAgICAgMjAwOlxyXG4gKiAgICAgICAgIGRlc2NyaXB0aW9uOiBJbWFnZW4gc3ViaWRhIGV4aXRvc2FtZW50ZVxyXG4gKiAgICAgICAgIGNvbnRlbnQ6XHJcbiAqICAgICAgICAgICBhcHBsaWNhdGlvbi9qc29uOlxyXG4gKiAgICAgICAgICAgICBzY2hlbWE6XHJcbiAqICAgICAgICAgICAgICAgdHlwZTogb2JqZWN0XHJcbiAqICAgICAgICAgICAgICAgcHJvcGVydGllczpcclxuICogICAgICAgICAgICAgICAgIG1lc3NhZ2U6XHJcbiAqICAgICAgICAgICAgICAgICAgIHR5cGU6IHN0cmluZ1xyXG4gKiAgICAgICAgICAgICAgICAgdXJsOlxyXG4gKiAgICAgICAgICAgICAgICAgICB0eXBlOiBzdHJpbmdcclxuICogICAgICAgICAgICAgICAgIGtleTpcclxuICogICAgICAgICAgICAgICAgICAgdHlwZTogc3RyaW5nXHJcbiAqICAgICAgIDQwMDpcclxuICogICAgICAgICBkZXNjcmlwdGlvbjogTm8gZmlsZSB1cGxvYWRlZFxyXG4gKiAgICAgICAgIGNvbnRlbnQ6XHJcbiAqICAgICAgICAgICBhcHBsaWNhdGlvbi9qc29uOlxyXG4gKiAgICAgICAgICAgICBzY2hlbWE6XHJcbiAqICAgICAgICAgICAgICAgdHlwZTogb2JqZWN0XHJcbiAqICAgICAgICAgICAgICAgcHJvcGVydGllczpcclxuICogICAgICAgICAgICAgICAgIGVycm9yOlxyXG4gKiAgICAgICAgICAgICAgICAgICB0eXBlOiBzdHJpbmdcclxuICogICAgICAgNTAwOlxyXG4gKiAgICAgICAgIGRlc2NyaXB0aW9uOiBFcnJvciBhbCBzdWJpciBsYSBpbWFnZW5cclxuICogICAgICAgICBjb250ZW50OlxyXG4gKiAgICAgICAgICAgYXBwbGljYXRpb24vanNvbjpcclxuICogICAgICAgICAgICAgc2NoZW1hOlxyXG4gKiAgICAgICAgICAgICAgIHR5cGU6IG9iamVjdFxyXG4gKiAgICAgICAgICAgICAgIHByb3BlcnRpZXM6XHJcbiAqICAgICAgICAgICAgICAgICBlcnJvcjpcclxuICogICAgICAgICAgICAgICAgICAgdHlwZTogc3RyaW5nXHJcbiAqL1xyXG5tdXNpY2lhbi5wb3N0KCcvc2F2ZUltYWdlJywgdXBsb2FkRmlsZSk7XHJcblxyXG4vKipcclxuICogQHN3YWdnZXJcclxuICogL21lZGlhL2dldEltYWdlL3trZXl9OlxyXG4gKiAgIGdldDpcclxuICogICAgIHRhZ3M6IFtNZWRpYV1cclxuICogICAgIHN1bW1hcnk6IE9idGllbmUgbGEgVVJMIGZpcm1hZGEgZGUgdW5hIGltYWdlbiBzdWJpZGFcclxuICogICAgIHBhcmFtZXRlcnM6XHJcbiAqICAgICAgIC0gaW46IHBhdGhcclxuICogICAgICAgICBuYW1lOiBrZXlcclxuICogICAgICAgICBzY2hlbWE6XHJcbiAqICAgICAgICAgICB0eXBlOiBzdHJpbmdcclxuICogICAgICAgICByZXF1aXJlZDogdHJ1ZVxyXG4gKiAgICAgICAgIGRlc2NyaXB0aW9uOiBDbGF2ZSBkZSBsYSBpbWFnZW5cclxuICogICAgIHJlc3BvbnNlczpcclxuICogICAgICAgMjAwOlxyXG4gKiAgICAgICAgIGRlc2NyaXB0aW9uOiBVUkwgZmlybWFkYSBvYnRlbmlkYVxyXG4gKiAgICAgICAgIGNvbnRlbnQ6XHJcbiAqICAgICAgICAgICBhcHBsaWNhdGlvbi9qc29uOlxyXG4gKiAgICAgICAgICAgICBzY2hlbWE6XHJcbiAqICAgICAgICAgICAgICAgdHlwZTogb2JqZWN0XHJcbiAqICAgICAgICAgICAgICAgcHJvcGVydGllczpcclxuICogICAgICAgICAgICAgICAgIHVybDpcclxuICogICAgICAgICAgICAgICAgICAgdHlwZTogc3RyaW5nXHJcbiAqICAgICAgIDQwMDpcclxuICogICAgICAgICBkZXNjcmlwdGlvbjogTWlzc2luZyBmaWxlIGtleVxyXG4gKiAgICAgICAgIGNvbnRlbnQ6XHJcbiAqICAgICAgICAgICBhcHBsaWNhdGlvbi9qc29uOlxyXG4gKiAgICAgICAgICAgICBzY2hlbWE6XHJcbiAqICAgICAgICAgICAgICAgdHlwZTogb2JqZWN0XHJcbiAqICAgICAgICAgICAgICAgcHJvcGVydGllczpcclxuICogICAgICAgICAgICAgICAgIGVycm9yOlxyXG4gKiAgICAgICAgICAgICAgICAgICB0eXBlOiBzdHJpbmdcclxuICogICAgICAgNTAwOlxyXG4gKiAgICAgICAgIGRlc2NyaXB0aW9uOiBFcnJvciBhbCBnZW5lcmFyIGxhIFVSTFxyXG4gKiAgICAgICAgIGNvbnRlbnQ6XHJcbiAqICAgICAgICAgICBhcHBsaWNhdGlvbi9qc29uOlxyXG4gKiAgICAgICAgICAgICBzY2hlbWE6XHJcbiAqICAgICAgICAgICAgICAgdHlwZTogb2JqZWN0XHJcbiAqICAgICAgICAgICAgICAgcHJvcGVydGllczpcclxuICogICAgICAgICAgICAgICAgIGVycm9yOlxyXG4gKiAgICAgICAgICAgICAgICAgICB0eXBlOiBzdHJpbmdcclxuICovXHJcbm11c2ljaWFuLmdldCgnL2dldEltYWdlLzprZXknLCBnZXRGaWxlVXJsKTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IG11c2ljaWFuO1xyXG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsTUFBQUEsU0FBQTtBQUFBO0FBQUEsQ0FBQUMsY0FBQSxHQUFBQyxDQUFBLE9BQUFDLE9BQUE7QUFDQSxNQUFBQyxRQUFBO0FBQUE7QUFBQSxDQUFBSCxjQUFBLEdBQUFDLENBQUEsT0FBQUcsZUFBQSxDQUFBRixPQUFBO0FBQ0EsTUFBQUcsMkJBQUE7QUFBQTtBQUFBLENBQUFMLGNBQUEsR0FBQUMsQ0FBQSxPQUFBQyxPQUFBO0FBS0EsTUFBTUksUUFBUTtBQUFBO0FBQUEsQ0FBQU4sY0FBQSxHQUFBQyxDQUFBLE9BQUcsSUFBQUYsU0FBQSxDQUFBUSxNQUFNLEdBQUU7QUFDekIsTUFBTUMsT0FBTztBQUFBO0FBQUEsQ0FBQVIsY0FBQSxHQUFBQyxDQUFBLE9BQUdFLFFBQUEsQ0FBQU0sT0FBTSxDQUFDQyxhQUFhLEVBQUU7QUFDdEMsTUFBTUMsTUFBTTtBQUFBO0FBQUEsQ0FBQVgsY0FBQSxHQUFBQyxDQUFBLE9BQUcsSUFBQUUsUUFBQSxDQUFBTSxPQUFNLEVBQUM7RUFBRUQ7QUFBTyxDQUFFLENBQUM7QUFBQztBQUFBUixjQUFBLEdBQUFDLENBQUE7QUFDbkNLLFFBQVEsQ0FBQ00sR0FBRyxDQUFDRCxNQUFNLENBQUNFLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQztBQUVuQzs7Ozs7O0FBT0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQUFiLGNBQUEsR0FBQUMsQ0FBQTtBQW1EQUssUUFBUSxDQUFDUSxJQUFJLENBQUMsWUFBWSxFQUFFVCwyQkFBQSxDQUFBVSxVQUFVLENBQUM7QUFFdkM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQUFmLGNBQUEsR0FBQUMsQ0FBQTtBQTBDQUssUUFBUSxDQUFDVSxHQUFHLENBQUMsZ0JBQWdCLEVBQUVYLDJCQUFBLENBQUFZLFVBQVUsQ0FBQztBQUFDO0FBQUFqQixjQUFBLEdBQUFDLENBQUE7QUFFM0NpQixPQUFBLENBQUFULE9BQUEsR0FBZUgsUUFBUSIsImlnbm9yZUxpc3QiOltdfQ==