180b3765b2fd0490ed5a4a36d818f811
"use strict";

/* istanbul ignore next */
function cov_1jvncc5gtx() {
  var path = "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\routes\\notificationRoutes.ts";
  var hash = "7c1374a82718c7938624ed05386d7395a27cab40";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\routes\\notificationRoutes.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 18
        },
        end: {
          line: 3,
          column: 36
        }
      },
      "2": {
        start: {
          line: 4,
          column: 25
        },
        end: {
          line: 4,
          column: 64
        }
      },
      "3": {
        start: {
          line: 5,
          column: 22
        },
        end: {
          line: 5,
          column: 58
        }
      },
      "4": {
        start: {
          line: 6,
          column: 33
        },
        end: {
          line: 6,
          column: 81
        }
      },
      "5": {
        start: {
          line: 7,
          column: 27
        },
        end: {
          line: 7,
          column: 50
        }
      },
      "6": {
        start: {
          line: 185,
          column: 0
        },
        end: {
          line: 185,
          column: 104
        }
      },
      "7": {
        start: {
          line: 222,
          column: 0
        },
        end: {
          line: 222,
          column: 130
        }
      },
      "8": {
        start: {
          line: 248,
          column: 0
        },
        end: {
          line: 248,
          column: 122
        }
      },
      "9": {
        start: {
          line: 285,
          column: 0
        },
        end: {
          line: 285,
          column: 124
        }
      },
      "10": {
        start: {
          line: 316,
          column: 0
        },
        end: {
          line: 316,
          column: 114
        }
      },
      "11": {
        start: {
          line: 352,
          column: 0
        },
        end: {
          line: 352,
          column: 107
        }
      },
      "12": {
        start: {
          line: 395,
          column: 0
        },
        end: {
          line: 395,
          column: 162
        }
      },
      "13": {
        start: {
          line: 464,
          column: 0
        },
        end: {
          line: 464,
          column: 113
        }
      },
      "14": {
        start: {
          line: 465,
          column: 0
        },
        end: {
          line: 465,
          column: 37
        }
      }
    },
    fnMap: {},
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    f: {},
    b: {},
    inputSourceMap: {
      file: "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\routes\\notificationRoutes.ts",
      mappings: ";;AAAA,qCAAiC;AACjC,iEAA8D;AAC9D,2DAAwD;AACxD,kFAS+C;AAE/C,MAAM,kBAAkB,GAAG,IAAA,gBAAM,GAAE,CAAC;AAEpC;;;;;GAKG;AAEH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA4GG;AAEH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA6DG;AACH,kBAAkB,CAAC,GAAG,CAAC,GAAG,EAAE,+BAAc,EAAE,yCAAgB,CAAC,CAAC;AAE9D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAmCG;AACH,kBAAkB,CAAC,GAAG,CACpB,uBAAuB,EACvB,+BAAc,EACd,+CAAsB,CACvB,CAAC;AAEF;;;;;;;;;;;;;;;;;;;;;;;;GAwBG;AACH,kBAAkB,CAAC,GAAG,CAAC,WAAW,EAAE,+BAAc,EAAE,mDAA0B,CAAC,CAAC;AAEhF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAmCG;AACH,kBAAkB,CAAC,MAAM,CACvB,kBAAkB,EAClB,+BAAc,EACd,2CAAkB,CACnB,CAAC;AAEF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA6BG;AACH,kBAAkB,CAAC,GAAG,CAAC,eAAe,EAAE,+BAAc,EAAE,uCAAc,CAAC,CAAC;AAExE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAkCG;AACH,kBAAkB,CAAC,IAAI,CAAC,GAAG,EAAE,+BAAc,EAAE,2CAAkB,CAAC,CAAC;AAEjE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAyCG;AACH,kBAAkB,CAAC,IAAI,CACrB,OAAO,EACP,+BAAc,EACd,IAAA,yBAAW,EAAC,CAAC,aAAa,CAAC,CAAC,EAC5B,6CAAoB,CACrB,CAAC;AAEF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAmEG;AACH,kBAAkB,CAAC,GAAG,CAAC,QAAQ,EAAE,+BAAc,EAAE,6CAAoB,CAAC,CAAC;AAEvE,kBAAe,kBAAkB,CAAC",
      names: [],
      sources: ["C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\routes\\notificationRoutes.ts"],
      sourcesContent: ["import { Router } from 'express';\r\nimport { authMiddleware } from '../middleware/authMiddleware';\r\nimport { requireRole } from '../middleware/requireRole';\r\nimport {\r\n  getNotifications,\r\n  markNotificationAsRead,\r\n  markAllNotificationsAsRead,\r\n  deleteNotification,\r\n  getUnreadCount,\r\n  createNotification,\r\n  sendBulkNotification,\r\n  getNotificationStats,\r\n} from '../controllers/notificationController';\r\n\r\nconst notificationRoutes = Router();\r\n\r\n/**\r\n * @swagger\r\n * tags:\r\n *   - name: Notifications\r\n *     description: Sistema de notificaciones en tiempo real\r\n */\r\n\r\n/**\r\n * @swagger\r\n * components:\r\n *   schemas:\r\n *     Notification:\r\n *       type: object\r\n *       properties:\r\n *         id:\r\n *           type: string\r\n *           description: ID \xFAnico de la notificaci\xF3n\r\n *         userId:\r\n *           type: string\r\n *           description: ID del usuario destinatario\r\n *         title:\r\n *           type: string\r\n *           description: T\xEDtulo de la notificaci\xF3n\r\n *         message:\r\n *           type: string\r\n *           description: Mensaje de la notificaci\xF3n\r\n *         type:\r\n *           type: string\r\n *           enum: [info, success, warning, error]\r\n *           description: Tipo de notificaci\xF3n\r\n *         category:\r\n *           type: string\r\n *           enum: [system, user, event, request, payment]\r\n *           description: Categor\xEDa de la notificaci\xF3n\r\n *         isRead:\r\n *           type: boolean\r\n *           description: Estado de lectura\r\n *         createdAt:\r\n *           type: string\r\n *           format: date-time\r\n *           description: Fecha de creaci\xF3n\r\n *         updatedAt:\r\n *           type: string\r\n *           format: date-time\r\n *           description: Fecha de \xFAltima actualizaci\xF3n\r\n *         metadata:\r\n *           type: object\r\n *           description: Metadatos adicionales\r\n *       required:\r\n *         - userId\r\n *         - title\r\n *         - message\r\n *         - type\r\n *         - category\r\n *         - isRead\r\n *         - createdAt\r\n *         - updatedAt\r\n *\r\n *     CreateNotificationDTO:\r\n *       type: object\r\n *       properties:\r\n *         userId:\r\n *           type: string\r\n *           description: ID del usuario destinatario\r\n *         title:\r\n *           type: string\r\n *           description: T\xEDtulo de la notificaci\xF3n\r\n *         message:\r\n *           type: string\r\n *           description: Mensaje de la notificaci\xF3n\r\n *         type:\r\n *           type: string\r\n *           enum: [info, success, warning, error]\r\n *           description: Tipo de notificaci\xF3n\r\n *         category:\r\n *           type: string\r\n *           enum: [system, user, event, request, payment]\r\n *           description: Categor\xEDa de la notificaci\xF3n\r\n *         metadata:\r\n *           type: object\r\n *           description: Metadatos adicionales\r\n *       required:\r\n *         - userId\r\n *         - title\r\n *         - message\r\n *\r\n *     BulkNotificationDTO:\r\n *       type: object\r\n *       properties:\r\n *         title:\r\n *           type: string\r\n *           description: T\xEDtulo de la notificaci\xF3n\r\n *         message:\r\n *           type: string\r\n *           description: Mensaje de la notificaci\xF3n\r\n *         type:\r\n *           type: string\r\n *           enum: [info, success, warning, error]\r\n *           description: Tipo de notificaci\xF3n\r\n *         category:\r\n *           type: string\r\n *           enum: [system, user, event, request, payment]\r\n *           description: Categor\xEDa de la notificaci\xF3n\r\n *         targetUsers:\r\n *           type: array\r\n *           items:\r\n *             type: string\r\n *           description: Array de IDs de usuarios destinatarios\r\n *         metadata:\r\n *           type: object\r\n *           description: Metadatos adicionales\r\n *       required:\r\n *         - title\r\n *         - message\r\n *         - targetUsers\r\n */\r\n\r\n/**\r\n * @swagger\r\n * /notifications:\r\n *   get:\r\n *     summary: Obtener notificaciones del usuario\r\n *     tags: [Notifications]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     parameters:\r\n *       - in: query\r\n *         name: page\r\n *         schema:\r\n *           type: integer\r\n *           default: 1\r\n *         description: N\xFAmero de p\xE1gina\r\n *       - in: query\r\n *         name: limit\r\n *         schema:\r\n *           type: integer\r\n *           default: 20\r\n *         description: L\xEDmite de notificaciones por p\xE1gina\r\n *       - in: query\r\n *         name: unreadOnly\r\n *         schema:\r\n *           type: boolean\r\n *           default: false\r\n *         description: Solo notificaciones no le\xEDdas\r\n *     responses:\r\n *       200:\r\n *         description: Notificaciones obtenidas exitosamente\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 data:\r\n *                   type: object\r\n *                   properties:\r\n *                     notifications:\r\n *                       type: array\r\n *                       items:\r\n *                         $ref: '#/components/schemas/Notification'\r\n *                     pagination:\r\n *                       type: object\r\n *                       properties:\r\n *                         page:\r\n *                           type: integer\r\n *                         limit:\r\n *                           type: integer\r\n *                         total:\r\n *                           type: integer\r\n *                         totalPages:\r\n *                           type: integer\r\n *                 message:\r\n *                   type: string\r\n *       401:\r\n *         description: No autorizado\r\n *       500:\r\n *         description: Error interno del servidor\r\n */\r\nnotificationRoutes.get('/', authMiddleware, getNotifications);\r\n\r\n/**\r\n * @swagger\r\n * /notifications/{notificationId}/read:\r\n *   put:\r\n *     summary: Marcar notificaci\xF3n como le\xEDda\r\n *     tags: [Notifications]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     parameters:\r\n *       - in: path\r\n *         name: notificationId\r\n *         schema:\r\n *           type: string\r\n *         required: true\r\n *         description: ID de la notificaci\xF3n\r\n *     responses:\r\n *       200:\r\n *         description: Notificaci\xF3n marcada como le\xEDda\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 message:\r\n *                   type: string\r\n *       401:\r\n *         description: No autorizado\r\n *       403:\r\n *         description: No autorizado para acceder a esta notificaci\xF3n\r\n *       404:\r\n *         description: Notificaci\xF3n no encontrada\r\n *       500:\r\n *         description: Error interno del servidor\r\n */\r\nnotificationRoutes.put(\r\n  '/:notificationId/read',\r\n  authMiddleware,\r\n  markNotificationAsRead\r\n);\r\n\r\n/**\r\n * @swagger\r\n * /notifications/read-all:\r\n *   put:\r\n *     summary: Marcar todas las notificaciones como le\xEDdas\r\n *     tags: [Notifications]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     responses:\r\n *       200:\r\n *         description: Todas las notificaciones marcadas como le\xEDdas\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 message:\r\n *                   type: string\r\n *       401:\r\n *         description: No autorizado\r\n *       500:\r\n *         description: Error interno del servidor\r\n */\r\nnotificationRoutes.put('/read-all', authMiddleware, markAllNotificationsAsRead);\r\n\r\n/**\r\n * @swagger\r\n * /notifications/{notificationId}:\r\n *   delete:\r\n *     summary: Eliminar notificaci\xF3n\r\n *     tags: [Notifications]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     parameters:\r\n *       - in: path\r\n *         name: notificationId\r\n *         schema:\r\n *           type: string\r\n *         required: true\r\n *         description: ID de la notificaci\xF3n\r\n *     responses:\r\n *       200:\r\n *         description: Notificaci\xF3n eliminada exitosamente\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 message:\r\n *                   type: string\r\n *       401:\r\n *         description: No autorizado\r\n *       403:\r\n *         description: No autorizado para eliminar esta notificaci\xF3n\r\n *       404:\r\n *         description: Notificaci\xF3n no encontrada\r\n *       500:\r\n *         description: Error interno del servidor\r\n */\r\nnotificationRoutes.delete(\r\n  '/:notificationId',\r\n  authMiddleware,\r\n  deleteNotification\r\n);\r\n\r\n/**\r\n * @swagger\r\n * /notifications/unread-count:\r\n *   get:\r\n *     summary: Obtener contador de notificaciones no le\xEDdas\r\n *     tags: [Notifications]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     responses:\r\n *       200:\r\n *         description: Contador de notificaciones no le\xEDdas\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 data:\r\n *                   type: object\r\n *                   properties:\r\n *                     count:\r\n *                       type: integer\r\n *                 message:\r\n *                   type: string\r\n *       401:\r\n *         description: No autorizado\r\n *       500:\r\n *         description: Error interno del servidor\r\n */\r\nnotificationRoutes.get('/unread-count', authMiddleware, getUnreadCount);\r\n\r\n/**\r\n * @swagger\r\n * /notifications:\r\n *   post:\r\n *     summary: Crear notificaci\xF3n (uso interno)\r\n *     tags: [Notifications]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             $ref: '#/components/schemas/CreateNotificationDTO'\r\n *     responses:\r\n *       201:\r\n *         description: Notificaci\xF3n creada exitosamente\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 data:\r\n *                   $ref: '#/components/schemas/Notification'\r\n *                 message:\r\n *                   type: string\r\n *       400:\r\n *         description: Datos de notificaci\xF3n incompletos\r\n *       401:\r\n *         description: No autorizado\r\n *       500:\r\n *         description: Error interno del servidor\r\n */\r\nnotificationRoutes.post('/', authMiddleware, createNotification);\r\n\r\n/**\r\n * @swagger\r\n * /notifications/bulk:\r\n *   post:\r\n *     summary: Enviar notificaci\xF3n masiva (solo superadmin)\r\n *     tags: [Notifications]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             $ref: '#/components/schemas/BulkNotificationDTO'\r\n *     responses:\r\n *       201:\r\n *         description: Notificaci\xF3n masiva enviada exitosamente\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 data:\r\n *                   type: object\r\n *                   properties:\r\n *                     notifications:\r\n *                       type: array\r\n *                       items:\r\n *                         $ref: '#/components/schemas/Notification'\r\n *                 message:\r\n *                   type: string\r\n *       400:\r\n *         description: Datos de notificaci\xF3n masiva incompletos\r\n *       401:\r\n *         description: No autorizado\r\n *       403:\r\n *         description: Acceso solo para superadmin\r\n *       500:\r\n *         description: Error interno del servidor\r\n */\r\nnotificationRoutes.post(\r\n  '/bulk',\r\n  authMiddleware,\r\n  requireRole(['super_admin']),\r\n  sendBulkNotification\r\n);\r\n\r\n/**\r\n * @swagger\r\n * /notifications/stats:\r\n *   get:\r\n *     summary: Obtener estad\xEDsticas de notificaciones\r\n *     tags: [Notifications]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     parameters:\r\n *       - in: query\r\n *         name: period\r\n *         schema:\r\n *           type: string\r\n *           enum: [day, week, month]\r\n *           default: week\r\n *         description: Per\xEDodo de an\xE1lisis\r\n *     responses:\r\n *       200:\r\n *         description: Estad\xEDsticas de notificaciones\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 data:\r\n *                   type: object\r\n *                   properties:\r\n *                     total:\r\n *                       type: integer\r\n *                     unread:\r\n *                       type: integer\r\n *                     read:\r\n *                       type: integer\r\n *                     byType:\r\n *                       type: object\r\n *                       properties:\r\n *                         info:\r\n *                           type: integer\r\n *                         success:\r\n *                           type: integer\r\n *                         warning:\r\n *                           type: integer\r\n *                         error:\r\n *                           type: integer\r\n *                     byCategory:\r\n *                       type: object\r\n *                       properties:\r\n *                         system:\r\n *                           type: integer\r\n *                         user:\r\n *                           type: integer\r\n *                         event:\r\n *                           type: integer\r\n *                         request:\r\n *                           type: integer\r\n *                         payment:\r\n *                           type: integer\r\n *                     period:\r\n *                       type: string\r\n *                 message:\r\n *                   type: string\r\n *       401:\r\n *         description: No autorizado\r\n *       500:\r\n *         description: Error interno del servidor\r\n */\r\nnotificationRoutes.get('/stats', authMiddleware, getNotificationStats);\r\n\r\nexport default notificationRoutes;\r\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "7c1374a82718c7938624ed05386d7395a27cab40"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1jvncc5gtx = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1jvncc5gtx();
cov_1jvncc5gtx().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const express_1 =
/* istanbul ignore next */
(cov_1jvncc5gtx().s[1]++, require("express"));
const authMiddleware_1 =
/* istanbul ignore next */
(cov_1jvncc5gtx().s[2]++, require("../middleware/authMiddleware"));
const requireRole_1 =
/* istanbul ignore next */
(cov_1jvncc5gtx().s[3]++, require("../middleware/requireRole"));
const notificationController_1 =
/* istanbul ignore next */
(cov_1jvncc5gtx().s[4]++, require("../controllers/notificationController"));
const notificationRoutes =
/* istanbul ignore next */
(cov_1jvncc5gtx().s[5]++, (0, express_1.Router)());
/**
 * @swagger
 * tags:
 *   - name: Notifications
 *     description: Sistema de notificaciones en tiempo real
 */
/**
 * @swagger
 * components:
 *   schemas:
 *     Notification:
 *       type: object
 *       properties:
 *         id:
 *           type: string
 *           description: ID único de la notificación
 *         userId:
 *           type: string
 *           description: ID del usuario destinatario
 *         title:
 *           type: string
 *           description: Título de la notificación
 *         message:
 *           type: string
 *           description: Mensaje de la notificación
 *         type:
 *           type: string
 *           enum: [info, success, warning, error]
 *           description: Tipo de notificación
 *         category:
 *           type: string
 *           enum: [system, user, event, request, payment]
 *           description: Categoría de la notificación
 *         isRead:
 *           type: boolean
 *           description: Estado de lectura
 *         createdAt:
 *           type: string
 *           format: date-time
 *           description: Fecha de creación
 *         updatedAt:
 *           type: string
 *           format: date-time
 *           description: Fecha de última actualización
 *         metadata:
 *           type: object
 *           description: Metadatos adicionales
 *       required:
 *         - userId
 *         - title
 *         - message
 *         - type
 *         - category
 *         - isRead
 *         - createdAt
 *         - updatedAt
 *
 *     CreateNotificationDTO:
 *       type: object
 *       properties:
 *         userId:
 *           type: string
 *           description: ID del usuario destinatario
 *         title:
 *           type: string
 *           description: Título de la notificación
 *         message:
 *           type: string
 *           description: Mensaje de la notificación
 *         type:
 *           type: string
 *           enum: [info, success, warning, error]
 *           description: Tipo de notificación
 *         category:
 *           type: string
 *           enum: [system, user, event, request, payment]
 *           description: Categoría de la notificación
 *         metadata:
 *           type: object
 *           description: Metadatos adicionales
 *       required:
 *         - userId
 *         - title
 *         - message
 *
 *     BulkNotificationDTO:
 *       type: object
 *       properties:
 *         title:
 *           type: string
 *           description: Título de la notificación
 *         message:
 *           type: string
 *           description: Mensaje de la notificación
 *         type:
 *           type: string
 *           enum: [info, success, warning, error]
 *           description: Tipo de notificación
 *         category:
 *           type: string
 *           enum: [system, user, event, request, payment]
 *           description: Categoría de la notificación
 *         targetUsers:
 *           type: array
 *           items:
 *             type: string
 *           description: Array de IDs de usuarios destinatarios
 *         metadata:
 *           type: object
 *           description: Metadatos adicionales
 *       required:
 *         - title
 *         - message
 *         - targetUsers
 */
/**
 * @swagger
 * /notifications:
 *   get:
 *     summary: Obtener notificaciones del usuario
 *     tags: [Notifications]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: query
 *         name: page
 *         schema:
 *           type: integer
 *           default: 1
 *         description: Número de página
 *       - in: query
 *         name: limit
 *         schema:
 *           type: integer
 *           default: 20
 *         description: Límite de notificaciones por página
 *       - in: query
 *         name: unreadOnly
 *         schema:
 *           type: boolean
 *           default: false
 *         description: Solo notificaciones no leídas
 *     responses:
 *       200:
 *         description: Notificaciones obtenidas exitosamente
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 data:
 *                   type: object
 *                   properties:
 *                     notifications:
 *                       type: array
 *                       items:
 *                         $ref: '#/components/schemas/Notification'
 *                     pagination:
 *                       type: object
 *                       properties:
 *                         page:
 *                           type: integer
 *                         limit:
 *                           type: integer
 *                         total:
 *                           type: integer
 *                         totalPages:
 *                           type: integer
 *                 message:
 *                   type: string
 *       401:
 *         description: No autorizado
 *       500:
 *         description: Error interno del servidor
 */
/* istanbul ignore next */
cov_1jvncc5gtx().s[6]++;
notificationRoutes.get('/', authMiddleware_1.authMiddleware, notificationController_1.getNotifications);
/**
 * @swagger
 * /notifications/{notificationId}/read:
 *   put:
 *     summary: Marcar notificación como leída
 *     tags: [Notifications]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: path
 *         name: notificationId
 *         schema:
 *           type: string
 *         required: true
 *         description: ID de la notificación
 *     responses:
 *       200:
 *         description: Notificación marcada como leída
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 message:
 *                   type: string
 *       401:
 *         description: No autorizado
 *       403:
 *         description: No autorizado para acceder a esta notificación
 *       404:
 *         description: Notificación no encontrada
 *       500:
 *         description: Error interno del servidor
 */
/* istanbul ignore next */
cov_1jvncc5gtx().s[7]++;
notificationRoutes.put('/:notificationId/read', authMiddleware_1.authMiddleware, notificationController_1.markNotificationAsRead);
/**
 * @swagger
 * /notifications/read-all:
 *   put:
 *     summary: Marcar todas las notificaciones como leídas
 *     tags: [Notifications]
 *     security:
 *       - bearerAuth: []
 *     responses:
 *       200:
 *         description: Todas las notificaciones marcadas como leídas
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 message:
 *                   type: string
 *       401:
 *         description: No autorizado
 *       500:
 *         description: Error interno del servidor
 */
/* istanbul ignore next */
cov_1jvncc5gtx().s[8]++;
notificationRoutes.put('/read-all', authMiddleware_1.authMiddleware, notificationController_1.markAllNotificationsAsRead);
/**
 * @swagger
 * /notifications/{notificationId}:
 *   delete:
 *     summary: Eliminar notificación
 *     tags: [Notifications]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: path
 *         name: notificationId
 *         schema:
 *           type: string
 *         required: true
 *         description: ID de la notificación
 *     responses:
 *       200:
 *         description: Notificación eliminada exitosamente
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 message:
 *                   type: string
 *       401:
 *         description: No autorizado
 *       403:
 *         description: No autorizado para eliminar esta notificación
 *       404:
 *         description: Notificación no encontrada
 *       500:
 *         description: Error interno del servidor
 */
/* istanbul ignore next */
cov_1jvncc5gtx().s[9]++;
notificationRoutes.delete('/:notificationId', authMiddleware_1.authMiddleware, notificationController_1.deleteNotification);
/**
 * @swagger
 * /notifications/unread-count:
 *   get:
 *     summary: Obtener contador de notificaciones no leídas
 *     tags: [Notifications]
 *     security:
 *       - bearerAuth: []
 *     responses:
 *       200:
 *         description: Contador de notificaciones no leídas
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 data:
 *                   type: object
 *                   properties:
 *                     count:
 *                       type: integer
 *                 message:
 *                   type: string
 *       401:
 *         description: No autorizado
 *       500:
 *         description: Error interno del servidor
 */
/* istanbul ignore next */
cov_1jvncc5gtx().s[10]++;
notificationRoutes.get('/unread-count', authMiddleware_1.authMiddleware, notificationController_1.getUnreadCount);
/**
 * @swagger
 * /notifications:
 *   post:
 *     summary: Crear notificación (uso interno)
 *     tags: [Notifications]
 *     security:
 *       - bearerAuth: []
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             $ref: '#/components/schemas/CreateNotificationDTO'
 *     responses:
 *       201:
 *         description: Notificación creada exitosamente
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 data:
 *                   $ref: '#/components/schemas/Notification'
 *                 message:
 *                   type: string
 *       400:
 *         description: Datos de notificación incompletos
 *       401:
 *         description: No autorizado
 *       500:
 *         description: Error interno del servidor
 */
/* istanbul ignore next */
cov_1jvncc5gtx().s[11]++;
notificationRoutes.post('/', authMiddleware_1.authMiddleware, notificationController_1.createNotification);
/**
 * @swagger
 * /notifications/bulk:
 *   post:
 *     summary: Enviar notificación masiva (solo superadmin)
 *     tags: [Notifications]
 *     security:
 *       - bearerAuth: []
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             $ref: '#/components/schemas/BulkNotificationDTO'
 *     responses:
 *       201:
 *         description: Notificación masiva enviada exitosamente
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 data:
 *                   type: object
 *                   properties:
 *                     notifications:
 *                       type: array
 *                       items:
 *                         $ref: '#/components/schemas/Notification'
 *                 message:
 *                   type: string
 *       400:
 *         description: Datos de notificación masiva incompletos
 *       401:
 *         description: No autorizado
 *       403:
 *         description: Acceso solo para superadmin
 *       500:
 *         description: Error interno del servidor
 */
/* istanbul ignore next */
cov_1jvncc5gtx().s[12]++;
notificationRoutes.post('/bulk', authMiddleware_1.authMiddleware, (0, requireRole_1.requireRole)(['super_admin']), notificationController_1.sendBulkNotification);
/**
 * @swagger
 * /notifications/stats:
 *   get:
 *     summary: Obtener estadísticas de notificaciones
 *     tags: [Notifications]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: query
 *         name: period
 *         schema:
 *           type: string
 *           enum: [day, week, month]
 *           default: week
 *         description: Período de análisis
 *     responses:
 *       200:
 *         description: Estadísticas de notificaciones
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 data:
 *                   type: object
 *                   properties:
 *                     total:
 *                       type: integer
 *                     unread:
 *                       type: integer
 *                     read:
 *                       type: integer
 *                     byType:
 *                       type: object
 *                       properties:
 *                         info:
 *                           type: integer
 *                         success:
 *                           type: integer
 *                         warning:
 *                           type: integer
 *                         error:
 *                           type: integer
 *                     byCategory:
 *                       type: object
 *                       properties:
 *                         system:
 *                           type: integer
 *                         user:
 *                           type: integer
 *                         event:
 *                           type: integer
 *                         request:
 *                           type: integer
 *                         payment:
 *                           type: integer
 *                     period:
 *                       type: string
 *                 message:
 *                   type: string
 *       401:
 *         description: No autorizado
 *       500:
 *         description: Error interno del servidor
 */
/* istanbul ignore next */
cov_1jvncc5gtx().s[13]++;
notificationRoutes.get('/stats', authMiddleware_1.authMiddleware, notificationController_1.getNotificationStats);
/* istanbul ignore next */
cov_1jvncc5gtx().s[14]++;
exports.default = notificationRoutes;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,