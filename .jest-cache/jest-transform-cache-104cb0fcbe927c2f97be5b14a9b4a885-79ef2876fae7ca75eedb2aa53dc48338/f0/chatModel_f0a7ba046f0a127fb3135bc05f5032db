768087d6829514db7afa530618fa6f36
"use strict";

/* istanbul ignore next */
function cov_pa1ohw0ul() {
  var path = "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\models\\chatModel.ts";
  var hash = "042b1200fdfa0cde27e02b737de118287c5fce2b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\models\\chatModel.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 12,
          column: 3
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "2": {
        start: {
          line: 3,
          column: 26
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "3": {
        start: {
          line: 4,
          column: 15
        },
        end: {
          line: 4,
          column: 52
        }
      },
      "4": {
        start: {
          line: 5,
          column: 4
        },
        end: {
          line: 7,
          column: 5
        }
      },
      "5": {
        start: {
          line: 6,
          column: 6
        },
        end: {
          line: 6,
          column: 68
        }
      },
      "6": {
        start: {
          line: 6,
          column: 51
        },
        end: {
          line: 6,
          column: 63
        }
      },
      "7": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 39
        }
      },
      "8": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "9": {
        start: {
          line: 10,
          column: 26
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "10": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 17
        }
      },
      "11": {
        start: {
          line: 13,
          column: 25
        },
        end: {
          line: 17,
          column: 2
        }
      },
      "12": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 72
        }
      },
      "13": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 21
        }
      },
      "14": {
        start: {
          line: 18,
          column: 19
        },
        end: {
          line: 34,
          column: 4
        }
      },
      "15": {
        start: {
          line: 19,
          column: 18
        },
        end: {
          line: 26,
          column: 5
        }
      },
      "16": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 24,
          column: 10
        }
      },
      "17": {
        start: {
          line: 21,
          column: 21
        },
        end: {
          line: 21,
          column: 23
        }
      },
      "18": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "19": {
        start: {
          line: 22,
          column: 29
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "20": {
        start: {
          line: 22,
          column: 77
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "21": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 22
        }
      },
      "22": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 26
        }
      },
      "23": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 33,
          column: 6
        }
      },
      "24": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "25": {
        start: {
          line: 28,
          column: 35
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "26": {
        start: {
          line: 29,
          column: 21
        },
        end: {
          line: 29,
          column: 23
        }
      },
      "27": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "28": {
        start: {
          line: 30,
          column: 25
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "29": {
        start: {
          line: 30,
          column: 38
        },
        end: {
          line: 30,
          column: 50
        }
      },
      "30": {
        start: {
          line: 30,
          column: 56
        },
        end: {
          line: 30,
          column: 57
        }
      },
      "31": {
        start: {
          line: 30,
          column: 78
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "32": {
        start: {
          line: 30,
          column: 102
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "33": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 40
        }
      },
      "34": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 22
        }
      },
      "35": {
        start: {
          line: 35,
          column: 16
        },
        end: {
          line: 43,
          column: 1
        }
      },
      "36": {
        start: {
          line: 36,
          column: 28
        },
        end: {
          line: 36,
          column: 110
        }
      },
      "37": {
        start: {
          line: 36,
          column: 91
        },
        end: {
          line: 36,
          column: 106
        }
      },
      "38": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 42,
          column: 7
        }
      },
      "39": {
        start: {
          line: 38,
          column: 36
        },
        end: {
          line: 38,
          column: 97
        }
      },
      "40": {
        start: {
          line: 38,
          column: 42
        },
        end: {
          line: 38,
          column: 70
        }
      },
      "41": {
        start: {
          line: 38,
          column: 85
        },
        end: {
          line: 38,
          column: 95
        }
      },
      "42": {
        start: {
          line: 39,
          column: 35
        },
        end: {
          line: 39,
          column: 100
        }
      },
      "43": {
        start: {
          line: 39,
          column: 41
        },
        end: {
          line: 39,
          column: 73
        }
      },
      "44": {
        start: {
          line: 39,
          column: 88
        },
        end: {
          line: 39,
          column: 98
        }
      },
      "45": {
        start: {
          line: 40,
          column: 32
        },
        end: {
          line: 40,
          column: 116
        }
      },
      "46": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 78
        }
      },
      "47": {
        start: {
          line: 44,
          column: 0
        },
        end: {
          line: 44,
          column: 62
        }
      },
      "48": {
        start: {
          line: 45,
          column: 0
        },
        end: {
          line: 45,
          column: 470
        }
      },
      "49": {
        start: {
          line: 46,
          column: 19
        },
        end: {
          line: 46,
          column: 47
        }
      },
      "50": {
        start: {
          line: 47,
          column: 14
        },
        end: {
          line: 47,
          column: 53
        }
      },
      "51": {
        start: {
          line: 48,
          column: 24
        },
        end: {
          line: 48,
          column: 60
        }
      },
      "52": {
        start: {
          line: 50,
          column: 32
        },
        end: {
          line: 65,
          column: 2
        }
      },
      "53": {
        start: {
          line: 50,
          column: 50
        },
        end: {
          line: 65,
          column: 2
        }
      },
      "54": {
        start: {
          line: 51,
          column: 16
        },
        end: {
          line: 51,
          column: 40
        }
      },
      "55": {
        start: {
          line: 52,
          column: 28
        },
        end: {
          line: 52,
          column: 75
        }
      },
      "56": {
        start: {
          line: 53,
          column: 25
        },
        end: {
          line: 60,
          column: 5
        }
      },
      "57": {
        start: {
          line: 61,
          column: 4
        },
        end: {
          line: 61,
          column: 44
        }
      },
      "58": {
        start: {
          line: 62,
          column: 4
        },
        end: {
          line: 63,
          column: 13
        }
      },
      "59": {
        start: {
          line: 64,
          column: 4
        },
        end: {
          line: 64,
          column: 24
        }
      },
      "60": {
        start: {
          line: 66,
          column: 0
        },
        end: {
          line: 66,
          column: 58
        }
      },
      "61": {
        start: {
          line: 68,
          column: 36
        },
        end: {
          line: 100,
          column: 2
        }
      },
      "62": {
        start: {
          line: 68,
          column: 51
        },
        end: {
          line: 100,
          column: 2
        }
      },
      "63": {
        start: {
          line: 69,
          column: 4
        },
        end: {
          line: 99,
          column: 5
        }
      },
      "64": {
        start: {
          line: 71,
          column: 25
        },
        end: {
          line: 76,
          column: 18
        }
      },
      "65": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 77,
          column: 52
        }
      },
      "66": {
        start: {
          line: 77,
          column: 40
        },
        end: {
          line: 77,
          column: 50
        }
      },
      "67": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 96,
          column: 9
        }
      },
      "68": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 82,
          column: 83
        }
      },
      "69": {
        start: {
          line: 84,
          column: 29
        },
        end: {
          line: 88,
          column: 22
        }
      },
      "70": {
        start: {
          line: 89,
          column: 34
        },
        end: {
          line: 89,
          column: 70
        }
      },
      "71": {
        start: {
          line: 89,
          column: 59
        },
        end: {
          line: 89,
          column: 69
        }
      },
      "72": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 95,
          column: 15
        }
      },
      "73": {
        start: {
          line: 92,
          column: 30
        },
        end: {
          line: 92,
          column: 71
        }
      },
      "74": {
        start: {
          line: 93,
          column: 30
        },
        end: {
          line: 93,
          column: 71
        }
      },
      "75": {
        start: {
          line: 94,
          column: 16
        },
        end: {
          line: 94,
          column: 57
        }
      },
      "76": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 98,
          column: 20
        }
      },
      "77": {
        start: {
          line: 101,
          column: 0
        },
        end: {
          line: 101,
          column: 66
        }
      },
      "78": {
        start: {
          line: 103,
          column: 33
        },
        end: {
          line: 110,
          column: 2
        }
      },
      "79": {
        start: {
          line: 103,
          column: 53
        },
        end: {
          line: 110,
          column: 2
        }
      },
      "80": {
        start: {
          line: 104,
          column: 28
        },
        end: {
          line: 104,
          column: 89
        }
      },
      "81": {
        start: {
          line: 105,
          column: 29
        },
        end: {
          line: 105,
          column: 56
        }
      },
      "82": {
        start: {
          line: 106,
          column: 4
        },
        end: {
          line: 108,
          column: 5
        }
      },
      "83": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 107,
          column: 20
        }
      },
      "84": {
        start: {
          line: 109,
          column: 4
        },
        end: {
          line: 109,
          column: 35
        }
      },
      "85": {
        start: {
          line: 111,
          column: 0
        },
        end: {
          line: 111,
          column: 60
        }
      },
      "86": {
        start: {
          line: 113,
          column: 39
        },
        end: {
          line: 120,
          column: 2
        }
      },
      "87": {
        start: {
          line: 113,
          column: 59
        },
        end: {
          line: 120,
          column: 2
        }
      },
      "88": {
        start: {
          line: 114,
          column: 21
        },
        end: {
          line: 118,
          column: 14
        }
      },
      "89": {
        start: {
          line: 119,
          column: 4
        },
        end: {
          line: 119,
          column: 48
        }
      },
      "90": {
        start: {
          line: 119,
          column: 36
        },
        end: {
          line: 119,
          column: 46
        }
      },
      "91": {
        start: {
          line: 121,
          column: 0
        },
        end: {
          line: 121,
          column: 72
        }
      },
      "92": {
        start: {
          line: 123,
          column: 27
        },
        end: {
          line: 132,
          column: 2
        }
      },
      "93": {
        start: {
          line: 123,
          column: 44
        },
        end: {
          line: 132,
          column: 2
        }
      },
      "94": {
        start: {
          line: 124,
          column: 16
        },
        end: {
          line: 124,
          column: 40
        }
      },
      "95": {
        start: {
          line: 125,
          column: 23
        },
        end: {
          line: 125,
          column: 65
        }
      },
      "96": {
        start: {
          line: 126,
          column: 20
        },
        end: {
          line: 126,
          column: 104
        }
      },
      "97": {
        start: {
          line: 127,
          column: 4
        },
        end: {
          line: 127,
          column: 34
        }
      },
      "98": {
        start: {
          line: 128,
          column: 4
        },
        end: {
          line: 128,
          column: 111
        }
      },
      "99": {
        start: {
          line: 130,
          column: 4
        },
        end: {
          line: 130,
          column: 86
        }
      },
      "100": {
        start: {
          line: 131,
          column: 4
        },
        end: {
          line: 131,
          column: 19
        }
      },
      "101": {
        start: {
          line: 133,
          column: 0
        },
        end: {
          line: 133,
          column: 48
        }
      },
      "102": {
        start: {
          line: 135,
          column: 38
        },
        end: {
          line: 142,
          column: 2
        }
      },
      "103": {
        start: {
          line: 135,
          column: 67
        },
        end: {
          line: 142,
          column: 2
        }
      },
      "104": {
        start: {
          line: 136,
          column: 28
        },
        end: {
          line: 136,
          column: 89
        }
      },
      "105": {
        start: {
          line: 137,
          column: 4
        },
        end: {
          line: 141,
          column: 7
        }
      },
      "106": {
        start: {
          line: 143,
          column: 0
        },
        end: {
          line: 143,
          column: 70
        }
      },
      "107": {
        start: {
          line: 145,
          column: 31
        },
        end: {
          line: 150,
          column: 2
        }
      },
      "108": {
        start: {
          line: 145,
          column: 46
        },
        end: {
          line: 150,
          column: 2
        }
      },
      "109": {
        start: {
          line: 146,
          column: 23
        },
        end: {
          line: 146,
          column: 74
        }
      },
      "110": {
        start: {
          line: 147,
          column: 4
        },
        end: {
          line: 149,
          column: 7
        }
      },
      "111": {
        start: {
          line: 151,
          column: 0
        },
        end: {
          line: 151,
          column: 56
        }
      },
      "112": {
        start: {
          line: 153,
          column: 36
        },
        end: {
          line: 167,
          column: 2
        }
      },
      "113": {
        start: {
          line: 153,
          column: 67
        },
        end: {
          line: 167,
          column: 2
        }
      },
      "114": {
        start: {
          line: 154,
          column: 28
        },
        end: {
          line: 154,
          column: 89
        }
      },
      "115": {
        start: {
          line: 156,
          column: 29
        },
        end: {
          line: 156,
          column: 56
        }
      },
      "116": {
        start: {
          line: 157,
          column: 4
        },
        end: {
          line: 159,
          column: 5
        }
      },
      "117": {
        start: {
          line: 158,
          column: 8
        },
        end: {
          line: 158,
          column: 54
        }
      },
      "118": {
        start: {
          line: 160,
          column: 25
        },
        end: {
          line: 160,
          column: 48
        }
      },
      "119": {
        start: {
          line: 161,
          column: 4
        },
        end: {
          line: 163,
          column: 5
        }
      },
      "120": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 162,
          column: 75
        }
      },
      "121": {
        start: {
          line: 164,
          column: 4
        },
        end: {
          line: 166,
          column: 7
        }
      },
      "122": {
        start: {
          line: 168,
          column: 0
        },
        end: {
          line: 168,
          column: 66
        }
      },
      "123": {
        start: {
          line: 170,
          column: 33
        },
        end: {
          line: 200,
          column: 2
        }
      },
      "124": {
        start: {
          line: 170,
          column: 57
        },
        end: {
          line: 200,
          column: 2
        }
      },
      "125": {
        start: {
          line: 171,
          column: 16
        },
        end: {
          line: 174,
          column: 38
        }
      },
      "126": {
        start: {
          line: 175,
          column: 4
        },
        end: {
          line: 177,
          column: 5
        }
      },
      "127": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 176,
          column: 51
        }
      },
      "128": {
        start: {
          line: 178,
          column: 4
        },
        end: {
          line: 180,
          column: 5
        }
      },
      "129": {
        start: {
          line: 179,
          column: 8
        },
        end: {
          line: 179,
          column: 65
        }
      },
      "130": {
        start: {
          line: 181,
          column: 4
        },
        end: {
          line: 183,
          column: 5
        }
      },
      "131": {
        start: {
          line: 182,
          column: 8
        },
        end: {
          line: 182,
          column: 63
        }
      },
      "132": {
        start: {
          line: 184,
          column: 21
        },
        end: {
          line: 184,
          column: 67
        }
      },
      "133": {
        start: {
          line: 185,
          column: 24
        },
        end: {
          line: 185,
          column: 60
        }
      },
      "134": {
        start: {
          line: 185,
          column: 49
        },
        end: {
          line: 185,
          column: 59
        }
      },
      "135": {
        start: {
          line: 187,
          column: 4
        },
        end: {
          line: 198,
          column: 5
        }
      },
      "136": {
        start: {
          line: 188,
          column: 8
        },
        end: {
          line: 197,
          column: 11
        }
      },
      "137": {
        start: {
          line: 191,
          column: 12
        },
        end: {
          line: 193,
          column: 13
        }
      },
      "138": {
        start: {
          line: 192,
          column: 16
        },
        end: {
          line: 192,
          column: 28
        }
      },
      "139": {
        start: {
          line: 195,
          column: 38
        },
        end: {
          line: 195,
          column: 92
        }
      },
      "140": {
        start: {
          line: 195,
          column: 76
        },
        end: {
          line: 195,
          column: 91
        }
      },
      "141": {
        start: {
          line: 196,
          column: 12
        },
        end: {
          line: 196,
          column: 103
        }
      },
      "142": {
        start: {
          line: 196,
          column: 47
        },
        end: {
          line: 196,
          column: 101
        }
      },
      "143": {
        start: {
          line: 199,
          column: 4
        },
        end: {
          line: 199,
          column: 25
        }
      },
      "144": {
        start: {
          line: 201,
          column: 0
        },
        end: {
          line: 201,
          column: 60
        }
      },
      "145": {
        start: {
          line: 203,
          column: 32
        },
        end: {
          line: 217,
          column: 2
        }
      },
      "146": {
        start: {
          line: 203,
          column: 63
        },
        end: {
          line: 217,
          column: 2
        }
      },
      "147": {
        start: {
          line: 204,
          column: 28
        },
        end: {
          line: 204,
          column: 89
        }
      },
      "148": {
        start: {
          line: 206,
          column: 29
        },
        end: {
          line: 206,
          column: 56
        }
      },
      "149": {
        start: {
          line: 207,
          column: 4
        },
        end: {
          line: 209,
          column: 5
        }
      },
      "150": {
        start: {
          line: 208,
          column: 8
        },
        end: {
          line: 208,
          column: 54
        }
      },
      "151": {
        start: {
          line: 210,
          column: 25
        },
        end: {
          line: 210,
          column: 48
        }
      },
      "152": {
        start: {
          line: 211,
          column: 4
        },
        end: {
          line: 213,
          column: 5
        }
      },
      "153": {
        start: {
          line: 212,
          column: 8
        },
        end: {
          line: 212,
          column: 75
        }
      },
      "154": {
        start: {
          line: 214,
          column: 4
        },
        end: {
          line: 216,
          column: 7
        }
      },
      "155": {
        start: {
          line: 218,
          column: 0
        },
        end: {
          line: 218,
          column: 58
        }
      },
      "156": {
        start: {
          line: 220,
          column: 33
        },
        end: {
          line: 234,
          column: 2
        }
      },
      "157": {
        start: {
          line: 220,
          column: 64
        },
        end: {
          line: 234,
          column: 2
        }
      },
      "158": {
        start: {
          line: 221,
          column: 28
        },
        end: {
          line: 221,
          column: 89
        }
      },
      "159": {
        start: {
          line: 223,
          column: 29
        },
        end: {
          line: 223,
          column: 56
        }
      },
      "160": {
        start: {
          line: 224,
          column: 4
        },
        end: {
          line: 226,
          column: 5
        }
      },
      "161": {
        start: {
          line: 225,
          column: 8
        },
        end: {
          line: 225,
          column: 54
        }
      },
      "162": {
        start: {
          line: 227,
          column: 25
        },
        end: {
          line: 227,
          column: 48
        }
      },
      "163": {
        start: {
          line: 228,
          column: 4
        },
        end: {
          line: 230,
          column: 5
        }
      },
      "164": {
        start: {
          line: 229,
          column: 8
        },
        end: {
          line: 229,
          column: 75
        }
      },
      "165": {
        start: {
          line: 231,
          column: 4
        },
        end: {
          line: 233,
          column: 7
        }
      },
      "166": {
        start: {
          line: 235,
          column: 0
        },
        end: {
          line: 235,
          column: 60
        }
      },
      "167": {
        start: {
          line: 237,
          column: 41
        },
        end: {
          line: 247,
          column: 2
        }
      },
      "168": {
        start: {
          line: 237,
          column: 59
        },
        end: {
          line: 247,
          column: 2
        }
      },
      "169": {
        start: {
          line: 238,
          column: 21
        },
        end: {
          line: 242,
          column: 14
        }
      },
      "170": {
        start: {
          line: 243,
          column: 26
        },
        end: {
          line: 243,
          column: 62
        }
      },
      "171": {
        start: {
          line: 243,
          column: 51
        },
        end: {
          line: 243,
          column: 61
        }
      },
      "172": {
        start: {
          line: 245,
          column: 25
        },
        end: {
          line: 245,
          column: 123
        }
      },
      "173": {
        start: {
          line: 245,
          column: 52
        },
        end: {
          line: 245,
          column: 122
        }
      },
      "174": {
        start: {
          line: 246,
          column: 4
        },
        end: {
          line: 246,
          column: 32
        }
      },
      "175": {
        start: {
          line: 248,
          column: 0
        },
        end: {
          line: 248,
          column: 76
        }
      },
      "176": {
        start: {
          line: 250,
          column: 26
        },
        end: {
          line: 260,
          column: 2
        }
      },
      "177": {
        start: {
          line: 250,
          column: 41
        },
        end: {
          line: 260,
          column: 2
        }
      },
      "178": {
        start: {
          line: 251,
          column: 26
        },
        end: {
          line: 251,
          column: 83
        }
      },
      "179": {
        start: {
          line: 252,
          column: 31
        },
        end: {
          line: 252,
          column: 51
        }
      },
      "180": {
        start: {
          line: 253,
          column: 27
        },
        end: {
          line: 253,
          column: 89
        }
      },
      "181": {
        start: {
          line: 253,
          column: 63
        },
        end: {
          line: 253,
          column: 85
        }
      },
      "182": {
        start: {
          line: 254,
          column: 32
        },
        end: {
          line: 254,
          column: 82
        }
      },
      "183": {
        start: {
          line: 254,
          column: 61
        },
        end: {
          line: 254,
          column: 74
        }
      },
      "184": {
        start: {
          line: 255,
          column: 4
        },
        end: {
          line: 259,
          column: 6
        }
      },
      "185": {
        start: {
          line: 261,
          column: 0
        },
        end: {
          line: 261,
          column: 46
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 2,
            column: 75
          }
        },
        loc: {
          start: {
            line: 2,
            column: 96
          },
          end: {
            line: 9,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 6,
            column: 38
          },
          end: {
            line: 6,
            column: 39
          }
        },
        loc: {
          start: {
            line: 6,
            column: 49
          },
          end: {
            line: 6,
            column: 65
          }
        },
        line: 6
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 9,
            column: 7
          }
        },
        loc: {
          start: {
            line: 9,
            column: 28
          },
          end: {
            line: 12,
            column: 1
          }
        },
        line: 9
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 13,
            column: 81
          }
        },
        loc: {
          start: {
            line: 13,
            column: 95
          },
          end: {
            line: 15,
            column: 1
          }
        },
        line: 13
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 15,
            column: 6
          }
        },
        loc: {
          start: {
            line: 15,
            column: 20
          },
          end: {
            line: 17,
            column: 1
          }
        },
        line: 15
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 18,
            column: 51
          },
          end: {
            line: 18,
            column: 52
          }
        },
        loc: {
          start: {
            line: 18,
            column: 63
          },
          end: {
            line: 34,
            column: 1
          }
        },
        line: 18
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 19,
            column: 18
          },
          end: {
            line: 19,
            column: 19
          }
        },
        loc: {
          start: {
            line: 19,
            column: 30
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 19
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 20,
            column: 49
          }
        },
        loc: {
          start: {
            line: 20,
            column: 61
          },
          end: {
            line: 24,
            column: 9
          }
        },
        line: 20
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 27,
            column: 11
          },
          end: {
            line: 27,
            column: 12
          }
        },
        loc: {
          start: {
            line: 27,
            column: 26
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 27
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 35,
            column: 44
          },
          end: {
            line: 35,
            column: 45
          }
        },
        loc: {
          start: {
            line: 35,
            column: 89
          },
          end: {
            line: 43,
            column: 1
          }
        },
        line: 35
      },
      "10": {
        name: "adopt",
        decl: {
          start: {
            line: 36,
            column: 13
          },
          end: {
            line: 36,
            column: 18
          }
        },
        loc: {
          start: {
            line: 36,
            column: 26
          },
          end: {
            line: 36,
            column: 112
          }
        },
        line: 36
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 36,
            column: 70
          },
          end: {
            line: 36,
            column: 71
          }
        },
        loc: {
          start: {
            line: 36,
            column: 89
          },
          end: {
            line: 36,
            column: 108
          }
        },
        line: 36
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 37,
            column: 36
          },
          end: {
            line: 37,
            column: 37
          }
        },
        loc: {
          start: {
            line: 37,
            column: 63
          },
          end: {
            line: 42,
            column: 5
          }
        },
        line: 37
      },
      "13": {
        name: "fulfilled",
        decl: {
          start: {
            line: 38,
            column: 17
          },
          end: {
            line: 38,
            column: 26
          }
        },
        loc: {
          start: {
            line: 38,
            column: 34
          },
          end: {
            line: 38,
            column: 99
          }
        },
        line: 38
      },
      "14": {
        name: "rejected",
        decl: {
          start: {
            line: 39,
            column: 17
          },
          end: {
            line: 39,
            column: 25
          }
        },
        loc: {
          start: {
            line: 39,
            column: 33
          },
          end: {
            line: 39,
            column: 102
          }
        },
        line: 39
      },
      "15": {
        name: "step",
        decl: {
          start: {
            line: 40,
            column: 17
          },
          end: {
            line: 40,
            column: 21
          }
        },
        loc: {
          start: {
            line: 40,
            column: 30
          },
          end: {
            line: 40,
            column: 118
          }
        },
        line: 40
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 50,
            column: 32
          },
          end: {
            line: 50,
            column: 33
          }
        },
        loc: {
          start: {
            line: 50,
            column: 50
          },
          end: {
            line: 65,
            column: 2
          }
        },
        line: 50
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 50,
            column: 84
          },
          end: {
            line: 50,
            column: 85
          }
        },
        loc: {
          start: {
            line: 50,
            column: 97
          },
          end: {
            line: 65,
            column: 1
          }
        },
        line: 50
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 68,
            column: 36
          },
          end: {
            line: 68,
            column: 37
          }
        },
        loc: {
          start: {
            line: 68,
            column: 51
          },
          end: {
            line: 100,
            column: 2
          }
        },
        line: 68
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 68,
            column: 85
          },
          end: {
            line: 68,
            column: 86
          }
        },
        loc: {
          start: {
            line: 68,
            column: 98
          },
          end: {
            line: 100,
            column: 1
          }
        },
        line: 68
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 77,
            column: 33
          },
          end: {
            line: 77,
            column: 34
          }
        },
        loc: {
          start: {
            line: 77,
            column: 40
          },
          end: {
            line: 77,
            column: 50
          }
        },
        line: 77
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 89,
            column: 52
          },
          end: {
            line: 89,
            column: 53
          }
        },
        loc: {
          start: {
            line: 89,
            column: 59
          },
          end: {
            line: 89,
            column: 69
          }
        },
        line: 89
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 91,
            column: 38
          },
          end: {
            line: 91,
            column: 39
          }
        },
        loc: {
          start: {
            line: 91,
            column: 48
          },
          end: {
            line: 95,
            column: 13
          }
        },
        line: 91
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 103,
            column: 33
          },
          end: {
            line: 103,
            column: 34
          }
        },
        loc: {
          start: {
            line: 103,
            column: 53
          },
          end: {
            line: 110,
            column: 2
          }
        },
        line: 103
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 103,
            column: 87
          },
          end: {
            line: 103,
            column: 88
          }
        },
        loc: {
          start: {
            line: 103,
            column: 100
          },
          end: {
            line: 110,
            column: 1
          }
        },
        line: 103
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 113,
            column: 39
          },
          end: {
            line: 113,
            column: 40
          }
        },
        loc: {
          start: {
            line: 113,
            column: 59
          },
          end: {
            line: 120,
            column: 2
          }
        },
        line: 113
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 113,
            column: 93
          },
          end: {
            line: 113,
            column: 94
          }
        },
        loc: {
          start: {
            line: 113,
            column: 106
          },
          end: {
            line: 120,
            column: 1
          }
        },
        line: 113
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 119,
            column: 29
          },
          end: {
            line: 119,
            column: 30
          }
        },
        loc: {
          start: {
            line: 119,
            column: 36
          },
          end: {
            line: 119,
            column: 46
          }
        },
        line: 119
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 123,
            column: 27
          },
          end: {
            line: 123,
            column: 28
          }
        },
        loc: {
          start: {
            line: 123,
            column: 44
          },
          end: {
            line: 132,
            column: 2
          }
        },
        line: 123
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 123,
            column: 78
          },
          end: {
            line: 123,
            column: 79
          }
        },
        loc: {
          start: {
            line: 123,
            column: 91
          },
          end: {
            line: 132,
            column: 1
          }
        },
        line: 123
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 135,
            column: 38
          },
          end: {
            line: 135,
            column: 39
          }
        },
        loc: {
          start: {
            line: 135,
            column: 67
          },
          end: {
            line: 142,
            column: 2
          }
        },
        line: 135
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 135,
            column: 101
          },
          end: {
            line: 135,
            column: 102
          }
        },
        loc: {
          start: {
            line: 135,
            column: 114
          },
          end: {
            line: 142,
            column: 1
          }
        },
        line: 135
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 145,
            column: 31
          },
          end: {
            line: 145,
            column: 32
          }
        },
        loc: {
          start: {
            line: 145,
            column: 46
          },
          end: {
            line: 150,
            column: 2
          }
        },
        line: 145
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 145,
            column: 80
          },
          end: {
            line: 145,
            column: 81
          }
        },
        loc: {
          start: {
            line: 145,
            column: 93
          },
          end: {
            line: 150,
            column: 1
          }
        },
        line: 145
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 153,
            column: 36
          },
          end: {
            line: 153,
            column: 37
          }
        },
        loc: {
          start: {
            line: 153,
            column: 67
          },
          end: {
            line: 167,
            column: 2
          }
        },
        line: 153
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 153,
            column: 101
          },
          end: {
            line: 153,
            column: 102
          }
        },
        loc: {
          start: {
            line: 153,
            column: 114
          },
          end: {
            line: 167,
            column: 1
          }
        },
        line: 153
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 170,
            column: 33
          },
          end: {
            line: 170,
            column: 34
          }
        },
        loc: {
          start: {
            line: 170,
            column: 57
          },
          end: {
            line: 200,
            column: 2
          }
        },
        line: 170
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 170,
            column: 91
          },
          end: {
            line: 170,
            column: 92
          }
        },
        loc: {
          start: {
            line: 170,
            column: 104
          },
          end: {
            line: 200,
            column: 1
          }
        },
        line: 170
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 185,
            column: 42
          },
          end: {
            line: 185,
            column: 43
          }
        },
        loc: {
          start: {
            line: 185,
            column: 49
          },
          end: {
            line: 185,
            column: 59
          }
        },
        line: 185
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 188,
            column: 45
          },
          end: {
            line: 188,
            column: 46
          }
        },
        loc: {
          start: {
            line: 188,
            column: 61
          },
          end: {
            line: 197,
            column: 9
          }
        },
        line: 188
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 195,
            column: 71
          },
          end: {
            line: 195,
            column: 72
          }
        },
        loc: {
          start: {
            line: 195,
            column: 76
          },
          end: {
            line: 195,
            column: 91
          }
        },
        line: 195
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 196,
            column: 42
          },
          end: {
            line: 196,
            column: 43
          }
        },
        loc: {
          start: {
            line: 196,
            column: 47
          },
          end: {
            line: 196,
            column: 101
          }
        },
        line: 196
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 203,
            column: 32
          },
          end: {
            line: 203,
            column: 33
          }
        },
        loc: {
          start: {
            line: 203,
            column: 63
          },
          end: {
            line: 217,
            column: 2
          }
        },
        line: 203
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 203,
            column: 97
          },
          end: {
            line: 203,
            column: 98
          }
        },
        loc: {
          start: {
            line: 203,
            column: 110
          },
          end: {
            line: 217,
            column: 1
          }
        },
        line: 203
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 220,
            column: 33
          },
          end: {
            line: 220,
            column: 34
          }
        },
        loc: {
          start: {
            line: 220,
            column: 64
          },
          end: {
            line: 234,
            column: 2
          }
        },
        line: 220
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 220,
            column: 98
          },
          end: {
            line: 220,
            column: 99
          }
        },
        loc: {
          start: {
            line: 220,
            column: 111
          },
          end: {
            line: 234,
            column: 1
          }
        },
        line: 220
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 237,
            column: 41
          },
          end: {
            line: 237,
            column: 42
          }
        },
        loc: {
          start: {
            line: 237,
            column: 59
          },
          end: {
            line: 247,
            column: 2
          }
        },
        line: 237
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 237,
            column: 93
          },
          end: {
            line: 237,
            column: 94
          }
        },
        loc: {
          start: {
            line: 237,
            column: 106
          },
          end: {
            line: 247,
            column: 1
          }
        },
        line: 237
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 243,
            column: 44
          },
          end: {
            line: 243,
            column: 45
          }
        },
        loc: {
          start: {
            line: 243,
            column: 51
          },
          end: {
            line: 243,
            column: 61
          }
        },
        line: 243
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 245,
            column: 44
          },
          end: {
            line: 245,
            column: 45
          }
        },
        loc: {
          start: {
            line: 245,
            column: 52
          },
          end: {
            line: 245,
            column: 122
          }
        },
        line: 245
      },
      "50": {
        name: "(anonymous_50)",
        decl: {
          start: {
            line: 250,
            column: 26
          },
          end: {
            line: 250,
            column: 27
          }
        },
        loc: {
          start: {
            line: 250,
            column: 41
          },
          end: {
            line: 260,
            column: 2
          }
        },
        line: 250
      },
      "51": {
        name: "(anonymous_51)",
        decl: {
          start: {
            line: 250,
            column: 75
          },
          end: {
            line: 250,
            column: 76
          }
        },
        loc: {
          start: {
            line: 250,
            column: 88
          },
          end: {
            line: 260,
            column: 1
          }
        },
        line: 250
      },
      "52": {
        name: "(anonymous_52)",
        decl: {
          start: {
            line: 253,
            column: 48
          },
          end: {
            line: 253,
            column: 49
          }
        },
        loc: {
          start: {
            line: 253,
            column: 63
          },
          end: {
            line: 253,
            column: 85
          }
        },
        line: 253
      },
      "53": {
        name: "(anonymous_53)",
        decl: {
          start: {
            line: 254,
            column: 53
          },
          end: {
            line: 254,
            column: 54
          }
        },
        loc: {
          start: {
            line: 254,
            column: 61
          },
          end: {
            line: 254,
            column: 74
          }
        },
        line: 254
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 12,
            column: 3
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 9,
            column: 1
          }
        }, {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 12,
            column: 1
          }
        }],
        line: 2
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "4": {
        loc: {
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 13
          }
        }, {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 47
          }
        }, {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 63
          }
        }, {
          start: {
            line: 5,
            column: 67
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 10
      },
      "8": {
        loc: {
          start: {
            line: 13,
            column: 25
          },
          end: {
            line: 17,
            column: 2
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 26
          },
          end: {
            line: 13,
            column: 30
          }
        }, {
          start: {
            line: 13,
            column: 34
          },
          end: {
            line: 13,
            column: 57
          }
        }, {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "9": {
        loc: {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 15,
            column: 1
          }
        }, {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "10": {
        loc: {
          start: {
            line: 18,
            column: 19
          },
          end: {
            line: 34,
            column: 4
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 20
          },
          end: {
            line: 18,
            column: 24
          }
        }, {
          start: {
            line: 18,
            column: 28
          },
          end: {
            line: 18,
            column: 45
          }
        }, {
          start: {
            line: 18,
            column: 50
          },
          end: {
            line: 34,
            column: 4
          }
        }],
        line: 18
      },
      "11": {
        loc: {
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 24,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 20,
            column: 44
          }
        }, {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 24,
            column: 9
          }
        }],
        line: 20
      },
      "12": {
        loc: {
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 95
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 95
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "13": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "14": {
        loc: {
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 15
          }
        }, {
          start: {
            line: 28,
            column: 19
          },
          end: {
            line: 28,
            column: 33
          }
        }],
        line: 28
      },
      "15": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "16": {
        loc: {
          start: {
            line: 30,
            column: 78
          },
          end: {
            line: 30,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 78
          },
          end: {
            line: 30,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "17": {
        loc: {
          start: {
            line: 35,
            column: 16
          },
          end: {
            line: 43,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 17
          },
          end: {
            line: 35,
            column: 21
          }
        }, {
          start: {
            line: 35,
            column: 25
          },
          end: {
            line: 35,
            column: 39
          }
        }, {
          start: {
            line: 35,
            column: 44
          },
          end: {
            line: 43,
            column: 1
          }
        }],
        line: 35
      },
      "18": {
        loc: {
          start: {
            line: 36,
            column: 35
          },
          end: {
            line: 36,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 36,
            column: 56
          },
          end: {
            line: 36,
            column: 61
          }
        }, {
          start: {
            line: 36,
            column: 64
          },
          end: {
            line: 36,
            column: 109
          }
        }],
        line: 36
      },
      "19": {
        loc: {
          start: {
            line: 37,
            column: 16
          },
          end: {
            line: 37,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 37,
            column: 16
          },
          end: {
            line: 37,
            column: 17
          }
        }, {
          start: {
            line: 37,
            column: 22
          },
          end: {
            line: 37,
            column: 33
          }
        }],
        line: 37
      },
      "20": {
        loc: {
          start: {
            line: 40,
            column: 32
          },
          end: {
            line: 40,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 40,
            column: 46
          },
          end: {
            line: 40,
            column: 67
          }
        }, {
          start: {
            line: 40,
            column: 70
          },
          end: {
            line: 40,
            column: 115
          }
        }],
        line: 40
      },
      "21": {
        loc: {
          start: {
            line: 41,
            column: 51
          },
          end: {
            line: 41,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 51
          },
          end: {
            line: 41,
            column: 61
          }
        }, {
          start: {
            line: 41,
            column: 65
          },
          end: {
            line: 41,
            column: 67
          }
        }],
        line: 41
      },
      "22": {
        loc: {
          start: {
            line: 81,
            column: 8
          },
          end: {
            line: 96,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 81,
            column: 8
          },
          end: {
            line: 96,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 81
      },
      "23": {
        loc: {
          start: {
            line: 81,
            column: 12
          },
          end: {
            line: 81,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 81,
            column: 12
          },
          end: {
            line: 81,
            column: 28
          }
        }, {
          start: {
            line: 81,
            column: 32
          },
          end: {
            line: 81,
            column: 75
          }
        }],
        line: 81
      },
      "24": {
        loc: {
          start: {
            line: 92,
            column: 39
          },
          end: {
            line: 92,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 92,
            column: 39
          },
          end: {
            line: 92,
            column: 50
          }
        }, {
          start: {
            line: 92,
            column: 54
          },
          end: {
            line: 92,
            column: 65
          }
        }, {
          start: {
            line: 92,
            column: 69
          },
          end: {
            line: 92,
            column: 70
          }
        }],
        line: 92
      },
      "25": {
        loc: {
          start: {
            line: 93,
            column: 39
          },
          end: {
            line: 93,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 93,
            column: 39
          },
          end: {
            line: 93,
            column: 50
          }
        }, {
          start: {
            line: 93,
            column: 54
          },
          end: {
            line: 93,
            column: 65
          }
        }, {
          start: {
            line: 93,
            column: 69
          },
          end: {
            line: 93,
            column: 70
          }
        }],
        line: 93
      },
      "26": {
        loc: {
          start: {
            line: 106,
            column: 4
          },
          end: {
            line: 108,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 106,
            column: 4
          },
          end: {
            line: 108,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 106
      },
      "27": {
        loc: {
          start: {
            line: 157,
            column: 4
          },
          end: {
            line: 159,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 157,
            column: 4
          },
          end: {
            line: 159,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 157
      },
      "28": {
        loc: {
          start: {
            line: 161,
            column: 4
          },
          end: {
            line: 163,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 161,
            column: 4
          },
          end: {
            line: 163,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 161
      },
      "29": {
        loc: {
          start: {
            line: 175,
            column: 4
          },
          end: {
            line: 177,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 175,
            column: 4
          },
          end: {
            line: 177,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 175
      },
      "30": {
        loc: {
          start: {
            line: 178,
            column: 4
          },
          end: {
            line: 180,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 178,
            column: 4
          },
          end: {
            line: 180,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 178
      },
      "31": {
        loc: {
          start: {
            line: 181,
            column: 4
          },
          end: {
            line: 183,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 181,
            column: 4
          },
          end: {
            line: 183,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 181
      },
      "32": {
        loc: {
          start: {
            line: 187,
            column: 4
          },
          end: {
            line: 198,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 187,
            column: 4
          },
          end: {
            line: 198,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 187
      },
      "33": {
        loc: {
          start: {
            line: 191,
            column: 12
          },
          end: {
            line: 193,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 191,
            column: 12
          },
          end: {
            line: 193,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 191
      },
      "34": {
        loc: {
          start: {
            line: 191,
            column: 16
          },
          end: {
            line: 191,
            column: 148
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 191,
            column: 76
          },
          end: {
            line: 191,
            column: 82
          }
        }, {
          start: {
            line: 191,
            column: 85
          },
          end: {
            line: 191,
            column: 148
          }
        }],
        line: 191
      },
      "35": {
        loc: {
          start: {
            line: 191,
            column: 16
          },
          end: {
            line: 191,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 191,
            column: 16
          },
          end: {
            line: 191,
            column: 56
          }
        }, {
          start: {
            line: 191,
            column: 60
          },
          end: {
            line: 191,
            column: 73
          }
        }],
        line: 191
      },
      "36": {
        loc: {
          start: {
            line: 207,
            column: 4
          },
          end: {
            line: 209,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 207,
            column: 4
          },
          end: {
            line: 209,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 207
      },
      "37": {
        loc: {
          start: {
            line: 211,
            column: 4
          },
          end: {
            line: 213,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 211,
            column: 4
          },
          end: {
            line: 213,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 211
      },
      "38": {
        loc: {
          start: {
            line: 224,
            column: 4
          },
          end: {
            line: 226,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 224,
            column: 4
          },
          end: {
            line: 226,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 224
      },
      "39": {
        loc: {
          start: {
            line: 228,
            column: 4
          },
          end: {
            line: 230,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 228,
            column: 4
          },
          end: {
            line: 230,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 228
      },
      "40": {
        loc: {
          start: {
            line: 245,
            column: 52
          },
          end: {
            line: 245,
            column: 122
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 245,
            column: 52
          },
          end: {
            line: 245,
            column: 85
          }
        }, {
          start: {
            line: 245,
            column: 89
          },
          end: {
            line: 245,
            column: 122
          }
        }],
        line: 245
      },
      "41": {
        loc: {
          start: {
            line: 246,
            column: 11
          },
          end: {
            line: 246,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 246,
            column: 11
          },
          end: {
            line: 246,
            column: 23
          }
        }, {
          start: {
            line: 246,
            column: 27
          },
          end: {
            line: 246,
            column: 31
          }
        }],
        line: 246
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0, 0],
      "25": [0, 0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\models\\chatModel.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\models\\chatModel.ts"],
      sourcesContent: ["import { db } from '../utils/firebase';\r\nimport { Message, Conversation, ChatFilters } from '../utils/DataTypes';\r\nimport * as admin from 'firebase-admin';\r\nimport { logger } from '../services/loggerService';\r\n\r\n// Crear una nueva conversaci\xF3n\r\nexport const createConversationModel = async (\r\n  participants: string[]\r\n): Promise<Conversation> => {\r\n  const now = new Date().toISOString();\r\n  const conversationRef = db.collection('conversations').doc();\r\n\r\n  const conversation: Conversation = {\r\n    id: conversationRef.id,\r\n    participants,\r\n    unreadCount: 0,\r\n    updatedAt: now,\r\n    isActive: true,\r\n    createdAt: now,\r\n  };\r\n\r\n  await conversationRef.set(conversation);\r\n  logger.info('[src/models/chatModel.ts:19] Conversaci\xF3n creada:', { metadata: { id: conversation\r\n,    } });\r\n  return conversation;\r\n};\r\n\r\n// Obtener conversaciones de un usuario\r\nexport const getConversationsByUserModel = async (\r\n  userEmail: string\r\n): Promise<Conversation[]> => {\r\n  try {\r\n    // Primero intentar con la consulta optimizada\r\n    const snapshot = await db\r\n      .collection('conversations')\r\n      .where('participants', 'array-contains', userEmail)\r\n      .where('isActive', '==', true)\r\n      .orderBy('updatedAt', 'desc')\r\n      .get();\r\n\r\n    return snapshot.docs.map(doc => doc.data() as Conversation);\r\n  } catch (error: any) {\r\n    // Si falla por \xEDndice faltante, usar consulta alternativa\r\n    if (error.code === 9 && error.message.includes('requires an index')) {\r\n      console.warn('\xCDndice compuesto faltante, usando consulta alternativa');\r\n      \r\n      // Consulta alternativa sin ordenamiento\r\n      const snapshot = await db\r\n        .collection('conversations')\r\n        .where('participants', 'array-contains', userEmail)\r\n        .where('isActive', '==', true)\r\n        .get();\r\n\r\n      const conversations = snapshot.docs.map(doc => doc.data() as Conversation);\r\n      \r\n      // Ordenar en memoria\r\n      return conversations.sort((a, b) => {\r\n        const dateA = new Date(a.updatedAt || a.createdAt || 0);\r\n        const dateB = new Date(b.updatedAt || b.createdAt || 0);\r\n        return dateB.getTime() - dateA.getTime();\r\n      });\r\n    }\r\n    \r\n    // Si es otro tipo de error, relanzarlo\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Obtener conversaci\xF3n por ID\r\nexport const getConversationByIdModel = async (\r\n  conversationId: string\r\n): Promise<Conversation | null> => {\r\n  const conversationRef = db.collection('conversations').doc(conversationId);\r\n  const conversationSnap = await conversationRef.get();\r\n\r\n  if (!conversationSnap.exists) {\r\n    return null;\r\n  }\r\n\r\n  return conversationSnap.data() as Conversation;\r\n};\r\n\r\n// Obtener mensajes de una conversaci\xF3n\r\nexport const getMessagesByConversationModel = async (\r\n  conversationId: string\r\n): Promise<Message[]> => {\r\n  const snapshot = await db\r\n    .collection('messages')\r\n    .where('conversationId', '==', conversationId)\r\n    .orderBy('timestamp', 'asc')\r\n    .get();\r\n\r\n  return snapshot.docs.map(doc => doc.data() as Message);\r\n};\r\n\r\n// Crear un nuevo mensaje\r\nexport const createMessageModel = async (\r\n  messageData: Omit<Message, 'id' | 'timestamp'>\r\n): Promise<Message> => {\r\n  const now = new Date().toISOString();\r\n  const messageRef = db.collection('messages').doc();\r\n\r\n  const message: Message = {\r\n    ...messageData,\r\n    id: messageRef.id,\r\n    timestamp: now,\r\n  };\r\n\r\n  await messageRef.set(message);\r\n  logger.info('[src/models/chatModel.ts:68] Mensaje creado:', { metadata: { id: message  } });\r\n\r\n  // Actualizar la conversaci\xF3n con el \xFAltimo mensaje\r\n  await updateConversationLastMessage(message.conversationId, message);\r\n\r\n  return message;\r\n};\r\n\r\n// Actualizar el \xFAltimo mensaje de una conversaci\xF3n\r\nexport const updateConversationLastMessage = async (\r\n  conversationId: string,\r\n  message: Message\r\n): Promise<void> => {\r\n  const conversationRef = db.collection('conversations').doc(conversationId);\r\n\r\n  await conversationRef.update({\r\n    lastMessage: message,\r\n    updatedAt: message.timestamp,\r\n    unreadCount: admin.firestore.FieldValue.increment(1),\r\n  });\r\n};\r\n\r\n// Marcar mensaje como le\xEDdo\r\nexport const markMessageAsReadModel = async (\r\n  messageId: string\r\n): Promise<void> => {\r\n  const messageRef = db.collection('messages').doc(messageId);\r\n  await messageRef.update({\r\n    status: 'read',\r\n  });\r\n};\r\n\r\n// Marcar conversaci\xF3n como le\xEDda\r\nexport const markConversationAsReadModel = async (\r\n  conversationId: string,\r\n  userEmail: string\r\n): Promise<void> => {\r\n  const conversationRef = db.collection('conversations').doc(conversationId);\r\n\r\n  // Obtener la conversaci\xF3n para verificar que el usuario es participante\r\n  const conversationSnap = await conversationRef.get();\r\n  if (!conversationSnap.exists) {\r\n    throw new Error('Conversaci\xF3n no encontrada');\r\n  }\r\n\r\n  const conversation = conversationSnap.data() as Conversation;\r\n  if (!conversation.participants.includes(userEmail)) {\r\n    throw new Error('Usuario no es participante de esta conversaci\xF3n');\r\n  }\r\n\r\n  await conversationRef.update({\r\n    unreadCount: 0,\r\n  });\r\n};\r\n\r\n// Buscar conversaciones con filtros\r\nexport const searchConversationsModel = async (\r\n  userEmail: string,\r\n  filters: ChatFilters\r\n): Promise<Conversation[]> => {\r\n  let query = db\r\n    .collection('conversations')\r\n    .where('participants', 'array-contains', userEmail)\r\n    .where('isActive', '==', true);\r\n\r\n  if (filters.unreadOnly) {\r\n    query = query.where('unreadCount', '>', 0);\r\n  }\r\n\r\n  if (filters.dateFrom) {\r\n    query = query.where('updatedAt', '>=', filters.dateFrom);\r\n  }\r\n\r\n  if (filters.dateTo) {\r\n    query = query.where('updatedAt', '<=', filters.dateTo);\r\n  }\r\n\r\n  const snapshot = await query.orderBy('updatedAt', 'desc').get();\r\n  let conversations = snapshot.docs.map(doc => doc.data() as Conversation);\r\n\r\n  // Filtrar por b\xFAsqueda de texto si se proporciona\r\n  if (filters.search) {\r\n    conversations = conversations.filter(conversation => {\r\n      // Buscar en el \xFAltimo mensaje\r\n      if (\r\n        conversation.lastMessage?.content\r\n          .toLowerCase()\r\n          .includes(filters.search!.toLowerCase())\r\n      ) {\r\n        return true;\r\n      }\r\n\r\n      // Buscar en participantes (excluyendo al usuario actual)\r\n      const otherParticipants = conversation.participants.filter(\r\n        p => p !== userEmail\r\n      );\r\n      return otherParticipants.some(p =>\r\n        p.toLowerCase().includes(filters.search!.toLowerCase())\r\n      );\r\n    });\r\n  }\r\n\r\n  return conversations;\r\n};\r\n\r\n// Eliminar conversaci\xF3n (marcar como inactiva)\r\nexport const deleteConversationModel = async (\r\n  conversationId: string,\r\n  userEmail: string\r\n): Promise<void> => {\r\n  const conversationRef = db.collection('conversations').doc(conversationId);\r\n\r\n  // Verificar que el usuario es participante\r\n  const conversationSnap = await conversationRef.get();\r\n  if (!conversationSnap.exists) {\r\n    throw new Error('Conversaci\xF3n no encontrada');\r\n  }\r\n\r\n  const conversation = conversationSnap.data() as Conversation;\r\n  if (!conversation.participants.includes(userEmail)) {\r\n    throw new Error('Usuario no es participante de esta conversaci\xF3n');\r\n  }\r\n\r\n  await conversationRef.update({\r\n    isActive: false,\r\n  });\r\n};\r\n\r\n// Archivar conversaci\xF3n\r\nexport const archiveConversationModel = async (\r\n  conversationId: string,\r\n  userEmail: string\r\n): Promise<void> => {\r\n  const conversationRef = db.collection('conversations').doc(conversationId);\r\n\r\n  // Verificar que el usuario es participante\r\n  const conversationSnap = await conversationRef.get();\r\n  if (!conversationSnap.exists) {\r\n    throw new Error('Conversaci\xF3n no encontrada');\r\n  }\r\n\r\n  const conversation = conversationSnap.data() as Conversation;\r\n  if (!conversation.participants.includes(userEmail)) {\r\n    throw new Error('Usuario no es participante de esta conversaci\xF3n');\r\n  }\r\n\r\n  await conversationRef.update({\r\n    isActive: false,\r\n  });\r\n};\r\n\r\n// Obtener conversaci\xF3n entre dos usuarios espec\xEDficos\r\nexport const getConversationBetweenUsersModel = async (\r\n  user1: string,\r\n  user2: string\r\n): Promise<Conversation | null> => {\r\n  const snapshot = await db\r\n    .collection('conversations')\r\n    .where('participants', 'array-contains', user1)\r\n    .where('isActive', '==', true)\r\n    .get();\r\n\r\n  const conversations = snapshot.docs.map(doc => doc.data() as Conversation);\r\n\r\n  // Buscar conversaci\xF3n que contenga ambos usuarios\r\n  const conversation = conversations.find(\r\n    conv =>\r\n      conv.participants.includes(user1) && conv.participants.includes(user2)\r\n  );\r\n\r\n  return conversation || null;\r\n};\r\n\r\n// Obtener estad\xEDsticas de chat para un usuario\r\nexport const getChatStatsModel = async (\r\n  userEmail: string\r\n): Promise<{\r\n  totalConversations: number;\r\n  unreadMessages: number;\r\n  activeConversations: number;\r\n}> => {\r\n  const conversations = await getConversationsByUserModel(userEmail);\r\n\r\n  const totalConversations = conversations.length;\r\n  const unreadMessages = conversations.reduce(\r\n    (sum, conv) => sum + conv.unreadCount,\r\n    0\r\n  );\r\n  const activeConversations = conversations.filter(\r\n    conv => conv.isActive\r\n  ).length;\r\n\r\n  return {\r\n    totalConversations,\r\n    unreadMessages,\r\n    activeConversations,\r\n  };\r\n};\r\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "042b1200fdfa0cde27e02b737de118287c5fce2b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_pa1ohw0ul = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_pa1ohw0ul();
var __createBinding =
/* istanbul ignore next */
(cov_pa1ohw0ul().s[0]++,
/* istanbul ignore next */
(cov_pa1ohw0ul().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_pa1ohw0ul().b[0][1]++, this.__createBinding) ||
/* istanbul ignore next */
(cov_pa1ohw0ul().b[0][2]++, Object.create ?
/* istanbul ignore next */
(cov_pa1ohw0ul().b[1][0]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_pa1ohw0ul().f[0]++;
  cov_pa1ohw0ul().s[1]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_pa1ohw0ul().b[2][0]++;
    cov_pa1ohw0ul().s[2]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_pa1ohw0ul().b[2][1]++;
  }
  var desc =
  /* istanbul ignore next */
  (cov_pa1ohw0ul().s[3]++, Object.getOwnPropertyDescriptor(m, k));
  /* istanbul ignore next */
  cov_pa1ohw0ul().s[4]++;
  if (
  /* istanbul ignore next */
  (cov_pa1ohw0ul().b[4][0]++, !desc) ||
  /* istanbul ignore next */
  (cov_pa1ohw0ul().b[4][1]++, "get" in desc ?
  /* istanbul ignore next */
  (cov_pa1ohw0ul().b[5][0]++, !m.__esModule) :
  /* istanbul ignore next */
  (cov_pa1ohw0ul().b[5][1]++,
  /* istanbul ignore next */
  (cov_pa1ohw0ul().b[6][0]++, desc.writable) ||
  /* istanbul ignore next */
  (cov_pa1ohw0ul().b[6][1]++, desc.configurable)))) {
    /* istanbul ignore next */
    cov_pa1ohw0ul().b[3][0]++;
    cov_pa1ohw0ul().s[5]++;
    desc = {
      enumerable: true,
      get: function () {
        /* istanbul ignore next */
        cov_pa1ohw0ul().f[1]++;
        cov_pa1ohw0ul().s[6]++;
        return m[k];
      }
    };
  } else
  /* istanbul ignore next */
  {
    cov_pa1ohw0ul().b[3][1]++;
  }
  cov_pa1ohw0ul().s[7]++;
  Object.defineProperty(o, k2, desc);
}) :
/* istanbul ignore next */
(cov_pa1ohw0ul().b[1][1]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_pa1ohw0ul().f[2]++;
  cov_pa1ohw0ul().s[8]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_pa1ohw0ul().b[7][0]++;
    cov_pa1ohw0ul().s[9]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_pa1ohw0ul().b[7][1]++;
  }
  cov_pa1ohw0ul().s[10]++;
  o[k2] = m[k];
})));
var __setModuleDefault =
/* istanbul ignore next */
(cov_pa1ohw0ul().s[11]++,
/* istanbul ignore next */
(cov_pa1ohw0ul().b[8][0]++, this) &&
/* istanbul ignore next */
(cov_pa1ohw0ul().b[8][1]++, this.__setModuleDefault) ||
/* istanbul ignore next */
(cov_pa1ohw0ul().b[8][2]++, Object.create ?
/* istanbul ignore next */
(cov_pa1ohw0ul().b[9][0]++, function (o, v) {
  /* istanbul ignore next */
  cov_pa1ohw0ul().f[3]++;
  cov_pa1ohw0ul().s[12]++;
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
}) :
/* istanbul ignore next */
(cov_pa1ohw0ul().b[9][1]++, function (o, v) {
  /* istanbul ignore next */
  cov_pa1ohw0ul().f[4]++;
  cov_pa1ohw0ul().s[13]++;
  o["default"] = v;
})));
var __importStar =
/* istanbul ignore next */
(cov_pa1ohw0ul().s[14]++,
/* istanbul ignore next */
(cov_pa1ohw0ul().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_pa1ohw0ul().b[10][1]++, this.__importStar) ||
/* istanbul ignore next */
(cov_pa1ohw0ul().b[10][2]++, function () {
  /* istanbul ignore next */
  cov_pa1ohw0ul().f[5]++;
  cov_pa1ohw0ul().s[15]++;
  var ownKeys = function (o) {
    /* istanbul ignore next */
    cov_pa1ohw0ul().f[6]++;
    cov_pa1ohw0ul().s[16]++;
    ownKeys =
    /* istanbul ignore next */
    (cov_pa1ohw0ul().b[11][0]++, Object.getOwnPropertyNames) ||
    /* istanbul ignore next */
    (cov_pa1ohw0ul().b[11][1]++, function (o) {
      /* istanbul ignore next */
      cov_pa1ohw0ul().f[7]++;
      var ar =
      /* istanbul ignore next */
      (cov_pa1ohw0ul().s[17]++, []);
      /* istanbul ignore next */
      cov_pa1ohw0ul().s[18]++;
      for (var k in o) {
        /* istanbul ignore next */
        cov_pa1ohw0ul().s[19]++;
        if (Object.prototype.hasOwnProperty.call(o, k)) {
          /* istanbul ignore next */
          cov_pa1ohw0ul().b[12][0]++;
          cov_pa1ohw0ul().s[20]++;
          ar[ar.length] = k;
        } else
        /* istanbul ignore next */
        {
          cov_pa1ohw0ul().b[12][1]++;
        }
      }
      /* istanbul ignore next */
      cov_pa1ohw0ul().s[21]++;
      return ar;
    });
    /* istanbul ignore next */
    cov_pa1ohw0ul().s[22]++;
    return ownKeys(o);
  };
  /* istanbul ignore next */
  cov_pa1ohw0ul().s[23]++;
  return function (mod) {
    /* istanbul ignore next */
    cov_pa1ohw0ul().f[8]++;
    cov_pa1ohw0ul().s[24]++;
    if (
    /* istanbul ignore next */
    (cov_pa1ohw0ul().b[14][0]++, mod) &&
    /* istanbul ignore next */
    (cov_pa1ohw0ul().b[14][1]++, mod.__esModule)) {
      /* istanbul ignore next */
      cov_pa1ohw0ul().b[13][0]++;
      cov_pa1ohw0ul().s[25]++;
      return mod;
    } else
    /* istanbul ignore next */
    {
      cov_pa1ohw0ul().b[13][1]++;
    }
    var result =
    /* istanbul ignore next */
    (cov_pa1ohw0ul().s[26]++, {});
    /* istanbul ignore next */
    cov_pa1ohw0ul().s[27]++;
    if (mod != null) {
      /* istanbul ignore next */
      cov_pa1ohw0ul().b[15][0]++;
      cov_pa1ohw0ul().s[28]++;
      for (var k =
        /* istanbul ignore next */
        (cov_pa1ohw0ul().s[29]++, ownKeys(mod)), i =
        /* istanbul ignore next */
        (cov_pa1ohw0ul().s[30]++, 0); i < k.length; i++) {
        /* istanbul ignore next */
        cov_pa1ohw0ul().s[31]++;
        if (k[i] !== "default") {
          /* istanbul ignore next */
          cov_pa1ohw0ul().b[16][0]++;
          cov_pa1ohw0ul().s[32]++;
          __createBinding(result, mod, k[i]);
        } else
        /* istanbul ignore next */
        {
          cov_pa1ohw0ul().b[16][1]++;
        }
      }
    } else
    /* istanbul ignore next */
    {
      cov_pa1ohw0ul().b[15][1]++;
    }
    cov_pa1ohw0ul().s[33]++;
    __setModuleDefault(result, mod);
    /* istanbul ignore next */
    cov_pa1ohw0ul().s[34]++;
    return result;
  };
}()));
var __awaiter =
/* istanbul ignore next */
(cov_pa1ohw0ul().s[35]++,
/* istanbul ignore next */
(cov_pa1ohw0ul().b[17][0]++, this) &&
/* istanbul ignore next */
(cov_pa1ohw0ul().b[17][1]++, this.__awaiter) ||
/* istanbul ignore next */
(cov_pa1ohw0ul().b[17][2]++, function (thisArg, _arguments, P, generator) {
  /* istanbul ignore next */
  cov_pa1ohw0ul().f[9]++;
  function adopt(value) {
    /* istanbul ignore next */
    cov_pa1ohw0ul().f[10]++;
    cov_pa1ohw0ul().s[36]++;
    return value instanceof P ?
    /* istanbul ignore next */
    (cov_pa1ohw0ul().b[18][0]++, value) :
    /* istanbul ignore next */
    (cov_pa1ohw0ul().b[18][1]++, new P(function (resolve) {
      /* istanbul ignore next */
      cov_pa1ohw0ul().f[11]++;
      cov_pa1ohw0ul().s[37]++;
      resolve(value);
    }));
  }
  /* istanbul ignore next */
  cov_pa1ohw0ul().s[38]++;
  return new (
  /* istanbul ignore next */
  (cov_pa1ohw0ul().b[19][0]++, P) ||
  /* istanbul ignore next */
  (cov_pa1ohw0ul().b[19][1]++, P = Promise))(function (resolve, reject) {
    /* istanbul ignore next */
    cov_pa1ohw0ul().f[12]++;
    function fulfilled(value) {
      /* istanbul ignore next */
      cov_pa1ohw0ul().f[13]++;
      cov_pa1ohw0ul().s[39]++;
      try {
        /* istanbul ignore next */
        cov_pa1ohw0ul().s[40]++;
        step(generator.next(value));
      } catch (e) {
        /* istanbul ignore next */
        cov_pa1ohw0ul().s[41]++;
        reject(e);
      }
    }
    function rejected(value) {
      /* istanbul ignore next */
      cov_pa1ohw0ul().f[14]++;
      cov_pa1ohw0ul().s[42]++;
      try {
        /* istanbul ignore next */
        cov_pa1ohw0ul().s[43]++;
        step(generator["throw"](value));
      } catch (e) {
        /* istanbul ignore next */
        cov_pa1ohw0ul().s[44]++;
        reject(e);
      }
    }
    function step(result) {
      /* istanbul ignore next */
      cov_pa1ohw0ul().f[15]++;
      cov_pa1ohw0ul().s[45]++;
      result.done ?
      /* istanbul ignore next */
      (cov_pa1ohw0ul().b[20][0]++, resolve(result.value)) :
      /* istanbul ignore next */
      (cov_pa1ohw0ul().b[20][1]++, adopt(result.value).then(fulfilled, rejected));
    }
    /* istanbul ignore next */
    cov_pa1ohw0ul().s[46]++;
    step((generator = generator.apply(thisArg,
    /* istanbul ignore next */
    (cov_pa1ohw0ul().b[21][0]++, _arguments) ||
    /* istanbul ignore next */
    (cov_pa1ohw0ul().b[21][1]++, []))).next());
  });
}));
/* istanbul ignore next */
cov_pa1ohw0ul().s[47]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_pa1ohw0ul().s[48]++;
exports.getChatStatsModel = exports.getConversationBetweenUsersModel = exports.archiveConversationModel = exports.deleteConversationModel = exports.searchConversationsModel = exports.markConversationAsReadModel = exports.markMessageAsReadModel = exports.updateConversationLastMessage = exports.createMessageModel = exports.getMessagesByConversationModel = exports.getConversationByIdModel = exports.getConversationsByUserModel = exports.createConversationModel = void 0;
const firebase_1 =
/* istanbul ignore next */
(cov_pa1ohw0ul().s[49]++, require("../utils/firebase"));
const admin =
/* istanbul ignore next */
(cov_pa1ohw0ul().s[50]++, __importStar(require("firebase-admin")));
const loggerService_1 =
/* istanbul ignore next */
(cov_pa1ohw0ul().s[51]++, require("../services/loggerService"));
// Crear una nueva conversación
/* istanbul ignore next */
cov_pa1ohw0ul().s[52]++;
const createConversationModel = participants => {
  /* istanbul ignore next */
  cov_pa1ohw0ul().f[16]++;
  cov_pa1ohw0ul().s[53]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_pa1ohw0ul().f[17]++;
    const now =
    /* istanbul ignore next */
    (cov_pa1ohw0ul().s[54]++, new Date().toISOString());
    const conversationRef =
    /* istanbul ignore next */
    (cov_pa1ohw0ul().s[55]++, firebase_1.db.collection('conversations').doc());
    const conversation =
    /* istanbul ignore next */
    (cov_pa1ohw0ul().s[56]++, {
      id: conversationRef.id,
      participants,
      unreadCount: 0,
      updatedAt: now,
      isActive: true,
      createdAt: now
    });
    /* istanbul ignore next */
    cov_pa1ohw0ul().s[57]++;
    yield conversationRef.set(conversation);
    /* istanbul ignore next */
    cov_pa1ohw0ul().s[58]++;
    loggerService_1.logger.info('[src/models/chatModel.ts:19] Conversación creada:', {
      metadata: {
        id: conversation
      }
    });
    /* istanbul ignore next */
    cov_pa1ohw0ul().s[59]++;
    return conversation;
  });
};
/* istanbul ignore next */
cov_pa1ohw0ul().s[60]++;
exports.createConversationModel = createConversationModel;
// Obtener conversaciones de un usuario
/* istanbul ignore next */
cov_pa1ohw0ul().s[61]++;
const getConversationsByUserModel = userEmail => {
  /* istanbul ignore next */
  cov_pa1ohw0ul().f[18]++;
  cov_pa1ohw0ul().s[62]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_pa1ohw0ul().f[19]++;
    cov_pa1ohw0ul().s[63]++;
    try {
      // Primero intentar con la consulta optimizada
      const snapshot =
      /* istanbul ignore next */
      (cov_pa1ohw0ul().s[64]++, yield firebase_1.db.collection('conversations').where('participants', 'array-contains', userEmail).where('isActive', '==', true).orderBy('updatedAt', 'desc').get());
      /* istanbul ignore next */
      cov_pa1ohw0ul().s[65]++;
      return snapshot.docs.map(doc => {
        /* istanbul ignore next */
        cov_pa1ohw0ul().f[20]++;
        cov_pa1ohw0ul().s[66]++;
        return doc.data();
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_pa1ohw0ul().s[67]++;
      // Si falla por índice faltante, usar consulta alternativa
      if (
      /* istanbul ignore next */
      (cov_pa1ohw0ul().b[23][0]++, error.code === 9) &&
      /* istanbul ignore next */
      (cov_pa1ohw0ul().b[23][1]++, error.message.includes('requires an index'))) {
        /* istanbul ignore next */
        cov_pa1ohw0ul().b[22][0]++;
        cov_pa1ohw0ul().s[68]++;
        console.warn('Índice compuesto faltante, usando consulta alternativa');
        // Consulta alternativa sin ordenamiento
        const snapshot =
        /* istanbul ignore next */
        (cov_pa1ohw0ul().s[69]++, yield firebase_1.db.collection('conversations').where('participants', 'array-contains', userEmail).where('isActive', '==', true).get());
        const conversations =
        /* istanbul ignore next */
        (cov_pa1ohw0ul().s[70]++, snapshot.docs.map(doc => {
          /* istanbul ignore next */
          cov_pa1ohw0ul().f[21]++;
          cov_pa1ohw0ul().s[71]++;
          return doc.data();
        }));
        // Ordenar en memoria
        /* istanbul ignore next */
        cov_pa1ohw0ul().s[72]++;
        return conversations.sort((a, b) => {
          /* istanbul ignore next */
          cov_pa1ohw0ul().f[22]++;
          const dateA =
          /* istanbul ignore next */
          (cov_pa1ohw0ul().s[73]++, new Date(
          /* istanbul ignore next */
          (cov_pa1ohw0ul().b[24][0]++, a.updatedAt) ||
          /* istanbul ignore next */
          (cov_pa1ohw0ul().b[24][1]++, a.createdAt) ||
          /* istanbul ignore next */
          (cov_pa1ohw0ul().b[24][2]++, 0)));
          const dateB =
          /* istanbul ignore next */
          (cov_pa1ohw0ul().s[74]++, new Date(
          /* istanbul ignore next */
          (cov_pa1ohw0ul().b[25][0]++, b.updatedAt) ||
          /* istanbul ignore next */
          (cov_pa1ohw0ul().b[25][1]++, b.createdAt) ||
          /* istanbul ignore next */
          (cov_pa1ohw0ul().b[25][2]++, 0)));
          /* istanbul ignore next */
          cov_pa1ohw0ul().s[75]++;
          return dateB.getTime() - dateA.getTime();
        });
      } else
      /* istanbul ignore next */
      {
        cov_pa1ohw0ul().b[22][1]++;
      }
      // Si es otro tipo de error, relanzarlo
      cov_pa1ohw0ul().s[76]++;
      throw error;
    }
  });
};
/* istanbul ignore next */
cov_pa1ohw0ul().s[77]++;
exports.getConversationsByUserModel = getConversationsByUserModel;
// Obtener conversación por ID
/* istanbul ignore next */
cov_pa1ohw0ul().s[78]++;
const getConversationByIdModel = conversationId => {
  /* istanbul ignore next */
  cov_pa1ohw0ul().f[23]++;
  cov_pa1ohw0ul().s[79]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_pa1ohw0ul().f[24]++;
    const conversationRef =
    /* istanbul ignore next */
    (cov_pa1ohw0ul().s[80]++, firebase_1.db.collection('conversations').doc(conversationId));
    const conversationSnap =
    /* istanbul ignore next */
    (cov_pa1ohw0ul().s[81]++, yield conversationRef.get());
    /* istanbul ignore next */
    cov_pa1ohw0ul().s[82]++;
    if (!conversationSnap.exists) {
      /* istanbul ignore next */
      cov_pa1ohw0ul().b[26][0]++;
      cov_pa1ohw0ul().s[83]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_pa1ohw0ul().b[26][1]++;
    }
    cov_pa1ohw0ul().s[84]++;
    return conversationSnap.data();
  });
};
/* istanbul ignore next */
cov_pa1ohw0ul().s[85]++;
exports.getConversationByIdModel = getConversationByIdModel;
// Obtener mensajes de una conversación
/* istanbul ignore next */
cov_pa1ohw0ul().s[86]++;
const getMessagesByConversationModel = conversationId => {
  /* istanbul ignore next */
  cov_pa1ohw0ul().f[25]++;
  cov_pa1ohw0ul().s[87]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_pa1ohw0ul().f[26]++;
    const snapshot =
    /* istanbul ignore next */
    (cov_pa1ohw0ul().s[88]++, yield firebase_1.db.collection('messages').where('conversationId', '==', conversationId).orderBy('timestamp', 'asc').get());
    /* istanbul ignore next */
    cov_pa1ohw0ul().s[89]++;
    return snapshot.docs.map(doc => {
      /* istanbul ignore next */
      cov_pa1ohw0ul().f[27]++;
      cov_pa1ohw0ul().s[90]++;
      return doc.data();
    });
  });
};
/* istanbul ignore next */
cov_pa1ohw0ul().s[91]++;
exports.getMessagesByConversationModel = getMessagesByConversationModel;
// Crear un nuevo mensaje
/* istanbul ignore next */
cov_pa1ohw0ul().s[92]++;
const createMessageModel = messageData => {
  /* istanbul ignore next */
  cov_pa1ohw0ul().f[28]++;
  cov_pa1ohw0ul().s[93]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_pa1ohw0ul().f[29]++;
    const now =
    /* istanbul ignore next */
    (cov_pa1ohw0ul().s[94]++, new Date().toISOString());
    const messageRef =
    /* istanbul ignore next */
    (cov_pa1ohw0ul().s[95]++, firebase_1.db.collection('messages').doc());
    const message =
    /* istanbul ignore next */
    (cov_pa1ohw0ul().s[96]++, Object.assign(Object.assign({}, messageData), {
      id: messageRef.id,
      timestamp: now
    }));
    /* istanbul ignore next */
    cov_pa1ohw0ul().s[97]++;
    yield messageRef.set(message);
    /* istanbul ignore next */
    cov_pa1ohw0ul().s[98]++;
    loggerService_1.logger.info('[src/models/chatModel.ts:68] Mensaje creado:', {
      metadata: {
        id: message
      }
    });
    // Actualizar la conversación con el último mensaje
    /* istanbul ignore next */
    cov_pa1ohw0ul().s[99]++;
    yield (0, exports.updateConversationLastMessage)(message.conversationId, message);
    /* istanbul ignore next */
    cov_pa1ohw0ul().s[100]++;
    return message;
  });
};
/* istanbul ignore next */
cov_pa1ohw0ul().s[101]++;
exports.createMessageModel = createMessageModel;
// Actualizar el último mensaje de una conversación
/* istanbul ignore next */
cov_pa1ohw0ul().s[102]++;
const updateConversationLastMessage = (conversationId, message) => {
  /* istanbul ignore next */
  cov_pa1ohw0ul().f[30]++;
  cov_pa1ohw0ul().s[103]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_pa1ohw0ul().f[31]++;
    const conversationRef =
    /* istanbul ignore next */
    (cov_pa1ohw0ul().s[104]++, firebase_1.db.collection('conversations').doc(conversationId));
    /* istanbul ignore next */
    cov_pa1ohw0ul().s[105]++;
    yield conversationRef.update({
      lastMessage: message,
      updatedAt: message.timestamp,
      unreadCount: admin.firestore.FieldValue.increment(1)
    });
  });
};
/* istanbul ignore next */
cov_pa1ohw0ul().s[106]++;
exports.updateConversationLastMessage = updateConversationLastMessage;
// Marcar mensaje como leído
/* istanbul ignore next */
cov_pa1ohw0ul().s[107]++;
const markMessageAsReadModel = messageId => {
  /* istanbul ignore next */
  cov_pa1ohw0ul().f[32]++;
  cov_pa1ohw0ul().s[108]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_pa1ohw0ul().f[33]++;
    const messageRef =
    /* istanbul ignore next */
    (cov_pa1ohw0ul().s[109]++, firebase_1.db.collection('messages').doc(messageId));
    /* istanbul ignore next */
    cov_pa1ohw0ul().s[110]++;
    yield messageRef.update({
      status: 'read'
    });
  });
};
/* istanbul ignore next */
cov_pa1ohw0ul().s[111]++;
exports.markMessageAsReadModel = markMessageAsReadModel;
// Marcar conversación como leída
/* istanbul ignore next */
cov_pa1ohw0ul().s[112]++;
const markConversationAsReadModel = (conversationId, userEmail) => {
  /* istanbul ignore next */
  cov_pa1ohw0ul().f[34]++;
  cov_pa1ohw0ul().s[113]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_pa1ohw0ul().f[35]++;
    const conversationRef =
    /* istanbul ignore next */
    (cov_pa1ohw0ul().s[114]++, firebase_1.db.collection('conversations').doc(conversationId));
    // Obtener la conversación para verificar que el usuario es participante
    const conversationSnap =
    /* istanbul ignore next */
    (cov_pa1ohw0ul().s[115]++, yield conversationRef.get());
    /* istanbul ignore next */
    cov_pa1ohw0ul().s[116]++;
    if (!conversationSnap.exists) {
      /* istanbul ignore next */
      cov_pa1ohw0ul().b[27][0]++;
      cov_pa1ohw0ul().s[117]++;
      throw new Error('Conversación no encontrada');
    } else
    /* istanbul ignore next */
    {
      cov_pa1ohw0ul().b[27][1]++;
    }
    const conversation =
    /* istanbul ignore next */
    (cov_pa1ohw0ul().s[118]++, conversationSnap.data());
    /* istanbul ignore next */
    cov_pa1ohw0ul().s[119]++;
    if (!conversation.participants.includes(userEmail)) {
      /* istanbul ignore next */
      cov_pa1ohw0ul().b[28][0]++;
      cov_pa1ohw0ul().s[120]++;
      throw new Error('Usuario no es participante de esta conversación');
    } else
    /* istanbul ignore next */
    {
      cov_pa1ohw0ul().b[28][1]++;
    }
    cov_pa1ohw0ul().s[121]++;
    yield conversationRef.update({
      unreadCount: 0
    });
  });
};
/* istanbul ignore next */
cov_pa1ohw0ul().s[122]++;
exports.markConversationAsReadModel = markConversationAsReadModel;
// Buscar conversaciones con filtros
/* istanbul ignore next */
cov_pa1ohw0ul().s[123]++;
const searchConversationsModel = (userEmail, filters) => {
  /* istanbul ignore next */
  cov_pa1ohw0ul().f[36]++;
  cov_pa1ohw0ul().s[124]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_pa1ohw0ul().f[37]++;
    let query =
    /* istanbul ignore next */
    (cov_pa1ohw0ul().s[125]++, firebase_1.db.collection('conversations').where('participants', 'array-contains', userEmail).where('isActive', '==', true));
    /* istanbul ignore next */
    cov_pa1ohw0ul().s[126]++;
    if (filters.unreadOnly) {
      /* istanbul ignore next */
      cov_pa1ohw0ul().b[29][0]++;
      cov_pa1ohw0ul().s[127]++;
      query = query.where('unreadCount', '>', 0);
    } else
    /* istanbul ignore next */
    {
      cov_pa1ohw0ul().b[29][1]++;
    }
    cov_pa1ohw0ul().s[128]++;
    if (filters.dateFrom) {
      /* istanbul ignore next */
      cov_pa1ohw0ul().b[30][0]++;
      cov_pa1ohw0ul().s[129]++;
      query = query.where('updatedAt', '>=', filters.dateFrom);
    } else
    /* istanbul ignore next */
    {
      cov_pa1ohw0ul().b[30][1]++;
    }
    cov_pa1ohw0ul().s[130]++;
    if (filters.dateTo) {
      /* istanbul ignore next */
      cov_pa1ohw0ul().b[31][0]++;
      cov_pa1ohw0ul().s[131]++;
      query = query.where('updatedAt', '<=', filters.dateTo);
    } else
    /* istanbul ignore next */
    {
      cov_pa1ohw0ul().b[31][1]++;
    }
    const snapshot =
    /* istanbul ignore next */
    (cov_pa1ohw0ul().s[132]++, yield query.orderBy('updatedAt', 'desc').get());
    let conversations =
    /* istanbul ignore next */
    (cov_pa1ohw0ul().s[133]++, snapshot.docs.map(doc => {
      /* istanbul ignore next */
      cov_pa1ohw0ul().f[38]++;
      cov_pa1ohw0ul().s[134]++;
      return doc.data();
    }));
    // Filtrar por búsqueda de texto si se proporciona
    /* istanbul ignore next */
    cov_pa1ohw0ul().s[135]++;
    if (filters.search) {
      /* istanbul ignore next */
      cov_pa1ohw0ul().b[32][0]++;
      cov_pa1ohw0ul().s[136]++;
      conversations = conversations.filter(conversation => {
        /* istanbul ignore next */
        cov_pa1ohw0ul().f[39]++;
        var _a;
        // Buscar en el último mensaje
        /* istanbul ignore next */
        cov_pa1ohw0ul().s[137]++;
        if (
        /* istanbul ignore next */
        (cov_pa1ohw0ul().b[35][0]++, (_a = conversation.lastMessage) === null) ||
        /* istanbul ignore next */
        (cov_pa1ohw0ul().b[35][1]++, _a === void 0) ?
        /* istanbul ignore next */
        (cov_pa1ohw0ul().b[34][0]++, void 0) :
        /* istanbul ignore next */
        (cov_pa1ohw0ul().b[34][1]++, _a.content.toLowerCase().includes(filters.search.toLowerCase()))) {
          /* istanbul ignore next */
          cov_pa1ohw0ul().b[33][0]++;
          cov_pa1ohw0ul().s[138]++;
          return true;
        } else
        /* istanbul ignore next */
        {
          cov_pa1ohw0ul().b[33][1]++;
        }
        // Buscar en participantes (excluyendo al usuario actual)
        const otherParticipants =
        /* istanbul ignore next */
        (cov_pa1ohw0ul().s[139]++, conversation.participants.filter(p => {
          /* istanbul ignore next */
          cov_pa1ohw0ul().f[40]++;
          cov_pa1ohw0ul().s[140]++;
          return p !== userEmail;
        }));
        /* istanbul ignore next */
        cov_pa1ohw0ul().s[141]++;
        return otherParticipants.some(p => {
          /* istanbul ignore next */
          cov_pa1ohw0ul().f[41]++;
          cov_pa1ohw0ul().s[142]++;
          return p.toLowerCase().includes(filters.search.toLowerCase());
        });
      });
    } else
    /* istanbul ignore next */
    {
      cov_pa1ohw0ul().b[32][1]++;
    }
    cov_pa1ohw0ul().s[143]++;
    return conversations;
  });
};
/* istanbul ignore next */
cov_pa1ohw0ul().s[144]++;
exports.searchConversationsModel = searchConversationsModel;
// Eliminar conversación (marcar como inactiva)
/* istanbul ignore next */
cov_pa1ohw0ul().s[145]++;
const deleteConversationModel = (conversationId, userEmail) => {
  /* istanbul ignore next */
  cov_pa1ohw0ul().f[42]++;
  cov_pa1ohw0ul().s[146]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_pa1ohw0ul().f[43]++;
    const conversationRef =
    /* istanbul ignore next */
    (cov_pa1ohw0ul().s[147]++, firebase_1.db.collection('conversations').doc(conversationId));
    // Verificar que el usuario es participante
    const conversationSnap =
    /* istanbul ignore next */
    (cov_pa1ohw0ul().s[148]++, yield conversationRef.get());
    /* istanbul ignore next */
    cov_pa1ohw0ul().s[149]++;
    if (!conversationSnap.exists) {
      /* istanbul ignore next */
      cov_pa1ohw0ul().b[36][0]++;
      cov_pa1ohw0ul().s[150]++;
      throw new Error('Conversación no encontrada');
    } else
    /* istanbul ignore next */
    {
      cov_pa1ohw0ul().b[36][1]++;
    }
    const conversation =
    /* istanbul ignore next */
    (cov_pa1ohw0ul().s[151]++, conversationSnap.data());
    /* istanbul ignore next */
    cov_pa1ohw0ul().s[152]++;
    if (!conversation.participants.includes(userEmail)) {
      /* istanbul ignore next */
      cov_pa1ohw0ul().b[37][0]++;
      cov_pa1ohw0ul().s[153]++;
      throw new Error('Usuario no es participante de esta conversación');
    } else
    /* istanbul ignore next */
    {
      cov_pa1ohw0ul().b[37][1]++;
    }
    cov_pa1ohw0ul().s[154]++;
    yield conversationRef.update({
      isActive: false
    });
  });
};
/* istanbul ignore next */
cov_pa1ohw0ul().s[155]++;
exports.deleteConversationModel = deleteConversationModel;
// Archivar conversación
/* istanbul ignore next */
cov_pa1ohw0ul().s[156]++;
const archiveConversationModel = (conversationId, userEmail) => {
  /* istanbul ignore next */
  cov_pa1ohw0ul().f[44]++;
  cov_pa1ohw0ul().s[157]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_pa1ohw0ul().f[45]++;
    const conversationRef =
    /* istanbul ignore next */
    (cov_pa1ohw0ul().s[158]++, firebase_1.db.collection('conversations').doc(conversationId));
    // Verificar que el usuario es participante
    const conversationSnap =
    /* istanbul ignore next */
    (cov_pa1ohw0ul().s[159]++, yield conversationRef.get());
    /* istanbul ignore next */
    cov_pa1ohw0ul().s[160]++;
    if (!conversationSnap.exists) {
      /* istanbul ignore next */
      cov_pa1ohw0ul().b[38][0]++;
      cov_pa1ohw0ul().s[161]++;
      throw new Error('Conversación no encontrada');
    } else
    /* istanbul ignore next */
    {
      cov_pa1ohw0ul().b[38][1]++;
    }
    const conversation =
    /* istanbul ignore next */
    (cov_pa1ohw0ul().s[162]++, conversationSnap.data());
    /* istanbul ignore next */
    cov_pa1ohw0ul().s[163]++;
    if (!conversation.participants.includes(userEmail)) {
      /* istanbul ignore next */
      cov_pa1ohw0ul().b[39][0]++;
      cov_pa1ohw0ul().s[164]++;
      throw new Error('Usuario no es participante de esta conversación');
    } else
    /* istanbul ignore next */
    {
      cov_pa1ohw0ul().b[39][1]++;
    }
    cov_pa1ohw0ul().s[165]++;
    yield conversationRef.update({
      isActive: false
    });
  });
};
/* istanbul ignore next */
cov_pa1ohw0ul().s[166]++;
exports.archiveConversationModel = archiveConversationModel;
// Obtener conversación entre dos usuarios específicos
/* istanbul ignore next */
cov_pa1ohw0ul().s[167]++;
const getConversationBetweenUsersModel = (user1, user2) => {
  /* istanbul ignore next */
  cov_pa1ohw0ul().f[46]++;
  cov_pa1ohw0ul().s[168]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_pa1ohw0ul().f[47]++;
    const snapshot =
    /* istanbul ignore next */
    (cov_pa1ohw0ul().s[169]++, yield firebase_1.db.collection('conversations').where('participants', 'array-contains', user1).where('isActive', '==', true).get());
    const conversations =
    /* istanbul ignore next */
    (cov_pa1ohw0ul().s[170]++, snapshot.docs.map(doc => {
      /* istanbul ignore next */
      cov_pa1ohw0ul().f[48]++;
      cov_pa1ohw0ul().s[171]++;
      return doc.data();
    }));
    // Buscar conversación que contenga ambos usuarios
    const conversation =
    /* istanbul ignore next */
    (cov_pa1ohw0ul().s[172]++, conversations.find(conv => {
      /* istanbul ignore next */
      cov_pa1ohw0ul().f[49]++;
      cov_pa1ohw0ul().s[173]++;
      return /* istanbul ignore next */(cov_pa1ohw0ul().b[40][0]++, conv.participants.includes(user1)) &&
      /* istanbul ignore next */
      (cov_pa1ohw0ul().b[40][1]++, conv.participants.includes(user2));
    }));
    /* istanbul ignore next */
    cov_pa1ohw0ul().s[174]++;
    return /* istanbul ignore next */(cov_pa1ohw0ul().b[41][0]++, conversation) ||
    /* istanbul ignore next */
    (cov_pa1ohw0ul().b[41][1]++, null);
  });
};
/* istanbul ignore next */
cov_pa1ohw0ul().s[175]++;
exports.getConversationBetweenUsersModel = getConversationBetweenUsersModel;
// Obtener estadísticas de chat para un usuario
/* istanbul ignore next */
cov_pa1ohw0ul().s[176]++;
const getChatStatsModel = userEmail => {
  /* istanbul ignore next */
  cov_pa1ohw0ul().f[50]++;
  cov_pa1ohw0ul().s[177]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_pa1ohw0ul().f[51]++;
    const conversations =
    /* istanbul ignore next */
    (cov_pa1ohw0ul().s[178]++, yield (0, exports.getConversationsByUserModel)(userEmail));
    const totalConversations =
    /* istanbul ignore next */
    (cov_pa1ohw0ul().s[179]++, conversations.length);
    const unreadMessages =
    /* istanbul ignore next */
    (cov_pa1ohw0ul().s[180]++, conversations.reduce((sum, conv) => {
      /* istanbul ignore next */
      cov_pa1ohw0ul().f[52]++;
      cov_pa1ohw0ul().s[181]++;
      return sum + conv.unreadCount;
    }, 0));
    const activeConversations =
    /* istanbul ignore next */
    (cov_pa1ohw0ul().s[182]++, conversations.filter(conv => {
      /* istanbul ignore next */
      cov_pa1ohw0ul().f[53]++;
      cov_pa1ohw0ul().s[183]++;
      return conv.isActive;
    }).length);
    /* istanbul ignore next */
    cov_pa1ohw0ul().s[184]++;
    return {
      totalConversations,
      unreadMessages,
      activeConversations
    };
  });
};
/* istanbul ignore next */
cov_pa1ohw0ul().s[185]++;
exports.getChatStatsModel = getChatStatsModel;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,