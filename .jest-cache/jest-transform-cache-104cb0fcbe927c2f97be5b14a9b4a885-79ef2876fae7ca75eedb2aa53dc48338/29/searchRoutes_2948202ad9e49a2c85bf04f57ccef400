484848751f365b8a2b7a25270963e547
"use strict";

/* istanbul ignore next */
function cov_2d06xl7m9l() {
  var path = "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\routes\\searchRoutes.ts";
  var hash = "1e63daa872ff5f5aac1e583d4182cc32c7c4ce42";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\routes\\searchRoutes.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 18
        },
        end: {
          line: 6,
          column: 53
        }
      },
      "4": {
        start: {
          line: 7,
          column: 25
        },
        end: {
          line: 7,
          column: 64
        }
      },
      "5": {
        start: {
          line: 8,
          column: 31
        },
        end: {
          line: 8,
          column: 76
        }
      },
      "6": {
        start: {
          line: 9,
          column: 27
        },
        end: {
          line: 9,
          column: 69
        }
      },
      "7": {
        start: {
          line: 10,
          column: 15
        },
        end: {
          line: 10,
          column: 41
        }
      },
      "8": {
        start: {
          line: 132,
          column: 0
        },
        end: {
          line: 132,
          column: 141
        }
      },
      "9": {
        start: {
          line: 248,
          column: 0
        },
        end: {
          line: 248,
          column: 162
        }
      },
      "10": {
        start: {
          line: 336,
          column: 0
        },
        end: {
          line: 336,
          column: 139
        }
      },
      "11": {
        start: {
          line: 427,
          column: 0
        },
        end: {
          line: 427,
          column: 141
        }
      },
      "12": {
        start: {
          line: 531,
          column: 0
        },
        end: {
          line: 531,
          column: 147
        }
      },
      "13": {
        start: {
          line: 625,
          column: 0
        },
        end: {
          line: 625,
          column: 171
        }
      },
      "14": {
        start: {
          line: 708,
          column: 0
        },
        end: {
          line: 708,
          column: 174
        }
      },
      "15": {
        start: {
          line: 709,
          column: 0
        },
        end: {
          line: 709,
          column: 25
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\routes\\searchRoutes.ts",
      mappings: ";;;;;AAAA,sDAA8B;AAC9B,iEAA8D;AAC9D,6EAAwE;AACxE,sEAQyC;AAEzC,MAAM,MAAM,GAAG,iBAAO,CAAC,MAAM,EAAE,CAAC;AAEhC;;;;;GAKG;AAEH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAkHG;AACH,MAAM,CAAC,GAAG,CACR,SAAS,EACT,+BAAc,EACd,yCAAkB,EAClB,yCAAsB,CACvB,CAAC;AAEF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAkHG;AACH,MAAM,CAAC,GAAG,CACR,oBAAoB,EACpB,+BAAc,EACd,yCAAkB,EAClB,mDAAgC,CACjC,CAAC;AAEF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAsFG;AACH,MAAM,CAAC,GAAG,CAAC,QAAQ,EAAE,+BAAc,EAAE,yCAAkB,EAAE,wCAAqB,CAAC,CAAC;AAEhF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAyFG;AACH,MAAM,CAAC,GAAG,CACR,SAAS,EACT,+BAAc,EACd,yCAAkB,EAClB,yCAAsB,CACvB,CAAC;AAEF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAsGG;AACH,MAAM,CAAC,GAAG,CACR,WAAW,EACX,+BAAc,EACd,yCAAkB,EAClB,6CAA0B,CAC3B,CAAC;AAEF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA4FG;AACH,MAAM,CAAC,GAAG,CACR,mBAAmB,EACnB,+BAAc,EACd,yCAAkB,EAClB,6DAA0C,CAC3C,CAAC;AAEF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAiFG;AACH,MAAM,CAAC,GAAG,CACR,sBAAsB,EACtB,+BAAc,EACd,yCAAkB,EAClB,6DAA0C,CAC3C,CAAC;AAEF,kBAAe,MAAM,CAAC",
      names: [],
      sources: ["C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\routes\\searchRoutes.ts"],
      sourcesContent: ["import express from 'express';\r\nimport { authMiddleware } from '../middleware/authMiddleware';\r\nimport { validatePagination } from '../middleware/validationMiddleware';\r\nimport {\r\n  searchEventsController,\r\n  searchMusicianRequestsController,\r\n  searchUsersController,\r\n  globalSearchController,\r\n  searchByLocationController,\r\n  searchAvailableEventsForMusicianController,\r\n  searchAvailableMusiciansForEventController,\r\n} from '../controllers/searchController';\r\n\r\nconst router = express.Router();\r\n\r\n/**\r\n * @swagger\r\n * tags:\r\n *   name: Search\r\n *   description: Endpoints de b\xFAsqueda avanzada y filtros\r\n */\r\n\r\n/**\r\n * @swagger\r\n * /search/events:\r\n *   get:\r\n *     tags: [Search]\r\n *     summary: B\xFAsqueda avanzada de eventos\r\n *     security:\r\n *       - bearerAuth: []\r\n *     parameters:\r\n *       - in: query\r\n *         name: query\r\n *         schema:\r\n *           type: string\r\n *         description: T\xE9rmino de b\xFAsqueda en texto\r\n *       - in: query\r\n *         name: status\r\n *         schema:\r\n *           type: string\r\n *           enum: [pending_musician, musician_assigned, completed, cancelled, musician_cancelled]\r\n *         description: Estado del evento\r\n *       - in: query\r\n *         name: eventType\r\n *         schema:\r\n *           type: string\r\n *           enum: [concierto, boda, culto, evento_corporativo, festival, fiesta_privada, graduacion, cumpleanos, otro]\r\n *         description: Tipo de evento\r\n *       - in: query\r\n *         name: instrument\r\n *         schema:\r\n *           type: string\r\n *           enum: [guitarra, piano, bajo, bateria, saxofon, trompeta, violin, canto, teclado, flauta, otro]\r\n *         description: Instrumento requerido\r\n *       - in: query\r\n *         name: dateFrom\r\n *         schema:\r\n *           type: string\r\n *           format: date\r\n *         description: Fecha desde\r\n *       - in: query\r\n *         name: dateTo\r\n *         schema:\r\n *           type: string\r\n *           format: date\r\n *         description: Fecha hasta\r\n *       - in: query\r\n *         name: location\r\n *         schema:\r\n *           type: string\r\n *         description: Ubicaci\xF3n\r\n *       - in: query\r\n *         name: budget\r\n *         schema:\r\n *           type: number\r\n *         description: Presupuesto m\xEDnimo\r\n *       - in: query\r\n *         name: budgetMax\r\n *         schema:\r\n *           type: number\r\n *         description: Presupuesto m\xE1ximo\r\n *       - in: query\r\n *         name: limit\r\n *         schema:\r\n *           type: integer\r\n *           default: 20\r\n *         description: N\xFAmero de resultados por p\xE1gina\r\n *       - in: query\r\n *         name: offset\r\n *         schema:\r\n *           type: integer\r\n *           default: 0\r\n *         description: N\xFAmero de resultados a omitir\r\n *       - in: query\r\n *         name: sortBy\r\n *         schema:\r\n *           type: string\r\n *           enum: [createdAt, updatedAt, date, eventName]\r\n *           default: createdAt\r\n *         description: Campo por el cual ordenar\r\n *       - in: query\r\n *         name: sortOrder\r\n *         schema:\r\n *           type: string\r\n *           enum: [asc, desc]\r\n *           default: desc\r\n *         description: Orden de clasificaci\xF3n\r\n *     responses:\r\n *       200:\r\n *         description: Resultados de b\xFAsqueda\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 data:\r\n *                   type: array\r\n *                   items:\r\n *                     $ref: '#/components/schemas/Event'\r\n *                 pagination:\r\n *                   type: object\r\n *                   properties:\r\n *                     total:\r\n *                       type: integer\r\n *                     page:\r\n *                       type: integer\r\n *                     limit:\r\n *                       type: integer\r\n *                     hasMore:\r\n *                       type: boolean\r\n *       401:\r\n *         description: No autorizado\r\n *       400:\r\n *         description: Par\xE1metros de b\xFAsqueda inv\xE1lidos\r\n */\r\nrouter.get(\r\n  '/events',\r\n  authMiddleware,\r\n  validatePagination,\r\n  searchEventsController\r\n);\r\n\r\n/**\r\n * @swagger\r\n * /search/musician-requests:\r\n *   get:\r\n *     tags: [Search]\r\n *     summary: B\xFAsqueda avanzada de solicitudes de m\xFAsicos\r\n *     security:\r\n *       - bearerAuth: []\r\n *     parameters:\r\n *       - in: query\r\n *         name: query\r\n *         schema:\r\n *           type: string\r\n *         description: T\xE9rmino de b\xFAsqueda en texto\r\n *       - in: query\r\n *         name: status\r\n *         schema:\r\n *           type: string\r\n *           enum: [pendiente, asignada, cancelada, completada, no_asignada]\r\n *         description: Estado de la solicitud\r\n *       - in: query\r\n *         name: eventType\r\n *         schema:\r\n *           type: string\r\n *           enum: [concierto, boda, culto, evento_corporativo, festival, fiesta_privada, graduacion, cumpleanos, otro]\r\n *         description: Tipo de evento\r\n *       - in: query\r\n *         name: instrument\r\n *         schema:\r\n *           type: string\r\n *           enum: [guitarra, piano, bajo, bateria, saxofon, trompeta, violin, canto, teclado, flauta, otro]\r\n *         description: Instrumento requerido\r\n *       - in: query\r\n *         name: dateFrom\r\n *         schema:\r\n *           type: string\r\n *           format: date\r\n *         description: Fecha desde\r\n *       - in: query\r\n *         name: dateTo\r\n *         schema:\r\n *           type: string\r\n *           format: date\r\n *         description: Fecha hasta\r\n *       - in: query\r\n *         name: location\r\n *         schema:\r\n *           type: string\r\n *         description: Ubicaci\xF3n\r\n *       - in: query\r\n *         name: budget\r\n *         schema:\r\n *           type: number\r\n *         description: Presupuesto m\xEDnimo\r\n *       - in: query\r\n *         name: budgetMax\r\n *         schema:\r\n *           type: number\r\n *         description: Presupuesto m\xE1ximo\r\n *       - in: query\r\n *         name: limit\r\n *         schema:\r\n *           type: integer\r\n *           default: 20\r\n *         description: N\xFAmero de resultados por p\xE1gina\r\n *       - in: query\r\n *         name: offset\r\n *         schema:\r\n *           type: integer\r\n *           default: 0\r\n *         description: N\xFAmero de resultados a omitir\r\n *       - in: query\r\n *         name: sortBy\r\n *         schema:\r\n *           type: string\r\n *           enum: [createdAt, updatedAt, date, eventName]\r\n *           default: createdAt\r\n *         description: Campo por el cual ordenar\r\n *       - in: query\r\n *         name: sortOrder\r\n *         schema:\r\n *           type: string\r\n *           enum: [asc, desc]\r\n *           default: desc\r\n *         description: Orden de clasificaci\xF3n\r\n *     responses:\r\n *       200:\r\n *         description: Resultados de b\xFAsqueda\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 data:\r\n *                   type: array\r\n *                   items:\r\n *                     $ref: '#/components/schemas/MusicianRequest'\r\n *                 pagination:\r\n *                   type: object\r\n *                   properties:\r\n *                     total:\r\n *                       type: integer\r\n *                     page:\r\n *                       type: integer\r\n *                     limit:\r\n *                       type: integer\r\n *                     hasMore:\r\n *                       type: boolean\r\n *       401:\r\n *         description: No autorizado\r\n *       400:\r\n *         description: Par\xE1metros de b\xFAsqueda inv\xE1lidos\r\n */\r\nrouter.get(\r\n  '/musician-requests',\r\n  authMiddleware,\r\n  validatePagination,\r\n  searchMusicianRequestsController\r\n);\r\n\r\n/**\r\n * @swagger\r\n * /search/users:\r\n *   get:\r\n *     tags: [Search]\r\n *     summary: B\xFAsqueda avanzada de usuarios\r\n *     security:\r\n *       - bearerAuth: []\r\n *     parameters:\r\n *       - in: query\r\n *         name: query\r\n *         schema:\r\n *           type: string\r\n *         description: T\xE9rmino de b\xFAsqueda en texto\r\n *       - in: query\r\n *         name: role\r\n *         schema:\r\n *           type: string\r\n *           enum: [user, musician, admin, super_admin]\r\n *         description: Rol del usuario\r\n *       - in: query\r\n *         name: location\r\n *         schema:\r\n *           type: string\r\n *         description: Ubicaci\xF3n\r\n *       - in: query\r\n *         name: instrument\r\n *         schema:\r\n *           type: string\r\n *           enum: [guitarra, piano, bajo, bateria, saxofon, trompeta, violin, canto, teclado, flauta, otro]\r\n *         description: Instrumento (solo para m\xFAsicos)\r\n *       - in: query\r\n *         name: limit\r\n *         schema:\r\n *           type: integer\r\n *           default: 20\r\n *         description: N\xFAmero de resultados por p\xE1gina\r\n *       - in: query\r\n *         name: offset\r\n *         schema:\r\n *           type: integer\r\n *           default: 0\r\n *         description: N\xFAmero de resultados a omitir\r\n *       - in: query\r\n *         name: sortBy\r\n *         schema:\r\n *           type: string\r\n *           enum: [createdAt, updatedAt, name, email]\r\n *           default: createdAt\r\n *         description: Campo por el cual ordenar\r\n *       - in: query\r\n *         name: sortOrder\r\n *         schema:\r\n *           type: string\r\n *           enum: [asc, desc]\r\n *           default: desc\r\n *         description: Orden de clasificaci\xF3n\r\n *     responses:\r\n *       200:\r\n *         description: Resultados de b\xFAsqueda\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 data:\r\n *                   type: array\r\n *                   items:\r\n *                     $ref: '#/components/schemas/User'\r\n *                 pagination:\r\n *                   type: object\r\n *                   properties:\r\n *                     total:\r\n *                       type: integer\r\n *                     page:\r\n *                       type: integer\r\n *                     limit:\r\n *                       type: integer\r\n *                     hasMore:\r\n *                       type: boolean\r\n *       401:\r\n *         description: No autorizado\r\n *       400:\r\n *         description: Par\xE1metros de b\xFAsqueda inv\xE1lidos\r\n */\r\nrouter.get('/users', authMiddleware, validatePagination, searchUsersController);\r\n\r\n/**\r\n * @swagger\r\n * /search/global:\r\n *   get:\r\n *     tags: [Search]\r\n *     summary: B\xFAsqueda global en toda la plataforma\r\n *     security:\r\n *       - bearerAuth: []\r\n *     parameters:\r\n *       - in: query\r\n *         name: query\r\n *         schema:\r\n *           type: string\r\n *         required: true\r\n *         description: T\xE9rmino de b\xFAsqueda\r\n *       - in: query\r\n *         name: types\r\n *         schema:\r\n *           type: array\r\n *           items:\r\n *             type: string\r\n *             enum: [events, users, musician-requests]\r\n *         description: Tipos de contenido a buscar\r\n *       - in: query\r\n *         name: limit\r\n *         schema:\r\n *           type: integer\r\n *           default: 20\r\n *         description: N\xFAmero de resultados por p\xE1gina\r\n *       - in: query\r\n *         name: offset\r\n *         schema:\r\n *           type: integer\r\n *           default: 0\r\n *         description: N\xFAmero de resultados a omitir\r\n *       - in: query\r\n *         name: sortBy\r\n *         schema:\r\n *           type: string\r\n *           enum: [relevance, createdAt, updatedAt]\r\n *           default: relevance\r\n *         description: Campo por el cual ordenar\r\n *       - in: query\r\n *         name: sortOrder\r\n *         schema:\r\n *           type: string\r\n *           enum: [asc, desc]\r\n *           default: desc\r\n *         description: Orden de clasificaci\xF3n\r\n *     responses:\r\n *       200:\r\n *         description: Resultados de b\xFAsqueda global\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 data:\r\n *                   type: object\r\n *                   properties:\r\n *                     events:\r\n *                       type: array\r\n *                       items:\r\n *                         $ref: '#/components/schemas/Event'\r\n *                     users:\r\n *                       type: array\r\n *                       items:\r\n *                         $ref: '#/components/schemas/User'\r\n *                     musicianRequests:\r\n *                       type: array\r\n *                       items:\r\n *                         $ref: '#/components/schemas/MusicianRequest'\r\n *                 pagination:\r\n *                   type: object\r\n *                   properties:\r\n *                     total:\r\n *                       type: integer\r\n *                     page:\r\n *                       type: integer\r\n *                     limit:\r\n *                       type: integer\r\n *                     hasMore:\r\n *                       type: boolean\r\n *       401:\r\n *         description: No autorizado\r\n *       400:\r\n *         description: Par\xE1metros de b\xFAsqueda inv\xE1lidos\r\n */\r\nrouter.get(\r\n  '/global',\r\n  authMiddleware,\r\n  validatePagination,\r\n  globalSearchController\r\n);\r\n\r\n/**\r\n * @swagger\r\n * /search/location:\r\n *   get:\r\n *     tags: [Search]\r\n *     summary: B\xFAsqueda por ubicaci\xF3n geogr\xE1fica\r\n *     security:\r\n *       - bearerAuth: []\r\n *     parameters:\r\n *       - in: query\r\n *         name: latitude\r\n *         schema:\r\n *           type: number\r\n *           minimum: -90\r\n *           maximum: 90\r\n *         required: true\r\n *         description: Latitud\r\n *       - in: query\r\n *         name: longitude\r\n *         schema:\r\n *           type: number\r\n *           minimum: -180\r\n *           maximum: 180\r\n *         required: true\r\n *         description: Longitud\r\n *       - in: query\r\n *         name: radius\r\n *         schema:\r\n *           type: number\r\n *           minimum: 0.1\r\n *           maximum: 100\r\n *           default: 10\r\n *         description: Radio de b\xFAsqueda en kil\xF3metros\r\n *       - in: query\r\n *         name: type\r\n *         schema:\r\n *           type: string\r\n *           enum: [events, users, all]\r\n *           default: all\r\n *         description: Tipo de contenido a buscar\r\n *       - in: query\r\n *         name: limit\r\n *         schema:\r\n *           type: integer\r\n *           default: 20\r\n *         description: N\xFAmero de resultados por p\xE1gina\r\n *       - in: query\r\n *         name: offset\r\n *         schema:\r\n *           type: integer\r\n *           default: 0\r\n *         description: N\xFAmero de resultados a omitir\r\n *       - in: query\r\n *         name: sortBy\r\n *         schema:\r\n *           type: string\r\n *           enum: [distance, createdAt, updatedAt]\r\n *           default: distance\r\n *         description: Campo por el cual ordenar\r\n *       - in: query\r\n *         name: sortOrder\r\n *         schema:\r\n *           type: string\r\n *           enum: [asc, desc]\r\n *           default: asc\r\n *         description: Orden de clasificaci\xF3n\r\n *     responses:\r\n *       200:\r\n *         description: Resultados de b\xFAsqueda por ubicaci\xF3n\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 data:\r\n *                   type: object\r\n *                   properties:\r\n *                     events:\r\n *                       type: array\r\n *                       items:\r\n *                         $ref: '#/components/schemas/Event'\r\n *                     users:\r\n *                       type: array\r\n *                       items:\r\n *                         $ref: '#/components/schemas/User'\r\n *                 pagination:\r\n *                   type: object\r\n *                   properties:\r\n *                     total:\r\n *                       type: integer\r\n *                     page:\r\n *                       type: integer\r\n *                     limit:\r\n *                       type: integer\r\n *                     hasMore:\r\n *                       type: boolean\r\n *       401:\r\n *         description: No autorizado\r\n *       400:\r\n *         description: Par\xE1metros de b\xFAsqueda inv\xE1lidos\r\n */\r\nrouter.get(\r\n  '/location',\r\n  authMiddleware,\r\n  validatePagination,\r\n  searchByLocationController\r\n);\r\n\r\n/**\r\n * @swagger\r\n * /search/available-events:\r\n *   get:\r\n *     tags: [Search]\r\n *     summary: Buscar eventos disponibles para un m\xFAsico\r\n *     security:\r\n *       - bearerAuth: []\r\n *     parameters:\r\n *       - in: query\r\n *         name: instrument\r\n *         schema:\r\n *           type: string\r\n *           enum: [guitarra, piano, bajo, bateria, saxofon, trompeta, violin, canto, teclado, flauta, otro]\r\n *         description: Instrumento del m\xFAsico\r\n *       - in: query\r\n *         name: dateFrom\r\n *         schema:\r\n *           type: string\r\n *           format: date\r\n *         description: Fecha desde\r\n *       - in: query\r\n *         name: dateTo\r\n *         schema:\r\n *           type: string\r\n *           format: date\r\n *         description: Fecha hasta\r\n *       - in: query\r\n *         name: location\r\n *         schema:\r\n *           type: string\r\n *         description: Ubicaci\xF3n\r\n *       - in: query\r\n *         name: budget\r\n *         schema:\r\n *           type: number\r\n *         description: Presupuesto m\xEDnimo\r\n *       - in: query\r\n *         name: limit\r\n *         schema:\r\n *           type: integer\r\n *           default: 20\r\n *         description: N\xFAmero de resultados por p\xE1gina\r\n *       - in: query\r\n *         name: offset\r\n *         schema:\r\n *           type: integer\r\n *           default: 0\r\n *         description: N\xFAmero de resultados a omitir\r\n *       - in: query\r\n *         name: sortBy\r\n *         schema:\r\n *           type: string\r\n *           enum: [date, budget, createdAt]\r\n *           default: date\r\n *         description: Campo por el cual ordenar\r\n *       - in: query\r\n *         name: sortOrder\r\n *         schema:\r\n *           type: string\r\n *           enum: [asc, desc]\r\n *           default: asc\r\n *         description: Orden de clasificaci\xF3n\r\n *     responses:\r\n *       200:\r\n *         description: Eventos disponibles para el m\xFAsico\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 data:\r\n *                   type: array\r\n *                   items:\r\n *                     $ref: '#/components/schemas/Event'\r\n *                 pagination:\r\n *                   type: object\r\n *                   properties:\r\n *                     total:\r\n *                       type: integer\r\n *                     page:\r\n *                       type: integer\r\n *                     limit:\r\n *                       type: integer\r\n *                     hasMore:\r\n *                       type: boolean\r\n *       401:\r\n *         description: No autorizado\r\n *       400:\r\n *         description: Par\xE1metros de b\xFAsqueda inv\xE1lidos\r\n */\r\nrouter.get(\r\n  '/available-events',\r\n  authMiddleware,\r\n  validatePagination,\r\n  searchAvailableEventsForMusicianController\r\n);\r\n\r\n/**\r\n * @swagger\r\n * /search/available-musicians:\r\n *   get:\r\n *     tags: [Search]\r\n *     summary: Buscar m\xFAsicos disponibles para un evento\r\n *     security:\r\n *       - bearerAuth: []\r\n *     parameters:\r\n *       - in: query\r\n *         name: eventId\r\n *         schema:\r\n *           type: string\r\n *         required: true\r\n *         description: ID del evento\r\n *       - in: query\r\n *         name: instrument\r\n *         schema:\r\n *           type: string\r\n *           enum: [guitarra, piano, bajo, bateria, saxofon, trompeta, violin, canto, teclado, flauta, otro]\r\n *         description: Instrumento requerido\r\n *       - in: query\r\n *         name: location\r\n *         schema:\r\n *           type: string\r\n *         description: Ubicaci\xF3n preferida\r\n *       - in: query\r\n *         name: limit\r\n *         schema:\r\n *           type: integer\r\n *           default: 20\r\n *         description: N\xFAmero de resultados por p\xE1gina\r\n *       - in: query\r\n *         name: offset\r\n *         schema:\r\n *           type: integer\r\n *           default: 0\r\n *         description: N\xFAmero de resultados a omitir\r\n *       - in: query\r\n *         name: sortBy\r\n *         schema:\r\n *           type: string\r\n *           enum: [rating, experience, distance]\r\n *           default: rating\r\n *         description: Campo por el cual ordenar\r\n *       - in: query\r\n *         name: sortOrder\r\n *         schema:\r\n *           type: string\r\n *           enum: [asc, desc]\r\n *           default: desc\r\n *         description: Orden de clasificaci\xF3n\r\n *     responses:\r\n *       200:\r\n *         description: M\xFAsicos disponibles para el evento\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 data:\r\n *                   type: array\r\n *                   items:\r\n *                     $ref: '#/components/schemas/User'\r\n *                 pagination:\r\n *                   type: object\r\n *                   properties:\r\n *                     total:\r\n *                       type: integer\r\n *                     page:\r\n *                       type: integer\r\n *                     limit:\r\n *                       type: integer\r\n *                     hasMore:\r\n *                       type: boolean\r\n *       401:\r\n *         description: No autorizado\r\n *       400:\r\n *         description: Par\xE1metros de b\xFAsqueda inv\xE1lidos\r\n */\r\nrouter.get(\r\n  '/available-musicians',\r\n  authMiddleware,\r\n  validatePagination,\r\n  searchAvailableMusiciansForEventController\r\n);\r\n\r\nexport default router;\r\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "1e63daa872ff5f5aac1e583d4182cc32c7c4ce42"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2d06xl7m9l = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2d06xl7m9l();
var __importDefault =
/* istanbul ignore next */
(cov_2d06xl7m9l().s[0]++,
/* istanbul ignore next */
(cov_2d06xl7m9l().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_2d06xl7m9l().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_2d06xl7m9l().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_2d06xl7m9l().f[0]++;
  cov_2d06xl7m9l().s[1]++;
  return /* istanbul ignore next */(cov_2d06xl7m9l().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_2d06xl7m9l().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_2d06xl7m9l().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_2d06xl7m9l().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_2d06xl7m9l().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const express_1 =
/* istanbul ignore next */
(cov_2d06xl7m9l().s[3]++, __importDefault(require("express")));
const authMiddleware_1 =
/* istanbul ignore next */
(cov_2d06xl7m9l().s[4]++, require("../middleware/authMiddleware"));
const validationMiddleware_1 =
/* istanbul ignore next */
(cov_2d06xl7m9l().s[5]++, require("../middleware/validationMiddleware"));
const searchController_1 =
/* istanbul ignore next */
(cov_2d06xl7m9l().s[6]++, require("../controllers/searchController"));
const router =
/* istanbul ignore next */
(cov_2d06xl7m9l().s[7]++, express_1.default.Router());
/**
 * @swagger
 * tags:
 *   name: Search
 *   description: Endpoints de búsqueda avanzada y filtros
 */
/**
 * @swagger
 * /search/events:
 *   get:
 *     tags: [Search]
 *     summary: Búsqueda avanzada de eventos
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: query
 *         name: query
 *         schema:
 *           type: string
 *         description: Término de búsqueda en texto
 *       - in: query
 *         name: status
 *         schema:
 *           type: string
 *           enum: [pending_musician, musician_assigned, completed, cancelled, musician_cancelled]
 *         description: Estado del evento
 *       - in: query
 *         name: eventType
 *         schema:
 *           type: string
 *           enum: [concierto, boda, culto, evento_corporativo, festival, fiesta_privada, graduacion, cumpleanos, otro]
 *         description: Tipo de evento
 *       - in: query
 *         name: instrument
 *         schema:
 *           type: string
 *           enum: [guitarra, piano, bajo, bateria, saxofon, trompeta, violin, canto, teclado, flauta, otro]
 *         description: Instrumento requerido
 *       - in: query
 *         name: dateFrom
 *         schema:
 *           type: string
 *           format: date
 *         description: Fecha desde
 *       - in: query
 *         name: dateTo
 *         schema:
 *           type: string
 *           format: date
 *         description: Fecha hasta
 *       - in: query
 *         name: location
 *         schema:
 *           type: string
 *         description: Ubicación
 *       - in: query
 *         name: budget
 *         schema:
 *           type: number
 *         description: Presupuesto mínimo
 *       - in: query
 *         name: budgetMax
 *         schema:
 *           type: number
 *         description: Presupuesto máximo
 *       - in: query
 *         name: limit
 *         schema:
 *           type: integer
 *           default: 20
 *         description: Número de resultados por página
 *       - in: query
 *         name: offset
 *         schema:
 *           type: integer
 *           default: 0
 *         description: Número de resultados a omitir
 *       - in: query
 *         name: sortBy
 *         schema:
 *           type: string
 *           enum: [createdAt, updatedAt, date, eventName]
 *           default: createdAt
 *         description: Campo por el cual ordenar
 *       - in: query
 *         name: sortOrder
 *         schema:
 *           type: string
 *           enum: [asc, desc]
 *           default: desc
 *         description: Orden de clasificación
 *     responses:
 *       200:
 *         description: Resultados de búsqueda
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 data:
 *                   type: array
 *                   items:
 *                     $ref: '#/components/schemas/Event'
 *                 pagination:
 *                   type: object
 *                   properties:
 *                     total:
 *                       type: integer
 *                     page:
 *                       type: integer
 *                     limit:
 *                       type: integer
 *                     hasMore:
 *                       type: boolean
 *       401:
 *         description: No autorizado
 *       400:
 *         description: Parámetros de búsqueda inválidos
 */
/* istanbul ignore next */
cov_2d06xl7m9l().s[8]++;
router.get('/events', authMiddleware_1.authMiddleware, validationMiddleware_1.validatePagination, searchController_1.searchEventsController);
/**
 * @swagger
 * /search/musician-requests:
 *   get:
 *     tags: [Search]
 *     summary: Búsqueda avanzada de solicitudes de músicos
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: query
 *         name: query
 *         schema:
 *           type: string
 *         description: Término de búsqueda en texto
 *       - in: query
 *         name: status
 *         schema:
 *           type: string
 *           enum: [pendiente, asignada, cancelada, completada, no_asignada]
 *         description: Estado de la solicitud
 *       - in: query
 *         name: eventType
 *         schema:
 *           type: string
 *           enum: [concierto, boda, culto, evento_corporativo, festival, fiesta_privada, graduacion, cumpleanos, otro]
 *         description: Tipo de evento
 *       - in: query
 *         name: instrument
 *         schema:
 *           type: string
 *           enum: [guitarra, piano, bajo, bateria, saxofon, trompeta, violin, canto, teclado, flauta, otro]
 *         description: Instrumento requerido
 *       - in: query
 *         name: dateFrom
 *         schema:
 *           type: string
 *           format: date
 *         description: Fecha desde
 *       - in: query
 *         name: dateTo
 *         schema:
 *           type: string
 *           format: date
 *         description: Fecha hasta
 *       - in: query
 *         name: location
 *         schema:
 *           type: string
 *         description: Ubicación
 *       - in: query
 *         name: budget
 *         schema:
 *           type: number
 *         description: Presupuesto mínimo
 *       - in: query
 *         name: budgetMax
 *         schema:
 *           type: number
 *         description: Presupuesto máximo
 *       - in: query
 *         name: limit
 *         schema:
 *           type: integer
 *           default: 20
 *         description: Número de resultados por página
 *       - in: query
 *         name: offset
 *         schema:
 *           type: integer
 *           default: 0
 *         description: Número de resultados a omitir
 *       - in: query
 *         name: sortBy
 *         schema:
 *           type: string
 *           enum: [createdAt, updatedAt, date, eventName]
 *           default: createdAt
 *         description: Campo por el cual ordenar
 *       - in: query
 *         name: sortOrder
 *         schema:
 *           type: string
 *           enum: [asc, desc]
 *           default: desc
 *         description: Orden de clasificación
 *     responses:
 *       200:
 *         description: Resultados de búsqueda
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 data:
 *                   type: array
 *                   items:
 *                     $ref: '#/components/schemas/MusicianRequest'
 *                 pagination:
 *                   type: object
 *                   properties:
 *                     total:
 *                       type: integer
 *                     page:
 *                       type: integer
 *                     limit:
 *                       type: integer
 *                     hasMore:
 *                       type: boolean
 *       401:
 *         description: No autorizado
 *       400:
 *         description: Parámetros de búsqueda inválidos
 */
/* istanbul ignore next */
cov_2d06xl7m9l().s[9]++;
router.get('/musician-requests', authMiddleware_1.authMiddleware, validationMiddleware_1.validatePagination, searchController_1.searchMusicianRequestsController);
/**
 * @swagger
 * /search/users:
 *   get:
 *     tags: [Search]
 *     summary: Búsqueda avanzada de usuarios
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: query
 *         name: query
 *         schema:
 *           type: string
 *         description: Término de búsqueda en texto
 *       - in: query
 *         name: role
 *         schema:
 *           type: string
 *           enum: [user, musician, admin, super_admin]
 *         description: Rol del usuario
 *       - in: query
 *         name: location
 *         schema:
 *           type: string
 *         description: Ubicación
 *       - in: query
 *         name: instrument
 *         schema:
 *           type: string
 *           enum: [guitarra, piano, bajo, bateria, saxofon, trompeta, violin, canto, teclado, flauta, otro]
 *         description: Instrumento (solo para músicos)
 *       - in: query
 *         name: limit
 *         schema:
 *           type: integer
 *           default: 20
 *         description: Número de resultados por página
 *       - in: query
 *         name: offset
 *         schema:
 *           type: integer
 *           default: 0
 *         description: Número de resultados a omitir
 *       - in: query
 *         name: sortBy
 *         schema:
 *           type: string
 *           enum: [createdAt, updatedAt, name, email]
 *           default: createdAt
 *         description: Campo por el cual ordenar
 *       - in: query
 *         name: sortOrder
 *         schema:
 *           type: string
 *           enum: [asc, desc]
 *           default: desc
 *         description: Orden de clasificación
 *     responses:
 *       200:
 *         description: Resultados de búsqueda
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 data:
 *                   type: array
 *                   items:
 *                     $ref: '#/components/schemas/User'
 *                 pagination:
 *                   type: object
 *                   properties:
 *                     total:
 *                       type: integer
 *                     page:
 *                       type: integer
 *                     limit:
 *                       type: integer
 *                     hasMore:
 *                       type: boolean
 *       401:
 *         description: No autorizado
 *       400:
 *         description: Parámetros de búsqueda inválidos
 */
/* istanbul ignore next */
cov_2d06xl7m9l().s[10]++;
router.get('/users', authMiddleware_1.authMiddleware, validationMiddleware_1.validatePagination, searchController_1.searchUsersController);
/**
 * @swagger
 * /search/global:
 *   get:
 *     tags: [Search]
 *     summary: Búsqueda global en toda la plataforma
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: query
 *         name: query
 *         schema:
 *           type: string
 *         required: true
 *         description: Término de búsqueda
 *       - in: query
 *         name: types
 *         schema:
 *           type: array
 *           items:
 *             type: string
 *             enum: [events, users, musician-requests]
 *         description: Tipos de contenido a buscar
 *       - in: query
 *         name: limit
 *         schema:
 *           type: integer
 *           default: 20
 *         description: Número de resultados por página
 *       - in: query
 *         name: offset
 *         schema:
 *           type: integer
 *           default: 0
 *         description: Número de resultados a omitir
 *       - in: query
 *         name: sortBy
 *         schema:
 *           type: string
 *           enum: [relevance, createdAt, updatedAt]
 *           default: relevance
 *         description: Campo por el cual ordenar
 *       - in: query
 *         name: sortOrder
 *         schema:
 *           type: string
 *           enum: [asc, desc]
 *           default: desc
 *         description: Orden de clasificación
 *     responses:
 *       200:
 *         description: Resultados de búsqueda global
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 data:
 *                   type: object
 *                   properties:
 *                     events:
 *                       type: array
 *                       items:
 *                         $ref: '#/components/schemas/Event'
 *                     users:
 *                       type: array
 *                       items:
 *                         $ref: '#/components/schemas/User'
 *                     musicianRequests:
 *                       type: array
 *                       items:
 *                         $ref: '#/components/schemas/MusicianRequest'
 *                 pagination:
 *                   type: object
 *                   properties:
 *                     total:
 *                       type: integer
 *                     page:
 *                       type: integer
 *                     limit:
 *                       type: integer
 *                     hasMore:
 *                       type: boolean
 *       401:
 *         description: No autorizado
 *       400:
 *         description: Parámetros de búsqueda inválidos
 */
/* istanbul ignore next */
cov_2d06xl7m9l().s[11]++;
router.get('/global', authMiddleware_1.authMiddleware, validationMiddleware_1.validatePagination, searchController_1.globalSearchController);
/**
 * @swagger
 * /search/location:
 *   get:
 *     tags: [Search]
 *     summary: Búsqueda por ubicación geográfica
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: query
 *         name: latitude
 *         schema:
 *           type: number
 *           minimum: -90
 *           maximum: 90
 *         required: true
 *         description: Latitud
 *       - in: query
 *         name: longitude
 *         schema:
 *           type: number
 *           minimum: -180
 *           maximum: 180
 *         required: true
 *         description: Longitud
 *       - in: query
 *         name: radius
 *         schema:
 *           type: number
 *           minimum: 0.1
 *           maximum: 100
 *           default: 10
 *         description: Radio de búsqueda en kilómetros
 *       - in: query
 *         name: type
 *         schema:
 *           type: string
 *           enum: [events, users, all]
 *           default: all
 *         description: Tipo de contenido a buscar
 *       - in: query
 *         name: limit
 *         schema:
 *           type: integer
 *           default: 20
 *         description: Número de resultados por página
 *       - in: query
 *         name: offset
 *         schema:
 *           type: integer
 *           default: 0
 *         description: Número de resultados a omitir
 *       - in: query
 *         name: sortBy
 *         schema:
 *           type: string
 *           enum: [distance, createdAt, updatedAt]
 *           default: distance
 *         description: Campo por el cual ordenar
 *       - in: query
 *         name: sortOrder
 *         schema:
 *           type: string
 *           enum: [asc, desc]
 *           default: asc
 *         description: Orden de clasificación
 *     responses:
 *       200:
 *         description: Resultados de búsqueda por ubicación
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 data:
 *                   type: object
 *                   properties:
 *                     events:
 *                       type: array
 *                       items:
 *                         $ref: '#/components/schemas/Event'
 *                     users:
 *                       type: array
 *                       items:
 *                         $ref: '#/components/schemas/User'
 *                 pagination:
 *                   type: object
 *                   properties:
 *                     total:
 *                       type: integer
 *                     page:
 *                       type: integer
 *                     limit:
 *                       type: integer
 *                     hasMore:
 *                       type: boolean
 *       401:
 *         description: No autorizado
 *       400:
 *         description: Parámetros de búsqueda inválidos
 */
/* istanbul ignore next */
cov_2d06xl7m9l().s[12]++;
router.get('/location', authMiddleware_1.authMiddleware, validationMiddleware_1.validatePagination, searchController_1.searchByLocationController);
/**
 * @swagger
 * /search/available-events:
 *   get:
 *     tags: [Search]
 *     summary: Buscar eventos disponibles para un músico
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: query
 *         name: instrument
 *         schema:
 *           type: string
 *           enum: [guitarra, piano, bajo, bateria, saxofon, trompeta, violin, canto, teclado, flauta, otro]
 *         description: Instrumento del músico
 *       - in: query
 *         name: dateFrom
 *         schema:
 *           type: string
 *           format: date
 *         description: Fecha desde
 *       - in: query
 *         name: dateTo
 *         schema:
 *           type: string
 *           format: date
 *         description: Fecha hasta
 *       - in: query
 *         name: location
 *         schema:
 *           type: string
 *         description: Ubicación
 *       - in: query
 *         name: budget
 *         schema:
 *           type: number
 *         description: Presupuesto mínimo
 *       - in: query
 *         name: limit
 *         schema:
 *           type: integer
 *           default: 20
 *         description: Número de resultados por página
 *       - in: query
 *         name: offset
 *         schema:
 *           type: integer
 *           default: 0
 *         description: Número de resultados a omitir
 *       - in: query
 *         name: sortBy
 *         schema:
 *           type: string
 *           enum: [date, budget, createdAt]
 *           default: date
 *         description: Campo por el cual ordenar
 *       - in: query
 *         name: sortOrder
 *         schema:
 *           type: string
 *           enum: [asc, desc]
 *           default: asc
 *         description: Orden de clasificación
 *     responses:
 *       200:
 *         description: Eventos disponibles para el músico
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 data:
 *                   type: array
 *                   items:
 *                     $ref: '#/components/schemas/Event'
 *                 pagination:
 *                   type: object
 *                   properties:
 *                     total:
 *                       type: integer
 *                     page:
 *                       type: integer
 *                     limit:
 *                       type: integer
 *                     hasMore:
 *                       type: boolean
 *       401:
 *         description: No autorizado
 *       400:
 *         description: Parámetros de búsqueda inválidos
 */
/* istanbul ignore next */
cov_2d06xl7m9l().s[13]++;
router.get('/available-events', authMiddleware_1.authMiddleware, validationMiddleware_1.validatePagination, searchController_1.searchAvailableEventsForMusicianController);
/**
 * @swagger
 * /search/available-musicians:
 *   get:
 *     tags: [Search]
 *     summary: Buscar músicos disponibles para un evento
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: query
 *         name: eventId
 *         schema:
 *           type: string
 *         required: true
 *         description: ID del evento
 *       - in: query
 *         name: instrument
 *         schema:
 *           type: string
 *           enum: [guitarra, piano, bajo, bateria, saxofon, trompeta, violin, canto, teclado, flauta, otro]
 *         description: Instrumento requerido
 *       - in: query
 *         name: location
 *         schema:
 *           type: string
 *         description: Ubicación preferida
 *       - in: query
 *         name: limit
 *         schema:
 *           type: integer
 *           default: 20
 *         description: Número de resultados por página
 *       - in: query
 *         name: offset
 *         schema:
 *           type: integer
 *           default: 0
 *         description: Número de resultados a omitir
 *       - in: query
 *         name: sortBy
 *         schema:
 *           type: string
 *           enum: [rating, experience, distance]
 *           default: rating
 *         description: Campo por el cual ordenar
 *       - in: query
 *         name: sortOrder
 *         schema:
 *           type: string
 *           enum: [asc, desc]
 *           default: desc
 *         description: Orden de clasificación
 *     responses:
 *       200:
 *         description: Músicos disponibles para el evento
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 data:
 *                   type: array
 *                   items:
 *                     $ref: '#/components/schemas/User'
 *                 pagination:
 *                   type: object
 *                   properties:
 *                     total:
 *                       type: integer
 *                     page:
 *                       type: integer
 *                     limit:
 *                       type: integer
 *                     hasMore:
 *                       type: boolean
 *       401:
 *         description: No autorizado
 *       400:
 *         description: Parámetros de búsqueda inválidos
 */
/* istanbul ignore next */
cov_2d06xl7m9l().s[14]++;
router.get('/available-musicians', authMiddleware_1.authMiddleware, validationMiddleware_1.validatePagination, searchController_1.searchAvailableMusiciansForEventController);
/* istanbul ignore next */
cov_2d06xl7m9l().s[15]++;
exports.default = router;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,