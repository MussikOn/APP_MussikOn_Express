342f101b837933a74f5df4ddbd3ca26c
"use strict";

/* istanbul ignore next */
function cov_1bnp2go2ea() {
  var path = "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\controllers\\hiringController.ts";
  var hash = "e7099d062a9a7b7df79d4f804a3bc82c9d943f1c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\controllers\\hiringController.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 16
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 28
        },
        end: {
          line: 3,
          column: 110
        }
      },
      "2": {
        start: {
          line: 3,
          column: 91
        },
        end: {
          line: 3,
          column: 106
        }
      },
      "3": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "4": {
        start: {
          line: 5,
          column: 36
        },
        end: {
          line: 5,
          column: 97
        }
      },
      "5": {
        start: {
          line: 5,
          column: 42
        },
        end: {
          line: 5,
          column: 70
        }
      },
      "6": {
        start: {
          line: 5,
          column: 85
        },
        end: {
          line: 5,
          column: 95
        }
      },
      "7": {
        start: {
          line: 6,
          column: 35
        },
        end: {
          line: 6,
          column: 100
        }
      },
      "8": {
        start: {
          line: 6,
          column: 41
        },
        end: {
          line: 6,
          column: 73
        }
      },
      "9": {
        start: {
          line: 6,
          column: 88
        },
        end: {
          line: 6,
          column: 98
        }
      },
      "10": {
        start: {
          line: 7,
          column: 32
        },
        end: {
          line: 7,
          column: 116
        }
      },
      "11": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 78
        }
      },
      "12": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 62
        }
      },
      "13": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 34
        }
      },
      "14": {
        start: {
          line: 13,
          column: 24
        },
        end: {
          line: 13,
          column: 60
        }
      },
      "15": {
        start: {
          line: 14,
          column: 24
        },
        end: {
          line: 14,
          column: 60
        }
      },
      "16": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 72,
          column: 11
        }
      },
      "17": {
        start: {
          line: 20,
          column: 49
        },
        end: {
          line: 72,
          column: 10
        }
      },
      "18": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 71,
          column: 13
        }
      },
      "19": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 28,
          column: 19
        }
      },
      "20": {
        start: {
          line: 29,
          column: 69
        },
        end: {
          line: 29,
          column: 77
        }
      },
      "21": {
        start: {
          line: 30,
          column: 39
        },
        end: {
          line: 30,
          column: 97
        }
      },
      "22": {
        start: {
          line: 31,
          column: 16
        },
        end: {
          line: 37,
          column: 17
        }
      },
      "23": {
        start: {
          line: 32,
          column: 20
        },
        end: {
          line: 35,
          column: 23
        }
      },
      "24": {
        start: {
          line: 36,
          column: 20
        },
        end: {
          line: 36,
          column: 27
        }
      },
      "25": {
        start: {
          line: 38,
          column: 35
        },
        end: {
          line: 44,
          column: 17
        }
      },
      "26": {
        start: {
          line: 45,
          column: 38
        },
        end: {
          line: 45,
          column: 94
        }
      },
      "27": {
        start: {
          line: 46,
          column: 16
        },
        end: {
          line: 53,
          column: 19
        }
      },
      "28": {
        start: {
          line: 54,
          column: 16
        },
        end: {
          line: 58,
          column: 19
        }
      },
      "29": {
        start: {
          line: 61,
          column: 16
        },
        end: {
          line: 66,
          column: 19
        }
      },
      "30": {
        start: {
          line: 67,
          column: 16
        },
        end: {
          line: 70,
          column: 19
        }
      },
      "31": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 133,
          column: 11
        }
      },
      "32": {
        start: {
          line: 76,
          column: 50
        },
        end: {
          line: 133,
          column: 10
        }
      },
      "33": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 132,
          column: 13
        }
      },
      "34": {
        start: {
          line: 79,
          column: 38
        },
        end: {
          line: 79,
          column: 48
        }
      },
      "35": {
        start: {
          line: 80,
          column: 31
        },
        end: {
          line: 80,
          column: 89
        }
      },
      "36": {
        start: {
          line: 81,
          column: 16
        },
        end: {
          line: 86,
          column: 19
        }
      },
      "37": {
        start: {
          line: 87,
          column: 16
        },
        end: {
          line: 93,
          column: 17
        }
      },
      "38": {
        start: {
          line: 88,
          column: 20
        },
        end: {
          line: 91,
          column: 23
        }
      },
      "39": {
        start: {
          line: 92,
          column: 20
        },
        end: {
          line: 92,
          column: 27
        }
      },
      "40": {
        start: {
          line: 94,
          column: 38
        },
        end: {
          line: 94,
          column: 94
        }
      },
      "41": {
        start: {
          line: 95,
          column: 16
        },
        end: {
          line: 101,
          column: 17
        }
      },
      "42": {
        start: {
          line: 96,
          column: 20
        },
        end: {
          line: 99,
          column: 23
        }
      },
      "43": {
        start: {
          line: 100,
          column: 20
        },
        end: {
          line: 100,
          column: 27
        }
      },
      "44": {
        start: {
          line: 103,
          column: 16
        },
        end: {
          line: 109,
          column: 17
        }
      },
      "45": {
        start: {
          line: 104,
          column: 20
        },
        end: {
          line: 107,
          column: 23
        }
      },
      "46": {
        start: {
          line: 108,
          column: 20
        },
        end: {
          line: 108,
          column: 27
        }
      },
      "47": {
        start: {
          line: 110,
          column: 16
        },
        end: {
          line: 115,
          column: 19
        }
      },
      "48": {
        start: {
          line: 116,
          column: 16
        },
        end: {
          line: 119,
          column: 19
        }
      },
      "49": {
        start: {
          line: 122,
          column: 16
        },
        end: {
          line: 127,
          column: 19
        }
      },
      "50": {
        start: {
          line: 128,
          column: 16
        },
        end: {
          line: 131,
          column: 19
        }
      },
      "51": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 191,
          column: 11
        }
      },
      "52": {
        start: {
          line: 137,
          column: 55
        },
        end: {
          line: 191,
          column: 10
        }
      },
      "53": {
        start: {
          line: 139,
          column: 12
        },
        end: {
          line: 190,
          column: 13
        }
      },
      "54": {
        start: {
          line: 140,
          column: 38
        },
        end: {
          line: 140,
          column: 48
        }
      },
      "55": {
        start: {
          line: 141,
          column: 35
        },
        end: {
          line: 141,
          column: 43
        }
      },
      "56": {
        start: {
          line: 142,
          column: 31
        },
        end: {
          line: 142,
          column: 89
        }
      },
      "57": {
        start: {
          line: 143,
          column: 16
        },
        end: {
          line: 149,
          column: 19
        }
      },
      "58": {
        start: {
          line: 150,
          column: 16
        },
        end: {
          line: 156,
          column: 17
        }
      },
      "59": {
        start: {
          line: 151,
          column: 20
        },
        end: {
          line: 154,
          column: 23
        }
      },
      "60": {
        start: {
          line: 155,
          column: 20
        },
        end: {
          line: 155,
          column: 27
        }
      },
      "61": {
        start: {
          line: 157,
          column: 16
        },
        end: {
          line: 163,
          column: 17
        }
      },
      "62": {
        start: {
          line: 158,
          column: 20
        },
        end: {
          line: 161,
          column: 23
        }
      },
      "63": {
        start: {
          line: 162,
          column: 20
        },
        end: {
          line: 162,
          column: 27
        }
      },
      "64": {
        start: {
          line: 164,
          column: 39
        },
        end: {
          line: 164,
          column: 116
        }
      },
      "65": {
        start: {
          line: 165,
          column: 16
        },
        end: {
          line: 171,
          column: 19
        }
      },
      "66": {
        start: {
          line: 172,
          column: 16
        },
        end: {
          line: 176,
          column: 19
        }
      },
      "67": {
        start: {
          line: 179,
          column: 16
        },
        end: {
          line: 185,
          column: 19
        }
      },
      "68": {
        start: {
          line: 186,
          column: 16
        },
        end: {
          line: 189,
          column: 19
        }
      },
      "69": {
        start: {
          line: 195,
          column: 8
        },
        end: {
          line: 248,
          column: 11
        }
      },
      "70": {
        start: {
          line: 195,
          column: 53
        },
        end: {
          line: 248,
          column: 10
        }
      },
      "71": {
        start: {
          line: 197,
          column: 12
        },
        end: {
          line: 247,
          column: 13
        }
      },
      "72": {
        start: {
          line: 198,
          column: 31
        },
        end: {
          line: 198,
          column: 89
        }
      },
      "73": {
        start: {
          line: 199,
          column: 33
        },
        end: {
          line: 199,
          column: 93
        }
      },
      "74": {
        start: {
          line: 200,
          column: 35
        },
        end: {
          line: 200,
          column: 44
        }
      },
      "75": {
        start: {
          line: 201,
          column: 16
        },
        end: {
          line: 207,
          column: 19
        }
      },
      "76": {
        start: {
          line: 208,
          column: 16
        },
        end: {
          line: 214,
          column: 17
        }
      },
      "77": {
        start: {
          line: 209,
          column: 20
        },
        end: {
          line: 212,
          column: 23
        }
      },
      "78": {
        start: {
          line: 213,
          column: 20
        },
        end: {
          line: 213,
          column: 27
        }
      },
      "79": {
        start: {
          line: 215,
          column: 16
        },
        end: {
          line: 221,
          column: 17
        }
      },
      "80": {
        start: {
          line: 216,
          column: 20
        },
        end: {
          line: 219,
          column: 23
        }
      },
      "81": {
        start: {
          line: 220,
          column: 20
        },
        end: {
          line: 220,
          column: 27
        }
      },
      "82": {
        start: {
          line: 222,
          column: 33
        },
        end: {
          line: 222,
          column: 107
        }
      },
      "83": {
        start: {
          line: 223,
          column: 16
        },
        end: {
          line: 229,
          column: 19
        }
      },
      "84": {
        start: {
          line: 230,
          column: 16
        },
        end: {
          line: 234,
          column: 19
        }
      },
      "85": {
        start: {
          line: 237,
          column: 16
        },
        end: {
          line: 242,
          column: 19
        }
      },
      "86": {
        start: {
          line: 243,
          column: 16
        },
        end: {
          line: 246,
          column: 19
        }
      },
      "87": {
        start: {
          line: 252,
          column: 8
        },
        end: {
          line: 314,
          column: 11
        }
      },
      "88": {
        start: {
          line: 252,
          column: 40
        },
        end: {
          line: 314,
          column: 10
        }
      },
      "89": {
        start: {
          line: 254,
          column: 12
        },
        end: {
          line: 313,
          column: 13
        }
      },
      "90": {
        start: {
          line: 255,
          column: 38
        },
        end: {
          line: 255,
          column: 48
        }
      },
      "91": {
        start: {
          line: 256,
          column: 36
        },
        end: {
          line: 256,
          column: 44
        }
      },
      "92": {
        start: {
          line: 257,
          column: 31
        },
        end: {
          line: 257,
          column: 89
        }
      },
      "93": {
        start: {
          line: 258,
          column: 33
        },
        end: {
          line: 258,
          column: 93
        }
      },
      "94": {
        start: {
          line: 259,
          column: 16
        },
        end: {
          line: 265,
          column: 19
        }
      },
      "95": {
        start: {
          line: 266,
          column: 16
        },
        end: {
          line: 272,
          column: 17
        }
      },
      "96": {
        start: {
          line: 267,
          column: 20
        },
        end: {
          line: 270,
          column: 23
        }
      },
      "97": {
        start: {
          line: 271,
          column: 20
        },
        end: {
          line: 271,
          column: 27
        }
      },
      "98": {
        start: {
          line: 273,
          column: 16
        },
        end: {
          line: 279,
          column: 17
        }
      },
      "99": {
        start: {
          line: 274,
          column: 20
        },
        end: {
          line: 277,
          column: 23
        }
      },
      "100": {
        start: {
          line: 278,
          column: 20
        },
        end: {
          line: 278,
          column: 27
        }
      },
      "101": {
        start: {
          line: 280,
          column: 16
        },
        end: {
          line: 286,
          column: 17
        }
      },
      "102": {
        start: {
          line: 281,
          column: 20
        },
        end: {
          line: 284,
          column: 23
        }
      },
      "103": {
        start: {
          line: 285,
          column: 20
        },
        end: {
          line: 285,
          column: 27
        }
      },
      "104": {
        start: {
          line: 287,
          column: 35
        },
        end: {
          line: 287,
          column: 86
        }
      },
      "105": {
        start: {
          line: 288,
          column: 32
        },
        end: {
          line: 288,
          column: 114
        }
      },
      "106": {
        start: {
          line: 289,
          column: 16
        },
        end: {
          line: 295,
          column: 19
        }
      },
      "107": {
        start: {
          line: 296,
          column: 16
        },
        end: {
          line: 300,
          column: 19
        }
      },
      "108": {
        start: {
          line: 303,
          column: 16
        },
        end: {
          line: 308,
          column: 19
        }
      },
      "109": {
        start: {
          line: 309,
          column: 16
        },
        end: {
          line: 312,
          column: 19
        }
      },
      "110": {
        start: {
          line: 318,
          column: 8
        },
        end: {
          line: 360,
          column: 11
        }
      },
      "111": {
        start: {
          line: 318,
          column: 48
        },
        end: {
          line: 360,
          column: 10
        }
      },
      "112": {
        start: {
          line: 320,
          column: 12
        },
        end: {
          line: 359,
          column: 13
        }
      },
      "113": {
        start: {
          line: 321,
          column: 38
        },
        end: {
          line: 321,
          column: 48
        }
      },
      "114": {
        start: {
          line: 322,
          column: 31
        },
        end: {
          line: 322,
          column: 89
        }
      },
      "115": {
        start: {
          line: 323,
          column: 16
        },
        end: {
          line: 328,
          column: 19
        }
      },
      "116": {
        start: {
          line: 329,
          column: 16
        },
        end: {
          line: 335,
          column: 17
        }
      },
      "117": {
        start: {
          line: 330,
          column: 20
        },
        end: {
          line: 333,
          column: 23
        }
      },
      "118": {
        start: {
          line: 334,
          column: 20
        },
        end: {
          line: 334,
          column: 27
        }
      },
      "119": {
        start: {
          line: 336,
          column: 16
        },
        end: {
          line: 336,
          column: 79
        }
      },
      "120": {
        start: {
          line: 337,
          column: 16
        },
        end: {
          line: 342,
          column: 19
        }
      },
      "121": {
        start: {
          line: 343,
          column: 16
        },
        end: {
          line: 346,
          column: 19
        }
      },
      "122": {
        start: {
          line: 349,
          column: 16
        },
        end: {
          line: 354,
          column: 19
        }
      },
      "123": {
        start: {
          line: 355,
          column: 16
        },
        end: {
          line: 358,
          column: 19
        }
      },
      "124": {
        start: {
          line: 364,
          column: 8
        },
        end: {
          line: 414,
          column: 11
        }
      },
      "125": {
        start: {
          line: 364,
          column: 44
        },
        end: {
          line: 414,
          column: 10
        }
      },
      "126": {
        start: {
          line: 366,
          column: 12
        },
        end: {
          line: 413,
          column: 13
        }
      },
      "127": {
        start: {
          line: 367,
          column: 31
        },
        end: {
          line: 367,
          column: 89
        }
      },
      "128": {
        start: {
          line: 368,
          column: 33
        },
        end: {
          line: 368,
          column: 93
        }
      },
      "129": {
        start: {
          line: 369,
          column: 16
        },
        end: {
          line: 374,
          column: 19
        }
      },
      "130": {
        start: {
          line: 375,
          column: 16
        },
        end: {
          line: 381,
          column: 17
        }
      },
      "131": {
        start: {
          line: 376,
          column: 20
        },
        end: {
          line: 379,
          column: 23
        }
      },
      "132": {
        start: {
          line: 380,
          column: 20
        },
        end: {
          line: 380,
          column: 27
        }
      },
      "133": {
        start: {
          line: 382,
          column: 16
        },
        end: {
          line: 388,
          column: 17
        }
      },
      "134": {
        start: {
          line: 383,
          column: 20
        },
        end: {
          line: 386,
          column: 23
        }
      },
      "135": {
        start: {
          line: 387,
          column: 20
        },
        end: {
          line: 387,
          column: 27
        }
      },
      "136": {
        start: {
          line: 389,
          column: 30
        },
        end: {
          line: 389,
          column: 87
        }
      },
      "137": {
        start: {
          line: 390,
          column: 16
        },
        end: {
          line: 396,
          column: 19
        }
      },
      "138": {
        start: {
          line: 397,
          column: 16
        },
        end: {
          line: 400,
          column: 19
        }
      },
      "139": {
        start: {
          line: 403,
          column: 16
        },
        end: {
          line: 408,
          column: 19
        }
      },
      "140": {
        start: {
          line: 409,
          column: 16
        },
        end: {
          line: 412,
          column: 19
        }
      },
      "141": {
        start: {
          line: 415,
          column: 8
        },
        end: {
          line: 415,
          column: 65
        }
      },
      "142": {
        start: {
          line: 418,
          column: 0
        },
        end: {
          line: 418,
          column: 44
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 2,
            column: 45
          }
        },
        loc: {
          start: {
            line: 2,
            column: 89
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "adopt",
        decl: {
          start: {
            line: 3,
            column: 13
          },
          end: {
            line: 3,
            column: 18
          }
        },
        loc: {
          start: {
            line: 3,
            column: 26
          },
          end: {
            line: 3,
            column: 112
          }
        },
        line: 3
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 3,
            column: 70
          },
          end: {
            line: 3,
            column: 71
          }
        },
        loc: {
          start: {
            line: 3,
            column: 89
          },
          end: {
            line: 3,
            column: 108
          }
        },
        line: 3
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 4,
            column: 36
          },
          end: {
            line: 4,
            column: 37
          }
        },
        loc: {
          start: {
            line: 4,
            column: 63
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 4
      },
      "4": {
        name: "fulfilled",
        decl: {
          start: {
            line: 5,
            column: 17
          },
          end: {
            line: 5,
            column: 26
          }
        },
        loc: {
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 99
          }
        },
        line: 5
      },
      "5": {
        name: "rejected",
        decl: {
          start: {
            line: 6,
            column: 17
          },
          end: {
            line: 6,
            column: 25
          }
        },
        loc: {
          start: {
            line: 6,
            column: 33
          },
          end: {
            line: 6,
            column: 102
          }
        },
        line: 6
      },
      "6": {
        name: "step",
        decl: {
          start: {
            line: 7,
            column: 17
          },
          end: {
            line: 7,
            column: 21
          }
        },
        loc: {
          start: {
            line: 7,
            column: 30
          },
          end: {
            line: 7,
            column: 118
          }
        },
        line: 7
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 18
          },
          end: {
            line: 416,
            column: 5
          }
        },
        line: 16
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 20,
            column: 35
          },
          end: {
            line: 20,
            column: 36
          }
        },
        loc: {
          start: {
            line: 20,
            column: 49
          },
          end: {
            line: 72,
            column: 10
          }
        },
        line: 20
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 20,
            column: 81
          },
          end: {
            line: 20,
            column: 82
          }
        },
        loc: {
          start: {
            line: 20,
            column: 94
          },
          end: {
            line: 72,
            column: 9
          }
        },
        line: 20
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 76,
            column: 36
          },
          end: {
            line: 76,
            column: 37
          }
        },
        loc: {
          start: {
            line: 76,
            column: 50
          },
          end: {
            line: 133,
            column: 10
          }
        },
        line: 76
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 76,
            column: 82
          },
          end: {
            line: 76,
            column: 83
          }
        },
        loc: {
          start: {
            line: 76,
            column: 95
          },
          end: {
            line: 133,
            column: 9
          }
        },
        line: 76
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 137,
            column: 41
          },
          end: {
            line: 137,
            column: 42
          }
        },
        loc: {
          start: {
            line: 137,
            column: 55
          },
          end: {
            line: 191,
            column: 10
          }
        },
        line: 137
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 137,
            column: 87
          },
          end: {
            line: 137,
            column: 88
          }
        },
        loc: {
          start: {
            line: 137,
            column: 100
          },
          end: {
            line: 191,
            column: 9
          }
        },
        line: 137
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 195,
            column: 39
          },
          end: {
            line: 195,
            column: 40
          }
        },
        loc: {
          start: {
            line: 195,
            column: 53
          },
          end: {
            line: 248,
            column: 10
          }
        },
        line: 195
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 195,
            column: 85
          },
          end: {
            line: 195,
            column: 86
          }
        },
        loc: {
          start: {
            line: 195,
            column: 98
          },
          end: {
            line: 248,
            column: 9
          }
        },
        line: 195
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 252,
            column: 26
          },
          end: {
            line: 252,
            column: 27
          }
        },
        loc: {
          start: {
            line: 252,
            column: 40
          },
          end: {
            line: 314,
            column: 10
          }
        },
        line: 252
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 252,
            column: 72
          },
          end: {
            line: 252,
            column: 73
          }
        },
        loc: {
          start: {
            line: 252,
            column: 85
          },
          end: {
            line: 314,
            column: 9
          }
        },
        line: 252
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 318,
            column: 34
          },
          end: {
            line: 318,
            column: 35
          }
        },
        loc: {
          start: {
            line: 318,
            column: 48
          },
          end: {
            line: 360,
            column: 10
          }
        },
        line: 318
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 318,
            column: 80
          },
          end: {
            line: 318,
            column: 81
          }
        },
        loc: {
          start: {
            line: 318,
            column: 93
          },
          end: {
            line: 360,
            column: 9
          }
        },
        line: 318
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 364,
            column: 30
          },
          end: {
            line: 364,
            column: 31
          }
        },
        loc: {
          start: {
            line: 364,
            column: 44
          },
          end: {
            line: 414,
            column: 10
          }
        },
        line: 364
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 364,
            column: 76
          },
          end: {
            line: 364,
            column: 77
          }
        },
        loc: {
          start: {
            line: 364,
            column: 89
          },
          end: {
            line: 414,
            column: 9
          }
        },
        line: 364
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 16
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 17
          },
          end: {
            line: 2,
            column: 21
          }
        }, {
          start: {
            line: 2,
            column: 25
          },
          end: {
            line: 2,
            column: 39
          }
        }, {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 35
          },
          end: {
            line: 3,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 56
          },
          end: {
            line: 3,
            column: 61
          }
        }, {
          start: {
            line: 3,
            column: 64
          },
          end: {
            line: 3,
            column: 109
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 17
          }
        }, {
          start: {
            line: 4,
            column: 22
          },
          end: {
            line: 4,
            column: 33
          }
        }],
        line: 4
      },
      "3": {
        loc: {
          start: {
            line: 7,
            column: 32
          },
          end: {
            line: 7,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 7,
            column: 46
          },
          end: {
            line: 7,
            column: 67
          }
        }, {
          start: {
            line: 7,
            column: 70
          },
          end: {
            line: 7,
            column: 115
          }
        }],
        line: 7
      },
      "4": {
        loc: {
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 61
          }
        }, {
          start: {
            line: 8,
            column: 65
          },
          end: {
            line: 8,
            column: 67
          }
        }],
        line: 8
      },
      "5": {
        loc: {
          start: {
            line: 24,
            column: 28
          },
          end: {
            line: 24,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 24,
            column: 72
          },
          end: {
            line: 24,
            column: 78
          }
        }, {
          start: {
            line: 24,
            column: 81
          },
          end: {
            line: 24,
            column: 86
          }
        }],
        line: 24
      },
      "6": {
        loc: {
          start: {
            line: 24,
            column: 28
          },
          end: {
            line: 24,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 24,
            column: 28
          },
          end: {
            line: 24,
            column: 52
          }
        }, {
          start: {
            line: 24,
            column: 56
          },
          end: {
            line: 24,
            column: 69
          }
        }],
        line: 24
      },
      "7": {
        loc: {
          start: {
            line: 30,
            column: 39
          },
          end: {
            line: 30,
            column: 97
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 30,
            column: 83
          },
          end: {
            line: 30,
            column: 89
          }
        }, {
          start: {
            line: 30,
            column: 92
          },
          end: {
            line: 30,
            column: 97
          }
        }],
        line: 30
      },
      "8": {
        loc: {
          start: {
            line: 30,
            column: 39
          },
          end: {
            line: 30,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 39
          },
          end: {
            line: 30,
            column: 63
          }
        }, {
          start: {
            line: 30,
            column: 67
          },
          end: {
            line: 30,
            column: 80
          }
        }],
        line: 30
      },
      "9": {
        loc: {
          start: {
            line: 31,
            column: 16
          },
          end: {
            line: 37,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 16
          },
          end: {
            line: 37,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 31
      },
      "10": {
        loc: {
          start: {
            line: 47,
            column: 28
          },
          end: {
            line: 47,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 47,
            column: 72
          },
          end: {
            line: 47,
            column: 78
          }
        }, {
          start: {
            line: 47,
            column: 81
          },
          end: {
            line: 47,
            column: 86
          }
        }],
        line: 47
      },
      "11": {
        loc: {
          start: {
            line: 47,
            column: 28
          },
          end: {
            line: 47,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 28
          },
          end: {
            line: 47,
            column: 52
          }
        }, {
          start: {
            line: 47,
            column: 56
          },
          end: {
            line: 47,
            column: 69
          }
        }],
        line: 47
      },
      "12": {
        loc: {
          start: {
            line: 61,
            column: 107
          },
          end: {
            line: 61,
            column: 170
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 61,
            column: 132
          },
          end: {
            line: 61,
            column: 137
          }
        }, {
          start: {
            line: 61,
            column: 140
          },
          end: {
            line: 61,
            column: 170
          }
        }],
        line: 61
      },
      "13": {
        loc: {
          start: {
            line: 62,
            column: 28
          },
          end: {
            line: 62,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 62,
            column: 72
          },
          end: {
            line: 62,
            column: 78
          }
        }, {
          start: {
            line: 62,
            column: 81
          },
          end: {
            line: 62,
            column: 86
          }
        }],
        line: 62
      },
      "14": {
        loc: {
          start: {
            line: 62,
            column: 28
          },
          end: {
            line: 62,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 62,
            column: 28
          },
          end: {
            line: 62,
            column: 52
          }
        }, {
          start: {
            line: 62,
            column: 56
          },
          end: {
            line: 62,
            column: 69
          }
        }],
        line: 62
      },
      "15": {
        loc: {
          start: {
            line: 69,
            column: 29
          },
          end: {
            line: 69,
            column: 112
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 69,
            column: 54
          },
          end: {
            line: 69,
            column: 67
          }
        }, {
          start: {
            line: 69,
            column: 70
          },
          end: {
            line: 69,
            column: 112
          }
        }],
        line: 69
      },
      "16": {
        loc: {
          start: {
            line: 80,
            column: 31
          },
          end: {
            line: 80,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 80,
            column: 75
          },
          end: {
            line: 80,
            column: 81
          }
        }, {
          start: {
            line: 80,
            column: 84
          },
          end: {
            line: 80,
            column: 89
          }
        }],
        line: 80
      },
      "17": {
        loc: {
          start: {
            line: 80,
            column: 31
          },
          end: {
            line: 80,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 80,
            column: 31
          },
          end: {
            line: 80,
            column: 55
          }
        }, {
          start: {
            line: 80,
            column: 59
          },
          end: {
            line: 80,
            column: 72
          }
        }],
        line: 80
      },
      "18": {
        loc: {
          start: {
            line: 87,
            column: 16
          },
          end: {
            line: 93,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 87,
            column: 16
          },
          end: {
            line: 93,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 87
      },
      "19": {
        loc: {
          start: {
            line: 95,
            column: 16
          },
          end: {
            line: 101,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 95,
            column: 16
          },
          end: {
            line: 101,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 95
      },
      "20": {
        loc: {
          start: {
            line: 103,
            column: 16
          },
          end: {
            line: 109,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 103,
            column: 16
          },
          end: {
            line: 109,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 103
      },
      "21": {
        loc: {
          start: {
            line: 103,
            column: 20
          },
          end: {
            line: 103,
            column: 98
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 103,
            column: 20
          },
          end: {
            line: 103,
            column: 55
          }
        }, {
          start: {
            line: 103,
            column: 59
          },
          end: {
            line: 103,
            column: 98
          }
        }],
        line: 103
      },
      "22": {
        loc: {
          start: {
            line: 122,
            column: 109
          },
          end: {
            line: 122,
            column: 172
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 122,
            column: 134
          },
          end: {
            line: 122,
            column: 139
          }
        }, {
          start: {
            line: 122,
            column: 142
          },
          end: {
            line: 122,
            column: 172
          }
        }],
        line: 122
      },
      "23": {
        loc: {
          start: {
            line: 123,
            column: 28
          },
          end: {
            line: 123,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 123,
            column: 72
          },
          end: {
            line: 123,
            column: 78
          }
        }, {
          start: {
            line: 123,
            column: 81
          },
          end: {
            line: 123,
            column: 86
          }
        }],
        line: 123
      },
      "24": {
        loc: {
          start: {
            line: 123,
            column: 28
          },
          end: {
            line: 123,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 123,
            column: 28
          },
          end: {
            line: 123,
            column: 52
          }
        }, {
          start: {
            line: 123,
            column: 56
          },
          end: {
            line: 123,
            column: 69
          }
        }],
        line: 123
      },
      "25": {
        loc: {
          start: {
            line: 142,
            column: 31
          },
          end: {
            line: 142,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 142,
            column: 75
          },
          end: {
            line: 142,
            column: 81
          }
        }, {
          start: {
            line: 142,
            column: 84
          },
          end: {
            line: 142,
            column: 89
          }
        }],
        line: 142
      },
      "26": {
        loc: {
          start: {
            line: 142,
            column: 31
          },
          end: {
            line: 142,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 142,
            column: 31
          },
          end: {
            line: 142,
            column: 55
          }
        }, {
          start: {
            line: 142,
            column: 59
          },
          end: {
            line: 142,
            column: 72
          }
        }],
        line: 142
      },
      "27": {
        loc: {
          start: {
            line: 150,
            column: 16
          },
          end: {
            line: 156,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 150,
            column: 16
          },
          end: {
            line: 156,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 150
      },
      "28": {
        loc: {
          start: {
            line: 157,
            column: 16
          },
          end: {
            line: 163,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 157,
            column: 16
          },
          end: {
            line: 163,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 157
      },
      "29": {
        loc: {
          start: {
            line: 179,
            column: 106
          },
          end: {
            line: 179,
            column: 169
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 179,
            column: 131
          },
          end: {
            line: 179,
            column: 136
          }
        }, {
          start: {
            line: 179,
            column: 139
          },
          end: {
            line: 179,
            column: 169
          }
        }],
        line: 179
      },
      "30": {
        loc: {
          start: {
            line: 180,
            column: 28
          },
          end: {
            line: 180,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 180,
            column: 72
          },
          end: {
            line: 180,
            column: 78
          }
        }, {
          start: {
            line: 180,
            column: 81
          },
          end: {
            line: 180,
            column: 86
          }
        }],
        line: 180
      },
      "31": {
        loc: {
          start: {
            line: 180,
            column: 28
          },
          end: {
            line: 180,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 180,
            column: 28
          },
          end: {
            line: 180,
            column: 52
          }
        }, {
          start: {
            line: 180,
            column: 56
          },
          end: {
            line: 180,
            column: 69
          }
        }],
        line: 180
      },
      "32": {
        loc: {
          start: {
            line: 188,
            column: 29
          },
          end: {
            line: 188,
            column: 111
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 188,
            column: 54
          },
          end: {
            line: 188,
            column: 67
          }
        }, {
          start: {
            line: 188,
            column: 70
          },
          end: {
            line: 188,
            column: 111
          }
        }],
        line: 188
      },
      "33": {
        loc: {
          start: {
            line: 198,
            column: 31
          },
          end: {
            line: 198,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 198,
            column: 75
          },
          end: {
            line: 198,
            column: 81
          }
        }, {
          start: {
            line: 198,
            column: 84
          },
          end: {
            line: 198,
            column: 89
          }
        }],
        line: 198
      },
      "34": {
        loc: {
          start: {
            line: 198,
            column: 31
          },
          end: {
            line: 198,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 198,
            column: 31
          },
          end: {
            line: 198,
            column: 55
          }
        }, {
          start: {
            line: 198,
            column: 59
          },
          end: {
            line: 198,
            column: 72
          }
        }],
        line: 198
      },
      "35": {
        loc: {
          start: {
            line: 199,
            column: 33
          },
          end: {
            line: 199,
            column: 93
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 199,
            column: 77
          },
          end: {
            line: 199,
            column: 83
          }
        }, {
          start: {
            line: 199,
            column: 86
          },
          end: {
            line: 199,
            column: 93
          }
        }],
        line: 199
      },
      "36": {
        loc: {
          start: {
            line: 199,
            column: 33
          },
          end: {
            line: 199,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 199,
            column: 33
          },
          end: {
            line: 199,
            column: 57
          }
        }, {
          start: {
            line: 199,
            column: 61
          },
          end: {
            line: 199,
            column: 74
          }
        }],
        line: 199
      },
      "37": {
        loc: {
          start: {
            line: 208,
            column: 16
          },
          end: {
            line: 214,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 208,
            column: 16
          },
          end: {
            line: 214,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 208
      },
      "38": {
        loc: {
          start: {
            line: 215,
            column: 16
          },
          end: {
            line: 221,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 215,
            column: 16
          },
          end: {
            line: 221,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 215
      },
      "39": {
        loc: {
          start: {
            line: 215,
            column: 20
          },
          end: {
            line: 215,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 215,
            column: 20
          },
          end: {
            line: 215,
            column: 41
          }
        }, {
          start: {
            line: 215,
            column: 45
          },
          end: {
            line: 215,
            column: 72
          }
        }],
        line: 215
      },
      "40": {
        loc: {
          start: {
            line: 237,
            column: 107
          },
          end: {
            line: 237,
            column: 170
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 237,
            column: 132
          },
          end: {
            line: 237,
            column: 137
          }
        }, {
          start: {
            line: 237,
            column: 140
          },
          end: {
            line: 237,
            column: 170
          }
        }],
        line: 237
      },
      "41": {
        loc: {
          start: {
            line: 238,
            column: 28
          },
          end: {
            line: 238,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 238,
            column: 72
          },
          end: {
            line: 238,
            column: 78
          }
        }, {
          start: {
            line: 238,
            column: 81
          },
          end: {
            line: 238,
            column: 86
          }
        }],
        line: 238
      },
      "42": {
        loc: {
          start: {
            line: 238,
            column: 28
          },
          end: {
            line: 238,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 238,
            column: 28
          },
          end: {
            line: 238,
            column: 52
          }
        }, {
          start: {
            line: 238,
            column: 56
          },
          end: {
            line: 238,
            column: 69
          }
        }],
        line: 238
      },
      "43": {
        loc: {
          start: {
            line: 257,
            column: 31
          },
          end: {
            line: 257,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 257,
            column: 75
          },
          end: {
            line: 257,
            column: 81
          }
        }, {
          start: {
            line: 257,
            column: 84
          },
          end: {
            line: 257,
            column: 89
          }
        }],
        line: 257
      },
      "44": {
        loc: {
          start: {
            line: 257,
            column: 31
          },
          end: {
            line: 257,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 257,
            column: 31
          },
          end: {
            line: 257,
            column: 55
          }
        }, {
          start: {
            line: 257,
            column: 59
          },
          end: {
            line: 257,
            column: 72
          }
        }],
        line: 257
      },
      "45": {
        loc: {
          start: {
            line: 258,
            column: 33
          },
          end: {
            line: 258,
            column: 93
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 258,
            column: 77
          },
          end: {
            line: 258,
            column: 83
          }
        }, {
          start: {
            line: 258,
            column: 86
          },
          end: {
            line: 258,
            column: 93
          }
        }],
        line: 258
      },
      "46": {
        loc: {
          start: {
            line: 258,
            column: 33
          },
          end: {
            line: 258,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 258,
            column: 33
          },
          end: {
            line: 258,
            column: 57
          }
        }, {
          start: {
            line: 258,
            column: 61
          },
          end: {
            line: 258,
            column: 74
          }
        }],
        line: 258
      },
      "47": {
        loc: {
          start: {
            line: 266,
            column: 16
          },
          end: {
            line: 272,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 266,
            column: 16
          },
          end: {
            line: 272,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 266
      },
      "48": {
        loc: {
          start: {
            line: 273,
            column: 16
          },
          end: {
            line: 279,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 273,
            column: 16
          },
          end: {
            line: 279,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 273
      },
      "49": {
        loc: {
          start: {
            line: 273,
            column: 20
          },
          end: {
            line: 273,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 273,
            column: 20
          },
          end: {
            line: 273,
            column: 28
          }
        }, {
          start: {
            line: 273,
            column: 32
          },
          end: {
            line: 273,
            column: 59
          }
        }],
        line: 273
      },
      "50": {
        loc: {
          start: {
            line: 280,
            column: 16
          },
          end: {
            line: 286,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 280,
            column: 16
          },
          end: {
            line: 286,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 280
      },
      "51": {
        loc: {
          start: {
            line: 280,
            column: 20
          },
          end: {
            line: 280,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 280,
            column: 20
          },
          end: {
            line: 280,
            column: 41
          }
        }, {
          start: {
            line: 280,
            column: 45
          },
          end: {
            line: 280,
            column: 72
          }
        }],
        line: 280
      },
      "52": {
        loc: {
          start: {
            line: 287,
            column: 35
          },
          end: {
            line: 287,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 287,
            column: 59
          },
          end: {
            line: 287,
            column: 69
          }
        }, {
          start: {
            line: 287,
            column: 72
          },
          end: {
            line: 287,
            column: 86
          }
        }],
        line: 287
      },
      "53": {
        loc: {
          start: {
            line: 303,
            column: 91
          },
          end: {
            line: 303,
            column: 154
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 303,
            column: 116
          },
          end: {
            line: 303,
            column: 121
          }
        }, {
          start: {
            line: 303,
            column: 124
          },
          end: {
            line: 303,
            column: 154
          }
        }],
        line: 303
      },
      "54": {
        loc: {
          start: {
            line: 304,
            column: 28
          },
          end: {
            line: 304,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 304,
            column: 72
          },
          end: {
            line: 304,
            column: 78
          }
        }, {
          start: {
            line: 304,
            column: 81
          },
          end: {
            line: 304,
            column: 86
          }
        }],
        line: 304
      },
      "55": {
        loc: {
          start: {
            line: 304,
            column: 28
          },
          end: {
            line: 304,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 304,
            column: 28
          },
          end: {
            line: 304,
            column: 52
          }
        }, {
          start: {
            line: 304,
            column: 56
          },
          end: {
            line: 304,
            column: 69
          }
        }],
        line: 304
      },
      "56": {
        loc: {
          start: {
            line: 311,
            column: 29
          },
          end: {
            line: 311,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 311,
            column: 54
          },
          end: {
            line: 311,
            column: 67
          }
        }, {
          start: {
            line: 311,
            column: 70
          },
          end: {
            line: 311,
            column: 95
          }
        }],
        line: 311
      },
      "57": {
        loc: {
          start: {
            line: 322,
            column: 31
          },
          end: {
            line: 322,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 322,
            column: 75
          },
          end: {
            line: 322,
            column: 81
          }
        }, {
          start: {
            line: 322,
            column: 84
          },
          end: {
            line: 322,
            column: 89
          }
        }],
        line: 322
      },
      "58": {
        loc: {
          start: {
            line: 322,
            column: 31
          },
          end: {
            line: 322,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 322,
            column: 31
          },
          end: {
            line: 322,
            column: 55
          }
        }, {
          start: {
            line: 322,
            column: 59
          },
          end: {
            line: 322,
            column: 72
          }
        }],
        line: 322
      },
      "59": {
        loc: {
          start: {
            line: 329,
            column: 16
          },
          end: {
            line: 335,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 329,
            column: 16
          },
          end: {
            line: 335,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 329
      },
      "60": {
        loc: {
          start: {
            line: 349,
            column: 103
          },
          end: {
            line: 349,
            column: 166
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 349,
            column: 128
          },
          end: {
            line: 349,
            column: 133
          }
        }, {
          start: {
            line: 349,
            column: 136
          },
          end: {
            line: 349,
            column: 166
          }
        }],
        line: 349
      },
      "61": {
        loc: {
          start: {
            line: 350,
            column: 28
          },
          end: {
            line: 350,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 350,
            column: 72
          },
          end: {
            line: 350,
            column: 78
          }
        }, {
          start: {
            line: 350,
            column: 81
          },
          end: {
            line: 350,
            column: 86
          }
        }],
        line: 350
      },
      "62": {
        loc: {
          start: {
            line: 350,
            column: 28
          },
          end: {
            line: 350,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 350,
            column: 28
          },
          end: {
            line: 350,
            column: 52
          }
        }, {
          start: {
            line: 350,
            column: 56
          },
          end: {
            line: 350,
            column: 69
          }
        }],
        line: 350
      },
      "63": {
        loc: {
          start: {
            line: 357,
            column: 29
          },
          end: {
            line: 357,
            column: 108
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 357,
            column: 54
          },
          end: {
            line: 357,
            column: 67
          }
        }, {
          start: {
            line: 357,
            column: 70
          },
          end: {
            line: 357,
            column: 108
          }
        }],
        line: 357
      },
      "64": {
        loc: {
          start: {
            line: 367,
            column: 31
          },
          end: {
            line: 367,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 367,
            column: 75
          },
          end: {
            line: 367,
            column: 81
          }
        }, {
          start: {
            line: 367,
            column: 84
          },
          end: {
            line: 367,
            column: 89
          }
        }],
        line: 367
      },
      "65": {
        loc: {
          start: {
            line: 367,
            column: 31
          },
          end: {
            line: 367,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 367,
            column: 31
          },
          end: {
            line: 367,
            column: 55
          }
        }, {
          start: {
            line: 367,
            column: 59
          },
          end: {
            line: 367,
            column: 72
          }
        }],
        line: 367
      },
      "66": {
        loc: {
          start: {
            line: 368,
            column: 33
          },
          end: {
            line: 368,
            column: 93
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 368,
            column: 77
          },
          end: {
            line: 368,
            column: 83
          }
        }, {
          start: {
            line: 368,
            column: 86
          },
          end: {
            line: 368,
            column: 93
          }
        }],
        line: 368
      },
      "67": {
        loc: {
          start: {
            line: 368,
            column: 33
          },
          end: {
            line: 368,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 368,
            column: 33
          },
          end: {
            line: 368,
            column: 57
          }
        }, {
          start: {
            line: 368,
            column: 61
          },
          end: {
            line: 368,
            column: 74
          }
        }],
        line: 368
      },
      "68": {
        loc: {
          start: {
            line: 375,
            column: 16
          },
          end: {
            line: 381,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 375,
            column: 16
          },
          end: {
            line: 381,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 375
      },
      "69": {
        loc: {
          start: {
            line: 382,
            column: 16
          },
          end: {
            line: 388,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 382,
            column: 16
          },
          end: {
            line: 388,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 382
      },
      "70": {
        loc: {
          start: {
            line: 382,
            column: 20
          },
          end: {
            line: 382,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 382,
            column: 20
          },
          end: {
            line: 382,
            column: 41
          }
        }, {
          start: {
            line: 382,
            column: 45
          },
          end: {
            line: 382,
            column: 72
          }
        }],
        line: 382
      },
      "71": {
        loc: {
          start: {
            line: 403,
            column: 96
          },
          end: {
            line: 403,
            column: 159
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 403,
            column: 121
          },
          end: {
            line: 403,
            column: 126
          }
        }, {
          start: {
            line: 403,
            column: 129
          },
          end: {
            line: 403,
            column: 159
          }
        }],
        line: 403
      },
      "72": {
        loc: {
          start: {
            line: 404,
            column: 28
          },
          end: {
            line: 404,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 404,
            column: 72
          },
          end: {
            line: 404,
            column: 78
          }
        }, {
          start: {
            line: 404,
            column: 81
          },
          end: {
            line: 404,
            column: 86
          }
        }],
        line: 404
      },
      "73": {
        loc: {
          start: {
            line: 404,
            column: 28
          },
          end: {
            line: 404,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 404,
            column: 28
          },
          end: {
            line: 404,
            column: 52
          }
        }, {
          start: {
            line: 404,
            column: 56
          },
          end: {
            line: 404,
            column: 69
          }
        }],
        line: 404
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0],
      "69": [0, 0],
      "70": [0, 0],
      "71": [0, 0],
      "72": [0, 0],
      "73": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\controllers\\hiringController.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\controllers\\hiringController.ts"],
      sourcesContent: ["import { Request, Response } from 'express';\r\nimport { HiringService, HiringRequestCreate } from '../services/hiringService';\r\nimport { logger } from '../services/loggerService';\r\n\r\nexport class HiringController {\r\n  private hiringService: HiringService;\r\n\r\n  constructor() {\r\n    this.hiringService = new HiringService();\r\n  }\r\n\r\n  /**\r\n   * Crear una nueva solicitud de contrataci\xF3n\r\n   */\r\n  createHiringRequest = async (req: Request, res: Response): Promise<void> => {\r\n    try {\r\n      logger.info('HiringController: Creando solicitud de contrataci\xF3n', {\r\n        userId: req.user?.id,\r\n        metadata: {\r\n          context: 'hiring'\r\n        }\r\n      });\r\n\r\n      const { eventId, musicianId, eventDetails, terms } = req.body;\r\n      const eventCreatorId = req.user?.id;\r\n\r\n      if (!eventCreatorId) {\r\n        res.status(401).json({ \r\n          success: false, \r\n          message: 'Usuario no autenticado' \r\n        });\r\n        return;\r\n      }\r\n\r\n      const hiringData: HiringRequestCreate = {\r\n        eventId,\r\n        eventCreatorId,\r\n        musicianId,\r\n        eventDetails,\r\n        terms\r\n      };\r\n\r\n      const hiringRequest = await this.hiringService.createHiringRequest(hiringData);\r\n\r\n      logger.info('HiringController: Solicitud de contrataci\xF3n creada exitosamente', {\r\n        userId: req.user?.id,\r\n        metadata: {\r\n          requestId: hiringRequest.id,\r\n          eventId,\r\n          musicianId\r\n        }\r\n      });\r\n\r\n      res.status(201).json({\r\n        success: true,\r\n        message: 'Solicitud de contrataci\xF3n creada exitosamente',\r\n        data: hiringRequest\r\n      });\r\n    } catch (error) {\r\n      logger.error('HiringController: Error al crear solicitud de contrataci\xF3n', error instanceof Error ? error : new Error('Error desconocido'), {\r\n        userId: req.user?.id,\r\n        metadata: {\r\n          context: 'hiring'\r\n        }\r\n      });\r\n\r\n      res.status(400).json({\r\n        success: false,\r\n        message: error instanceof Error ? error.message : 'Error al crear solicitud de contrataci\xF3n'\r\n      });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Obtener una solicitud de contrataci\xF3n por ID\r\n   */\r\n  getHiringRequestById = async (req: Request, res: Response): Promise<void> => {\r\n    try {\r\n      const { requestId } = req.params;\r\n      const userId = req.user?.id;\r\n\r\n      logger.info('HiringController: Obteniendo solicitud de contrataci\xF3n', {\r\n        userId,\r\n        metadata: {\r\n          requestId\r\n        }\r\n      });\r\n\r\n      if (!userId) {\r\n        res.status(401).json({ \r\n          success: false, \r\n          message: 'Usuario no autenticado' \r\n        });\r\n        return;\r\n      }\r\n\r\n      const hiringRequest = await this.hiringService.getHiringRequestById(requestId);\r\n\r\n      if (!hiringRequest) {\r\n        res.status(404).json({\r\n          success: false,\r\n          message: 'Solicitud de contrataci\xF3n no encontrada'\r\n        });\r\n        return;\r\n      }\r\n\r\n      // Verificar que el usuario tiene acceso a esta solicitud\r\n      if (hiringRequest.musicianId !== userId && hiringRequest.eventCreatorId !== userId) {\r\n        res.status(403).json({\r\n          success: false,\r\n          message: 'No tienes permisos para ver esta solicitud'\r\n        });\r\n        return;\r\n      }\r\n\r\n      logger.info('HiringController: Solicitud de contrataci\xF3n obtenida exitosamente', {\r\n        userId,\r\n        metadata: {\r\n          requestId\r\n        }\r\n      });\r\n\r\n      res.status(200).json({\r\n        success: true,\r\n        data: hiringRequest\r\n      });\r\n    } catch (error) {\r\n      logger.error('HiringController: Error al obtener solicitud de contrataci\xF3n', error instanceof Error ? error : new Error('Error desconocido'), {\r\n        userId: req.user?.id,\r\n        metadata: {\r\n          requestId: req.params.requestId\r\n        }\r\n      });\r\n\r\n      res.status(500).json({\r\n        success: false,\r\n        message: 'Error al obtener solicitud de contrataci\xF3n'\r\n      });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Actualizar el estado de una solicitud de contrataci\xF3n\r\n   */\r\n  updateHiringRequestStatus = async (req: Request, res: Response): Promise<void> => {\r\n    try {\r\n      const { requestId } = req.params;\r\n      const { status } = req.body;\r\n      const userId = req.user?.id;\r\n\r\n      logger.info('HiringController: Actualizando estado de solicitud', {\r\n        userId,\r\n        metadata: {\r\n          requestId,\r\n          status\r\n        }\r\n      });\r\n\r\n      if (!userId) {\r\n        res.status(401).json({ \r\n          success: false, \r\n          message: 'Usuario no autenticado' \r\n        });\r\n        return;\r\n      }\r\n\r\n      if (!status) {\r\n        res.status(400).json({\r\n          success: false,\r\n          message: 'El estado es requerido'\r\n        });\r\n        return;\r\n      }\r\n\r\n      const updatedRequest = await this.hiringService.updateHiringRequestStatus(\r\n        requestId,\r\n        status,\r\n        userId\r\n      );\r\n\r\n      logger.info('HiringController: Estado de solicitud actualizado exitosamente', {\r\n        userId,\r\n        metadata: {\r\n          requestId,\r\n          newStatus: status\r\n        }\r\n      });\r\n\r\n      res.status(200).json({\r\n        success: true,\r\n        message: 'Estado de solicitud actualizado exitosamente',\r\n        data: updatedRequest\r\n      });\r\n    } catch (error) {\r\n      logger.error('HiringController: Error al actualizar estado de solicitud', error instanceof Error ? error : new Error('Error desconocido'), {\r\n        userId: req.user?.id,\r\n        metadata: {\r\n          requestId: req.params.requestId,\r\n          status: req.body.status\r\n        }\r\n      });\r\n\r\n      res.status(400).json({\r\n        success: false,\r\n        message: error instanceof Error ? error.message : 'Error al actualizar estado de solicitud'\r\n      });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Obtener solicitudes de contrataci\xF3n del usuario\r\n   */\r\n  getHiringRequestsByUser = async (req: Request, res: Response): Promise<void> => {\r\n    try {\r\n      const userId = req.user?.id;\r\n      const userRole = req.user?.roll;\r\n      const { status } = req.query;\r\n\r\n      logger.info('HiringController: Obteniendo solicitudes por usuario', {\r\n        userId,\r\n        metadata: {\r\n          userRole,\r\n          status\r\n        }\r\n      });\r\n\r\n      if (!userId) {\r\n        res.status(401).json({ \r\n          success: false, \r\n          message: 'Usuario no autenticado' \r\n        });\r\n        return;\r\n      }\r\n\r\n      if (userRole !== 'musico' && userRole !== 'eventCreator') {\r\n        res.status(400).json({\r\n          success: false,\r\n          message: 'Rol de usuario inv\xE1lido'\r\n        });\r\n        return;\r\n      }\r\n\r\n      const requests = await this.hiringService.getHiringRequestsByUser(\r\n        userId,\r\n        userRole,\r\n        status as any\r\n      );\r\n\r\n      logger.info('HiringController: Solicitudes obtenidas exitosamente', {\r\n        userId,\r\n        metadata: {\r\n          userRole,\r\n          count: requests.length\r\n        }\r\n      });\r\n\r\n      res.status(200).json({\r\n        success: true,\r\n        data: requests,\r\n        count: requests.length\r\n      });\r\n    } catch (error) {\r\n      logger.error('HiringController: Error al obtener solicitudes por usuario', error instanceof Error ? error : new Error('Error desconocido'), {\r\n        userId: req.user?.id,\r\n        metadata: {\r\n          context: 'hiring'\r\n        }\r\n      });\r\n\r\n      res.status(500).json({\r\n        success: false,\r\n        message: 'Error al obtener solicitudes de contrataci\xF3n'\r\n      });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Agregar mensaje a una solicitud de contrataci\xF3n\r\n   */\r\n  addMessage = async (req: Request, res: Response): Promise<void> => {\r\n    try {\r\n      const { requestId } = req.params;\r\n      const { content } = req.body;\r\n      const userId = req.user?.id;\r\n      const userRole = req.user?.roll;\r\n\r\n      logger.info('HiringController: Agregando mensaje a solicitud', {\r\n        userId,\r\n        metadata: {\r\n          requestId,\r\n          userRole\r\n        }\r\n      });\r\n\r\n      if (!userId) {\r\n        res.status(401).json({ \r\n          success: false, \r\n          message: 'Usuario no autenticado' \r\n        });\r\n        return;\r\n      }\r\n\r\n      if (!content || content.trim().length === 0) {\r\n        res.status(400).json({\r\n          success: false,\r\n          message: 'El contenido del mensaje es requerido'\r\n        });\r\n        return;\r\n      }\r\n\r\n      if (userRole !== 'musico' && userRole !== 'eventCreator') {\r\n        res.status(400).json({\r\n          success: false,\r\n          message: 'Rol de usuario inv\xE1lido'\r\n        });\r\n        return;\r\n      }\r\n\r\n      const senderType = userRole === 'musico' ? 'musician' : 'eventCreator';\r\n      const message = await this.hiringService.addMessage(\r\n        requestId,\r\n        userId,\r\n        senderType,\r\n        content.trim()\r\n      );\r\n\r\n      logger.info('HiringController: Mensaje agregado exitosamente', {\r\n        userId,\r\n        metadata: {\r\n          requestId,\r\n          messageId: message.id\r\n        }\r\n      });\r\n\r\n      res.status(201).json({\r\n        success: true,\r\n        message: 'Mensaje enviado exitosamente',\r\n        data: message\r\n      });\r\n    } catch (error) {\r\n      logger.error('HiringController: Error al agregar mensaje', error instanceof Error ? error : new Error('Error desconocido'), {\r\n        userId: req.user?.id,\r\n        metadata: {\r\n          requestId: req.params.requestId\r\n        }\r\n      });\r\n\r\n      res.status(400).json({\r\n        success: false,\r\n        message: error instanceof Error ? error.message : 'Error al enviar mensaje'\r\n      });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Marcar mensajes como le\xEDdos\r\n   */\r\n  markMessagesAsRead = async (req: Request, res: Response): Promise<void> => {\r\n    try {\r\n      const { requestId } = req.params;\r\n      const userId = req.user?.id;\r\n\r\n      logger.info('HiringController: Marcando mensajes como le\xEDdos', {\r\n        userId,\r\n        metadata: {\r\n          requestId\r\n        }\r\n      });\r\n\r\n      if (!userId) {\r\n        res.status(401).json({ \r\n          success: false, \r\n          message: 'Usuario no autenticado' \r\n        });\r\n        return;\r\n      }\r\n\r\n      await this.hiringService.markMessagesAsRead(requestId, userId);\r\n\r\n      logger.info('HiringController: Mensajes marcados como le\xEDdos exitosamente', {\r\n        userId,\r\n        metadata: {\r\n          requestId\r\n        }\r\n      });\r\n\r\n      res.status(200).json({\r\n        success: true,\r\n        message: 'Mensajes marcados como le\xEDdos exitosamente'\r\n      });\r\n    } catch (error) {\r\n      logger.error('HiringController: Error al marcar mensajes como le\xEDdos', error instanceof Error ? error : new Error('Error desconocido'), {\r\n        userId: req.user?.id,\r\n        metadata: {\r\n          requestId: req.params.requestId\r\n        }\r\n      });\r\n\r\n      res.status(400).json({\r\n        success: false,\r\n        message: error instanceof Error ? error.message : 'Error al marcar mensajes como le\xEDdos'\r\n      });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Obtener estad\xEDsticas de contrataci\xF3n\r\n   */\r\n  getHiringStats = async (req: Request, res: Response): Promise<void> => {\r\n    try {\r\n      const userId = req.user?.id;\r\n      const userRole = req.user?.roll;\r\n\r\n      logger.info('HiringController: Obteniendo estad\xEDsticas de contrataci\xF3n', {\r\n        userId,\r\n        metadata: {\r\n          userRole\r\n        }\r\n      });\r\n\r\n      if (!userId) {\r\n        res.status(401).json({ \r\n          success: false, \r\n          message: 'Usuario no autenticado' \r\n        });\r\n        return;\r\n      }\r\n\r\n      if (userRole !== 'musico' && userRole !== 'eventCreator') {\r\n        res.status(400).json({\r\n          success: false,\r\n          message: 'Rol de usuario inv\xE1lido'\r\n        });\r\n        return;\r\n      }\r\n\r\n      const stats = await this.hiringService.getHiringStats(userId, userRole);\r\n\r\n      logger.info('HiringController: Estad\xEDsticas obtenidas exitosamente', {\r\n        userId,\r\n        metadata: {\r\n          userRole,\r\n          stats\r\n        }\r\n      });\r\n\r\n      res.status(200).json({\r\n        success: true,\r\n        data: stats\r\n      });\r\n    } catch (error) {\r\n      logger.error('HiringController: Error al obtener estad\xEDsticas', error instanceof Error ? error : new Error('Error desconocido'), {\r\n        userId: req.user?.id,\r\n        metadata: {\r\n          context: 'hiring'\r\n        }\r\n      });\r\n\r\n      res.status(500).json({\r\n        success: false,\r\n        message: 'Error al obtener estad\xEDsticas de contrataci\xF3n'\r\n      });\r\n    }\r\n  };\r\n} "],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e7099d062a9a7b7df79d4f804a3bc82c9d943f1c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1bnp2go2ea = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1bnp2go2ea();
var __awaiter =
/* istanbul ignore next */
(cov_1bnp2go2ea().s[0]++,
/* istanbul ignore next */
(cov_1bnp2go2ea().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1bnp2go2ea().b[0][1]++, this.__awaiter) ||
/* istanbul ignore next */
(cov_1bnp2go2ea().b[0][2]++, function (thisArg, _arguments, P, generator) {
  /* istanbul ignore next */
  cov_1bnp2go2ea().f[0]++;
  function adopt(value) {
    /* istanbul ignore next */
    cov_1bnp2go2ea().f[1]++;
    cov_1bnp2go2ea().s[1]++;
    return value instanceof P ?
    /* istanbul ignore next */
    (cov_1bnp2go2ea().b[1][0]++, value) :
    /* istanbul ignore next */
    (cov_1bnp2go2ea().b[1][1]++, new P(function (resolve) {
      /* istanbul ignore next */
      cov_1bnp2go2ea().f[2]++;
      cov_1bnp2go2ea().s[2]++;
      resolve(value);
    }));
  }
  /* istanbul ignore next */
  cov_1bnp2go2ea().s[3]++;
  return new (
  /* istanbul ignore next */
  (cov_1bnp2go2ea().b[2][0]++, P) ||
  /* istanbul ignore next */
  (cov_1bnp2go2ea().b[2][1]++, P = Promise))(function (resolve, reject) {
    /* istanbul ignore next */
    cov_1bnp2go2ea().f[3]++;
    function fulfilled(value) {
      /* istanbul ignore next */
      cov_1bnp2go2ea().f[4]++;
      cov_1bnp2go2ea().s[4]++;
      try {
        /* istanbul ignore next */
        cov_1bnp2go2ea().s[5]++;
        step(generator.next(value));
      } catch (e) {
        /* istanbul ignore next */
        cov_1bnp2go2ea().s[6]++;
        reject(e);
      }
    }
    function rejected(value) {
      /* istanbul ignore next */
      cov_1bnp2go2ea().f[5]++;
      cov_1bnp2go2ea().s[7]++;
      try {
        /* istanbul ignore next */
        cov_1bnp2go2ea().s[8]++;
        step(generator["throw"](value));
      } catch (e) {
        /* istanbul ignore next */
        cov_1bnp2go2ea().s[9]++;
        reject(e);
      }
    }
    function step(result) {
      /* istanbul ignore next */
      cov_1bnp2go2ea().f[6]++;
      cov_1bnp2go2ea().s[10]++;
      result.done ?
      /* istanbul ignore next */
      (cov_1bnp2go2ea().b[3][0]++, resolve(result.value)) :
      /* istanbul ignore next */
      (cov_1bnp2go2ea().b[3][1]++, adopt(result.value).then(fulfilled, rejected));
    }
    /* istanbul ignore next */
    cov_1bnp2go2ea().s[11]++;
    step((generator = generator.apply(thisArg,
    /* istanbul ignore next */
    (cov_1bnp2go2ea().b[4][0]++, _arguments) ||
    /* istanbul ignore next */
    (cov_1bnp2go2ea().b[4][1]++, []))).next());
  });
}));
/* istanbul ignore next */
cov_1bnp2go2ea().s[12]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1bnp2go2ea().s[13]++;
exports.HiringController = void 0;
const hiringService_1 =
/* istanbul ignore next */
(cov_1bnp2go2ea().s[14]++, require("../services/hiringService"));
const loggerService_1 =
/* istanbul ignore next */
(cov_1bnp2go2ea().s[15]++, require("../services/loggerService"));
class HiringController {
  constructor() {
    /* istanbul ignore next */
    cov_1bnp2go2ea().f[7]++;
    cov_1bnp2go2ea().s[16]++;
    /**
     * Crear una nueva solicitud de contratación
     */
    this.createHiringRequest = (req, res) => {
      /* istanbul ignore next */
      cov_1bnp2go2ea().f[8]++;
      cov_1bnp2go2ea().s[17]++;
      return __awaiter(this, void 0, void 0, function* () {
        /* istanbul ignore next */
        cov_1bnp2go2ea().f[9]++;
        var _a, _b, _c, _d;
        /* istanbul ignore next */
        cov_1bnp2go2ea().s[18]++;
        try {
          /* istanbul ignore next */
          cov_1bnp2go2ea().s[19]++;
          loggerService_1.logger.info('HiringController: Creando solicitud de contratación', {
            userId:
            /* istanbul ignore next */
            (cov_1bnp2go2ea().b[6][0]++, (_a = req.user) === null) ||
            /* istanbul ignore next */
            (cov_1bnp2go2ea().b[6][1]++, _a === void 0) ?
            /* istanbul ignore next */
            (cov_1bnp2go2ea().b[5][0]++, void 0) :
            /* istanbul ignore next */
            (cov_1bnp2go2ea().b[5][1]++, _a.id),
            metadata: {
              context: 'hiring'
            }
          });
          const {
            eventId,
            musicianId,
            eventDetails,
            terms
          } =
          /* istanbul ignore next */
          (cov_1bnp2go2ea().s[20]++, req.body);
          const eventCreatorId =
          /* istanbul ignore next */
          (cov_1bnp2go2ea().s[21]++,
          /* istanbul ignore next */
          (cov_1bnp2go2ea().b[8][0]++, (_b = req.user) === null) ||
          /* istanbul ignore next */
          (cov_1bnp2go2ea().b[8][1]++, _b === void 0) ?
          /* istanbul ignore next */
          (cov_1bnp2go2ea().b[7][0]++, void 0) :
          /* istanbul ignore next */
          (cov_1bnp2go2ea().b[7][1]++, _b.id));
          /* istanbul ignore next */
          cov_1bnp2go2ea().s[22]++;
          if (!eventCreatorId) {
            /* istanbul ignore next */
            cov_1bnp2go2ea().b[9][0]++;
            cov_1bnp2go2ea().s[23]++;
            res.status(401).json({
              success: false,
              message: 'Usuario no autenticado'
            });
            /* istanbul ignore next */
            cov_1bnp2go2ea().s[24]++;
            return;
          } else
          /* istanbul ignore next */
          {
            cov_1bnp2go2ea().b[9][1]++;
          }
          const hiringData =
          /* istanbul ignore next */
          (cov_1bnp2go2ea().s[25]++, {
            eventId,
            eventCreatorId,
            musicianId,
            eventDetails,
            terms
          });
          const hiringRequest =
          /* istanbul ignore next */
          (cov_1bnp2go2ea().s[26]++, yield this.hiringService.createHiringRequest(hiringData));
          /* istanbul ignore next */
          cov_1bnp2go2ea().s[27]++;
          loggerService_1.logger.info('HiringController: Solicitud de contratación creada exitosamente', {
            userId:
            /* istanbul ignore next */
            (cov_1bnp2go2ea().b[11][0]++, (_c = req.user) === null) ||
            /* istanbul ignore next */
            (cov_1bnp2go2ea().b[11][1]++, _c === void 0) ?
            /* istanbul ignore next */
            (cov_1bnp2go2ea().b[10][0]++, void 0) :
            /* istanbul ignore next */
            (cov_1bnp2go2ea().b[10][1]++, _c.id),
            metadata: {
              requestId: hiringRequest.id,
              eventId,
              musicianId
            }
          });
          /* istanbul ignore next */
          cov_1bnp2go2ea().s[28]++;
          res.status(201).json({
            success: true,
            message: 'Solicitud de contratación creada exitosamente',
            data: hiringRequest
          });
        } catch (error) {
          /* istanbul ignore next */
          cov_1bnp2go2ea().s[29]++;
          loggerService_1.logger.error('HiringController: Error al crear solicitud de contratación', error instanceof Error ?
          /* istanbul ignore next */
          (cov_1bnp2go2ea().b[12][0]++, error) :
          /* istanbul ignore next */
          (cov_1bnp2go2ea().b[12][1]++, new Error('Error desconocido')), {
            userId:
            /* istanbul ignore next */
            (cov_1bnp2go2ea().b[14][0]++, (_d = req.user) === null) ||
            /* istanbul ignore next */
            (cov_1bnp2go2ea().b[14][1]++, _d === void 0) ?
            /* istanbul ignore next */
            (cov_1bnp2go2ea().b[13][0]++, void 0) :
            /* istanbul ignore next */
            (cov_1bnp2go2ea().b[13][1]++, _d.id),
            metadata: {
              context: 'hiring'
            }
          });
          /* istanbul ignore next */
          cov_1bnp2go2ea().s[30]++;
          res.status(400).json({
            success: false,
            message: error instanceof Error ?
            /* istanbul ignore next */
            (cov_1bnp2go2ea().b[15][0]++, error.message) :
            /* istanbul ignore next */
            (cov_1bnp2go2ea().b[15][1]++, 'Error al crear solicitud de contratación')
          });
        }
      });
    };
    /**
     * Obtener una solicitud de contratación por ID
     */
    /* istanbul ignore next */
    cov_1bnp2go2ea().s[31]++;
    this.getHiringRequestById = (req, res) => {
      /* istanbul ignore next */
      cov_1bnp2go2ea().f[10]++;
      cov_1bnp2go2ea().s[32]++;
      return __awaiter(this, void 0, void 0, function* () {
        /* istanbul ignore next */
        cov_1bnp2go2ea().f[11]++;
        var _a, _b;
        /* istanbul ignore next */
        cov_1bnp2go2ea().s[33]++;
        try {
          const {
            requestId
          } =
          /* istanbul ignore next */
          (cov_1bnp2go2ea().s[34]++, req.params);
          const userId =
          /* istanbul ignore next */
          (cov_1bnp2go2ea().s[35]++,
          /* istanbul ignore next */
          (cov_1bnp2go2ea().b[17][0]++, (_a = req.user) === null) ||
          /* istanbul ignore next */
          (cov_1bnp2go2ea().b[17][1]++, _a === void 0) ?
          /* istanbul ignore next */
          (cov_1bnp2go2ea().b[16][0]++, void 0) :
          /* istanbul ignore next */
          (cov_1bnp2go2ea().b[16][1]++, _a.id));
          /* istanbul ignore next */
          cov_1bnp2go2ea().s[36]++;
          loggerService_1.logger.info('HiringController: Obteniendo solicitud de contratación', {
            userId,
            metadata: {
              requestId
            }
          });
          /* istanbul ignore next */
          cov_1bnp2go2ea().s[37]++;
          if (!userId) {
            /* istanbul ignore next */
            cov_1bnp2go2ea().b[18][0]++;
            cov_1bnp2go2ea().s[38]++;
            res.status(401).json({
              success: false,
              message: 'Usuario no autenticado'
            });
            /* istanbul ignore next */
            cov_1bnp2go2ea().s[39]++;
            return;
          } else
          /* istanbul ignore next */
          {
            cov_1bnp2go2ea().b[18][1]++;
          }
          const hiringRequest =
          /* istanbul ignore next */
          (cov_1bnp2go2ea().s[40]++, yield this.hiringService.getHiringRequestById(requestId));
          /* istanbul ignore next */
          cov_1bnp2go2ea().s[41]++;
          if (!hiringRequest) {
            /* istanbul ignore next */
            cov_1bnp2go2ea().b[19][0]++;
            cov_1bnp2go2ea().s[42]++;
            res.status(404).json({
              success: false,
              message: 'Solicitud de contratación no encontrada'
            });
            /* istanbul ignore next */
            cov_1bnp2go2ea().s[43]++;
            return;
          } else
          /* istanbul ignore next */
          {
            cov_1bnp2go2ea().b[19][1]++;
          }
          // Verificar que el usuario tiene acceso a esta solicitud
          cov_1bnp2go2ea().s[44]++;
          if (
          /* istanbul ignore next */
          (cov_1bnp2go2ea().b[21][0]++, hiringRequest.musicianId !== userId) &&
          /* istanbul ignore next */
          (cov_1bnp2go2ea().b[21][1]++, hiringRequest.eventCreatorId !== userId)) {
            /* istanbul ignore next */
            cov_1bnp2go2ea().b[20][0]++;
            cov_1bnp2go2ea().s[45]++;
            res.status(403).json({
              success: false,
              message: 'No tienes permisos para ver esta solicitud'
            });
            /* istanbul ignore next */
            cov_1bnp2go2ea().s[46]++;
            return;
          } else
          /* istanbul ignore next */
          {
            cov_1bnp2go2ea().b[20][1]++;
          }
          cov_1bnp2go2ea().s[47]++;
          loggerService_1.logger.info('HiringController: Solicitud de contratación obtenida exitosamente', {
            userId,
            metadata: {
              requestId
            }
          });
          /* istanbul ignore next */
          cov_1bnp2go2ea().s[48]++;
          res.status(200).json({
            success: true,
            data: hiringRequest
          });
        } catch (error) {
          /* istanbul ignore next */
          cov_1bnp2go2ea().s[49]++;
          loggerService_1.logger.error('HiringController: Error al obtener solicitud de contratación', error instanceof Error ?
          /* istanbul ignore next */
          (cov_1bnp2go2ea().b[22][0]++, error) :
          /* istanbul ignore next */
          (cov_1bnp2go2ea().b[22][1]++, new Error('Error desconocido')), {
            userId:
            /* istanbul ignore next */
            (cov_1bnp2go2ea().b[24][0]++, (_b = req.user) === null) ||
            /* istanbul ignore next */
            (cov_1bnp2go2ea().b[24][1]++, _b === void 0) ?
            /* istanbul ignore next */
            (cov_1bnp2go2ea().b[23][0]++, void 0) :
            /* istanbul ignore next */
            (cov_1bnp2go2ea().b[23][1]++, _b.id),
            metadata: {
              requestId: req.params.requestId
            }
          });
          /* istanbul ignore next */
          cov_1bnp2go2ea().s[50]++;
          res.status(500).json({
            success: false,
            message: 'Error al obtener solicitud de contratación'
          });
        }
      });
    };
    /**
     * Actualizar el estado de una solicitud de contratación
     */
    /* istanbul ignore next */
    cov_1bnp2go2ea().s[51]++;
    this.updateHiringRequestStatus = (req, res) => {
      /* istanbul ignore next */
      cov_1bnp2go2ea().f[12]++;
      cov_1bnp2go2ea().s[52]++;
      return __awaiter(this, void 0, void 0, function* () {
        /* istanbul ignore next */
        cov_1bnp2go2ea().f[13]++;
        var _a, _b;
        /* istanbul ignore next */
        cov_1bnp2go2ea().s[53]++;
        try {
          const {
            requestId
          } =
          /* istanbul ignore next */
          (cov_1bnp2go2ea().s[54]++, req.params);
          const {
            status
          } =
          /* istanbul ignore next */
          (cov_1bnp2go2ea().s[55]++, req.body);
          const userId =
          /* istanbul ignore next */
          (cov_1bnp2go2ea().s[56]++,
          /* istanbul ignore next */
          (cov_1bnp2go2ea().b[26][0]++, (_a = req.user) === null) ||
          /* istanbul ignore next */
          (cov_1bnp2go2ea().b[26][1]++, _a === void 0) ?
          /* istanbul ignore next */
          (cov_1bnp2go2ea().b[25][0]++, void 0) :
          /* istanbul ignore next */
          (cov_1bnp2go2ea().b[25][1]++, _a.id));
          /* istanbul ignore next */
          cov_1bnp2go2ea().s[57]++;
          loggerService_1.logger.info('HiringController: Actualizando estado de solicitud', {
            userId,
            metadata: {
              requestId,
              status
            }
          });
          /* istanbul ignore next */
          cov_1bnp2go2ea().s[58]++;
          if (!userId) {
            /* istanbul ignore next */
            cov_1bnp2go2ea().b[27][0]++;
            cov_1bnp2go2ea().s[59]++;
            res.status(401).json({
              success: false,
              message: 'Usuario no autenticado'
            });
            /* istanbul ignore next */
            cov_1bnp2go2ea().s[60]++;
            return;
          } else
          /* istanbul ignore next */
          {
            cov_1bnp2go2ea().b[27][1]++;
          }
          cov_1bnp2go2ea().s[61]++;
          if (!status) {
            /* istanbul ignore next */
            cov_1bnp2go2ea().b[28][0]++;
            cov_1bnp2go2ea().s[62]++;
            res.status(400).json({
              success: false,
              message: 'El estado es requerido'
            });
            /* istanbul ignore next */
            cov_1bnp2go2ea().s[63]++;
            return;
          } else
          /* istanbul ignore next */
          {
            cov_1bnp2go2ea().b[28][1]++;
          }
          const updatedRequest =
          /* istanbul ignore next */
          (cov_1bnp2go2ea().s[64]++, yield this.hiringService.updateHiringRequestStatus(requestId, status, userId));
          /* istanbul ignore next */
          cov_1bnp2go2ea().s[65]++;
          loggerService_1.logger.info('HiringController: Estado de solicitud actualizado exitosamente', {
            userId,
            metadata: {
              requestId,
              newStatus: status
            }
          });
          /* istanbul ignore next */
          cov_1bnp2go2ea().s[66]++;
          res.status(200).json({
            success: true,
            message: 'Estado de solicitud actualizado exitosamente',
            data: updatedRequest
          });
        } catch (error) {
          /* istanbul ignore next */
          cov_1bnp2go2ea().s[67]++;
          loggerService_1.logger.error('HiringController: Error al actualizar estado de solicitud', error instanceof Error ?
          /* istanbul ignore next */
          (cov_1bnp2go2ea().b[29][0]++, error) :
          /* istanbul ignore next */
          (cov_1bnp2go2ea().b[29][1]++, new Error('Error desconocido')), {
            userId:
            /* istanbul ignore next */
            (cov_1bnp2go2ea().b[31][0]++, (_b = req.user) === null) ||
            /* istanbul ignore next */
            (cov_1bnp2go2ea().b[31][1]++, _b === void 0) ?
            /* istanbul ignore next */
            (cov_1bnp2go2ea().b[30][0]++, void 0) :
            /* istanbul ignore next */
            (cov_1bnp2go2ea().b[30][1]++, _b.id),
            metadata: {
              requestId: req.params.requestId,
              status: req.body.status
            }
          });
          /* istanbul ignore next */
          cov_1bnp2go2ea().s[68]++;
          res.status(400).json({
            success: false,
            message: error instanceof Error ?
            /* istanbul ignore next */
            (cov_1bnp2go2ea().b[32][0]++, error.message) :
            /* istanbul ignore next */
            (cov_1bnp2go2ea().b[32][1]++, 'Error al actualizar estado de solicitud')
          });
        }
      });
    };
    /**
     * Obtener solicitudes de contratación del usuario
     */
    /* istanbul ignore next */
    cov_1bnp2go2ea().s[69]++;
    this.getHiringRequestsByUser = (req, res) => {
      /* istanbul ignore next */
      cov_1bnp2go2ea().f[14]++;
      cov_1bnp2go2ea().s[70]++;
      return __awaiter(this, void 0, void 0, function* () {
        /* istanbul ignore next */
        cov_1bnp2go2ea().f[15]++;
        var _a, _b, _c;
        /* istanbul ignore next */
        cov_1bnp2go2ea().s[71]++;
        try {
          const userId =
          /* istanbul ignore next */
          (cov_1bnp2go2ea().s[72]++,
          /* istanbul ignore next */
          (cov_1bnp2go2ea().b[34][0]++, (_a = req.user) === null) ||
          /* istanbul ignore next */
          (cov_1bnp2go2ea().b[34][1]++, _a === void 0) ?
          /* istanbul ignore next */
          (cov_1bnp2go2ea().b[33][0]++, void 0) :
          /* istanbul ignore next */
          (cov_1bnp2go2ea().b[33][1]++, _a.id));
          const userRole =
          /* istanbul ignore next */
          (cov_1bnp2go2ea().s[73]++,
          /* istanbul ignore next */
          (cov_1bnp2go2ea().b[36][0]++, (_b = req.user) === null) ||
          /* istanbul ignore next */
          (cov_1bnp2go2ea().b[36][1]++, _b === void 0) ?
          /* istanbul ignore next */
          (cov_1bnp2go2ea().b[35][0]++, void 0) :
          /* istanbul ignore next */
          (cov_1bnp2go2ea().b[35][1]++, _b.roll));
          const {
            status
          } =
          /* istanbul ignore next */
          (cov_1bnp2go2ea().s[74]++, req.query);
          /* istanbul ignore next */
          cov_1bnp2go2ea().s[75]++;
          loggerService_1.logger.info('HiringController: Obteniendo solicitudes por usuario', {
            userId,
            metadata: {
              userRole,
              status
            }
          });
          /* istanbul ignore next */
          cov_1bnp2go2ea().s[76]++;
          if (!userId) {
            /* istanbul ignore next */
            cov_1bnp2go2ea().b[37][0]++;
            cov_1bnp2go2ea().s[77]++;
            res.status(401).json({
              success: false,
              message: 'Usuario no autenticado'
            });
            /* istanbul ignore next */
            cov_1bnp2go2ea().s[78]++;
            return;
          } else
          /* istanbul ignore next */
          {
            cov_1bnp2go2ea().b[37][1]++;
          }
          cov_1bnp2go2ea().s[79]++;
          if (
          /* istanbul ignore next */
          (cov_1bnp2go2ea().b[39][0]++, userRole !== 'musico') &&
          /* istanbul ignore next */
          (cov_1bnp2go2ea().b[39][1]++, userRole !== 'eventCreator')) {
            /* istanbul ignore next */
            cov_1bnp2go2ea().b[38][0]++;
            cov_1bnp2go2ea().s[80]++;
            res.status(400).json({
              success: false,
              message: 'Rol de usuario inválido'
            });
            /* istanbul ignore next */
            cov_1bnp2go2ea().s[81]++;
            return;
          } else
          /* istanbul ignore next */
          {
            cov_1bnp2go2ea().b[38][1]++;
          }
          const requests =
          /* istanbul ignore next */
          (cov_1bnp2go2ea().s[82]++, yield this.hiringService.getHiringRequestsByUser(userId, userRole, status));
          /* istanbul ignore next */
          cov_1bnp2go2ea().s[83]++;
          loggerService_1.logger.info('HiringController: Solicitudes obtenidas exitosamente', {
            userId,
            metadata: {
              userRole,
              count: requests.length
            }
          });
          /* istanbul ignore next */
          cov_1bnp2go2ea().s[84]++;
          res.status(200).json({
            success: true,
            data: requests,
            count: requests.length
          });
        } catch (error) {
          /* istanbul ignore next */
          cov_1bnp2go2ea().s[85]++;
          loggerService_1.logger.error('HiringController: Error al obtener solicitudes por usuario', error instanceof Error ?
          /* istanbul ignore next */
          (cov_1bnp2go2ea().b[40][0]++, error) :
          /* istanbul ignore next */
          (cov_1bnp2go2ea().b[40][1]++, new Error('Error desconocido')), {
            userId:
            /* istanbul ignore next */
            (cov_1bnp2go2ea().b[42][0]++, (_c = req.user) === null) ||
            /* istanbul ignore next */
            (cov_1bnp2go2ea().b[42][1]++, _c === void 0) ?
            /* istanbul ignore next */
            (cov_1bnp2go2ea().b[41][0]++, void 0) :
            /* istanbul ignore next */
            (cov_1bnp2go2ea().b[41][1]++, _c.id),
            metadata: {
              context: 'hiring'
            }
          });
          /* istanbul ignore next */
          cov_1bnp2go2ea().s[86]++;
          res.status(500).json({
            success: false,
            message: 'Error al obtener solicitudes de contratación'
          });
        }
      });
    };
    /**
     * Agregar mensaje a una solicitud de contratación
     */
    /* istanbul ignore next */
    cov_1bnp2go2ea().s[87]++;
    this.addMessage = (req, res) => {
      /* istanbul ignore next */
      cov_1bnp2go2ea().f[16]++;
      cov_1bnp2go2ea().s[88]++;
      return __awaiter(this, void 0, void 0, function* () {
        /* istanbul ignore next */
        cov_1bnp2go2ea().f[17]++;
        var _a, _b, _c;
        /* istanbul ignore next */
        cov_1bnp2go2ea().s[89]++;
        try {
          const {
            requestId
          } =
          /* istanbul ignore next */
          (cov_1bnp2go2ea().s[90]++, req.params);
          const {
            content
          } =
          /* istanbul ignore next */
          (cov_1bnp2go2ea().s[91]++, req.body);
          const userId =
          /* istanbul ignore next */
          (cov_1bnp2go2ea().s[92]++,
          /* istanbul ignore next */
          (cov_1bnp2go2ea().b[44][0]++, (_a = req.user) === null) ||
          /* istanbul ignore next */
          (cov_1bnp2go2ea().b[44][1]++, _a === void 0) ?
          /* istanbul ignore next */
          (cov_1bnp2go2ea().b[43][0]++, void 0) :
          /* istanbul ignore next */
          (cov_1bnp2go2ea().b[43][1]++, _a.id));
          const userRole =
          /* istanbul ignore next */
          (cov_1bnp2go2ea().s[93]++,
          /* istanbul ignore next */
          (cov_1bnp2go2ea().b[46][0]++, (_b = req.user) === null) ||
          /* istanbul ignore next */
          (cov_1bnp2go2ea().b[46][1]++, _b === void 0) ?
          /* istanbul ignore next */
          (cov_1bnp2go2ea().b[45][0]++, void 0) :
          /* istanbul ignore next */
          (cov_1bnp2go2ea().b[45][1]++, _b.roll));
          /* istanbul ignore next */
          cov_1bnp2go2ea().s[94]++;
          loggerService_1.logger.info('HiringController: Agregando mensaje a solicitud', {
            userId,
            metadata: {
              requestId,
              userRole
            }
          });
          /* istanbul ignore next */
          cov_1bnp2go2ea().s[95]++;
          if (!userId) {
            /* istanbul ignore next */
            cov_1bnp2go2ea().b[47][0]++;
            cov_1bnp2go2ea().s[96]++;
            res.status(401).json({
              success: false,
              message: 'Usuario no autenticado'
            });
            /* istanbul ignore next */
            cov_1bnp2go2ea().s[97]++;
            return;
          } else
          /* istanbul ignore next */
          {
            cov_1bnp2go2ea().b[47][1]++;
          }
          cov_1bnp2go2ea().s[98]++;
          if (
          /* istanbul ignore next */
          (cov_1bnp2go2ea().b[49][0]++, !content) ||
          /* istanbul ignore next */
          (cov_1bnp2go2ea().b[49][1]++, content.trim().length === 0)) {
            /* istanbul ignore next */
            cov_1bnp2go2ea().b[48][0]++;
            cov_1bnp2go2ea().s[99]++;
            res.status(400).json({
              success: false,
              message: 'El contenido del mensaje es requerido'
            });
            /* istanbul ignore next */
            cov_1bnp2go2ea().s[100]++;
            return;
          } else
          /* istanbul ignore next */
          {
            cov_1bnp2go2ea().b[48][1]++;
          }
          cov_1bnp2go2ea().s[101]++;
          if (
          /* istanbul ignore next */
          (cov_1bnp2go2ea().b[51][0]++, userRole !== 'musico') &&
          /* istanbul ignore next */
          (cov_1bnp2go2ea().b[51][1]++, userRole !== 'eventCreator')) {
            /* istanbul ignore next */
            cov_1bnp2go2ea().b[50][0]++;
            cov_1bnp2go2ea().s[102]++;
            res.status(400).json({
              success: false,
              message: 'Rol de usuario inválido'
            });
            /* istanbul ignore next */
            cov_1bnp2go2ea().s[103]++;
            return;
          } else
          /* istanbul ignore next */
          {
            cov_1bnp2go2ea().b[50][1]++;
          }
          const senderType =
          /* istanbul ignore next */
          (cov_1bnp2go2ea().s[104]++, userRole === 'musico' ?
          /* istanbul ignore next */
          (cov_1bnp2go2ea().b[52][0]++, 'musician') :
          /* istanbul ignore next */
          (cov_1bnp2go2ea().b[52][1]++, 'eventCreator'));
          const message =
          /* istanbul ignore next */
          (cov_1bnp2go2ea().s[105]++, yield this.hiringService.addMessage(requestId, userId, senderType, content.trim()));
          /* istanbul ignore next */
          cov_1bnp2go2ea().s[106]++;
          loggerService_1.logger.info('HiringController: Mensaje agregado exitosamente', {
            userId,
            metadata: {
              requestId,
              messageId: message.id
            }
          });
          /* istanbul ignore next */
          cov_1bnp2go2ea().s[107]++;
          res.status(201).json({
            success: true,
            message: 'Mensaje enviado exitosamente',
            data: message
          });
        } catch (error) {
          /* istanbul ignore next */
          cov_1bnp2go2ea().s[108]++;
          loggerService_1.logger.error('HiringController: Error al agregar mensaje', error instanceof Error ?
          /* istanbul ignore next */
          (cov_1bnp2go2ea().b[53][0]++, error) :
          /* istanbul ignore next */
          (cov_1bnp2go2ea().b[53][1]++, new Error('Error desconocido')), {
            userId:
            /* istanbul ignore next */
            (cov_1bnp2go2ea().b[55][0]++, (_c = req.user) === null) ||
            /* istanbul ignore next */
            (cov_1bnp2go2ea().b[55][1]++, _c === void 0) ?
            /* istanbul ignore next */
            (cov_1bnp2go2ea().b[54][0]++, void 0) :
            /* istanbul ignore next */
            (cov_1bnp2go2ea().b[54][1]++, _c.id),
            metadata: {
              requestId: req.params.requestId
            }
          });
          /* istanbul ignore next */
          cov_1bnp2go2ea().s[109]++;
          res.status(400).json({
            success: false,
            message: error instanceof Error ?
            /* istanbul ignore next */
            (cov_1bnp2go2ea().b[56][0]++, error.message) :
            /* istanbul ignore next */
            (cov_1bnp2go2ea().b[56][1]++, 'Error al enviar mensaje')
          });
        }
      });
    };
    /**
     * Marcar mensajes como leídos
     */
    /* istanbul ignore next */
    cov_1bnp2go2ea().s[110]++;
    this.markMessagesAsRead = (req, res) => {
      /* istanbul ignore next */
      cov_1bnp2go2ea().f[18]++;
      cov_1bnp2go2ea().s[111]++;
      return __awaiter(this, void 0, void 0, function* () {
        /* istanbul ignore next */
        cov_1bnp2go2ea().f[19]++;
        var _a, _b;
        /* istanbul ignore next */
        cov_1bnp2go2ea().s[112]++;
        try {
          const {
            requestId
          } =
          /* istanbul ignore next */
          (cov_1bnp2go2ea().s[113]++, req.params);
          const userId =
          /* istanbul ignore next */
          (cov_1bnp2go2ea().s[114]++,
          /* istanbul ignore next */
          (cov_1bnp2go2ea().b[58][0]++, (_a = req.user) === null) ||
          /* istanbul ignore next */
          (cov_1bnp2go2ea().b[58][1]++, _a === void 0) ?
          /* istanbul ignore next */
          (cov_1bnp2go2ea().b[57][0]++, void 0) :
          /* istanbul ignore next */
          (cov_1bnp2go2ea().b[57][1]++, _a.id));
          /* istanbul ignore next */
          cov_1bnp2go2ea().s[115]++;
          loggerService_1.logger.info('HiringController: Marcando mensajes como leídos', {
            userId,
            metadata: {
              requestId
            }
          });
          /* istanbul ignore next */
          cov_1bnp2go2ea().s[116]++;
          if (!userId) {
            /* istanbul ignore next */
            cov_1bnp2go2ea().b[59][0]++;
            cov_1bnp2go2ea().s[117]++;
            res.status(401).json({
              success: false,
              message: 'Usuario no autenticado'
            });
            /* istanbul ignore next */
            cov_1bnp2go2ea().s[118]++;
            return;
          } else
          /* istanbul ignore next */
          {
            cov_1bnp2go2ea().b[59][1]++;
          }
          cov_1bnp2go2ea().s[119]++;
          yield this.hiringService.markMessagesAsRead(requestId, userId);
          /* istanbul ignore next */
          cov_1bnp2go2ea().s[120]++;
          loggerService_1.logger.info('HiringController: Mensajes marcados como leídos exitosamente', {
            userId,
            metadata: {
              requestId
            }
          });
          /* istanbul ignore next */
          cov_1bnp2go2ea().s[121]++;
          res.status(200).json({
            success: true,
            message: 'Mensajes marcados como leídos exitosamente'
          });
        } catch (error) {
          /* istanbul ignore next */
          cov_1bnp2go2ea().s[122]++;
          loggerService_1.logger.error('HiringController: Error al marcar mensajes como leídos', error instanceof Error ?
          /* istanbul ignore next */
          (cov_1bnp2go2ea().b[60][0]++, error) :
          /* istanbul ignore next */
          (cov_1bnp2go2ea().b[60][1]++, new Error('Error desconocido')), {
            userId:
            /* istanbul ignore next */
            (cov_1bnp2go2ea().b[62][0]++, (_b = req.user) === null) ||
            /* istanbul ignore next */
            (cov_1bnp2go2ea().b[62][1]++, _b === void 0) ?
            /* istanbul ignore next */
            (cov_1bnp2go2ea().b[61][0]++, void 0) :
            /* istanbul ignore next */
            (cov_1bnp2go2ea().b[61][1]++, _b.id),
            metadata: {
              requestId: req.params.requestId
            }
          });
          /* istanbul ignore next */
          cov_1bnp2go2ea().s[123]++;
          res.status(400).json({
            success: false,
            message: error instanceof Error ?
            /* istanbul ignore next */
            (cov_1bnp2go2ea().b[63][0]++, error.message) :
            /* istanbul ignore next */
            (cov_1bnp2go2ea().b[63][1]++, 'Error al marcar mensajes como leídos')
          });
        }
      });
    };
    /**
     * Obtener estadísticas de contratación
     */
    /* istanbul ignore next */
    cov_1bnp2go2ea().s[124]++;
    this.getHiringStats = (req, res) => {
      /* istanbul ignore next */
      cov_1bnp2go2ea().f[20]++;
      cov_1bnp2go2ea().s[125]++;
      return __awaiter(this, void 0, void 0, function* () {
        /* istanbul ignore next */
        cov_1bnp2go2ea().f[21]++;
        var _a, _b, _c;
        /* istanbul ignore next */
        cov_1bnp2go2ea().s[126]++;
        try {
          const userId =
          /* istanbul ignore next */
          (cov_1bnp2go2ea().s[127]++,
          /* istanbul ignore next */
          (cov_1bnp2go2ea().b[65][0]++, (_a = req.user) === null) ||
          /* istanbul ignore next */
          (cov_1bnp2go2ea().b[65][1]++, _a === void 0) ?
          /* istanbul ignore next */
          (cov_1bnp2go2ea().b[64][0]++, void 0) :
          /* istanbul ignore next */
          (cov_1bnp2go2ea().b[64][1]++, _a.id));
          const userRole =
          /* istanbul ignore next */
          (cov_1bnp2go2ea().s[128]++,
          /* istanbul ignore next */
          (cov_1bnp2go2ea().b[67][0]++, (_b = req.user) === null) ||
          /* istanbul ignore next */
          (cov_1bnp2go2ea().b[67][1]++, _b === void 0) ?
          /* istanbul ignore next */
          (cov_1bnp2go2ea().b[66][0]++, void 0) :
          /* istanbul ignore next */
          (cov_1bnp2go2ea().b[66][1]++, _b.roll));
          /* istanbul ignore next */
          cov_1bnp2go2ea().s[129]++;
          loggerService_1.logger.info('HiringController: Obteniendo estadísticas de contratación', {
            userId,
            metadata: {
              userRole
            }
          });
          /* istanbul ignore next */
          cov_1bnp2go2ea().s[130]++;
          if (!userId) {
            /* istanbul ignore next */
            cov_1bnp2go2ea().b[68][0]++;
            cov_1bnp2go2ea().s[131]++;
            res.status(401).json({
              success: false,
              message: 'Usuario no autenticado'
            });
            /* istanbul ignore next */
            cov_1bnp2go2ea().s[132]++;
            return;
          } else
          /* istanbul ignore next */
          {
            cov_1bnp2go2ea().b[68][1]++;
          }
          cov_1bnp2go2ea().s[133]++;
          if (
          /* istanbul ignore next */
          (cov_1bnp2go2ea().b[70][0]++, userRole !== 'musico') &&
          /* istanbul ignore next */
          (cov_1bnp2go2ea().b[70][1]++, userRole !== 'eventCreator')) {
            /* istanbul ignore next */
            cov_1bnp2go2ea().b[69][0]++;
            cov_1bnp2go2ea().s[134]++;
            res.status(400).json({
              success: false,
              message: 'Rol de usuario inválido'
            });
            /* istanbul ignore next */
            cov_1bnp2go2ea().s[135]++;
            return;
          } else
          /* istanbul ignore next */
          {
            cov_1bnp2go2ea().b[69][1]++;
          }
          const stats =
          /* istanbul ignore next */
          (cov_1bnp2go2ea().s[136]++, yield this.hiringService.getHiringStats(userId, userRole));
          /* istanbul ignore next */
          cov_1bnp2go2ea().s[137]++;
          loggerService_1.logger.info('HiringController: Estadísticas obtenidas exitosamente', {
            userId,
            metadata: {
              userRole,
              stats
            }
          });
          /* istanbul ignore next */
          cov_1bnp2go2ea().s[138]++;
          res.status(200).json({
            success: true,
            data: stats
          });
        } catch (error) {
          /* istanbul ignore next */
          cov_1bnp2go2ea().s[139]++;
          loggerService_1.logger.error('HiringController: Error al obtener estadísticas', error instanceof Error ?
          /* istanbul ignore next */
          (cov_1bnp2go2ea().b[71][0]++, error) :
          /* istanbul ignore next */
          (cov_1bnp2go2ea().b[71][1]++, new Error('Error desconocido')), {
            userId:
            /* istanbul ignore next */
            (cov_1bnp2go2ea().b[73][0]++, (_c = req.user) === null) ||
            /* istanbul ignore next */
            (cov_1bnp2go2ea().b[73][1]++, _c === void 0) ?
            /* istanbul ignore next */
            (cov_1bnp2go2ea().b[72][0]++, void 0) :
            /* istanbul ignore next */
            (cov_1bnp2go2ea().b[72][1]++, _c.id),
            metadata: {
              context: 'hiring'
            }
          });
          /* istanbul ignore next */
          cov_1bnp2go2ea().s[140]++;
          res.status(500).json({
            success: false,
            message: 'Error al obtener estadísticas de contratación'
          });
        }
      });
    };
    /* istanbul ignore next */
    cov_1bnp2go2ea().s[141]++;
    this.hiringService = new hiringService_1.HiringService();
  }
}
/* istanbul ignore next */
cov_1bnp2go2ea().s[142]++;
exports.HiringController = HiringController;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,