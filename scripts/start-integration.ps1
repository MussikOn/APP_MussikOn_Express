# Script para iniciar la integraci√≥n entre Backend y Sistema de Administraci√≥n
# MussikOn Payment System Integration

Write-Host "üöÄ Iniciando integraci√≥n del Sistema de Pagos MussikOn..." -ForegroundColor Blue
Write-Host "=" * 60 -ForegroundColor Blue

# Funci√≥n para verificar si un puerto est√° en uso
function Test-Port {
    param([int]$Port)
    try {
        $connection = New-Object System.Net.Sockets.TcpClient
        $connection.Connect("localhost", $Port)
        $connection.Close()
        return $true
    }
    catch {
        return $false
    }
}

# Funci√≥n para esperar a que un servicio est√© disponible
function Wait-ForService {
    param([string]$Url, [string]$ServiceName, [int]$Timeout = 30)
    
    Write-Host "‚è≥ Esperando a que $ServiceName est√© disponible..." -ForegroundColor Yellow
    
    $startTime = Get-Date
    do {
        try {
            $response = Invoke-WebRequest -Uri $Url -Method GET -TimeoutSec 5
            if ($response.StatusCode -eq 200) {
                Write-Host "‚úÖ $ServiceName est√° listo!" -ForegroundColor Green
                return $true
            }
        }
        catch {
            $elapsed = (Get-Date) - $startTime
            if ($elapsed.TotalSeconds -gt $Timeout) {
                Write-Host "‚ùå Timeout esperando $ServiceName" -ForegroundColor Red
                return $false
            }
            Start-Sleep -Seconds 2
        }
    } while ($true)
}

# Verificar si el backend est√° ejecut√°ndose
Write-Host "üîç Verificando estado del Backend..." -ForegroundColor Blue
if (Test-Port -Port 5001) {
    Write-Host "‚úÖ Backend ya est√° ejecut√°ndose en puerto 5001" -ForegroundColor Green
} else {
    Write-Host "‚ö†Ô∏è  Backend no est√° ejecut√°ndose" -ForegroundColor Yellow
    Write-Host "üí° Ejecuta 'npm start' en el directorio del backend" -ForegroundColor Cyan
}

# Verificar si el sistema de administraci√≥n est√° ejecut√°ndose
Write-Host "üîç Verificando estado del Sistema de Administraci√≥n..." -ForegroundColor Blue
if (Test-Port -Port 3000) {
    Write-Host "‚úÖ Sistema de administraci√≥n ya est√° ejecut√°ndose en puerto 3000" -ForegroundColor Green
} else {
    Write-Host "‚ö†Ô∏è  Sistema de administraci√≥n no est√° ejecut√°ndose" -ForegroundColor Yellow
    Write-Host "üí° Ejecuta 'npm run dev' en el directorio del admin system" -ForegroundColor Cyan
}

Write-Host "`nüìã URLs de los servicios:" -ForegroundColor Blue
Write-Host "‚Ä¢ Backend: http://localhost:5001" -ForegroundColor Green
Write-Host "‚Ä¢ Admin System: http://localhost:3000" -ForegroundColor Green
Write-Host "‚Ä¢ API Docs: http://localhost:5001/api-docs" -ForegroundColor Green

Write-Host "`nüîó Endpoints de pagos disponibles:" -ForegroundColor Blue
Write-Host "‚Ä¢ GET /admin/payments/pending-deposits" -ForegroundColor Cyan
Write-Host "‚Ä¢ PUT /admin/payments/verify-deposit/:id" -ForegroundColor Cyan
Write-Host "‚Ä¢ GET /admin/payments/statistics" -ForegroundColor Cyan
Write-Host "‚Ä¢ GET /admin/payments/deposit-stats" -ForegroundColor Cyan

Write-Host "`nüñºÔ∏è  Endpoints de im√°genes disponibles:" -ForegroundColor Blue
Write-Host "‚Ä¢ GET /imgs" -ForegroundColor Cyan
Write-Host "‚Ä¢ POST /imgs/upload" -ForegroundColor Cyan
Write-Host "‚Ä¢ GET /imgs/stats" -ForegroundColor Cyan

Write-Host "`nüß™ Para ejecutar pruebas de integraci√≥n:" -ForegroundColor Blue
Write-Host "‚Ä¢ npm run test-integration" -ForegroundColor Cyan

Write-Host "`n" + "=" * 60 -ForegroundColor Blue
Write-Host "üéâ Configuraci√≥n de integraci√≥n completada!" -ForegroundColor Green
Write-Host "`nüí° Pr√≥ximos pasos:" -ForegroundColor Blue
Write-Host "1. Inicia el backend: npm start" -ForegroundColor White
Write-Host "2. Inicia el admin system: npm run dev" -ForegroundColor White
Write-Host "3. Ejecuta las pruebas: npm run test-integration" -ForegroundColor White
Write-Host "4. Accede al admin system en http://localhost:3000" -ForegroundColor White

Write-Host "`nüìö Documentaci√≥n disponible en:" -ForegroundColor Blue
Write-Host "‚Ä¢ docs/payment-system/INDEX.md" -ForegroundColor Cyan
Write-Host "‚Ä¢ docs/payment-system/API_ENDPOINTS.md" -ForegroundColor Cyan
Write-Host "‚Ä¢ docs/payment-system/TROUBLESHOOTING.md" -ForegroundColor Cyan 