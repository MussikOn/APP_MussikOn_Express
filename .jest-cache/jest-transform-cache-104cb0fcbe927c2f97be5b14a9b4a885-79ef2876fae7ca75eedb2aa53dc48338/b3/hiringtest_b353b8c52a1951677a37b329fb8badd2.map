{"file":"C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\__tests__\\hiring.test.ts","mappings":"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","names":[],"sources":["C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\__tests__\\hiring.test.ts"],"sourcesContent":["import { HiringService } from '../services/hiringService';\r\nimport { db } from '../utils/firebase';\r\n\r\n// Mock de Firebase\r\njest.mock('../utils/firebase', () => ({\r\n  db: {\r\n    collection: jest.fn()\r\n  }\r\n}));\r\n\r\ndescribe('HiringService', () => {\r\n  let hiringService: HiringService;\r\n  let mockCollection: jest.Mocked<any>;\r\n\r\n  beforeEach(() => {\r\n    hiringService = new HiringService();\r\n    mockCollection = db.collection as jest.Mocked<any>;\r\n    jest.clearAllMocks();\r\n  });\r\n\r\n  describe('createHiringRequest', () => {\r\n    const mockHiringData = {\r\n      eventId: 'event123',\r\n      eventCreatorId: 'creator123',\r\n      musicianId: 'musician123',\r\n      eventDetails: 'Evento de música en vivo',\r\n      terms: 'Pago por adelantado'\r\n    };\r\n\r\n    const mockHiringRequest = {\r\n      id: 'hiring123',\r\n      eventId: 'event123',\r\n      eventCreatorId: 'creator123',\r\n      musicianId: 'musician123',\r\n      status: 'pending' as const,\r\n      eventDetails: 'Evento de música en vivo',\r\n      terms: 'Pago por adelantado',\r\n      messages: [],\r\n      createdAt: new Date(),\r\n      updatedAt: new Date()\r\n    };\r\n\r\n    it('should create a hiring request successfully', async () => {\r\n      // Mock de las colecciones\r\n      const mockEventDoc = {\r\n        exists: true,\r\n        data: () => ({ title: 'Evento Test' })\r\n      };\r\n\r\n      const mockMusicianDoc = {\r\n        exists: true,\r\n        data: () => ({ name: 'Juan', lastName: 'Pérez', roll: 'musico' })\r\n      };\r\n\r\n      const mockExistingRequest = {\r\n        empty: true\r\n      };\r\n\r\n      const mockDocRef = {\r\n        id: 'hiring123'\r\n      };\r\n\r\n      mockCollection\r\n        .mockReturnValueOnce({\r\n          doc: jest.fn().mockReturnValue({\r\n            get: jest.fn().mockResolvedValue(mockEventDoc)\r\n          })\r\n        })\r\n        .mockReturnValueOnce({\r\n          doc: jest.fn().mockReturnValue({\r\n            get: jest.fn().mockResolvedValue(mockMusicianDoc)\r\n          })\r\n        })\r\n        .mockReturnValueOnce({\r\n          where: jest.fn().mockReturnThis(),\r\n          get: jest.fn().mockResolvedValue(mockExistingRequest)\r\n        })\r\n        .mockReturnValueOnce({\r\n          add: jest.fn().mockResolvedValue(mockDocRef)\r\n        })\r\n        .mockReturnValueOnce({\r\n          doc: jest.fn().mockReturnValue({\r\n            get: jest.fn().mockResolvedValue({\r\n              exists: true,\r\n              id: 'hiring123',\r\n              data: () => mockHiringRequest\r\n            })\r\n          })\r\n        });\r\n\r\n      const result = await hiringService.createHiringRequest(mockHiringData);\r\n\r\n      expect(result).toEqual({\r\n        ...mockHiringRequest,\r\n        id: 'hiring123'\r\n      });\r\n    });\r\n\r\n    it('should throw error when event not found', async () => {\r\n      const mockEventDoc = {\r\n        exists: false\r\n      };\r\n\r\n      mockCollection.mockReturnValueOnce({\r\n        doc: jest.fn().mockReturnValue({\r\n          get: jest.fn().mockResolvedValue(mockEventDoc)\r\n        })\r\n      });\r\n\r\n      await expect(hiringService.createHiringRequest(mockHiringData))\r\n        .rejects.toThrow('Evento no encontrado');\r\n    });\r\n\r\n    it('should throw error when musician not found', async () => {\r\n      const mockEventDoc = {\r\n        exists: true,\r\n        data: () => ({ title: 'Evento Test' })\r\n      };\r\n\r\n      const mockMusicianDoc = {\r\n        exists: false\r\n      };\r\n\r\n      mockCollection\r\n        .mockReturnValueOnce({\r\n          doc: jest.fn().mockReturnValue({\r\n            get: jest.fn().mockResolvedValue(mockEventDoc)\r\n          })\r\n        })\r\n        .mockReturnValueOnce({\r\n          doc: jest.fn().mockReturnValue({\r\n            get: jest.fn().mockResolvedValue(mockMusicianDoc)\r\n          })\r\n        });\r\n\r\n      await expect(hiringService.createHiringRequest(mockHiringData))\r\n        .rejects.toThrow('Músico no encontrado');\r\n    });\r\n\r\n    it('should throw error when active request already exists', async () => {\r\n      const mockEventDoc = {\r\n        exists: true,\r\n        data: () => ({ title: 'Evento Test' })\r\n      };\r\n\r\n      const mockMusicianDoc = {\r\n        exists: true,\r\n        data: () => ({ name: 'Juan', lastName: 'Pérez', roll: 'musico' })\r\n      };\r\n\r\n      const mockExistingRequest = {\r\n        empty: false\r\n      };\r\n\r\n      mockCollection\r\n        .mockReturnValueOnce({\r\n          doc: jest.fn().mockReturnValue({\r\n            get: jest.fn().mockResolvedValue(mockEventDoc)\r\n          })\r\n        })\r\n        .mockReturnValueOnce({\r\n          doc: jest.fn().mockReturnValue({\r\n            get: jest.fn().mockResolvedValue(mockMusicianDoc)\r\n          })\r\n        })\r\n        .mockReturnValueOnce({\r\n          where: jest.fn().mockReturnThis(),\r\n          get: jest.fn().mockResolvedValue(mockExistingRequest)\r\n        });\r\n\r\n      await expect(hiringService.createHiringRequest(mockHiringData))\r\n        .rejects.toThrow('Ya existe una solicitud activa para este evento y músico');\r\n    });\r\n  });\r\n\r\n  describe('getHiringRequestById', () => {\r\n    it('should return hiring request when found', async () => {\r\n      const mockDoc = {\r\n        exists: true,\r\n        id: 'hiring123',\r\n        data: () => ({\r\n          eventId: 'event123',\r\n          eventCreatorId: 'creator123',\r\n          musicianId: 'musician123',\r\n          status: 'pending',\r\n          eventDetails: 'Evento de música',\r\n          terms: 'Pago por adelantado',\r\n          messages: [],\r\n          createdAt: new Date(),\r\n          updatedAt: new Date()\r\n        })\r\n      };\r\n\r\n      mockCollection.mockReturnValue({\r\n        doc: jest.fn().mockReturnValue({\r\n          get: jest.fn().mockResolvedValue(mockDoc)\r\n        })\r\n      });\r\n\r\n      const result = await hiringService.getHiringRequestById('hiring123');\r\n\r\n      expect(result).toEqual(\r\n        expect.objectContaining({\r\n          eventCreatorId: 'creator123',\r\n          musicianId: 'musician123',\r\n          eventId: 'event123',\r\n          eventDetails: 'Evento de música',\r\n          terms: 'Pago por adelantado',\r\n          status: 'pending',\r\n          messages: [],\r\n          id: 'hiring123'\r\n        })\r\n      );\r\n    });\r\n\r\n    it('should return null when hiring request not found', async () => {\r\n      const mockDoc = {\r\n        exists: false\r\n      };\r\n\r\n      mockCollection.mockReturnValue({\r\n        doc: jest.fn().mockReturnValue({\r\n          get: jest.fn().mockResolvedValue(mockDoc)\r\n        })\r\n      });\r\n\r\n      const result = await hiringService.getHiringRequestById('hiring123');\r\n\r\n      expect(result).toBeNull();\r\n    });\r\n  });\r\n\r\n  describe('updateHiringRequestStatus', () => {\r\n    const mockHiringRequest = {\r\n      id: 'hiring123',\r\n      eventId: 'event123',\r\n      eventCreatorId: 'creator123',\r\n      musicianId: 'musician123',\r\n      status: 'pending' as const,\r\n      eventDetails: 'Evento de música',\r\n      terms: 'Pago por adelantado',\r\n      messages: [],\r\n      createdAt: new Date(),\r\n      updatedAt: new Date()\r\n    };\r\n\r\n    it('should update hiring request status successfully', async () => {\r\n      const mockDoc = {\r\n        exists: true,\r\n        id: 'hiring123',\r\n        data: () => mockHiringRequest\r\n      };\r\n\r\n      mockCollection\r\n        .mockReturnValueOnce({\r\n          doc: jest.fn().mockReturnValue({\r\n            get: jest.fn().mockResolvedValue(mockDoc)\r\n          })\r\n        })\r\n        .mockReturnValueOnce({\r\n          doc: jest.fn().mockReturnValue({\r\n            update: jest.fn().mockResolvedValue(undefined)\r\n          })\r\n        })\r\n        .mockReturnValueOnce({\r\n          doc: jest.fn().mockReturnValue({\r\n            get: jest.fn().mockResolvedValue({\r\n              exists: true,\r\n              id: 'hiring123',\r\n              data: () => ({ ...mockHiringRequest, status: 'accepted' })\r\n            })\r\n          })\r\n        });\r\n\r\n      const result = await hiringService.updateHiringRequestStatus(\r\n        'hiring123',\r\n        'accepted',\r\n        'musician123'\r\n      );\r\n\r\n      expect(result.status).toBe('accepted');\r\n    });\r\n\r\n    it('should throw error when hiring request not found', async () => {\r\n      mockCollection.mockReturnValue({\r\n        doc: jest.fn().mockReturnValue({\r\n          get: jest.fn().mockResolvedValue({ exists: false })\r\n        })\r\n      });\r\n\r\n      await expect(\r\n        hiringService.updateHiringRequestStatus('hiring123', 'accepted', 'musician123')\r\n      ).rejects.toThrow('Solicitud de contratación no encontrada');\r\n    });\r\n\r\n    it('should throw error when user has no permissions', async () => {\r\n      const mockDoc = {\r\n        exists: true,\r\n        id: 'hiring123',\r\n        data: () => mockHiringRequest\r\n      };\r\n\r\n      mockCollection.mockReturnValue({\r\n        doc: jest.fn().mockReturnValue({\r\n          get: jest.fn().mockResolvedValue(mockDoc)\r\n        })\r\n      });\r\n\r\n      await expect(\r\n        hiringService.updateHiringRequestStatus('hiring123', 'accepted', 'other123')\r\n      ).rejects.toThrow('No tienes permisos para actualizar esta solicitud');\r\n    });\r\n\r\n    it('should throw error for invalid status transition', async () => {\r\n      const mockDoc = {\r\n        exists: true,\r\n        id: 'hiring123',\r\n        data: () => ({ ...mockHiringRequest, status: 'completed' })\r\n      };\r\n\r\n      mockCollection.mockReturnValue({\r\n        doc: jest.fn().mockReturnValue({\r\n          get: jest.fn().mockResolvedValue(mockDoc)\r\n        })\r\n      });\r\n\r\n      await expect(\r\n        hiringService.updateHiringRequestStatus('hiring123', 'accepted', 'musician123')\r\n      ).rejects.toThrow('Transición de estado inválida');\r\n    });\r\n  });\r\n\r\n  describe('getHiringRequestsByUser', () => {\r\n    const mockRequests = [\r\n      {\r\n        id: 'hiring1',\r\n        eventId: 'event1',\r\n        eventCreatorId: 'creator1',\r\n        musicianId: 'musician123',\r\n        status: 'pending',\r\n        eventDetails: 'Evento 1',\r\n        terms: 'Términos 1',\r\n        messages: [],\r\n        createdAt: new Date(),\r\n        updatedAt: new Date()\r\n      },\r\n      {\r\n        id: 'hiring2',\r\n        eventId: 'event2',\r\n        eventCreatorId: 'creator2',\r\n        musicianId: 'musician123',\r\n        status: 'accepted',\r\n        eventDetails: 'Evento 2',\r\n        terms: 'Términos 2',\r\n        messages: [],\r\n        createdAt: new Date(),\r\n        updatedAt: new Date()\r\n      }\r\n    ];\r\n\r\n    it('should return hiring requests for musician', async () => {\r\n      const mockSnapshot = {\r\n        docs: mockRequests.map(req => ({\r\n          id: req.id,\r\n          data: () => req\r\n        }))\r\n      };\r\n\r\n      mockCollection.mockReturnValue({\r\n        where: jest.fn().mockReturnThis(),\r\n        orderBy: jest.fn().mockReturnThis(),\r\n        get: jest.fn().mockResolvedValue(mockSnapshot)\r\n      });\r\n\r\n      const result = await hiringService.getHiringRequestsByUser('musician123', 'musico');\r\n\r\n      expect(result).toHaveLength(2);\r\n      expect(result[0].id).toBe('hiring1');\r\n      expect(result[1].id).toBe('hiring2');\r\n    });\r\n\r\n    it('should return hiring requests for event creator', async () => {\r\n      const mockSnapshot = {\r\n        docs: mockRequests.map(req => ({\r\n          id: req.id,\r\n          data: () => req\r\n        }))\r\n      };\r\n\r\n      mockCollection.mockReturnValue({\r\n        where: jest.fn().mockReturnThis(),\r\n        orderBy: jest.fn().mockReturnThis(),\r\n        get: jest.fn().mockResolvedValue(mockSnapshot)\r\n      });\r\n\r\n      const result = await hiringService.getHiringRequestsByUser('creator1', 'eventCreator');\r\n\r\n      expect(result).toHaveLength(2);\r\n    });\r\n\r\n    it('should filter by status when provided', async () => {\r\n      const mockSnapshot = {\r\n        docs: [mockRequests[0]].map(req => ({\r\n          id: req.id,\r\n          data: () => req\r\n        }))\r\n      };\r\n\r\n      mockCollection.mockReturnValue({\r\n        where: jest.fn().mockReturnThis(),\r\n        orderBy: jest.fn().mockReturnThis(),\r\n        get: jest.fn().mockResolvedValue(mockSnapshot)\r\n      });\r\n\r\n      const result = await hiringService.getHiringRequestsByUser('musician123', 'musico', 'pending');\r\n\r\n      expect(result).toHaveLength(1);\r\n      expect(result[0].status).toBe('pending');\r\n    });\r\n  });\r\n\r\n  describe('addMessage', () => {\r\n    const mockHiringRequest = {\r\n      id: 'hiring123',\r\n      eventId: 'event123',\r\n      eventCreatorId: 'creator123',\r\n      musicianId: 'musician123',\r\n      status: 'pending',\r\n      eventDetails: 'Evento de música',\r\n      terms: 'Pago por adelantado',\r\n      messages: [],\r\n      createdAt: new Date(),\r\n      updatedAt: new Date()\r\n    };\r\n\r\n    it('should add message successfully', async () => {\r\n      const mockDoc = {\r\n        exists: true,\r\n        id: 'hiring123',\r\n        data: () => mockHiringRequest\r\n      };\r\n\r\n      mockCollection.mockReturnValue({\r\n        doc: jest.fn().mockReturnValue({\r\n          get: jest.fn().mockResolvedValue(mockDoc),\r\n          update: jest.fn().mockResolvedValue(undefined)\r\n        })\r\n      });\r\n\r\n      const result = await hiringService.addMessage(\r\n        'hiring123',\r\n        'musician123',\r\n        'musician',\r\n        'Hola, estoy interesado en el evento'\r\n      );\r\n\r\n      expect(result.senderId).toBe('musician123');\r\n      expect(result.senderType).toBe('musician');\r\n      expect(result.content).toBe('Hola, estoy interesado en el evento');\r\n      expect(result.isRead).toBe(false);\r\n    });\r\n\r\n    it('should throw error when hiring request not found', async () => {\r\n      mockCollection.mockReturnValue({\r\n        doc: jest.fn().mockReturnValue({\r\n          get: jest.fn().mockResolvedValue({ exists: false })\r\n        })\r\n      });\r\n\r\n      await expect(\r\n        hiringService.addMessage('hiring123', 'musician123', 'musician', 'Hola')\r\n      ).rejects.toThrow('Solicitud de contratación no encontrada');\r\n    });\r\n\r\n    it('should throw error when user has no permissions', async () => {\r\n      const mockDoc = {\r\n        exists: true,\r\n        id: 'hiring123',\r\n        data: () => mockHiringRequest\r\n      };\r\n\r\n      mockCollection.mockReturnValue({\r\n        doc: jest.fn().mockReturnValue({\r\n          get: jest.fn().mockResolvedValue(mockDoc)\r\n        })\r\n      });\r\n\r\n      await expect(\r\n        hiringService.addMessage('hiring123', 'other123', 'musician', 'Hola')\r\n      ).rejects.toThrow('No tienes permisos para enviar mensajes en esta solicitud');\r\n    });\r\n  });\r\n\r\n  describe('markMessagesAsRead', () => {\r\n    const mockHiringRequest = {\r\n      id: 'hiring123',\r\n      eventId: 'event123',\r\n      eventCreatorId: 'creator123',\r\n      musicianId: 'musician123',\r\n      status: 'pending',\r\n      eventDetails: 'Evento de música',\r\n      terms: 'Pago por adelantado',\r\n      messages: [\r\n        {\r\n          id: 'msg1',\r\n          senderId: 'musician123',\r\n          senderType: 'musician' as const,\r\n          content: 'Hola',\r\n          timestamp: new Date(),\r\n          isRead: false\r\n        }\r\n      ],\r\n      createdAt: new Date(),\r\n      updatedAt: new Date()\r\n    };\r\n\r\n    it('should mark messages as read successfully', async () => {\r\n      const mockDoc = {\r\n        exists: true,\r\n        id: 'hiring123',\r\n        data: () => mockHiringRequest\r\n      };\r\n\r\n      mockCollection.mockReturnValue({\r\n        doc: jest.fn().mockReturnValue({\r\n          get: jest.fn().mockResolvedValue(mockDoc),\r\n          update: jest.fn().mockResolvedValue(undefined)\r\n        })\r\n      });\r\n\r\n      await expect(\r\n        hiringService.markMessagesAsRead('hiring123', 'creator123')\r\n      ).resolves.toBeUndefined();\r\n    });\r\n\r\n    it('should throw error when hiring request not found', async () => {\r\n      mockCollection.mockReturnValue({\r\n        doc: jest.fn().mockReturnValue({\r\n          get: jest.fn().mockResolvedValue({ exists: false })\r\n        })\r\n      });\r\n\r\n      await expect(\r\n        hiringService.markMessagesAsRead('hiring123', 'creator123')\r\n      ).rejects.toThrow('Solicitud de contratación no encontrada');\r\n    });\r\n  });\r\n\r\n  describe('getHiringStats', () => {\r\n    const mockRequests = [\r\n      {\r\n        id: 'hiring1',\r\n        eventId: 'event1',\r\n        eventCreatorId: 'creator1',\r\n        musicianId: 'musician123',\r\n        status: 'pending',\r\n        eventDetails: 'Evento 1',\r\n        terms: 'Términos 1',\r\n        messages: [],\r\n        createdAt: new Date(),\r\n        updatedAt: new Date()\r\n      },\r\n      {\r\n        id: 'hiring2',\r\n        eventId: 'event2',\r\n        eventCreatorId: 'creator2',\r\n        musicianId: 'musician123',\r\n        status: 'accepted',\r\n        eventDetails: 'Evento 2',\r\n        terms: 'Términos 2',\r\n        messages: [],\r\n        createdAt: new Date(),\r\n        updatedAt: new Date()\r\n      },\r\n      {\r\n        id: 'hiring3',\r\n        eventId: 'event3',\r\n        eventCreatorId: 'creator3',\r\n        musicianId: 'musician123',\r\n        status: 'rejected',\r\n        eventDetails: 'Evento 3',\r\n        terms: 'Términos 3',\r\n        messages: [],\r\n        createdAt: new Date(),\r\n        updatedAt: new Date()\r\n      },\r\n      {\r\n        id: 'hiring4',\r\n        eventId: 'event4',\r\n        eventCreatorId: 'creator4',\r\n        musicianId: 'musician123',\r\n        status: 'completed',\r\n        eventDetails: 'Evento 4',\r\n        terms: 'Términos 4',\r\n        messages: [],\r\n        createdAt: new Date(),\r\n        updatedAt: new Date()\r\n      },\r\n      {\r\n        id: 'hiring5',\r\n        eventId: 'event5',\r\n        eventCreatorId: 'creator5',\r\n        musicianId: 'musician123',\r\n        status: 'cancelled',\r\n        eventDetails: 'Evento 5',\r\n        terms: 'Términos 5',\r\n        messages: [],\r\n        createdAt: new Date(),\r\n        updatedAt: new Date()\r\n      }\r\n    ];\r\n\r\n    it('should return correct statistics', async () => {\r\n      const mockSnapshot = {\r\n        docs: mockRequests.map(req => ({\r\n          id: req.id,\r\n          data: () => req\r\n        }))\r\n      };\r\n\r\n      mockCollection.mockReturnValue({\r\n        where: jest.fn().mockReturnThis(),\r\n        orderBy: jest.fn().mockReturnThis(),\r\n        get: jest.fn().mockResolvedValue(mockSnapshot)\r\n      });\r\n\r\n      const stats = await hiringService.getHiringStats('musician123', 'musico');\r\n\r\n      expect(stats.totalRequests).toBe(5);\r\n      expect(stats.pendingRequests).toBe(1);\r\n      expect(stats.acceptedRequests).toBe(1);\r\n      expect(stats.rejectedRequests).toBe(1);\r\n      expect(stats.completedRequests).toBe(1);\r\n      expect(stats.averageResponseTime).toBe(0); // Sin mensajes de músicos\r\n    });\r\n  });\r\n}); "],"version":3}