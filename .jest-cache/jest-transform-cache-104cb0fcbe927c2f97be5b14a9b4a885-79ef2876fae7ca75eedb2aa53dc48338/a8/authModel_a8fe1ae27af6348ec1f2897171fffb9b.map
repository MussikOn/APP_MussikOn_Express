{"version":3,"names":["firebase_1","cov_1rwkmtl4w6","s","require","admin","__importStar","loggerService_1","registerModel","name_1","lastName_1","roll_1","userEmail_1","userPassword_1","args_1","f","__awaiter","name","lastName","roll","userEmail","userPassword","status","b","console","info","newUser","toLocaleLowerCase","create_at","Date","toString","update_at","delete_at","querySnapshot","db","collection","where","get","empty","doc","set","error","exports","getUserByEmailModel","data","docs","logger","context","metadata","String","log","updateUserByEmailModel","updatedData","toLowerCase","update","Object","assign","addEventToUserModel","eventData","userRef","createdEvents","firestore","FieldValue","arrayUnion","deleteUserByEmailModel","exists","delete"],"sources":["C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\models\\authModel.ts"],"sourcesContent":["import { authUserRegister, UpdateUser, User } from '../utils/DataTypes';\nimport { db } from '../utils/firebase';\nimport * as admin from 'firebase-admin';\nimport { logger } from '../services/loggerService';\n\nexport const registerModel = async (\n  name: string,\n  lastName: string,\n  roll: string,\n  userEmail: string,\n  userPassword: string,\n  status: boolean = true\n) => {\n  try {\n    if (!name || !lastName || !roll || !userEmail || !userPassword) {\n      console.info(\n        'Hay campos que no han sido llenados, \\n verificar codigo en C:/programacion/Express/MusikOn/src/models/authModel.ts linea 4.'\n      );\n      return 'Hay campos que no han sido llenados';\n    }\n    const newUser: authUserRegister = {\n      name,\n      lastName,\n      roll,\n      userEmail: userEmail.toLocaleLowerCase(),\n      userPassword,\n      create_at: Date().toString(),\n      update_at: '',\n      delete_at: '',\n      status,\n    };\n    const querySnapshot = await db\n      .collection('users')\n      .where('userEmail', '==', userEmail)\n      .get();\n    if (!querySnapshot.empty) {\n      return 'El usuario ya Existe.';\n    }\n\n    await db.collection('users').doc(userEmail).set(newUser);\n    return false;\n  } catch (error) {\n    console.info(\n      '[src/models/authModel.ts:25] Error al Guardar los datos, \\n verificar codigo en C:/programacion/Express/MusikOn/src/models/authModel.ts linea 4.'\n    );\n    return 'Error al Guardar los datos.';\n  }\n};\n\nexport const getUserByEmailModel = async (userEmail: string) => {\n  try {\n    if (!userEmail) {\n      return null;\n    }\n    const querySnapshot = await db\n      .collection('users')\n      .where('userEmail', '==', userEmail.toLocaleLowerCase())\n      .get();\n    const data = querySnapshot.docs[0].data();\n    return data;\n  } catch (error) {\n    logger.info('Error en getUserByEmailModel:', { context: 'AuthModel', metadata: { error: String(error) } });\n    console.log(\n      '[src/models/authModel.ts:41] Ubicaci贸n: ./src/models/authModel.ts linea 41'\n    );\n    console.info(\n      '[src/models/authModel.ts:42] Error en la peticion getUserByEmail.\\n\\n'\n    );\n    return null;\n  }\n};\n\nexport const updateUserByEmailModel = async (\n  userEmail: string,\n  updatedData: Partial<UpdateUser>\n) => {\n  try {\n    if (!userEmail || !updatedData) {\n      console.info(\n        '[src/models/authModel.ts:50] Faltan datos para actualizar.'\n      );\n      return 'Faltan datos para actualizar.';\n    }\n\n    await db\n      .collection('users')\n      .doc(userEmail.toLowerCase())\n      .update({\n        ...updatedData,\n        update_at: new Date().toString(),\n      });\n\n    return false;\n  } catch (error) {\n    logger.info('Error en updateUserByEmailModel:', { context: 'AuthModel', metadata: { error: String(error) } });\n    console.log(\n      '[src/models/authModel.ts:62] Ubicaci贸n: ./src/models/authModel.ts linea 62'\n    );\n    console.info('[src/models/authModel.ts:63] Error al actualizar los datos.');\n    return 'Error al actualizar los datos.';\n  }\n};\n\nexport const addEventToUserModel = async (\n  userEmail: string,\n  eventData: any\n) => {\n  try {\n    if (!userEmail || !eventData) {\n      return 'Faltan datos para guardar el evento.';\n    }\n    const userRef = db.collection('users').doc(userEmail.toLowerCase());\n    // Agrega el evento al array 'createdEvents' del usuario\n    await userRef.update({\n      createdEvents: admin.firestore.FieldValue.arrayUnion(eventData),\n      update_at: new Date().toString(),\n    });\n    return false;\n  } catch (error) {\n    logger.info('Error en addEventToUserModel:', { context: 'AuthModel', metadata: { error: String(error) } });\n    console.log(\n      '[src/models/authModel.ts:82] Ubicaci贸n: ./src/models/authModel.ts linea 82'\n    );\n    console.info(\n      '[src/models/authModel.ts:83] Error al guardar el evento en el usuario.'\n    );\n    return 'Error al guardar el evento.';\n  }\n};\n\nexport const deleteUserByEmailModel = async (userEmail: string) => {\n  try {\n    if (!userEmail) return 'Falta el email';\n    const doc = await db.collection('users').doc(userEmail.toLowerCase()).get();\n    if (!doc.exists) return 'not_found';\n    await db.collection('users').doc(userEmail.toLowerCase()).delete();\n    return false;\n  } catch (error) {\n    logger.info('Error en deleteUserByEmailModel:', { context: 'AuthModel', metadata: { error: String(error) } });\n    console.log(\n      '[src/models/authModel.ts:97] Ubicaci贸n: ./src/models/authModel.ts linea 97'\n    );\n    console.info(\n      '[src/models/authModel.ts:98] Error al eliminar el usuario:',\n      error\n    );\n    return 'Error al eliminar el usuario';\n  }\n};\n"],"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","ignoreList":[]}