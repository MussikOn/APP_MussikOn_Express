03688310d9df33552060122e495d3546
"use strict";

/* istanbul ignore next */
function cov_xbbxu3ym6() {
  var path = "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\routes\\pushNotificationRoutes.ts";
  var hash = "24238091ac13e92d15ca3a0beffa68d47810f617";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\routes\\pushNotificationRoutes.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 18
        },
        end: {
          line: 6,
          column: 53
        }
      },
      "4": {
        start: {
          line: 7,
          column: 25
        },
        end: {
          line: 7,
          column: 64
        }
      },
      "5": {
        start: {
          line: 8,
          column: 22
        },
        end: {
          line: 8,
          column: 58
        }
      },
      "6": {
        start: {
          line: 9,
          column: 37
        },
        end: {
          line: 9,
          column: 89
        }
      },
      "7": {
        start: {
          line: 10,
          column: 15
        },
        end: {
          line: 10,
          column: 41
        }
      },
      "8": {
        start: {
          line: 210,
          column: 0
        },
        end: {
          line: 210,
          column: 113
        }
      },
      "9": {
        start: {
          line: 238,
          column: 0
        },
        end: {
          line: 238,
          column: 117
        }
      },
      "10": {
        start: {
          line: 262,
          column: 0
        },
        end: {
          line: 262,
          column: 133
        }
      },
      "11": {
        start: {
          line: 292,
          column: 0
        },
        end: {
          line: 292,
          column: 172
        }
      },
      "12": {
        start: {
          line: 331,
          column: 0
        },
        end: {
          line: 331,
          column: 162
        }
      },
      "13": {
        start: {
          line: 354,
          column: 0
        },
        end: {
          line: 354,
          column: 173
        }
      },
      "14": {
        start: {
          line: 382,
          column: 0
        },
        end: {
          line: 382,
          column: 107
        }
      },
      "15": {
        start: {
          line: 406,
          column: 0
        },
        end: {
          line: 406,
          column: 124
        }
      },
      "16": {
        start: {
          line: 436,
          column: 0
        },
        end: {
          line: 436,
          column: 184
        }
      },
      "17": {
        start: {
          line: 460,
          column: 0
        },
        end: {
          line: 460,
          column: 187
        }
      },
      "18": {
        start: {
          line: 501,
          column: 0
        },
        end: {
          line: 501,
          column: 162
        }
      },
      "19": {
        start: {
          line: 526,
          column: 0
        },
        end: {
          line: 526,
          column: 73
        }
      },
      "20": {
        start: {
          line: 541,
          column: 0
        },
        end: {
          line: 541,
          column: 105
        }
      },
      "21": {
        start: {
          line: 542,
          column: 0
        },
        end: {
          line: 542,
          column: 25
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\routes\\pushNotificationRoutes.ts",
      mappings: ";;;;;AAAA,sDAA8B;AAC9B,iEAA8D;AAC9D,2DAAwD;AACxD,0FAcmD;AAEnD,MAAM,MAAM,GAAG,iBAAO,CAAC,MAAM,EAAE,CAAC;AAEhC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAkJG;AAEH;;;;;GAKG;AAEH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA6CG;AACH,MAAM,CAAC,IAAI,CAAC,eAAe,EAAE,+BAAc,EAAE,iDAAoB,CAAC,CAAC;AAEnE;;;;;;;;;;;;;;;;;;;;;;;;;;GA0BG;AACH,MAAM,CAAC,GAAG,CAAC,gBAAgB,EAAE,+BAAc,EAAE,qDAAwB,CAAC,CAAC;AAEvE;;;;;;;;;;;;;;;;;;;;;;GAsBG;AACH,MAAM,CAAC,MAAM,CACX,+BAA+B,EAC/B,+BAAc,EACd,mDAAsB,CACvB,CAAC;AAEF;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA4BG;AACH,MAAM,CAAC,IAAI,CACT,eAAe,EACf,+BAAc,EACd,IAAA,yBAAW,EAAC,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC,EACpC,mDAAsB,CACvB,CAAC;AAEF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAqCG;AACH,MAAM,CAAC,IAAI,CACT,OAAO,EACP,+BAAc,EACd,IAAA,yBAAW,EAAC,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC,EACpC,iDAAoB,CACrB,CAAC;AAEF;;;;;;;;;;;;;;;;;;;;;GAqBG;AACH,MAAM,CAAC,IAAI,CACT,YAAY,EACZ,+BAAc,EACd,IAAA,yBAAW,EAAC,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC,EACpC,uDAA0B,CAC3B,CAAC;AAEF;;;;;;;;;;;;;;;;;;;;;;;;;;GA0BG;AACH,MAAM,CAAC,GAAG,CAAC,YAAY,EAAE,+BAAc,EAAE,+CAAkB,CAAC,CAAC;AAE7D;;;;;;;;;;;;;;;;;;;;;;GAsBG;AACH,MAAM,CAAC,GAAG,CAAC,wBAAwB,EAAE,+BAAc,EAAE,oDAAuB,CAAC,CAAC;AAE9E;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA4BG;AACH,MAAM,CAAC,GAAG,CACR,wBAAwB,EACxB,+BAAc,EACd,IAAA,yBAAW,EAAC,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC,EACpC,uDAA0B,CAC3B,CAAC;AAEF;;;;;;;;;;;;;;;;;;;;;;GAsBG;AACH,MAAM,CAAC,MAAM,CACX,wBAAwB,EACxB,+BAAc,EACd,IAAA,yBAAW,EAAC,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC,EACpC,uDAA0B,CAC3B,CAAC;AAEF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAuCG;AACH,MAAM,CAAC,GAAG,CACR,QAAQ,EACR,+BAAc,EACd,IAAA,yBAAW,EAAC,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC,EACpC,iDAAoB,CACrB,CAAC;AAEF;;;;;;;;;;;;;;;;;;;;;;;GAuBG;AACH,MAAM,CAAC,GAAG,CAAC,YAAY,EAAE,8CAAiB,CAAC,CAAC;AAE5C;;;;;;;;;;;;;GAaG;AACH,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,+BAAc,EAAE,iDAAoB,CAAC,CAAC;AAE3D,kBAAe,MAAM,CAAC",
      names: [],
      sources: ["C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\routes\\pushNotificationRoutes.ts"],
      sourcesContent: ["import express from 'express';\r\nimport { authMiddleware } from '../middleware/authMiddleware';\r\nimport { requireRole } from '../middleware/requireRole';\r\nimport {\r\n  savePushSubscription,\r\n  getUserPushSubscriptions,\r\n  deletePushSubscription,\r\n  sendNotificationToUser,\r\n  sendBulkNotification,\r\n  createNotificationTemplate,\r\n  getNotificationTemplate,\r\n  getActiveTemplates,\r\n  updateNotificationTemplate,\r\n  deleteNotificationTemplate,\r\n  getNotificationStats,\r\n  getVapidPublicKey,\r\n  testPushNotification,\r\n} from '../controllers/pushNotificationController';\r\n\r\nconst router = express.Router();\r\n\r\n/**\r\n * @swagger\r\n * components:\r\n *   schemas:\r\n *     PushSubscription:\r\n *       type: object\r\n *       required:\r\n *         - endpoint\r\n *         - keys\r\n *       properties:\r\n *         endpoint:\r\n *           type: string\r\n *           description: URL del endpoint de la suscripci\xF3n push\r\n *         keys:\r\n *           type: object\r\n *           properties:\r\n *             p256dh:\r\n *               type: string\r\n *               description: Clave p\xFAblica P-256\r\n *             auth:\r\n *               type: string\r\n *               description: Clave de autenticaci\xF3n\r\n *     PushNotification:\r\n *       type: object\r\n *       required:\r\n *         - title\r\n *         - body\r\n *       properties:\r\n *         title:\r\n *           type: string\r\n *           description: T\xEDtulo de la notificaci\xF3n\r\n *         body:\r\n *           type: string\r\n *           description: Cuerpo de la notificaci\xF3n\r\n *         icon:\r\n *           type: string\r\n *           description: URL del icono de la notificaci\xF3n\r\n *         badge:\r\n *           type: string\r\n *           description: URL del badge de la notificaci\xF3n\r\n *         image:\r\n *           type: string\r\n *           description: URL de la imagen de la notificaci\xF3n\r\n *         tag:\r\n *           type: string\r\n *           description: Tag para agrupar notificaciones\r\n *         data:\r\n *           type: object\r\n *           description: Datos adicionales de la notificaci\xF3n\r\n *         actions:\r\n *           type: array\r\n *           items:\r\n *             type: object\r\n *             properties:\r\n *               action:\r\n *                 type: string\r\n *               title:\r\n *                 type: string\r\n *               icon:\r\n *                 type: string\r\n *         requireInteraction:\r\n *           type: boolean\r\n *           description: Si la notificaci\xF3n requiere interacci\xF3n\r\n *         silent:\r\n *           type: boolean\r\n *           description: Si la notificaci\xF3n es silenciosa\r\n *         priority:\r\n *           type: string\r\n *           enum: [high, normal, low]\r\n *           description: Prioridad de la notificaci\xF3n\r\n *         ttl:\r\n *           type: number\r\n *           description: Tiempo de vida de la notificaci\xF3n en segundos\r\n *     NotificationTemplate:\r\n *       type: object\r\n *       required:\r\n *         - name\r\n *         - title\r\n *         - body\r\n *       properties:\r\n *         name:\r\n *           type: string\r\n *           description: Nombre del template\r\n *         title:\r\n *           type: string\r\n *           description: T\xEDtulo del template\r\n *         body:\r\n *           type: string\r\n *           description: Cuerpo del template\r\n *         icon:\r\n *           type: string\r\n *           description: URL del icono\r\n *         badge:\r\n *           type: string\r\n *           description: URL del badge\r\n *         image:\r\n *           type: string\r\n *           description: URL de la imagen\r\n *         tag:\r\n *           type: string\r\n *           description: Tag del template\r\n *         data:\r\n *           type: object\r\n *           description: Datos adicionales\r\n *         actions:\r\n *           type: array\r\n *           items:\r\n *             type: object\r\n *         requireInteraction:\r\n *           type: boolean\r\n *         silent:\r\n *           type: boolean\r\n *         priority:\r\n *           type: string\r\n *           enum: [high, normal, low]\r\n *         ttl:\r\n *           type: number\r\n *         isActive:\r\n *           type: boolean\r\n *           description: Si el template est\xE1 activo\r\n *     BulkNotificationRequest:\r\n *       type: object\r\n *       properties:\r\n *         userIds:\r\n *           type: array\r\n *           items:\r\n *             type: string\r\n *           description: IDs de usuarios espec\xEDficos\r\n *         userRoles:\r\n *           type: array\r\n *           items:\r\n *             type: string\r\n *           description: Roles de usuarios\r\n *         templateId:\r\n *           type: string\r\n *           description: ID del template a usar\r\n *         customNotification:\r\n *           $ref: '#/components/schemas/PushNotification'\r\n *         scheduledAt:\r\n *           type: string\r\n *           format: date-time\r\n *           description: Fecha programada para env\xEDo\r\n *         expiresAt:\r\n *           type: string\r\n *           format: date-time\r\n *           description: Fecha de expiraci\xF3n\r\n */\r\n\r\n/**\r\n * @swagger\r\n * tags:\r\n *   name: Push Notifications\r\n *   description: API para gesti\xF3n de notificaciones push\r\n */\r\n\r\n/**\r\n * @swagger\r\n * /push-notifications/subscription:\r\n *   post:\r\n *     summary: Guardar suscripci\xF3n push de un usuario\r\n *     tags: [Push Notifications]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             type: object\r\n *             required:\r\n *               - endpoint\r\n *               - keys\r\n *             properties:\r\n *               endpoint:\r\n *                 type: string\r\n *               keys:\r\n *                 type: object\r\n *                 properties:\r\n *                   p256dh:\r\n *                     type: string\r\n *                   auth:\r\n *                     type: string\r\n *     responses:\r\n *       201:\r\n *         description: Suscripci\xF3n guardada exitosamente\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 data:\r\n *                   $ref: '#/components/schemas/PushSubscription'\r\n *                 message:\r\n *                   type: string\r\n *       401:\r\n *         description: No autorizado\r\n *       400:\r\n *         description: Datos inv\xE1lidos\r\n */\r\nrouter.post('/subscription', authMiddleware, savePushSubscription);\r\n\r\n/**\r\n * @swagger\r\n * /push-notifications/subscriptions:\r\n *   get:\r\n *     summary: Obtener suscripciones push del usuario\r\n *     tags: [Push Notifications]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     responses:\r\n *       200:\r\n *         description: Suscripciones obtenidas exitosamente\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 data:\r\n *                   type: array\r\n *                   items:\r\n *                     $ref: '#/components/schemas/PushSubscription'\r\n *                 message:\r\n *                   type: string\r\n *       401:\r\n *         description: No autorizado\r\n */\r\nrouter.get('/subscriptions', authMiddleware, getUserPushSubscriptions);\r\n\r\n/**\r\n * @swagger\r\n * /push-notifications/subscription/{subscriptionId}:\r\n *   delete:\r\n *     summary: Eliminar suscripci\xF3n push\r\n *     tags: [Push Notifications]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     parameters:\r\n *       - in: path\r\n *         name: subscriptionId\r\n *         required: true\r\n *         schema:\r\n *           type: string\r\n *         description: ID de la suscripci\xF3n\r\n *     responses:\r\n *       200:\r\n *         description: Suscripci\xF3n eliminada exitosamente\r\n *       401:\r\n *         description: No autorizado\r\n *       404:\r\n *         description: Suscripci\xF3n no encontrada\r\n */\r\nrouter.delete(\r\n  '/subscription/:subscriptionId',\r\n  authMiddleware,\r\n  deletePushSubscription\r\n);\r\n\r\n/**\r\n * @swagger\r\n * /push-notifications/send/{userId}:\r\n *   post:\r\n *     summary: Enviar notificaci\xF3n push a un usuario espec\xEDfico\r\n *     tags: [Push Notifications]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     parameters:\r\n *       - in: path\r\n *         name: userId\r\n *         required: true\r\n *         schema:\r\n *           type: string\r\n *         description: ID del usuario\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             $ref: '#/components/schemas/PushNotification'\r\n *     responses:\r\n *       200:\r\n *         description: Notificaci\xF3n enviada exitosamente\r\n *       401:\r\n *         description: No autorizado\r\n *       400:\r\n *         description: Datos inv\xE1lidos\r\n */\r\nrouter.post(\r\n  '/send/:userId',\r\n  authMiddleware,\r\n  requireRole(['admin', 'superadmin']),\r\n  sendNotificationToUser\r\n);\r\n\r\n/**\r\n * @swagger\r\n * /push-notifications/bulk:\r\n *   post:\r\n *     summary: Enviar notificaci\xF3n masiva\r\n *     tags: [Push Notifications]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             $ref: '#/components/schemas/BulkNotificationRequest'\r\n *     responses:\r\n *       200:\r\n *         description: Notificaci\xF3n masiva enviada exitosamente\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 data:\r\n *                   type: object\r\n *                   properties:\r\n *                     success:\r\n *                       type: number\r\n *                     failed:\r\n *                       type: number\r\n *                 message:\r\n *                   type: string\r\n *       401:\r\n *         description: No autorizado\r\n *       400:\r\n *         description: Datos inv\xE1lidos\r\n */\r\nrouter.post(\r\n  '/bulk',\r\n  authMiddleware,\r\n  requireRole(['admin', 'superadmin']),\r\n  sendBulkNotification\r\n);\r\n\r\n/**\r\n * @swagger\r\n * /push-notifications/templates:\r\n *   post:\r\n *     summary: Crear template de notificaci\xF3n\r\n *     tags: [Push Notifications]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             $ref: '#/components/schemas/NotificationTemplate'\r\n *     responses:\r\n *       201:\r\n *         description: Template creado exitosamente\r\n *       401:\r\n *         description: No autorizado\r\n *       400:\r\n *         description: Datos inv\xE1lidos\r\n */\r\nrouter.post(\r\n  '/templates',\r\n  authMiddleware,\r\n  requireRole(['admin', 'superadmin']),\r\n  createNotificationTemplate\r\n);\r\n\r\n/**\r\n * @swagger\r\n * /push-notifications/templates:\r\n *   get:\r\n *     summary: Obtener templates activos\r\n *     tags: [Push Notifications]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     responses:\r\n *       200:\r\n *         description: Templates obtenidos exitosamente\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 data:\r\n *                   type: array\r\n *                   items:\r\n *                     $ref: '#/components/schemas/NotificationTemplate'\r\n *                 message:\r\n *                   type: string\r\n *       401:\r\n *         description: No autorizado\r\n */\r\nrouter.get('/templates', authMiddleware, getActiveTemplates);\r\n\r\n/**\r\n * @swagger\r\n * /push-notifications/templates/{templateId}:\r\n *   get:\r\n *     summary: Obtener template espec\xEDfico\r\n *     tags: [Push Notifications]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     parameters:\r\n *       - in: path\r\n *         name: templateId\r\n *         required: true\r\n *         schema:\r\n *           type: string\r\n *         description: ID del template\r\n *     responses:\r\n *       200:\r\n *         description: Template obtenido exitosamente\r\n *       401:\r\n *         description: No autorizado\r\n *       404:\r\n *         description: Template no encontrado\r\n */\r\nrouter.get('/templates/:templateId', authMiddleware, getNotificationTemplate);\r\n\r\n/**\r\n * @swagger\r\n * /push-notifications/templates/{templateId}:\r\n *   put:\r\n *     summary: Actualizar template de notificaci\xF3n\r\n *     tags: [Push Notifications]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     parameters:\r\n *       - in: path\r\n *         name: templateId\r\n *         required: true\r\n *         schema:\r\n *           type: string\r\n *         description: ID del template\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             $ref: '#/components/schemas/NotificationTemplate'\r\n *     responses:\r\n *       200:\r\n *         description: Template actualizado exitosamente\r\n *       401:\r\n *         description: No autorizado\r\n *       404:\r\n *         description: Template no encontrado\r\n */\r\nrouter.put(\r\n  '/templates/:templateId',\r\n  authMiddleware,\r\n  requireRole(['admin', 'superadmin']),\r\n  updateNotificationTemplate\r\n);\r\n\r\n/**\r\n * @swagger\r\n * /push-notifications/templates/{templateId}:\r\n *   delete:\r\n *     summary: Eliminar template de notificaci\xF3n\r\n *     tags: [Push Notifications]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     parameters:\r\n *       - in: path\r\n *         name: templateId\r\n *         required: true\r\n *         schema:\r\n *           type: string\r\n *         description: ID del template\r\n *     responses:\r\n *       200:\r\n *         description: Template eliminado exitosamente\r\n *       401:\r\n *         description: No autorizado\r\n *       404:\r\n *         description: Template no encontrado\r\n */\r\nrouter.delete(\r\n  '/templates/:templateId',\r\n  authMiddleware,\r\n  requireRole(['admin', 'superadmin']),\r\n  deleteNotificationTemplate\r\n);\r\n\r\n/**\r\n * @swagger\r\n * /push-notifications/stats:\r\n *   get:\r\n *     summary: Obtener estad\xEDsticas de notificaciones\r\n *     tags: [Push Notifications]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     responses:\r\n *       200:\r\n *         description: Estad\xEDsticas obtenidas exitosamente\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 data:\r\n *                   type: object\r\n *                   properties:\r\n *                     totalSubscriptions:\r\n *                       type: number\r\n *                     activeSubscriptions:\r\n *                       type: number\r\n *                     totalTemplates:\r\n *                       type: number\r\n *                     activeTemplates:\r\n *                       type: number\r\n *                     notificationsSentToday:\r\n *                       type: number\r\n *                     notificationsSentThisWeek:\r\n *                       type: number\r\n *                     notificationsSentThisMonth:\r\n *                       type: number\r\n *                 message:\r\n *                   type: string\r\n *       401:\r\n *         description: No autorizado\r\n */\r\nrouter.get(\r\n  '/stats',\r\n  authMiddleware,\r\n  requireRole(['admin', 'superadmin']),\r\n  getNotificationStats\r\n);\r\n\r\n/**\r\n * @swagger\r\n * /push-notifications/vapid-key:\r\n *   get:\r\n *     summary: Obtener VAPID public key\r\n *     tags: [Push Notifications]\r\n *     responses:\r\n *       200:\r\n *         description: VAPID public key obtenida exitosamente\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 data:\r\n *                   type: object\r\n *                   properties:\r\n *                     publicKey:\r\n *                       type: string\r\n *                 message:\r\n *                   type: string\r\n */\r\nrouter.get('/vapid-key', getVapidPublicKey);\r\n\r\n/**\r\n * @swagger\r\n * /push-notifications/test:\r\n *   post:\r\n *     summary: Probar notificaci\xF3n push (solo desarrollo)\r\n *     tags: [Push Notifications]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     responses:\r\n *       200:\r\n *         description: Notificaci\xF3n de prueba enviada exitosamente\r\n *       401:\r\n *         description: No autorizado\r\n */\r\nrouter.post('/test', authMiddleware, testPushNotification);\r\n\r\nexport default router;\r\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "24238091ac13e92d15ca3a0beffa68d47810f617"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_xbbxu3ym6 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_xbbxu3ym6();
var __importDefault =
/* istanbul ignore next */
(cov_xbbxu3ym6().s[0]++,
/* istanbul ignore next */
(cov_xbbxu3ym6().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_xbbxu3ym6().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_xbbxu3ym6().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_xbbxu3ym6().f[0]++;
  cov_xbbxu3ym6().s[1]++;
  return /* istanbul ignore next */(cov_xbbxu3ym6().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_xbbxu3ym6().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_xbbxu3ym6().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_xbbxu3ym6().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_xbbxu3ym6().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const express_1 =
/* istanbul ignore next */
(cov_xbbxu3ym6().s[3]++, __importDefault(require("express")));
const authMiddleware_1 =
/* istanbul ignore next */
(cov_xbbxu3ym6().s[4]++, require("../middleware/authMiddleware"));
const requireRole_1 =
/* istanbul ignore next */
(cov_xbbxu3ym6().s[5]++, require("../middleware/requireRole"));
const pushNotificationController_1 =
/* istanbul ignore next */
(cov_xbbxu3ym6().s[6]++, require("../controllers/pushNotificationController"));
const router =
/* istanbul ignore next */
(cov_xbbxu3ym6().s[7]++, express_1.default.Router());
/**
 * @swagger
 * components:
 *   schemas:
 *     PushSubscription:
 *       type: object
 *       required:
 *         - endpoint
 *         - keys
 *       properties:
 *         endpoint:
 *           type: string
 *           description: URL del endpoint de la suscripción push
 *         keys:
 *           type: object
 *           properties:
 *             p256dh:
 *               type: string
 *               description: Clave pública P-256
 *             auth:
 *               type: string
 *               description: Clave de autenticación
 *     PushNotification:
 *       type: object
 *       required:
 *         - title
 *         - body
 *       properties:
 *         title:
 *           type: string
 *           description: Título de la notificación
 *         body:
 *           type: string
 *           description: Cuerpo de la notificación
 *         icon:
 *           type: string
 *           description: URL del icono de la notificación
 *         badge:
 *           type: string
 *           description: URL del badge de la notificación
 *         image:
 *           type: string
 *           description: URL de la imagen de la notificación
 *         tag:
 *           type: string
 *           description: Tag para agrupar notificaciones
 *         data:
 *           type: object
 *           description: Datos adicionales de la notificación
 *         actions:
 *           type: array
 *           items:
 *             type: object
 *             properties:
 *               action:
 *                 type: string
 *               title:
 *                 type: string
 *               icon:
 *                 type: string
 *         requireInteraction:
 *           type: boolean
 *           description: Si la notificación requiere interacción
 *         silent:
 *           type: boolean
 *           description: Si la notificación es silenciosa
 *         priority:
 *           type: string
 *           enum: [high, normal, low]
 *           description: Prioridad de la notificación
 *         ttl:
 *           type: number
 *           description: Tiempo de vida de la notificación en segundos
 *     NotificationTemplate:
 *       type: object
 *       required:
 *         - name
 *         - title
 *         - body
 *       properties:
 *         name:
 *           type: string
 *           description: Nombre del template
 *         title:
 *           type: string
 *           description: Título del template
 *         body:
 *           type: string
 *           description: Cuerpo del template
 *         icon:
 *           type: string
 *           description: URL del icono
 *         badge:
 *           type: string
 *           description: URL del badge
 *         image:
 *           type: string
 *           description: URL de la imagen
 *         tag:
 *           type: string
 *           description: Tag del template
 *         data:
 *           type: object
 *           description: Datos adicionales
 *         actions:
 *           type: array
 *           items:
 *             type: object
 *         requireInteraction:
 *           type: boolean
 *         silent:
 *           type: boolean
 *         priority:
 *           type: string
 *           enum: [high, normal, low]
 *         ttl:
 *           type: number
 *         isActive:
 *           type: boolean
 *           description: Si el template está activo
 *     BulkNotificationRequest:
 *       type: object
 *       properties:
 *         userIds:
 *           type: array
 *           items:
 *             type: string
 *           description: IDs de usuarios específicos
 *         userRoles:
 *           type: array
 *           items:
 *             type: string
 *           description: Roles de usuarios
 *         templateId:
 *           type: string
 *           description: ID del template a usar
 *         customNotification:
 *           $ref: '#/components/schemas/PushNotification'
 *         scheduledAt:
 *           type: string
 *           format: date-time
 *           description: Fecha programada para envío
 *         expiresAt:
 *           type: string
 *           format: date-time
 *           description: Fecha de expiración
 */
/**
 * @swagger
 * tags:
 *   name: Push Notifications
 *   description: API para gestión de notificaciones push
 */
/**
 * @swagger
 * /push-notifications/subscription:
 *   post:
 *     summary: Guardar suscripción push de un usuario
 *     tags: [Push Notifications]
 *     security:
 *       - bearerAuth: []
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             type: object
 *             required:
 *               - endpoint
 *               - keys
 *             properties:
 *               endpoint:
 *                 type: string
 *               keys:
 *                 type: object
 *                 properties:
 *                   p256dh:
 *                     type: string
 *                   auth:
 *                     type: string
 *     responses:
 *       201:
 *         description: Suscripción guardada exitosamente
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 data:
 *                   $ref: '#/components/schemas/PushSubscription'
 *                 message:
 *                   type: string
 *       401:
 *         description: No autorizado
 *       400:
 *         description: Datos inválidos
 */
/* istanbul ignore next */
cov_xbbxu3ym6().s[8]++;
router.post('/subscription', authMiddleware_1.authMiddleware, pushNotificationController_1.savePushSubscription);
/**
 * @swagger
 * /push-notifications/subscriptions:
 *   get:
 *     summary: Obtener suscripciones push del usuario
 *     tags: [Push Notifications]
 *     security:
 *       - bearerAuth: []
 *     responses:
 *       200:
 *         description: Suscripciones obtenidas exitosamente
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 data:
 *                   type: array
 *                   items:
 *                     $ref: '#/components/schemas/PushSubscription'
 *                 message:
 *                   type: string
 *       401:
 *         description: No autorizado
 */
/* istanbul ignore next */
cov_xbbxu3ym6().s[9]++;
router.get('/subscriptions', authMiddleware_1.authMiddleware, pushNotificationController_1.getUserPushSubscriptions);
/**
 * @swagger
 * /push-notifications/subscription/{subscriptionId}:
 *   delete:
 *     summary: Eliminar suscripción push
 *     tags: [Push Notifications]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: path
 *         name: subscriptionId
 *         required: true
 *         schema:
 *           type: string
 *         description: ID de la suscripción
 *     responses:
 *       200:
 *         description: Suscripción eliminada exitosamente
 *       401:
 *         description: No autorizado
 *       404:
 *         description: Suscripción no encontrada
 */
/* istanbul ignore next */
cov_xbbxu3ym6().s[10]++;
router.delete('/subscription/:subscriptionId', authMiddleware_1.authMiddleware, pushNotificationController_1.deletePushSubscription);
/**
 * @swagger
 * /push-notifications/send/{userId}:
 *   post:
 *     summary: Enviar notificación push a un usuario específico
 *     tags: [Push Notifications]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: path
 *         name: userId
 *         required: true
 *         schema:
 *           type: string
 *         description: ID del usuario
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             $ref: '#/components/schemas/PushNotification'
 *     responses:
 *       200:
 *         description: Notificación enviada exitosamente
 *       401:
 *         description: No autorizado
 *       400:
 *         description: Datos inválidos
 */
/* istanbul ignore next */
cov_xbbxu3ym6().s[11]++;
router.post('/send/:userId', authMiddleware_1.authMiddleware, (0, requireRole_1.requireRole)(['admin', 'superadmin']), pushNotificationController_1.sendNotificationToUser);
/**
 * @swagger
 * /push-notifications/bulk:
 *   post:
 *     summary: Enviar notificación masiva
 *     tags: [Push Notifications]
 *     security:
 *       - bearerAuth: []
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             $ref: '#/components/schemas/BulkNotificationRequest'
 *     responses:
 *       200:
 *         description: Notificación masiva enviada exitosamente
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 data:
 *                   type: object
 *                   properties:
 *                     success:
 *                       type: number
 *                     failed:
 *                       type: number
 *                 message:
 *                   type: string
 *       401:
 *         description: No autorizado
 *       400:
 *         description: Datos inválidos
 */
/* istanbul ignore next */
cov_xbbxu3ym6().s[12]++;
router.post('/bulk', authMiddleware_1.authMiddleware, (0, requireRole_1.requireRole)(['admin', 'superadmin']), pushNotificationController_1.sendBulkNotification);
/**
 * @swagger
 * /push-notifications/templates:
 *   post:
 *     summary: Crear template de notificación
 *     tags: [Push Notifications]
 *     security:
 *       - bearerAuth: []
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             $ref: '#/components/schemas/NotificationTemplate'
 *     responses:
 *       201:
 *         description: Template creado exitosamente
 *       401:
 *         description: No autorizado
 *       400:
 *         description: Datos inválidos
 */
/* istanbul ignore next */
cov_xbbxu3ym6().s[13]++;
router.post('/templates', authMiddleware_1.authMiddleware, (0, requireRole_1.requireRole)(['admin', 'superadmin']), pushNotificationController_1.createNotificationTemplate);
/**
 * @swagger
 * /push-notifications/templates:
 *   get:
 *     summary: Obtener templates activos
 *     tags: [Push Notifications]
 *     security:
 *       - bearerAuth: []
 *     responses:
 *       200:
 *         description: Templates obtenidos exitosamente
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 data:
 *                   type: array
 *                   items:
 *                     $ref: '#/components/schemas/NotificationTemplate'
 *                 message:
 *                   type: string
 *       401:
 *         description: No autorizado
 */
/* istanbul ignore next */
cov_xbbxu3ym6().s[14]++;
router.get('/templates', authMiddleware_1.authMiddleware, pushNotificationController_1.getActiveTemplates);
/**
 * @swagger
 * /push-notifications/templates/{templateId}:
 *   get:
 *     summary: Obtener template específico
 *     tags: [Push Notifications]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: path
 *         name: templateId
 *         required: true
 *         schema:
 *           type: string
 *         description: ID del template
 *     responses:
 *       200:
 *         description: Template obtenido exitosamente
 *       401:
 *         description: No autorizado
 *       404:
 *         description: Template no encontrado
 */
/* istanbul ignore next */
cov_xbbxu3ym6().s[15]++;
router.get('/templates/:templateId', authMiddleware_1.authMiddleware, pushNotificationController_1.getNotificationTemplate);
/**
 * @swagger
 * /push-notifications/templates/{templateId}:
 *   put:
 *     summary: Actualizar template de notificación
 *     tags: [Push Notifications]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: path
 *         name: templateId
 *         required: true
 *         schema:
 *           type: string
 *         description: ID del template
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             $ref: '#/components/schemas/NotificationTemplate'
 *     responses:
 *       200:
 *         description: Template actualizado exitosamente
 *       401:
 *         description: No autorizado
 *       404:
 *         description: Template no encontrado
 */
/* istanbul ignore next */
cov_xbbxu3ym6().s[16]++;
router.put('/templates/:templateId', authMiddleware_1.authMiddleware, (0, requireRole_1.requireRole)(['admin', 'superadmin']), pushNotificationController_1.updateNotificationTemplate);
/**
 * @swagger
 * /push-notifications/templates/{templateId}:
 *   delete:
 *     summary: Eliminar template de notificación
 *     tags: [Push Notifications]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: path
 *         name: templateId
 *         required: true
 *         schema:
 *           type: string
 *         description: ID del template
 *     responses:
 *       200:
 *         description: Template eliminado exitosamente
 *       401:
 *         description: No autorizado
 *       404:
 *         description: Template no encontrado
 */
/* istanbul ignore next */
cov_xbbxu3ym6().s[17]++;
router.delete('/templates/:templateId', authMiddleware_1.authMiddleware, (0, requireRole_1.requireRole)(['admin', 'superadmin']), pushNotificationController_1.deleteNotificationTemplate);
/**
 * @swagger
 * /push-notifications/stats:
 *   get:
 *     summary: Obtener estadísticas de notificaciones
 *     tags: [Push Notifications]
 *     security:
 *       - bearerAuth: []
 *     responses:
 *       200:
 *         description: Estadísticas obtenidas exitosamente
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 data:
 *                   type: object
 *                   properties:
 *                     totalSubscriptions:
 *                       type: number
 *                     activeSubscriptions:
 *                       type: number
 *                     totalTemplates:
 *                       type: number
 *                     activeTemplates:
 *                       type: number
 *                     notificationsSentToday:
 *                       type: number
 *                     notificationsSentThisWeek:
 *                       type: number
 *                     notificationsSentThisMonth:
 *                       type: number
 *                 message:
 *                   type: string
 *       401:
 *         description: No autorizado
 */
/* istanbul ignore next */
cov_xbbxu3ym6().s[18]++;
router.get('/stats', authMiddleware_1.authMiddleware, (0, requireRole_1.requireRole)(['admin', 'superadmin']), pushNotificationController_1.getNotificationStats);
/**
 * @swagger
 * /push-notifications/vapid-key:
 *   get:
 *     summary: Obtener VAPID public key
 *     tags: [Push Notifications]
 *     responses:
 *       200:
 *         description: VAPID public key obtenida exitosamente
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 data:
 *                   type: object
 *                   properties:
 *                     publicKey:
 *                       type: string
 *                 message:
 *                   type: string
 */
/* istanbul ignore next */
cov_xbbxu3ym6().s[19]++;
router.get('/vapid-key', pushNotificationController_1.getVapidPublicKey);
/**
 * @swagger
 * /push-notifications/test:
 *   post:
 *     summary: Probar notificación push (solo desarrollo)
 *     tags: [Push Notifications]
 *     security:
 *       - bearerAuth: []
 *     responses:
 *       200:
 *         description: Notificación de prueba enviada exitosamente
 *       401:
 *         description: No autorizado
 */
/* istanbul ignore next */
cov_xbbxu3ym6().s[20]++;
router.post('/test', authMiddleware_1.authMiddleware, pushNotificationController_1.testPushNotification);
/* istanbul ignore next */
cov_xbbxu3ym6().s[21]++;
exports.default = router;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,