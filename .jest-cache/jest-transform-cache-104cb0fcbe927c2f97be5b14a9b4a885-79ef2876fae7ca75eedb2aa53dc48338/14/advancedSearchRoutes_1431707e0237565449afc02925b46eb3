73cbe883416a2ccf2076bd76acf3a98c
"use strict";

/* istanbul ignore next */
function cov_2k13j4brki() {
  var path = "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\routes\\advancedSearchRoutes.ts";
  var hash = "adbc88228c92021e0f40a1474b2b80889a483541";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\routes\\advancedSearchRoutes.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 16
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 28
        },
        end: {
          line: 3,
          column: 110
        }
      },
      "2": {
        start: {
          line: 3,
          column: 91
        },
        end: {
          line: 3,
          column: 106
        }
      },
      "3": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "4": {
        start: {
          line: 5,
          column: 36
        },
        end: {
          line: 5,
          column: 97
        }
      },
      "5": {
        start: {
          line: 5,
          column: 42
        },
        end: {
          line: 5,
          column: 70
        }
      },
      "6": {
        start: {
          line: 5,
          column: 85
        },
        end: {
          line: 5,
          column: 95
        }
      },
      "7": {
        start: {
          line: 6,
          column: 35
        },
        end: {
          line: 6,
          column: 100
        }
      },
      "8": {
        start: {
          line: 6,
          column: 41
        },
        end: {
          line: 6,
          column: 73
        }
      },
      "9": {
        start: {
          line: 6,
          column: 88
        },
        end: {
          line: 6,
          column: 98
        }
      },
      "10": {
        start: {
          line: 7,
          column: 32
        },
        end: {
          line: 7,
          column: 116
        }
      },
      "11": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 78
        }
      },
      "12": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 62
        }
      },
      "13": {
        start: {
          line: 12,
          column: 18
        },
        end: {
          line: 12,
          column: 36
        }
      },
      "14": {
        start: {
          line: 13,
          column: 35
        },
        end: {
          line: 13,
          column: 85
        }
      },
      "15": {
        start: {
          line: 14,
          column: 25
        },
        end: {
          line: 14,
          column: 64
        }
      },
      "16": {
        start: {
          line: 15,
          column: 22
        },
        end: {
          line: 15,
          column: 58
        }
      },
      "17": {
        start: {
          line: 16,
          column: 15
        },
        end: {
          line: 16,
          column: 38
        }
      },
      "18": {
        start: {
          line: 17,
          column: 33
        },
        end: {
          line: 17,
          column: 90
        }
      },
      "19": {
        start: {
          line: 110,
          column: 0
        },
        end: {
          line: 112,
          column: 4
        }
      },
      "20": {
        start: {
          line: 110,
          column: 195
        },
        end: {
          line: 112,
          column: 2
        }
      },
      "21": {
        start: {
          line: 111,
          column: 4
        },
        end: {
          line: 111,
          column: 70
        }
      },
      "22": {
        start: {
          line: 155,
          column: 0
        },
        end: {
          line: 157,
          column: 4
        }
      },
      "23": {
        start: {
          line: 155,
          column: 204
        },
        end: {
          line: 157,
          column: 2
        }
      },
      "24": {
        start: {
          line: 156,
          column: 4
        },
        end: {
          line: 156,
          column: 71
        }
      },
      "25": {
        start: {
          line: 213,
          column: 0
        },
        end: {
          line: 215,
          column: 4
        }
      },
      "26": {
        start: {
          line: 213,
          column: 194
        },
        end: {
          line: 215,
          column: 2
        }
      },
      "27": {
        start: {
          line: 214,
          column: 4
        },
        end: {
          line: 214,
          column: 66
        }
      },
      "28": {
        start: {
          line: 252,
          column: 0
        },
        end: {
          line: 254,
          column: 4
        }
      },
      "29": {
        start: {
          line: 252,
          column: 129
        },
        end: {
          line: 254,
          column: 2
        }
      },
      "30": {
        start: {
          line: 253,
          column: 4
        },
        end: {
          line: 253,
          column: 63
        }
      },
      "31": {
        start: {
          line: 305,
          column: 0
        },
        end: {
          line: 307,
          column: 4
        }
      },
      "32": {
        start: {
          line: 305,
          column: 225
        },
        end: {
          line: 307,
          column: 2
        }
      },
      "33": {
        start: {
          line: 306,
          column: 4
        },
        end: {
          line: 306,
          column: 66
        }
      },
      "34": {
        start: {
          line: 387,
          column: 0
        },
        end: {
          line: 389,
          column: 4
        }
      },
      "35": {
        start: {
          line: 387,
          column: 200
        },
        end: {
          line: 389,
          column: 2
        }
      },
      "36": {
        start: {
          line: 388,
          column: 4
        },
        end: {
          line: 388,
          column: 67
        }
      },
      "37": {
        start: {
          line: 390,
          column: 0
        },
        end: {
          line: 390,
          column: 25
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 2,
            column: 45
          }
        },
        loc: {
          start: {
            line: 2,
            column: 89
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "adopt",
        decl: {
          start: {
            line: 3,
            column: 13
          },
          end: {
            line: 3,
            column: 18
          }
        },
        loc: {
          start: {
            line: 3,
            column: 26
          },
          end: {
            line: 3,
            column: 112
          }
        },
        line: 3
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 3,
            column: 70
          },
          end: {
            line: 3,
            column: 71
          }
        },
        loc: {
          start: {
            line: 3,
            column: 89
          },
          end: {
            line: 3,
            column: 108
          }
        },
        line: 3
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 4,
            column: 36
          },
          end: {
            line: 4,
            column: 37
          }
        },
        loc: {
          start: {
            line: 4,
            column: 63
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 4
      },
      "4": {
        name: "fulfilled",
        decl: {
          start: {
            line: 5,
            column: 17
          },
          end: {
            line: 5,
            column: 26
          }
        },
        loc: {
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 99
          }
        },
        line: 5
      },
      "5": {
        name: "rejected",
        decl: {
          start: {
            line: 6,
            column: 17
          },
          end: {
            line: 6,
            column: 25
          }
        },
        loc: {
          start: {
            line: 6,
            column: 33
          },
          end: {
            line: 6,
            column: 102
          }
        },
        line: 6
      },
      "6": {
        name: "step",
        decl: {
          start: {
            line: 7,
            column: 17
          },
          end: {
            line: 7,
            column: 21
          }
        },
        loc: {
          start: {
            line: 7,
            column: 30
          },
          end: {
            line: 7,
            column: 118
          }
        },
        line: 7
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 110,
            column: 181
          },
          end: {
            line: 110,
            column: 182
          }
        },
        loc: {
          start: {
            line: 110,
            column: 195
          },
          end: {
            line: 112,
            column: 2
          }
        },
        line: 110
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 110,
            column: 229
          },
          end: {
            line: 110,
            column: 230
          }
        },
        loc: {
          start: {
            line: 110,
            column: 242
          },
          end: {
            line: 112,
            column: 1
          }
        },
        line: 110
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 155,
            column: 190
          },
          end: {
            line: 155,
            column: 191
          }
        },
        loc: {
          start: {
            line: 155,
            column: 204
          },
          end: {
            line: 157,
            column: 2
          }
        },
        line: 155
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 155,
            column: 238
          },
          end: {
            line: 155,
            column: 239
          }
        },
        loc: {
          start: {
            line: 155,
            column: 251
          },
          end: {
            line: 157,
            column: 1
          }
        },
        line: 155
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 213,
            column: 180
          },
          end: {
            line: 213,
            column: 181
          }
        },
        loc: {
          start: {
            line: 213,
            column: 194
          },
          end: {
            line: 215,
            column: 2
          }
        },
        line: 213
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 213,
            column: 228
          },
          end: {
            line: 213,
            column: 229
          }
        },
        loc: {
          start: {
            line: 213,
            column: 241
          },
          end: {
            line: 215,
            column: 1
          }
        },
        line: 213
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 252,
            column: 115
          },
          end: {
            line: 252,
            column: 116
          }
        },
        loc: {
          start: {
            line: 252,
            column: 129
          },
          end: {
            line: 254,
            column: 2
          }
        },
        line: 252
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 252,
            column: 163
          },
          end: {
            line: 252,
            column: 164
          }
        },
        loc: {
          start: {
            line: 252,
            column: 176
          },
          end: {
            line: 254,
            column: 1
          }
        },
        line: 252
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 305,
            column: 211
          },
          end: {
            line: 305,
            column: 212
          }
        },
        loc: {
          start: {
            line: 305,
            column: 225
          },
          end: {
            line: 307,
            column: 2
          }
        },
        line: 305
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 305,
            column: 259
          },
          end: {
            line: 305,
            column: 260
          }
        },
        loc: {
          start: {
            line: 305,
            column: 272
          },
          end: {
            line: 307,
            column: 1
          }
        },
        line: 305
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 387,
            column: 186
          },
          end: {
            line: 387,
            column: 187
          }
        },
        loc: {
          start: {
            line: 387,
            column: 200
          },
          end: {
            line: 389,
            column: 2
          }
        },
        line: 387
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 387,
            column: 234
          },
          end: {
            line: 387,
            column: 235
          }
        },
        loc: {
          start: {
            line: 387,
            column: 247
          },
          end: {
            line: 389,
            column: 1
          }
        },
        line: 387
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 16
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 17
          },
          end: {
            line: 2,
            column: 21
          }
        }, {
          start: {
            line: 2,
            column: 25
          },
          end: {
            line: 2,
            column: 39
          }
        }, {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 35
          },
          end: {
            line: 3,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 56
          },
          end: {
            line: 3,
            column: 61
          }
        }, {
          start: {
            line: 3,
            column: 64
          },
          end: {
            line: 3,
            column: 109
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 17
          }
        }, {
          start: {
            line: 4,
            column: 22
          },
          end: {
            line: 4,
            column: 33
          }
        }],
        line: 4
      },
      "3": {
        loc: {
          start: {
            line: 7,
            column: 32
          },
          end: {
            line: 7,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 7,
            column: 46
          },
          end: {
            line: 7,
            column: 67
          }
        }, {
          start: {
            line: 7,
            column: 70
          },
          end: {
            line: 7,
            column: 115
          }
        }],
        line: 7
      },
      "4": {
        loc: {
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 61
          }
        }, {
          start: {
            line: 8,
            column: 65
          },
          end: {
            line: 8,
            column: 67
          }
        }],
        line: 8
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\routes\\advancedSearchRoutes.ts",
      mappings: ";;;;;;;;;;;AAAA,qCAAiC;AACjC,sFAAmF;AACnF,iEAA8D;AAC9D,2DAAwD;AAExD,MAAM,MAAM,GAAG,IAAA,gBAAM,GAAE,CAAC;AACxB,MAAM,wBAAwB,GAAG,IAAI,mDAAwB,EAAE,CAAC;AAEhE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA2FG;AACH,MAAM,CAAC,IAAI,CAAC,YAAY,EACtB,+BAAc,EACd,IAAA,yBAAW,EAAC,CAAC,cAAc,EAAE,SAAS,EAAE,aAAa,EAAE,eAAe,EAAE,aAAa,EAAE,YAAY,CAAC,CAAC,EACrG,CAAO,GAAG,EAAE,GAAG,EAAE,EAAE;IACjB,MAAM,wBAAwB,CAAC,wBAAwB,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AACpE,CAAC,CAAA,CACF,CAAC;AAEF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAyCG;AACH,MAAM,CAAC,IAAI,CAAC,qBAAqB,EAC/B,+BAAc,EACd,IAAA,yBAAW,EAAC,CAAC,cAAc,EAAE,SAAS,EAAE,aAAa,EAAE,eAAe,EAAE,aAAa,EAAE,YAAY,CAAC,CAAC,EACrG,CAAO,GAAG,EAAE,GAAG,EAAE,EAAE;IACjB,MAAM,wBAAwB,CAAC,yBAAyB,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AACrE,CAAC,CAAA,CACF,CAAC;AAEF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAsDG;AACH,MAAM,CAAC,IAAI,CAAC,4BAA4B,EACtC,+BAAc,EACd,IAAA,yBAAW,EAAC,CAAC,QAAQ,EAAE,aAAa,EAAE,eAAe,EAAE,aAAa,EAAE,YAAY,CAAC,CAAC,EACpF,CAAO,GAAG,EAAE,GAAG,EAAE,EAAE;IACjB,MAAM,wBAAwB,CAAC,oBAAoB,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAChE,CAAC,CAAA,CACF,CAAC;AAEF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAmCG;AACH,MAAM,CAAC,IAAI,CAAC,wBAAwB,EAClC,+BAAc,EACd,IAAA,yBAAW,EAAC,CAAC,QAAQ,CAAC,CAAC,EACvB,CAAO,GAAG,EAAE,GAAG,EAAE,EAAE;IACjB,MAAM,wBAAwB,CAAC,iBAAiB,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC7D,CAAC,CAAA,CACF,CAAC;AAEF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAiDG;AACH,MAAM,CAAC,GAAG,CAAC,iCAAiC,EAC1C,+BAAc,EACd,IAAA,yBAAW,EAAC,CAAC,QAAQ,EAAE,cAAc,EAAE,SAAS,EAAE,aAAa,EAAE,eAAe,EAAE,aAAa,EAAE,YAAY,CAAC,CAAC,EAC/G,CAAO,GAAG,EAAE,GAAG,EAAE,EAAE;IACjB,MAAM,wBAAwB,CAAC,oBAAoB,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAChE,CAAC,CAAA,CACF,CAAC;AAEF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA8EG;AACH,MAAM,CAAC,IAAI,CAAC,iBAAiB,EAC3B,+BAAc,EACd,IAAA,yBAAW,EAAC,CAAC,cAAc,EAAE,SAAS,EAAE,aAAa,EAAE,eAAe,EAAE,aAAa,EAAE,YAAY,CAAC,CAAC,EACrG,CAAO,GAAG,EAAE,GAAG,EAAE,EAAE;IACjB,MAAM,wBAAwB,CAAC,qBAAqB,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AACjE,CAAC,CAAA,CACF,CAAC;AAEF,kBAAe,MAAM,CAAC",
      names: [],
      sources: ["C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\routes\\advancedSearchRoutes.ts"],
      sourcesContent: ["import { Router } from 'express';\r\nimport { AdvancedSearchController } from '../controllers/advancedSearchController';\r\nimport { authMiddleware } from '../middleware/authMiddleware';\r\nimport { requireRole } from '../middleware/requireRole';\r\n\r\nconst router = Router();\r\nconst advancedSearchController = new AdvancedSearchController();\r\n\r\n/**\r\n * @swagger\r\n * /api/advanced-search/musicians:\r\n *   post:\r\n *     summary: B\xFAsqueda avanzada de m\xFAsicos con verificaci\xF3n de disponibilidad\r\n *     tags: [Advanced Search]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             type: object\r\n *             required:\r\n *               - eventType\r\n *               - instrument\r\n *               - location\r\n *               - eventDate\r\n *               - duration\r\n *             properties:\r\n *               eventType:\r\n *                 type: string\r\n *                 description: Tipo de evento\r\n *                 example: \"wedding\"\r\n *               instrument:\r\n *                 type: string\r\n *                 description: Instrumento requerido\r\n *                 example: \"guitarra\"\r\n *               location:\r\n *                 type: string\r\n *                 description: Ubicaci\xF3n del evento\r\n *                 example: \"Madrid\"\r\n *               eventDate:\r\n *                 type: string\r\n *                 format: date-time\r\n *                 description: Fecha y hora del evento\r\n *                 example: \"2024-12-25T20:00:00Z\"\r\n *               duration:\r\n *                 type: number\r\n *                 description: Duraci\xF3n en minutos\r\n *                 example: 120\r\n *               budget:\r\n *                 type: object\r\n *                 properties:\r\n *                   min:\r\n *                     type: number\r\n *                     example: 100\r\n *                   max:\r\n *                     type: number\r\n *                     example: 500\r\n *               isUrgent:\r\n *                 type: boolean\r\n *                 default: false\r\n *               radius:\r\n *                 type: number\r\n *                 default: 50\r\n *                 description: Radio de b\xFAsqueda en km\r\n *     responses:\r\n *       200:\r\n *         description: B\xFAsqueda completada exitosamente\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 data:\r\n *                   type: object\r\n *                   properties:\r\n *                     availableMusicians:\r\n *                       type: array\r\n *                       items:\r\n *                         type: object\r\n *                     unavailableMusicians:\r\n *                       type: array\r\n *                       items:\r\n *                         type: object\r\n *                     totalFound:\r\n *                       type: number\r\n *                     availableCount:\r\n *                       type: number\r\n *                     unavailableCount:\r\n *                       type: number\r\n *       400:\r\n *         description: Par\xE1metros inv\xE1lidos\r\n *       401:\r\n *         description: No autorizado\r\n *       500:\r\n *         description: Error interno del servidor\r\n */\r\nrouter.post('/musicians', \r\n  authMiddleware, \r\n  requireRole(['eventCreator', 'usuario', 'adminJunior', 'adminMidLevel', 'adminSenior', 'superAdmin']),\r\n  async (req, res) => {\r\n    await advancedSearchController.searchAvailableMusicians(req, res);\r\n  }\r\n);\r\n\r\n/**\r\n * @swagger\r\n * /api/advanced-search/check-availability:\r\n *   post:\r\n *     summary: Verificar disponibilidad espec\xEDfica de un m\xFAsico\r\n *     tags: [Advanced Search]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             type: object\r\n *             required:\r\n *               - musicianId\r\n *               - eventDate\r\n *               - duration\r\n *             properties:\r\n *               musicianId:\r\n *                 type: string\r\n *                 description: ID del m\xFAsico\r\n *               eventDate:\r\n *                 type: string\r\n *                 format: date-time\r\n *                 description: Fecha y hora del evento\r\n *               duration:\r\n *                 type: number\r\n *                 description: Duraci\xF3n en minutos\r\n *               location:\r\n *                 type: string\r\n *                 description: Ubicaci\xF3n del evento\r\n *     responses:\r\n *       200:\r\n *         description: Verificaci\xF3n completada\r\n *       400:\r\n *         description: Par\xE1metros inv\xE1lidos\r\n *       404:\r\n *         description: M\xFAsico no encontrado\r\n *       500:\r\n *         description: Error interno del servidor\r\n */\r\nrouter.post('/check-availability',\r\n  authMiddleware,\r\n  requireRole(['eventCreator', 'usuario', 'adminJunior', 'adminMidLevel', 'adminSenior', 'superAdmin']),\r\n  async (req, res) => {\r\n    await advancedSearchController.checkMusicianAvailability(req, res);\r\n  }\r\n);\r\n\r\n/**\r\n * @swagger\r\n * /api/advanced-search/update-status/{musicianId}:\r\n *   post:\r\n *     summary: Actualizar estado del m\xFAsico\r\n *     tags: [Advanced Search]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     parameters:\r\n *       - in: path\r\n *         name: musicianId\r\n *         required: true\r\n *         schema:\r\n *           type: string\r\n *         description: ID del m\xFAsico\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             type: object\r\n *             properties:\r\n *               isOnline:\r\n *                 type: boolean\r\n *                 description: Estado online/offline\r\n *               currentLocation:\r\n *                 type: object\r\n *                 properties:\r\n *                   latitude:\r\n *                     type: number\r\n *                   longitude:\r\n *                     type: number\r\n *                   address:\r\n *                     type: string\r\n *               availability:\r\n *                 type: object\r\n *                 properties:\r\n *                   isAvailable:\r\n *                     type: boolean\r\n *                   availableFrom:\r\n *                     type: string\r\n *                     format: date-time\r\n *                   availableTo:\r\n *                     type: string\r\n *                     format: date-time\r\n *                   maxDistance:\r\n *                     type: number\r\n *     responses:\r\n *       200:\r\n *         description: Estado actualizado exitosamente\r\n *       400:\r\n *         description: Par\xE1metros inv\xE1lidos\r\n *       500:\r\n *         description: Error interno del servidor\r\n */\r\nrouter.post('/update-status/:musicianId',\r\n  authMiddleware,\r\n  requireRole(['musico', 'adminJunior', 'adminMidLevel', 'adminSenior', 'superAdmin']),\r\n  async (req, res) => {\r\n    await advancedSearchController.updateMusicianStatus(req, res);\r\n  }\r\n);\r\n\r\n/**\r\n * @swagger\r\n * /api/advanced-search/heartbeat/{musicianId}:\r\n *   post:\r\n *     summary: Heartbeat para mantener estado online\r\n *     tags: [Advanced Search]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     parameters:\r\n *       - in: path\r\n *         name: musicianId\r\n *         required: true\r\n *         schema:\r\n *           type: string\r\n *         description: ID del m\xFAsico\r\n *     requestBody:\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             type: object\r\n *             properties:\r\n *               location:\r\n *                 type: object\r\n *                 properties:\r\n *                   latitude:\r\n *                     type: number\r\n *                   longitude:\r\n *                     type: number\r\n *     responses:\r\n *       200:\r\n *         description: Heartbeat registrado correctamente\r\n *       400:\r\n *         description: Par\xE1metros inv\xE1lidos\r\n *       500:\r\n *         description: Error interno del servidor\r\n */\r\nrouter.post('/heartbeat/:musicianId',\r\n  authMiddleware,\r\n  requireRole(['musico']),\r\n  async (req, res) => {\r\n    await advancedSearchController.musicianHeartbeat(req, res);\r\n  }\r\n);\r\n\r\n/**\r\n * @swagger\r\n * /api/advanced-search/daily-availability/{musicianId}:\r\n *   get:\r\n *     summary: Obtener disponibilidad diaria del m\xFAsico\r\n *     tags: [Advanced Search]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     parameters:\r\n *       - in: path\r\n *         name: musicianId\r\n *         required: true\r\n *         schema:\r\n *           type: string\r\n *         description: ID del m\xFAsico\r\n *       - in: query\r\n *         name: date\r\n *         schema:\r\n *           type: string\r\n *           format: date\r\n *         description: Fecha para consultar disponibilidad (opcional, por defecto hoy)\r\n *     responses:\r\n *       200:\r\n *         description: Disponibilidad obtenida exitosamente\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 data:\r\n *                   type: object\r\n *                   properties:\r\n *                     date:\r\n *                       type: string\r\n *                       format: date\r\n *                     busySlots:\r\n *                       type: array\r\n *                       items:\r\n *                         type: object\r\n *                     availableSlots:\r\n *                       type: array\r\n *                       items:\r\n *                         type: object\r\n *       400:\r\n *         description: Par\xE1metros inv\xE1lidos\r\n *       500:\r\n *         description: Error interno del servidor\r\n */\r\nrouter.get('/daily-availability/:musicianId',\r\n  authMiddleware,\r\n  requireRole(['musico', 'eventCreator', 'usuario', 'adminJunior', 'adminMidLevel', 'adminSenior', 'superAdmin']),\r\n  async (req, res) => {\r\n    await advancedSearchController.getDailyAvailability(req, res);\r\n  }\r\n);\r\n\r\n/**\r\n * @swagger\r\n * /api/advanced-search/calculate-rate:\r\n *   post:\r\n *     summary: Calcular tarifa para un m\xFAsico\r\n *     tags: [Advanced Search]\r\n *     security:\r\n *       - bearerAuth: []\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             type: object\r\n *             required:\r\n *               - musicianId\r\n *               - eventType\r\n *               - duration\r\n *               - location\r\n *               - eventDate\r\n *               - instrument\r\n *             properties:\r\n *               musicianId:\r\n *                 type: string\r\n *                 description: ID del m\xFAsico\r\n *               eventType:\r\n *                 type: string\r\n *                 description: Tipo de evento\r\n *                 example: \"wedding\"\r\n *               duration:\r\n *                 type: number\r\n *                 description: Duraci\xF3n en minutos\r\n *                 example: 120\r\n *               location:\r\n *                 type: string\r\n *                 description: Ubicaci\xF3n del evento\r\n *                 example: \"Madrid\"\r\n *               eventDate:\r\n *                 type: string\r\n *                 format: date-time\r\n *                 description: Fecha y hora del evento\r\n *                 example: \"2024-12-25T20:00:00Z\"\r\n *               instrument:\r\n *                 type: string\r\n *                 description: Instrumento\r\n *                 example: \"guitarra\"\r\n *               isUrgent:\r\n *                 type: boolean\r\n *                 default: false\r\n *     responses:\r\n *       200:\r\n *         description: Tarifa calculada exitosamente\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 success:\r\n *                   type: boolean\r\n *                 data:\r\n *                   type: object\r\n *                   properties:\r\n *                     baseRate:\r\n *                       type: number\r\n *                     finalRate:\r\n *                       type: number\r\n *                     breakdown:\r\n *                       type: array\r\n *                       items:\r\n *                         type: object\r\n *                     factors:\r\n *                       type: object\r\n *                     recommendations:\r\n *                       type: object\r\n *       400:\r\n *         description: Par\xE1metros inv\xE1lidos\r\n *       500:\r\n *         description: Error interno del servidor\r\n */\r\nrouter.post('/calculate-rate',\r\n  authMiddleware,\r\n  requireRole(['eventCreator', 'usuario', 'adminJunior', 'adminMidLevel', 'adminSenior', 'superAdmin']),\r\n  async (req, res) => {\r\n    await advancedSearchController.calculateMusicianRate(req, res);\r\n  }\r\n);\r\n\r\nexport default router; "],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "adbc88228c92021e0f40a1474b2b80889a483541"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2k13j4brki = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2k13j4brki();
var __awaiter =
/* istanbul ignore next */
(cov_2k13j4brki().s[0]++,
/* istanbul ignore next */
(cov_2k13j4brki().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_2k13j4brki().b[0][1]++, this.__awaiter) ||
/* istanbul ignore next */
(cov_2k13j4brki().b[0][2]++, function (thisArg, _arguments, P, generator) {
  /* istanbul ignore next */
  cov_2k13j4brki().f[0]++;
  function adopt(value) {
    /* istanbul ignore next */
    cov_2k13j4brki().f[1]++;
    cov_2k13j4brki().s[1]++;
    return value instanceof P ?
    /* istanbul ignore next */
    (cov_2k13j4brki().b[1][0]++, value) :
    /* istanbul ignore next */
    (cov_2k13j4brki().b[1][1]++, new P(function (resolve) {
      /* istanbul ignore next */
      cov_2k13j4brki().f[2]++;
      cov_2k13j4brki().s[2]++;
      resolve(value);
    }));
  }
  /* istanbul ignore next */
  cov_2k13j4brki().s[3]++;
  return new (
  /* istanbul ignore next */
  (cov_2k13j4brki().b[2][0]++, P) ||
  /* istanbul ignore next */
  (cov_2k13j4brki().b[2][1]++, P = Promise))(function (resolve, reject) {
    /* istanbul ignore next */
    cov_2k13j4brki().f[3]++;
    function fulfilled(value) {
      /* istanbul ignore next */
      cov_2k13j4brki().f[4]++;
      cov_2k13j4brki().s[4]++;
      try {
        /* istanbul ignore next */
        cov_2k13j4brki().s[5]++;
        step(generator.next(value));
      } catch (e) {
        /* istanbul ignore next */
        cov_2k13j4brki().s[6]++;
        reject(e);
      }
    }
    function rejected(value) {
      /* istanbul ignore next */
      cov_2k13j4brki().f[5]++;
      cov_2k13j4brki().s[7]++;
      try {
        /* istanbul ignore next */
        cov_2k13j4brki().s[8]++;
        step(generator["throw"](value));
      } catch (e) {
        /* istanbul ignore next */
        cov_2k13j4brki().s[9]++;
        reject(e);
      }
    }
    function step(result) {
      /* istanbul ignore next */
      cov_2k13j4brki().f[6]++;
      cov_2k13j4brki().s[10]++;
      result.done ?
      /* istanbul ignore next */
      (cov_2k13j4brki().b[3][0]++, resolve(result.value)) :
      /* istanbul ignore next */
      (cov_2k13j4brki().b[3][1]++, adopt(result.value).then(fulfilled, rejected));
    }
    /* istanbul ignore next */
    cov_2k13j4brki().s[11]++;
    step((generator = generator.apply(thisArg,
    /* istanbul ignore next */
    (cov_2k13j4brki().b[4][0]++, _arguments) ||
    /* istanbul ignore next */
    (cov_2k13j4brki().b[4][1]++, []))).next());
  });
}));
/* istanbul ignore next */
cov_2k13j4brki().s[12]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const express_1 =
/* istanbul ignore next */
(cov_2k13j4brki().s[13]++, require("express"));
const advancedSearchController_1 =
/* istanbul ignore next */
(cov_2k13j4brki().s[14]++, require("../controllers/advancedSearchController"));
const authMiddleware_1 =
/* istanbul ignore next */
(cov_2k13j4brki().s[15]++, require("../middleware/authMiddleware"));
const requireRole_1 =
/* istanbul ignore next */
(cov_2k13j4brki().s[16]++, require("../middleware/requireRole"));
const router =
/* istanbul ignore next */
(cov_2k13j4brki().s[17]++, (0, express_1.Router)());
const advancedSearchController =
/* istanbul ignore next */
(cov_2k13j4brki().s[18]++, new advancedSearchController_1.AdvancedSearchController());
/**
 * @swagger
 * /api/advanced-search/musicians:
 *   post:
 *     summary: Búsqueda avanzada de músicos con verificación de disponibilidad
 *     tags: [Advanced Search]
 *     security:
 *       - bearerAuth: []
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             type: object
 *             required:
 *               - eventType
 *               - instrument
 *               - location
 *               - eventDate
 *               - duration
 *             properties:
 *               eventType:
 *                 type: string
 *                 description: Tipo de evento
 *                 example: "wedding"
 *               instrument:
 *                 type: string
 *                 description: Instrumento requerido
 *                 example: "guitarra"
 *               location:
 *                 type: string
 *                 description: Ubicación del evento
 *                 example: "Madrid"
 *               eventDate:
 *                 type: string
 *                 format: date-time
 *                 description: Fecha y hora del evento
 *                 example: "2024-12-25T20:00:00Z"
 *               duration:
 *                 type: number
 *                 description: Duración en minutos
 *                 example: 120
 *               budget:
 *                 type: object
 *                 properties:
 *                   min:
 *                     type: number
 *                     example: 100
 *                   max:
 *                     type: number
 *                     example: 500
 *               isUrgent:
 *                 type: boolean
 *                 default: false
 *               radius:
 *                 type: number
 *                 default: 50
 *                 description: Radio de búsqueda en km
 *     responses:
 *       200:
 *         description: Búsqueda completada exitosamente
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 data:
 *                   type: object
 *                   properties:
 *                     availableMusicians:
 *                       type: array
 *                       items:
 *                         type: object
 *                     unavailableMusicians:
 *                       type: array
 *                       items:
 *                         type: object
 *                     totalFound:
 *                       type: number
 *                     availableCount:
 *                       type: number
 *                     unavailableCount:
 *                       type: number
 *       400:
 *         description: Parámetros inválidos
 *       401:
 *         description: No autorizado
 *       500:
 *         description: Error interno del servidor
 */
/* istanbul ignore next */
cov_2k13j4brki().s[19]++;
router.post('/musicians', authMiddleware_1.authMiddleware, (0, requireRole_1.requireRole)(['eventCreator', 'usuario', 'adminJunior', 'adminMidLevel', 'adminSenior', 'superAdmin']), (req, res) => {
  /* istanbul ignore next */
  cov_2k13j4brki().f[7]++;
  cov_2k13j4brki().s[20]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_2k13j4brki().f[8]++;
    cov_2k13j4brki().s[21]++;
    yield advancedSearchController.searchAvailableMusicians(req, res);
  });
});
/**
 * @swagger
 * /api/advanced-search/check-availability:
 *   post:
 *     summary: Verificar disponibilidad específica de un músico
 *     tags: [Advanced Search]
 *     security:
 *       - bearerAuth: []
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             type: object
 *             required:
 *               - musicianId
 *               - eventDate
 *               - duration
 *             properties:
 *               musicianId:
 *                 type: string
 *                 description: ID del músico
 *               eventDate:
 *                 type: string
 *                 format: date-time
 *                 description: Fecha y hora del evento
 *               duration:
 *                 type: number
 *                 description: Duración en minutos
 *               location:
 *                 type: string
 *                 description: Ubicación del evento
 *     responses:
 *       200:
 *         description: Verificación completada
 *       400:
 *         description: Parámetros inválidos
 *       404:
 *         description: Músico no encontrado
 *       500:
 *         description: Error interno del servidor
 */
/* istanbul ignore next */
cov_2k13j4brki().s[22]++;
router.post('/check-availability', authMiddleware_1.authMiddleware, (0, requireRole_1.requireRole)(['eventCreator', 'usuario', 'adminJunior', 'adminMidLevel', 'adminSenior', 'superAdmin']), (req, res) => {
  /* istanbul ignore next */
  cov_2k13j4brki().f[9]++;
  cov_2k13j4brki().s[23]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_2k13j4brki().f[10]++;
    cov_2k13j4brki().s[24]++;
    yield advancedSearchController.checkMusicianAvailability(req, res);
  });
});
/**
 * @swagger
 * /api/advanced-search/update-status/{musicianId}:
 *   post:
 *     summary: Actualizar estado del músico
 *     tags: [Advanced Search]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: path
 *         name: musicianId
 *         required: true
 *         schema:
 *           type: string
 *         description: ID del músico
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             type: object
 *             properties:
 *               isOnline:
 *                 type: boolean
 *                 description: Estado online/offline
 *               currentLocation:
 *                 type: object
 *                 properties:
 *                   latitude:
 *                     type: number
 *                   longitude:
 *                     type: number
 *                   address:
 *                     type: string
 *               availability:
 *                 type: object
 *                 properties:
 *                   isAvailable:
 *                     type: boolean
 *                   availableFrom:
 *                     type: string
 *                     format: date-time
 *                   availableTo:
 *                     type: string
 *                     format: date-time
 *                   maxDistance:
 *                     type: number
 *     responses:
 *       200:
 *         description: Estado actualizado exitosamente
 *       400:
 *         description: Parámetros inválidos
 *       500:
 *         description: Error interno del servidor
 */
/* istanbul ignore next */
cov_2k13j4brki().s[25]++;
router.post('/update-status/:musicianId', authMiddleware_1.authMiddleware, (0, requireRole_1.requireRole)(['musico', 'adminJunior', 'adminMidLevel', 'adminSenior', 'superAdmin']), (req, res) => {
  /* istanbul ignore next */
  cov_2k13j4brki().f[11]++;
  cov_2k13j4brki().s[26]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_2k13j4brki().f[12]++;
    cov_2k13j4brki().s[27]++;
    yield advancedSearchController.updateMusicianStatus(req, res);
  });
});
/**
 * @swagger
 * /api/advanced-search/heartbeat/{musicianId}:
 *   post:
 *     summary: Heartbeat para mantener estado online
 *     tags: [Advanced Search]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: path
 *         name: musicianId
 *         required: true
 *         schema:
 *           type: string
 *         description: ID del músico
 *     requestBody:
 *       content:
 *         application/json:
 *           schema:
 *             type: object
 *             properties:
 *               location:
 *                 type: object
 *                 properties:
 *                   latitude:
 *                     type: number
 *                   longitude:
 *                     type: number
 *     responses:
 *       200:
 *         description: Heartbeat registrado correctamente
 *       400:
 *         description: Parámetros inválidos
 *       500:
 *         description: Error interno del servidor
 */
/* istanbul ignore next */
cov_2k13j4brki().s[28]++;
router.post('/heartbeat/:musicianId', authMiddleware_1.authMiddleware, (0, requireRole_1.requireRole)(['musico']), (req, res) => {
  /* istanbul ignore next */
  cov_2k13j4brki().f[13]++;
  cov_2k13j4brki().s[29]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_2k13j4brki().f[14]++;
    cov_2k13j4brki().s[30]++;
    yield advancedSearchController.musicianHeartbeat(req, res);
  });
});
/**
 * @swagger
 * /api/advanced-search/daily-availability/{musicianId}:
 *   get:
 *     summary: Obtener disponibilidad diaria del músico
 *     tags: [Advanced Search]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: path
 *         name: musicianId
 *         required: true
 *         schema:
 *           type: string
 *         description: ID del músico
 *       - in: query
 *         name: date
 *         schema:
 *           type: string
 *           format: date
 *         description: Fecha para consultar disponibilidad (opcional, por defecto hoy)
 *     responses:
 *       200:
 *         description: Disponibilidad obtenida exitosamente
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 data:
 *                   type: object
 *                   properties:
 *                     date:
 *                       type: string
 *                       format: date
 *                     busySlots:
 *                       type: array
 *                       items:
 *                         type: object
 *                     availableSlots:
 *                       type: array
 *                       items:
 *                         type: object
 *       400:
 *         description: Parámetros inválidos
 *       500:
 *         description: Error interno del servidor
 */
/* istanbul ignore next */
cov_2k13j4brki().s[31]++;
router.get('/daily-availability/:musicianId', authMiddleware_1.authMiddleware, (0, requireRole_1.requireRole)(['musico', 'eventCreator', 'usuario', 'adminJunior', 'adminMidLevel', 'adminSenior', 'superAdmin']), (req, res) => {
  /* istanbul ignore next */
  cov_2k13j4brki().f[15]++;
  cov_2k13j4brki().s[32]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_2k13j4brki().f[16]++;
    cov_2k13j4brki().s[33]++;
    yield advancedSearchController.getDailyAvailability(req, res);
  });
});
/**
 * @swagger
 * /api/advanced-search/calculate-rate:
 *   post:
 *     summary: Calcular tarifa para un músico
 *     tags: [Advanced Search]
 *     security:
 *       - bearerAuth: []
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             type: object
 *             required:
 *               - musicianId
 *               - eventType
 *               - duration
 *               - location
 *               - eventDate
 *               - instrument
 *             properties:
 *               musicianId:
 *                 type: string
 *                 description: ID del músico
 *               eventType:
 *                 type: string
 *                 description: Tipo de evento
 *                 example: "wedding"
 *               duration:
 *                 type: number
 *                 description: Duración en minutos
 *                 example: 120
 *               location:
 *                 type: string
 *                 description: Ubicación del evento
 *                 example: "Madrid"
 *               eventDate:
 *                 type: string
 *                 format: date-time
 *                 description: Fecha y hora del evento
 *                 example: "2024-12-25T20:00:00Z"
 *               instrument:
 *                 type: string
 *                 description: Instrumento
 *                 example: "guitarra"
 *               isUrgent:
 *                 type: boolean
 *                 default: false
 *     responses:
 *       200:
 *         description: Tarifa calculada exitosamente
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                 data:
 *                   type: object
 *                   properties:
 *                     baseRate:
 *                       type: number
 *                     finalRate:
 *                       type: number
 *                     breakdown:
 *                       type: array
 *                       items:
 *                         type: object
 *                     factors:
 *                       type: object
 *                     recommendations:
 *                       type: object
 *       400:
 *         description: Parámetros inválidos
 *       500:
 *         description: Error interno del servidor
 */
/* istanbul ignore next */
cov_2k13j4brki().s[34]++;
router.post('/calculate-rate', authMiddleware_1.authMiddleware, (0, requireRole_1.requireRole)(['eventCreator', 'usuario', 'adminJunior', 'adminMidLevel', 'adminSenior', 'superAdmin']), (req, res) => {
  /* istanbul ignore next */
  cov_2k13j4brki().f[17]++;
  cov_2k13j4brki().s[35]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_2k13j4brki().f[18]++;
    cov_2k13j4brki().s[36]++;
    yield advancedSearchController.calculateMusicianRate(req, res);
  });
});
/* istanbul ignore next */
cov_2k13j4brki().s[37]++;
exports.default = router;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,