5a9010215a02491d5bfffcff8672a88b
"use strict";

/* istanbul ignore next */
function cov_rf8lsamg1() {
  var path = "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\services\\rateCalculationService.ts";
  var hash = "63a85b5662ab0bdd04ac5c60ea94d6fc3a1c4790";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\services\\rateCalculationService.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 16
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 28
        },
        end: {
          line: 3,
          column: 110
        }
      },
      "2": {
        start: {
          line: 3,
          column: 91
        },
        end: {
          line: 3,
          column: 106
        }
      },
      "3": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "4": {
        start: {
          line: 5,
          column: 36
        },
        end: {
          line: 5,
          column: 97
        }
      },
      "5": {
        start: {
          line: 5,
          column: 42
        },
        end: {
          line: 5,
          column: 70
        }
      },
      "6": {
        start: {
          line: 5,
          column: 85
        },
        end: {
          line: 5,
          column: 95
        }
      },
      "7": {
        start: {
          line: 6,
          column: 35
        },
        end: {
          line: 6,
          column: 100
        }
      },
      "8": {
        start: {
          line: 6,
          column: 41
        },
        end: {
          line: 6,
          column: 73
        }
      },
      "9": {
        start: {
          line: 6,
          column: 88
        },
        end: {
          line: 6,
          column: 98
        }
      },
      "10": {
        start: {
          line: 7,
          column: 32
        },
        end: {
          line: 7,
          column: 116
        }
      },
      "11": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 78
        }
      },
      "12": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 62
        }
      },
      "13": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 40
        }
      },
      "14": {
        start: {
          line: 13,
          column: 19
        },
        end: {
          line: 13,
          column: 47
        }
      },
      "15": {
        start: {
          line: 14,
          column: 24
        },
        end: {
          line: 14,
          column: 50
        }
      },
      "16": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 49
        }
      },
      "17": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 52
        }
      },
      "18": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 61
        }
      },
      "19": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 33,
          column: 10
        }
      },
      "20": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 46,
          column: 10
        }
      },
      "21": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 59,
          column: 10
        }
      },
      "22": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 105,
          column: 11
        }
      },
      "23": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 104,
          column: 13
        }
      },
      "24": {
        start: {
          line: 67,
          column: 16
        },
        end: {
          line: 67,
          column: 145
        }
      },
      "25": {
        start: {
          line: 69,
          column: 37
        },
        end: {
          line: 69,
          column: 83
        }
      },
      "26": {
        start: {
          line: 71,
          column: 35
        },
        end: {
          line: 71,
          column: 116
        }
      },
      "27": {
        start: {
          line: 73,
          column: 32
        },
        end: {
          line: 73,
          column: 94
        }
      },
      "28": {
        start: {
          line: 75,
          column: 33
        },
        end: {
          line: 75,
          column: 74
        }
      },
      "29": {
        start: {
          line: 77,
          column: 34
        },
        end: {
          line: 77,
          column: 76
        }
      },
      "30": {
        start: {
          line: 79,
          column: 34
        },
        end: {
          line: 79,
          column: 75
        }
      },
      "31": {
        start: {
          line: 81,
          column: 40
        },
        end: {
          line: 81,
          column: 106
        }
      },
      "32": {
        start: {
          line: 82,
          column: 31
        },
        end: {
          line: 88,
          column: 17
        }
      },
      "33": {
        start: {
          line: 89,
          column: 16
        },
        end: {
          line: 96,
          column: 19
        }
      },
      "34": {
        start: {
          line: 97,
          column: 16
        },
        end: {
          line: 97,
          column: 30
        }
      },
      "35": {
        start: {
          line: 100,
          column: 16
        },
        end: {
          line: 102,
          column: 19
        }
      },
      "36": {
        start: {
          line: 103,
          column: 16
        },
        end: {
          line: 103,
          column: 28
        }
      },
      "37": {
        start: {
          line: 111,
          column: 8
        },
        end: {
          line: 142,
          column: 11
        }
      },
      "38": {
        start: {
          line: 112,
          column: 12
        },
        end: {
          line: 141,
          column: 13
        }
      },
      "39": {
        start: {
          line: 113,
          column: 39
        },
        end: {
          line: 113,
          column: 108
        }
      },
      "40": {
        start: {
          line: 114,
          column: 28
        },
        end: {
          line: 114,
          column: 54
        }
      },
      "41": {
        start: {
          line: 115,
          column: 16
        },
        end: {
          line: 125,
          column: 17
        }
      },
      "42": {
        start: {
          line: 116,
          column: 33
        },
        end: {
          line: 116,
          column: 43
        }
      },
      "43": {
        start: {
          line: 117,
          column: 20
        },
        end: {
          line: 124,
          column: 22
        }
      },
      "44": {
        start: {
          line: 127,
          column: 16
        },
        end: {
          line: 134,
          column: 18
        }
      },
      "45": {
        start: {
          line: 137,
          column: 16
        },
        end: {
          line: 139,
          column: 19
        }
      },
      "46": {
        start: {
          line: 140,
          column: 16
        },
        end: {
          line: 140,
          column: 28
        }
      },
      "47": {
        start: {
          line: 148,
          column: 8
        },
        end: {
          line: 180,
          column: 11
        }
      },
      "48": {
        start: {
          line: 149,
          column: 12
        },
        end: {
          line: 179,
          column: 13
        }
      },
      "49": {
        start: {
          line: 150,
          column: 34
        },
        end: {
          line: 153,
          column: 56
        }
      },
      "50": {
        start: {
          line: 154,
          column: 33
        },
        end: {
          line: 154,
          column: 54
        }
      },
      "51": {
        start: {
          line: 155,
          column: 16
        },
        end: {
          line: 164,
          column: 17
        }
      },
      "52": {
        start: {
          line: 156,
          column: 33
        },
        end: {
          line: 156,
          column: 56
        }
      },
      "53": {
        start: {
          line: 157,
          column: 20
        },
        end: {
          line: 163,
          column: 22
        }
      },
      "54": {
        start: {
          line: 166,
          column: 16
        },
        end: {
          line: 172,
          column: 18
        }
      },
      "55": {
        start: {
          line: 175,
          column: 16
        },
        end: {
          line: 177,
          column: 19
        }
      },
      "56": {
        start: {
          line: 178,
          column: 16
        },
        end: {
          line: 178,
          column: 28
        }
      },
      "57": {
        start: {
          line: 186,
          column: 8
        },
        end: {
          line: 213,
          column: 11
        }
      },
      "58": {
        start: {
          line: 188,
          column: 41
        },
        end: {
          line: 188,
          column: 100
        }
      },
      "59": {
        start: {
          line: 190,
          column: 37
        },
        end: {
          line: 190,
          column: 91
        }
      },
      "60": {
        start: {
          line: 192,
          column: 39
        },
        end: {
          line: 192,
          column: 103
        }
      },
      "61": {
        start: {
          line: 194,
          column: 40
        },
        end: {
          line: 194,
          column: 107
        }
      },
      "62": {
        start: {
          line: 196,
          column: 39
        },
        end: {
          line: 196,
          column: 89
        }
      },
      "63": {
        start: {
          line: 198,
          column: 38
        },
        end: {
          line: 198,
          column: 66
        }
      },
      "64": {
        start: {
          line: 200,
          column: 42
        },
        end: {
          line: 200,
          column: 126
        }
      },
      "65": {
        start: {
          line: 202,
          column: 42
        },
        end: {
          line: 202,
          column: 91
        }
      },
      "66": {
        start: {
          line: 203,
          column: 12
        },
        end: {
          line: 212,
          column: 14
        }
      },
      "67": {
        start: {
          line: 219,
          column: 8
        },
        end: {
          line: 220,
          column: 23
        }
      },
      "68": {
        start: {
          line: 220,
          column: 12
        },
        end: {
          line: 220,
          column: 23
        }
      },
      "69": {
        start: {
          line: 221,
          column: 8
        },
        end: {
          line: 222,
          column: 23
        }
      },
      "70": {
        start: {
          line: 222,
          column: 12
        },
        end: {
          line: 222,
          column: 23
        }
      },
      "71": {
        start: {
          line: 223,
          column: 8
        },
        end: {
          line: 224,
          column: 23
        }
      },
      "72": {
        start: {
          line: 224,
          column: 12
        },
        end: {
          line: 224,
          column: 23
        }
      },
      "73": {
        start: {
          line: 225,
          column: 8
        },
        end: {
          line: 226,
          column: 23
        }
      },
      "74": {
        start: {
          line: 226,
          column: 12
        },
        end: {
          line: 226,
          column: 23
        }
      },
      "75": {
        start: {
          line: 227,
          column: 8
        },
        end: {
          line: 227,
          column: 19
        }
      },
      "76": {
        start: {
          line: 233,
          column: 8
        },
        end: {
          line: 238,
          column: 9
        }
      },
      "77": {
        start: {
          line: 234,
          column: 24
        },
        end: {
          line: 234,
          column: 35
        }
      },
      "78": {
        start: {
          line: 235,
          column: 27
        },
        end: {
          line: 235,
          column: 38
        }
      },
      "79": {
        start: {
          line: 236,
          column: 25
        },
        end: {
          line: 236,
          column: 36
        }
      },
      "80": {
        start: {
          line: 237,
          column: 21
        },
        end: {
          line: 237,
          column: 32
        }
      },
      "81": {
        start: {
          line: 244,
          column: 22
        },
        end: {
          line: 244,
          column: 35
        }
      },
      "82": {
        start: {
          line: 245,
          column: 8
        },
        end: {
          line: 246,
          column: 23
        }
      },
      "83": {
        start: {
          line: 246,
          column: 12
        },
        end: {
          line: 246,
          column: 23
        }
      },
      "84": {
        start: {
          line: 247,
          column: 8
        },
        end: {
          line: 248,
          column: 23
        }
      },
      "85": {
        start: {
          line: 248,
          column: 12
        },
        end: {
          line: 248,
          column: 23
        }
      },
      "86": {
        start: {
          line: 249,
          column: 8
        },
        end: {
          line: 250,
          column: 24
        }
      },
      "87": {
        start: {
          line: 250,
          column: 12
        },
        end: {
          line: 250,
          column: 24
        }
      },
      "88": {
        start: {
          line: 251,
          column: 8
        },
        end: {
          line: 252,
          column: 23
        }
      },
      "89": {
        start: {
          line: 252,
          column: 12
        },
        end: {
          line: 252,
          column: 23
        }
      },
      "90": {
        start: {
          line: 253,
          column: 8
        },
        end: {
          line: 253,
          column: 20
        }
      },
      "91": {
        start: {
          line: 259,
          column: 22
        },
        end: {
          line: 259,
          column: 46
        }
      },
      "92": {
        start: {
          line: 261,
          column: 8
        },
        end: {
          line: 263,
          column: 9
        }
      },
      "93": {
        start: {
          line: 262,
          column: 12
        },
        end: {
          line: 262,
          column: 36
        }
      },
      "94": {
        start: {
          line: 265,
          column: 8
        },
        end: {
          line: 267,
          column: 9
        }
      },
      "95": {
        start: {
          line: 266,
          column: 12
        },
        end: {
          line: 266,
          column: 36
        }
      },
      "96": {
        start: {
          line: 269,
          column: 8
        },
        end: {
          line: 269,
          column: 32
        }
      },
      "97": {
        start: {
          line: 275,
          column: 33
        },
        end: {
          line: 275,
          column: 58
        }
      },
      "98": {
        start: {
          line: 276,
          column: 31
        },
        end: {
          line: 277,
          column: 73
        }
      },
      "99": {
        start: {
          line: 278,
          column: 35
        },
        end: {
          line: 278,
          column: 101
        }
      },
      "100": {
        start: {
          line: 279,
          column: 8
        },
        end: {
          line: 279,
          column: 76
        }
      },
      "101": {
        start: {
          line: 285,
          column: 26
        },
        end: {
          line: 292,
          column: 41
        }
      },
      "102": {
        start: {
          line: 294,
          column: 8
        },
        end: {
          line: 294,
          column: 45
        }
      },
      "103": {
        start: {
          line: 300,
          column: 8
        },
        end: {
          line: 341,
          column: 10
        }
      },
      "104": {
        start: {
          line: 347,
          column: 8
        },
        end: {
          line: 357,
          column: 11
        }
      },
      "105": {
        start: {
          line: 349,
          column: 36
        },
        end: {
          line: 349,
          column: 103
        }
      },
      "106": {
        start: {
          line: 351,
          column: 34
        },
        end: {
          line: 351,
          column: 108
        }
      },
      "107": {
        start: {
          line: 352,
          column: 12
        },
        end: {
          line: 356,
          column: 14
        }
      },
      "108": {
        start: {
          line: 363,
          column: 8
        },
        end: {
          line: 379,
          column: 11
        }
      },
      "109": {
        start: {
          line: 364,
          column: 12
        },
        end: {
          line: 378,
          column: 13
        }
      },
      "110": {
        start: {
          line: 365,
          column: 33
        },
        end: {
          line: 369,
          column: 29
        }
      },
      "111": {
        start: {
          line: 370,
          column: 33
        },
        end: {
          line: 370,
          column: 53
        }
      },
      "112": {
        start: {
          line: 371,
          column: 16
        },
        end: {
          line: 371,
          column: 65
        }
      },
      "113": {
        start: {
          line: 371,
          column: 48
        },
        end: {
          line: 371,
          column: 63
        }
      },
      "114": {
        start: {
          line: 374,
          column: 16
        },
        end: {
          line: 376,
          column: 19
        }
      },
      "115": {
        start: {
          line: 377,
          column: 16
        },
        end: {
          line: 377,
          column: 26
        }
      },
      "116": {
        start: {
          line: 385,
          column: 8
        },
        end: {
          line: 431,
          column: 11
        }
      },
      "117": {
        start: {
          line: 386,
          column: 12
        },
        end: {
          line: 430,
          column: 13
        }
      },
      "118": {
        start: {
          line: 387,
          column: 16
        },
        end: {
          line: 387,
          column: 123
        }
      },
      "119": {
        start: {
          line: 388,
          column: 34
        },
        end: {
          line: 391,
          column: 56
        }
      },
      "120": {
        start: {
          line: 392,
          column: 33
        },
        end: {
          line: 392,
          column: 54
        }
      },
      "121": {
        start: {
          line: 393,
          column: 16
        },
        end: {
          line: 423,
          column: 17
        }
      },
      "122": {
        start: {
          line: 394,
          column: 32
        },
        end: {
          line: 394,
          column: 48
        }
      },
      "123": {
        start: {
          line: 395,
          column: 33
        },
        end: {
          line: 395,
          column: 43
        }
      },
      "124": {
        start: {
          line: 397,
          column: 39
        },
        end: {
          line: 397,
          column: 96
        }
      },
      "125": {
        start: {
          line: 398,
          column: 35
        },
        end: {
          line: 398,
          column: 63
        }
      },
      "126": {
        start: {
          line: 399,
          column: 35
        },
        end: {
          line: 399,
          column: 63
        }
      },
      "127": {
        start: {
          line: 400,
          column: 20
        },
        end: {
          line: 406,
          column: 23
        }
      },
      "128": {
        start: {
          line: 410,
          column: 20
        },
        end: {
          line: 422,
          column: 23
        }
      },
      "129": {
        start: {
          line: 426,
          column: 16
        },
        end: {
          line: 428,
          column: 19
        }
      },
      "130": {
        start: {
          line: 429,
          column: 16
        },
        end: {
          line: 429,
          column: 28
        }
      },
      "131": {
        start: {
          line: 434,
          column: 0
        },
        end: {
          line: 434,
          column: 56
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 2,
            column: 45
          }
        },
        loc: {
          start: {
            line: 2,
            column: 89
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "adopt",
        decl: {
          start: {
            line: 3,
            column: 13
          },
          end: {
            line: 3,
            column: 18
          }
        },
        loc: {
          start: {
            line: 3,
            column: 26
          },
          end: {
            line: 3,
            column: 112
          }
        },
        line: 3
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 3,
            column: 70
          },
          end: {
            line: 3,
            column: 71
          }
        },
        loc: {
          start: {
            line: 3,
            column: 89
          },
          end: {
            line: 3,
            column: 108
          }
        },
        line: 3
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 4,
            column: 36
          },
          end: {
            line: 4,
            column: 37
          }
        },
        loc: {
          start: {
            line: 4,
            column: 63
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 4
      },
      "4": {
        name: "fulfilled",
        decl: {
          start: {
            line: 5,
            column: 17
          },
          end: {
            line: 5,
            column: 26
          }
        },
        loc: {
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 99
          }
        },
        line: 5
      },
      "5": {
        name: "rejected",
        decl: {
          start: {
            line: 6,
            column: 17
          },
          end: {
            line: 6,
            column: 25
          }
        },
        loc: {
          start: {
            line: 6,
            column: 33
          },
          end: {
            line: 6,
            column: 102
          }
        },
        line: 6
      },
      "6": {
        name: "step",
        decl: {
          start: {
            line: 7,
            column: 17
          },
          end: {
            line: 7,
            column: 21
          }
        },
        loc: {
          start: {
            line: 7,
            column: 30
          },
          end: {
            line: 7,
            column: 118
          }
        },
        line: 7
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 18
          },
          end: {
            line: 60,
            column: 5
          }
        },
        line: 16
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 64,
            column: 4
          },
          end: {
            line: 64,
            column: 5
          }
        },
        loc: {
          start: {
            line: 64,
            column: 27
          },
          end: {
            line: 106,
            column: 5
          }
        },
        line: 64
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 65,
            column: 47
          },
          end: {
            line: 65,
            column: 48
          }
        },
        loc: {
          start: {
            line: 65,
            column: 60
          },
          end: {
            line: 105,
            column: 9
          }
        },
        line: 65
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 110,
            column: 4
          },
          end: {
            line: 110,
            column: 5
          }
        },
        loc: {
          start: {
            line: 110,
            column: 32
          },
          end: {
            line: 143,
            column: 5
          }
        },
        line: 110
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 111,
            column: 47
          },
          end: {
            line: 111,
            column: 48
          }
        },
        loc: {
          start: {
            line: 111,
            column: 60
          },
          end: {
            line: 142,
            column: 9
          }
        },
        line: 111
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 147,
            column: 4
          },
          end: {
            line: 147,
            column: 5
          }
        },
        loc: {
          start: {
            line: 147,
            column: 51
          },
          end: {
            line: 181,
            column: 5
          }
        },
        line: 147
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 148,
            column: 47
          },
          end: {
            line: 148,
            column: 48
          }
        },
        loc: {
          start: {
            line: 148,
            column: 60
          },
          end: {
            line: 180,
            column: 9
          }
        },
        line: 148
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 185,
            column: 4
          },
          end: {
            line: 185,
            column: 5
          }
        },
        loc: {
          start: {
            line: 185,
            column: 56
          },
          end: {
            line: 214,
            column: 5
          }
        },
        line: 185
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 186,
            column: 47
          },
          end: {
            line: 186,
            column: 48
          }
        },
        loc: {
          start: {
            line: 186,
            column: 60
          },
          end: {
            line: 213,
            column: 9
          }
        },
        line: 186
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 218,
            column: 4
          },
          end: {
            line: 218,
            column: 5
          }
        },
        loc: {
          start: {
            line: 218,
            column: 46
          },
          end: {
            line: 228,
            column: 5
          }
        },
        line: 218
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 232,
            column: 4
          },
          end: {
            line: 232,
            column: 5
          }
        },
        loc: {
          start: {
            line: 232,
            column: 43
          },
          end: {
            line: 239,
            column: 5
          }
        },
        line: 232
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 243,
            column: 4
          },
          end: {
            line: 243,
            column: 5
          }
        },
        loc: {
          start: {
            line: 243,
            column: 42
          },
          end: {
            line: 254,
            column: 5
          }
        },
        line: 243
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 258,
            column: 4
          },
          end: {
            line: 258,
            column: 5
          }
        },
        loc: {
          start: {
            line: 258,
            column: 58
          },
          end: {
            line: 270,
            column: 5
          }
        },
        line: 258
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 274,
            column: 4
          },
          end: {
            line: 274,
            column: 5
          }
        },
        loc: {
          start: {
            line: 274,
            column: 49
          },
          end: {
            line: 280,
            column: 5
          }
        },
        line: 274
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 284,
            column: 4
          },
          end: {
            line: 284,
            column: 5
          }
        },
        loc: {
          start: {
            line: 284,
            column: 42
          },
          end: {
            line: 295,
            column: 5
          }
        },
        line: 284
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 299,
            column: 4
          },
          end: {
            line: 299,
            column: 5
          }
        },
        loc: {
          start: {
            line: 299,
            column: 41
          },
          end: {
            line: 342,
            column: 5
          }
        },
        line: 299
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 346,
            column: 4
          },
          end: {
            line: 346,
            column: 5
          }
        },
        loc: {
          start: {
            line: 346,
            column: 65
          },
          end: {
            line: 358,
            column: 5
          }
        },
        line: 346
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 347,
            column: 47
          },
          end: {
            line: 347,
            column: 48
          }
        },
        loc: {
          start: {
            line: 347,
            column: 60
          },
          end: {
            line: 357,
            column: 9
          }
        },
        line: 347
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 362,
            column: 4
          },
          end: {
            line: 362,
            column: 5
          }
        },
        loc: {
          start: {
            line: 362,
            column: 45
          },
          end: {
            line: 380,
            column: 5
          }
        },
        line: 362
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 363,
            column: 47
          },
          end: {
            line: 363,
            column: 48
          }
        },
        loc: {
          start: {
            line: 363,
            column: 60
          },
          end: {
            line: 379,
            column: 9
          }
        },
        line: 363
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 371,
            column: 41
          },
          end: {
            line: 371,
            column: 42
          }
        },
        loc: {
          start: {
            line: 371,
            column: 48
          },
          end: {
            line: 371,
            column: 63
          }
        },
        line: 371
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 384,
            column: 4
          },
          end: {
            line: 384,
            column: 5
          }
        },
        loc: {
          start: {
            line: 384,
            column: 60
          },
          end: {
            line: 432,
            column: 5
          }
        },
        line: 384
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 385,
            column: 47
          },
          end: {
            line: 385,
            column: 48
          }
        },
        loc: {
          start: {
            line: 385,
            column: 60
          },
          end: {
            line: 431,
            column: 9
          }
        },
        line: 385
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 16
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 17
          },
          end: {
            line: 2,
            column: 21
          }
        }, {
          start: {
            line: 2,
            column: 25
          },
          end: {
            line: 2,
            column: 39
          }
        }, {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 35
          },
          end: {
            line: 3,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 56
          },
          end: {
            line: 3,
            column: 61
          }
        }, {
          start: {
            line: 3,
            column: 64
          },
          end: {
            line: 3,
            column: 109
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 17
          }
        }, {
          start: {
            line: 4,
            column: 22
          },
          end: {
            line: 4,
            column: 33
          }
        }],
        line: 4
      },
      "3": {
        loc: {
          start: {
            line: 7,
            column: 32
          },
          end: {
            line: 7,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 7,
            column: 46
          },
          end: {
            line: 7,
            column: 67
          }
        }, {
          start: {
            line: 7,
            column: 70
          },
          end: {
            line: 7,
            column: 115
          }
        }],
        line: 7
      },
      "4": {
        loc: {
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 61
          }
        }, {
          start: {
            line: 8,
            column: 65
          },
          end: {
            line: 8,
            column: 67
          }
        }],
        line: 8
      },
      "5": {
        loc: {
          start: {
            line: 75,
            column: 33
          },
          end: {
            line: 75,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 75,
            column: 33
          },
          end: {
            line: 75,
            column: 68
          }
        }, {
          start: {
            line: 75,
            column: 72
          },
          end: {
            line: 75,
            column: 74
          }
        }],
        line: 75
      },
      "6": {
        loc: {
          start: {
            line: 115,
            column: 16
          },
          end: {
            line: 125,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 115,
            column: 16
          },
          end: {
            line: 125,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 115
      },
      "7": {
        loc: {
          start: {
            line: 118,
            column: 36
          },
          end: {
            line: 118,
            column: 102
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 118,
            column: 37
          },
          end: {
            line: 118,
            column: 96
          }
        }, {
          start: {
            line: 118,
            column: 101
          },
          end: {
            line: 118,
            column: 102
          }
        }],
        line: 118
      },
      "8": {
        loc: {
          start: {
            line: 118,
            column: 37
          },
          end: {
            line: 118,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 118,
            column: 72
          },
          end: {
            line: 118,
            column: 78
          }
        }, {
          start: {
            line: 118,
            column: 81
          },
          end: {
            line: 118,
            column: 96
          }
        }],
        line: 118
      },
      "9": {
        loc: {
          start: {
            line: 118,
            column: 37
          },
          end: {
            line: 118,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 118,
            column: 37
          },
          end: {
            line: 118,
            column: 50
          }
        }, {
          start: {
            line: 118,
            column: 54
          },
          end: {
            line: 118,
            column: 69
          }
        }],
        line: 118
      },
      "10": {
        loc: {
          start: {
            line: 119,
            column: 32
          },
          end: {
            line: 119,
            column: 96
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 119,
            column: 33
          },
          end: {
            line: 119,
            column: 88
          }
        }, {
          start: {
            line: 119,
            column: 93
          },
          end: {
            line: 119,
            column: 96
          }
        }],
        line: 119
      },
      "11": {
        loc: {
          start: {
            line: 119,
            column: 33
          },
          end: {
            line: 119,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 119,
            column: 68
          },
          end: {
            line: 119,
            column: 74
          }
        }, {
          start: {
            line: 119,
            column: 77
          },
          end: {
            line: 119,
            column: 88
          }
        }],
        line: 119
      },
      "12": {
        loc: {
          start: {
            line: 119,
            column: 33
          },
          end: {
            line: 119,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 119,
            column: 33
          },
          end: {
            line: 119,
            column: 46
          }
        }, {
          start: {
            line: 119,
            column: 50
          },
          end: {
            line: 119,
            column: 65
          }
        }],
        line: 119
      },
      "13": {
        loc: {
          start: {
            line: 120,
            column: 37
          },
          end: {
            line: 120,
            column: 104
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 120,
            column: 38
          },
          end: {
            line: 120,
            column: 98
          }
        }, {
          start: {
            line: 120,
            column: 103
          },
          end: {
            line: 120,
            column: 104
          }
        }],
        line: 120
      },
      "14": {
        loc: {
          start: {
            line: 120,
            column: 38
          },
          end: {
            line: 120,
            column: 98
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 120,
            column: 73
          },
          end: {
            line: 120,
            column: 79
          }
        }, {
          start: {
            line: 120,
            column: 82
          },
          end: {
            line: 120,
            column: 98
          }
        }],
        line: 120
      },
      "15": {
        loc: {
          start: {
            line: 120,
            column: 38
          },
          end: {
            line: 120,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 120,
            column: 38
          },
          end: {
            line: 120,
            column: 51
          }
        }, {
          start: {
            line: 120,
            column: 55
          },
          end: {
            line: 120,
            column: 70
          }
        }],
        line: 120
      },
      "16": {
        loc: {
          start: {
            line: 121,
            column: 41
          },
          end: {
            line: 121,
            column: 112
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 121,
            column: 42
          },
          end: {
            line: 121,
            column: 106
          }
        }, {
          start: {
            line: 121,
            column: 111
          },
          end: {
            line: 121,
            column: 112
          }
        }],
        line: 121
      },
      "17": {
        loc: {
          start: {
            line: 121,
            column: 42
          },
          end: {
            line: 121,
            column: 106
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 121,
            column: 77
          },
          end: {
            line: 121,
            column: 83
          }
        }, {
          start: {
            line: 121,
            column: 86
          },
          end: {
            line: 121,
            column: 106
          }
        }],
        line: 121
      },
      "18": {
        loc: {
          start: {
            line: 121,
            column: 42
          },
          end: {
            line: 121,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 121,
            column: 42
          },
          end: {
            line: 121,
            column: 55
          }
        }, {
          start: {
            line: 121,
            column: 59
          },
          end: {
            line: 121,
            column: 74
          }
        }],
        line: 121
      },
      "19": {
        loc: {
          start: {
            line: 122,
            column: 45
          },
          end: {
            line: 122,
            column: 121
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 122,
            column: 46
          },
          end: {
            line: 122,
            column: 114
          }
        }, {
          start: {
            line: 122,
            column: 119
          },
          end: {
            line: 122,
            column: 121
          }
        }],
        line: 122
      },
      "20": {
        loc: {
          start: {
            line: 122,
            column: 46
          },
          end: {
            line: 122,
            column: 114
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 122,
            column: 81
          },
          end: {
            line: 122,
            column: 87
          }
        }, {
          start: {
            line: 122,
            column: 90
          },
          end: {
            line: 122,
            column: 114
          }
        }],
        line: 122
      },
      "21": {
        loc: {
          start: {
            line: 122,
            column: 46
          },
          end: {
            line: 122,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 122,
            column: 46
          },
          end: {
            line: 122,
            column: 59
          }
        }, {
          start: {
            line: 122,
            column: 63
          },
          end: {
            line: 122,
            column: 78
          }
        }],
        line: 122
      },
      "22": {
        loc: {
          start: {
            line: 123,
            column: 41
          },
          end: {
            line: 123,
            column: 113
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 123,
            column: 42
          },
          end: {
            line: 123,
            column: 106
          }
        }, {
          start: {
            line: 123,
            column: 111
          },
          end: {
            line: 123,
            column: 113
          }
        }],
        line: 123
      },
      "23": {
        loc: {
          start: {
            line: 123,
            column: 42
          },
          end: {
            line: 123,
            column: 106
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 123,
            column: 77
          },
          end: {
            line: 123,
            column: 83
          }
        }, {
          start: {
            line: 123,
            column: 86
          },
          end: {
            line: 123,
            column: 106
          }
        }],
        line: 123
      },
      "24": {
        loc: {
          start: {
            line: 123,
            column: 42
          },
          end: {
            line: 123,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 123,
            column: 42
          },
          end: {
            line: 123,
            column: 55
          }
        }, {
          start: {
            line: 123,
            column: 59
          },
          end: {
            line: 123,
            column: 74
          }
        }],
        line: 123
      },
      "25": {
        loc: {
          start: {
            line: 155,
            column: 16
          },
          end: {
            line: 164,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 155,
            column: 16
          },
          end: {
            line: 164,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 155
      },
      "26": {
        loc: {
          start: {
            line: 158,
            column: 37
          },
          end: {
            line: 158,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 158,
            column: 37
          },
          end: {
            line: 158,
            column: 53
          }
        }, {
          start: {
            line: 158,
            column: 57
          },
          end: {
            line: 158,
            column: 59
          }
        }],
        line: 158
      },
      "27": {
        loc: {
          start: {
            line: 159,
            column: 33
          },
          end: {
            line: 159,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 159,
            column: 33
          },
          end: {
            line: 159,
            column: 45
          }
        }, {
          start: {
            line: 159,
            column: 49
          },
          end: {
            line: 159,
            column: 51
          }
        }],
        line: 159
      },
      "28": {
        loc: {
          start: {
            line: 160,
            column: 33
          },
          end: {
            line: 160,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 160,
            column: 33
          },
          end: {
            line: 160,
            column: 45
          }
        }, {
          start: {
            line: 160,
            column: 49
          },
          end: {
            line: 160,
            column: 52
          }
        }],
        line: 160
      },
      "29": {
        loc: {
          start: {
            line: 161,
            column: 37
          },
          end: {
            line: 161,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 161,
            column: 37
          },
          end: {
            line: 161,
            column: 53
          }
        }, {
          start: {
            line: 161,
            column: 57
          },
          end: {
            line: 161,
            column: 65
          }
        }],
        line: 161
      },
      "30": {
        loc: {
          start: {
            line: 162,
            column: 43
          },
          end: {
            line: 162,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 162,
            column: 43
          },
          end: {
            line: 162,
            column: 65
          }
        }, {
          start: {
            line: 162,
            column: 69
          },
          end: {
            line: 162,
            column: 72
          }
        }],
        line: 162
      },
      "31": {
        loc: {
          start: {
            line: 192,
            column: 39
          },
          end: {
            line: 192,
            column: 103
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 192,
            column: 39
          },
          end: {
            line: 192,
            column: 96
          }
        }, {
          start: {
            line: 192,
            column: 100
          },
          end: {
            line: 192,
            column: 103
          }
        }],
        line: 192
      },
      "32": {
        loc: {
          start: {
            line: 194,
            column: 40
          },
          end: {
            line: 194,
            column: 107
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 194,
            column: 40
          },
          end: {
            line: 194,
            column: 100
          }
        }, {
          start: {
            line: 194,
            column: 104
          },
          end: {
            line: 194,
            column: 107
          }
        }],
        line: 194
      },
      "33": {
        loc: {
          start: {
            line: 198,
            column: 38
          },
          end: {
            line: 198,
            column: 66
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 198,
            column: 57
          },
          end: {
            line: 198,
            column: 60
          }
        }, {
          start: {
            line: 198,
            column: 63
          },
          end: {
            line: 198,
            column: 66
          }
        }],
        line: 198
      },
      "34": {
        loc: {
          start: {
            line: 204,
            column: 26
          },
          end: {
            line: 204,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 204,
            column: 26
          },
          end: {
            line: 204,
            column: 61
          }
        }, {
          start: {
            line: 204,
            column: 65
          },
          end: {
            line: 204,
            column: 67
          }
        }],
        line: 204
      },
      "35": {
        loc: {
          start: {
            line: 219,
            column: 8
          },
          end: {
            line: 220,
            column: 23
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 219,
            column: 8
          },
          end: {
            line: 220,
            column: 23
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 219
      },
      "36": {
        loc: {
          start: {
            line: 221,
            column: 8
          },
          end: {
            line: 222,
            column: 23
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 221,
            column: 8
          },
          end: {
            line: 222,
            column: 23
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 221
      },
      "37": {
        loc: {
          start: {
            line: 223,
            column: 8
          },
          end: {
            line: 224,
            column: 23
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 223,
            column: 8
          },
          end: {
            line: 224,
            column: 23
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 223
      },
      "38": {
        loc: {
          start: {
            line: 225,
            column: 8
          },
          end: {
            line: 226,
            column: 23
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 225,
            column: 8
          },
          end: {
            line: 226,
            column: 23
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 225
      },
      "39": {
        loc: {
          start: {
            line: 233,
            column: 8
          },
          end: {
            line: 238,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 234,
            column: 12
          },
          end: {
            line: 234,
            column: 35
          }
        }, {
          start: {
            line: 235,
            column: 12
          },
          end: {
            line: 235,
            column: 38
          }
        }, {
          start: {
            line: 236,
            column: 12
          },
          end: {
            line: 236,
            column: 36
          }
        }, {
          start: {
            line: 237,
            column: 12
          },
          end: {
            line: 237,
            column: 32
          }
        }],
        line: 233
      },
      "40": {
        loc: {
          start: {
            line: 245,
            column: 8
          },
          end: {
            line: 246,
            column: 23
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 245,
            column: 8
          },
          end: {
            line: 246,
            column: 23
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 245
      },
      "41": {
        loc: {
          start: {
            line: 247,
            column: 8
          },
          end: {
            line: 248,
            column: 23
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 247,
            column: 8
          },
          end: {
            line: 248,
            column: 23
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 247
      },
      "42": {
        loc: {
          start: {
            line: 249,
            column: 8
          },
          end: {
            line: 250,
            column: 24
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 249,
            column: 8
          },
          end: {
            line: 250,
            column: 24
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 249
      },
      "43": {
        loc: {
          start: {
            line: 251,
            column: 8
          },
          end: {
            line: 252,
            column: 23
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 251,
            column: 8
          },
          end: {
            line: 252,
            column: 23
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 251
      },
      "44": {
        loc: {
          start: {
            line: 261,
            column: 8
          },
          end: {
            line: 263,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 261,
            column: 8
          },
          end: {
            line: 263,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 261
      },
      "45": {
        loc: {
          start: {
            line: 261,
            column: 12
          },
          end: {
            line: 261,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 261,
            column: 12
          },
          end: {
            line: 261,
            column: 23
          }
        }, {
          start: {
            line: 261,
            column: 27
          },
          end: {
            line: 261,
            column: 38
          }
        }, {
          start: {
            line: 261,
            column: 42
          },
          end: {
            line: 261,
            column: 53
          }
        }, {
          start: {
            line: 261,
            column: 57
          },
          end: {
            line: 261,
            column: 69
          }
        }],
        line: 261
      },
      "46": {
        loc: {
          start: {
            line: 265,
            column: 8
          },
          end: {
            line: 267,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 265,
            column: 8
          },
          end: {
            line: 267,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 265
      },
      "47": {
        loc: {
          start: {
            line: 265,
            column: 12
          },
          end: {
            line: 265,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 265,
            column: 12
          },
          end: {
            line: 265,
            column: 23
          }
        }, {
          start: {
            line: 265,
            column: 27
          },
          end: {
            line: 265,
            column: 38
          }
        }, {
          start: {
            line: 265,
            column: 42
          },
          end: {
            line: 265,
            column: 53
          }
        }, {
          start: {
            line: 265,
            column: 57
          },
          end: {
            line: 265,
            column: 68
          }
        }, {
          start: {
            line: 265,
            column: 72
          },
          end: {
            line: 265,
            column: 84
          }
        }],
        line: 265
      },
      "48": {
        loc: {
          start: {
            line: 276,
            column: 31
          },
          end: {
            line: 277,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 277,
            column: 12
          },
          end: {
            line: 277,
            column: 67
          }
        }, {
          start: {
            line: 277,
            column: 70
          },
          end: {
            line: 277,
            column: 73
          }
        }],
        line: 276
      },
      "49": {
        loc: {
          start: {
            line: 393,
            column: 16
          },
          end: {
            line: 423,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 393,
            column: 16
          },
          end: {
            line: 423,
            column: 17
          }
        }, {
          start: {
            line: 408,
            column: 21
          },
          end: {
            line: 423,
            column: 17
          }
        }],
        line: 393
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0, 0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0, 0, 0],
      "46": [0, 0],
      "47": [0, 0, 0, 0, 0],
      "48": [0, 0],
      "49": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\services\\rateCalculationService.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\services\\rateCalculationService.ts"],
      sourcesContent: ["import { db } from '../utils/firebase';\r\nimport { logger } from './loggerService';\r\n\r\nexport interface RateFactors {\r\n  baseRate: number;\r\n  experienceMultiplier: number;\r\n  demandMultiplier: number;\r\n  locationMultiplier: number;\r\n  eventTypeMultiplier: number;\r\n  durationMultiplier: number;\r\n  urgencyMultiplier: number;\r\n  seasonalityMultiplier: number;\r\n}\r\n\r\nexport interface RateCalculationRequest {\r\n  musicianId: string;\r\n  eventType: string;\r\n  duration: number; // minutos\r\n  location: string;\r\n  eventDate: Date;\r\n  instrument: string;\r\n  isUrgent?: boolean;\r\n  specialRequirements?: string[];\r\n}\r\n\r\nexport interface RateCalculationResult {\r\n  baseRate: number;\r\n  finalRate: number;\r\n  breakdown: {\r\n    factor: string;\r\n    multiplier: number;\r\n    amount: number;\r\n  }[];\r\n  factors: RateFactors;\r\n  recommendations: {\r\n    suggestedRate: number;\r\n    marketAverage: number;\r\n    competitorRates: number[];\r\n  };\r\n}\r\n\r\nexport interface MarketData {\r\n  averageRate: number;\r\n  minRate: number;\r\n  maxRate: number;\r\n  demandLevel: 'low' | 'medium' | 'high';\r\n  seasonalityFactor: number;\r\n}\r\n\r\nexport class RateCalculationService {\r\n  private readonly COLLECTION_RATES = 'musician_rates';\r\n  private readonly COLLECTION_MARKET_DATA = 'market_data';\r\n  private readonly COLLECTION_PERFORMANCE = 'musician_performance';\r\n\r\n  // Tarifas base por instrumento (por hora)\r\n  private readonly BASE_RATES: Record<string, number> = {\r\n    'guitarra': 50,\r\n    'piano': 60,\r\n    'violin': 70,\r\n    'bateria': 55,\r\n    'bajo': 45,\r\n    'saxofon': 65,\r\n    'trompeta': 60,\r\n    'flauta': 55,\r\n    'canto': 80,\r\n    'dj': 100,\r\n    'banda_completa': 300\r\n  };\r\n\r\n  // Multiplicadores por tipo de evento\r\n  private readonly EVENT_TYPE_MULTIPLIERS: Record<string, number> = {\r\n    'wedding': 1.5,\r\n    'corporate': 1.3,\r\n    'birthday': 1.0,\r\n    'anniversary': 1.2,\r\n    'graduation': 1.1,\r\n    'party': 1.0,\r\n    'ceremony': 1.4,\r\n    'concert': 1.6,\r\n    'festival': 1.8,\r\n    'private': 1.2\r\n  };\r\n\r\n  // Multiplicadores por ubicaci\xF3n\r\n  private readonly LOCATION_MULTIPLIERS: Record<string, number> = {\r\n    'madrid': 1.3,\r\n    'barcelona': 1.4,\r\n    'valencia': 1.1,\r\n    'sevilla': 1.0,\r\n    'bilbao': 1.2,\r\n    'malaga': 1.1,\r\n    'granada': 0.9,\r\n    'alicante': 1.0,\r\n    'murcia': 0.9,\r\n    'zaragoza': 1.1\r\n  };\r\n\r\n  /**\r\n   * Calcular tarifa autom\xE1tica para un m\xFAsico\r\n   */\r\n  async calculateRate(request: RateCalculationRequest): Promise<RateCalculationResult> {\r\n    try {\r\n      logger.info('Calculando tarifa para m\xFAsico:', { context: 'Rate', metadata: { musicianId: request.musicianId } });\r\n      \r\n      // Obtener datos del m\xFAsico\r\n      const musicianData = await this.getMusicianData(request.musicianId);\r\n      \r\n      // Obtener datos del mercado\r\n      const marketData = await this.getMarketData(request.instrument, request.location, request.eventType);\r\n      \r\n      // Calcular factores\r\n      const factors = await this.calculateFactors(request, musicianData, marketData);\r\n      \r\n      // Calcular tarifa base\r\n      const baseRate = this.BASE_RATES[request.instrument] || 50;\r\n      \r\n      // Calcular tarifa final\r\n      const finalRate = this.calculateFinalRate(baseRate, factors);\r\n      \r\n      // Generar breakdown\r\n      const breakdown = this.generateBreakdown(baseRate, factors);\r\n      \r\n      // Generar recomendaciones\r\n      const recommendations = await this.generateRecommendations(request, finalRate, marketData);\r\n      \r\n      const result: RateCalculationResult = {\r\n        baseRate,\r\n        finalRate,\r\n        breakdown,\r\n        factors,\r\n        recommendations\r\n      };\r\n\r\n      logger.info('C\xE1lculo de tarifa completado', {\r\n        metadata: {\r\n          musicianId: request.musicianId,\r\n          baseRate,\r\n          finalRate,\r\n          factors\r\n        }\r\n      });\r\n\r\n      return result;\r\n    } catch (error) {\r\n      logger.error('Error calculando tarifa', error as Error, { \r\n        metadata: { request }\r\n      });\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Obtener datos del m\xFAsico\r\n   */\r\n  private async getMusicianData(musicianId: string): Promise<{\r\n    experience: number; // a\xF1os\r\n    rating: number;\r\n    totalEvents: number;\r\n    completedEvents: number;\r\n    averageResponseTime: number;\r\n    specializations: string[];\r\n  }> {\r\n    try {\r\n      const performanceRef = db.collection(this.COLLECTION_PERFORMANCE).doc(musicianId);\r\n      const doc = await performanceRef.get();\r\n      \r\n      if (doc.exists) {\r\n        const data = doc.data();\r\n        return {\r\n          experience: data?.experience || 1,\r\n          rating: data?.rating || 3.0,\r\n          totalEvents: data?.totalEvents || 0,\r\n          completedEvents: data?.completedEvents || 0,\r\n          averageResponseTime: data?.averageResponseTime || 60,\r\n          specializations: data?.specializations || []\r\n        };\r\n      }\r\n\r\n      // Datos por defecto para m\xFAsicos nuevos\r\n      return {\r\n        experience: 1,\r\n        rating: 3.0,\r\n        totalEvents: 0,\r\n        completedEvents: 0,\r\n        averageResponseTime: 60,\r\n        specializations: []\r\n      };\r\n    } catch (error) {\r\n      logger.error('Error obteniendo datos del m\xFAsico', error as Error, { \r\n        metadata: { musicianId }\r\n      });\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Obtener datos del mercado\r\n   */\r\n  private async getMarketData(instrument: string, location: string, eventType: string): Promise<MarketData> {\r\n    try {\r\n      const marketRef = db.collection(this.COLLECTION_MARKET_DATA)\r\n        .where('instrument', '==', instrument)\r\n        .where('location', '==', location)\r\n        .where('eventType', '==', eventType);\r\n      \r\n      const snapshot = await marketRef.get();\r\n      \r\n      if (!snapshot.empty) {\r\n        const data = snapshot.docs[0].data();\r\n        return {\r\n          averageRate: data.averageRate || 50,\r\n          minRate: data.minRate || 30,\r\n          maxRate: data.maxRate || 100,\r\n          demandLevel: data.demandLevel || 'medium',\r\n          seasonalityFactor: data.seasonalityFactor || 1.0\r\n        };\r\n      }\r\n\r\n      // Datos por defecto\r\n      return {\r\n        averageRate: 50,\r\n        minRate: 30,\r\n        maxRate: 100,\r\n        demandLevel: 'medium',\r\n        seasonalityFactor: 1.0\r\n      };\r\n    } catch (error) {\r\n      logger.error('Error obteniendo datos del mercado', error as Error, { \r\n        metadata: { instrument, location, eventType }\r\n      });\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calcular factores de multiplicaci\xF3n\r\n   */\r\n  private async calculateFactors(\r\n    request: RateCalculationRequest,\r\n    musicianData: any,\r\n    marketData: MarketData\r\n  ): Promise<RateFactors> {\r\n    // Factor de experiencia\r\n    const experienceMultiplier = this.calculateExperienceMultiplier(musicianData.experience);\r\n    \r\n    // Factor de demanda del mercado\r\n    const demandMultiplier = this.calculateDemandMultiplier(marketData.demandLevel);\r\n    \r\n    // Factor de ubicaci\xF3n\r\n    const locationMultiplier = this.LOCATION_MULTIPLIERS[request.location.toLowerCase()] || 1.0;\r\n    \r\n    // Factor de tipo de evento\r\n    const eventTypeMultiplier = this.EVENT_TYPE_MULTIPLIERS[request.eventType.toLowerCase()] || 1.0;\r\n    \r\n    // Factor de duraci\xF3n\r\n    const durationMultiplier = this.calculateDurationMultiplier(request.duration);\r\n    \r\n    // Factor de urgencia\r\n    const urgencyMultiplier = request.isUrgent ? 1.3 : 1.0;\r\n    \r\n    // Factor de estacionalidad\r\n    const seasonalityMultiplier = this.calculateSeasonalityMultiplier(request.eventDate, marketData.seasonalityFactor);\r\n    \r\n    // Factor de rendimiento del m\xFAsico\r\n    const performanceMultiplier = this.calculatePerformanceMultiplier(musicianData);\r\n\r\n    return {\r\n      baseRate: this.BASE_RATES[request.instrument] || 50,\r\n      experienceMultiplier,\r\n      demandMultiplier,\r\n      locationMultiplier,\r\n      eventTypeMultiplier,\r\n      durationMultiplier,\r\n      urgencyMultiplier,\r\n      seasonalityMultiplier: seasonalityMultiplier * performanceMultiplier\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Calcular multiplicador por experiencia\r\n   */\r\n  private calculateExperienceMultiplier(experience: number): number {\r\n    if (experience < 1) return 0.8;\r\n    if (experience < 3) return 1.0;\r\n    if (experience < 5) return 1.2;\r\n    if (experience < 10) return 1.4;\r\n    return 1.6; // 10+ a\xF1os\r\n  }\r\n\r\n  /**\r\n   * Calcular multiplicador por demanda\r\n   */\r\n  private calculateDemandMultiplier(demandLevel: string): number {\r\n    switch (demandLevel) {\r\n      case 'low': return 0.9;\r\n      case 'medium': return 1.0;\r\n      case 'high': return 1.3;\r\n      default: return 1.0;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calcular multiplicador por duraci\xF3n\r\n   */\r\n  private calculateDurationMultiplier(duration: number): number {\r\n    const hours = duration / 60;\r\n    if (hours <= 1) return 1.0;\r\n    if (hours <= 2) return 0.9;\r\n    if (hours <= 4) return 0.85;\r\n    if (hours <= 6) return 0.8;\r\n    return 0.75; // M\xE1s de 6 horas\r\n  }\r\n\r\n  /**\r\n   * Calcular multiplicador por estacionalidad\r\n   */\r\n  private calculateSeasonalityMultiplier(eventDate: Date, baseFactor: number): number {\r\n    const month = eventDate.getMonth() + 1;\r\n    \r\n    // Meses de alta temporada (verano, diciembre)\r\n    if (month === 6 || month === 7 || month === 8 || month === 12) {\r\n      return baseFactor * 1.2;\r\n    }\r\n    \r\n    // Meses de temporada media (primavera, oto\xF1o)\r\n    if (month === 3 || month === 4 || month === 5 || month === 9 || month === 10) {\r\n      return baseFactor * 1.1;\r\n    }\r\n    \r\n    // Meses de baja temporada (enero, febrero, noviembre)\r\n    return baseFactor * 0.9;\r\n  }\r\n\r\n  /**\r\n   * Calcular multiplicador por rendimiento\r\n   */\r\n  private calculatePerformanceMultiplier(musicianData: any): number {\r\n    const ratingMultiplier = musicianData.rating / 5.0;\r\n    const completionRate = musicianData.totalEvents > 0 ? \r\n      musicianData.completedEvents / musicianData.totalEvents : 0.8;\r\n    const responseMultiplier = Math.max(0.8, 1.0 - (musicianData.averageResponseTime - 30) / 120);\r\n    \r\n    return (ratingMultiplier + completionRate + responseMultiplier) / 3;\r\n  }\r\n\r\n  /**\r\n   * Calcular tarifa final\r\n   */\r\n  private calculateFinalRate(baseRate: number, factors: RateFactors): number {\r\n    const finalRate = baseRate * \r\n      factors.experienceMultiplier *\r\n      factors.demandMultiplier *\r\n      factors.locationMultiplier *\r\n      factors.eventTypeMultiplier *\r\n      factors.durationMultiplier *\r\n      factors.urgencyMultiplier *\r\n      factors.seasonalityMultiplier;\r\n    \r\n    // Redondear a m\xFAltiplos de 5\r\n    return Math.round(finalRate / 5) * 5;\r\n  }\r\n\r\n  /**\r\n   * Generar breakdown detallado\r\n   */\r\n  private generateBreakdown(baseRate: number, factors: RateFactors): RateCalculationResult['breakdown'] {\r\n    return [\r\n      {\r\n        factor: 'Tarifa Base',\r\n        multiplier: 1.0,\r\n        amount: baseRate\r\n      },\r\n      {\r\n        factor: 'Experiencia',\r\n        multiplier: factors.experienceMultiplier,\r\n        amount: baseRate * (factors.experienceMultiplier - 1)\r\n      },\r\n      {\r\n        factor: 'Demanda del Mercado',\r\n        multiplier: factors.demandMultiplier,\r\n        amount: baseRate * (factors.demandMultiplier - 1)\r\n      },\r\n      {\r\n        factor: 'Ubicaci\xF3n',\r\n        multiplier: factors.locationMultiplier,\r\n        amount: baseRate * (factors.locationMultiplier - 1)\r\n      },\r\n      {\r\n        factor: 'Tipo de Evento',\r\n        multiplier: factors.eventTypeMultiplier,\r\n        amount: baseRate * (factors.eventTypeMultiplier - 1)\r\n      },\r\n      {\r\n        factor: 'Duraci\xF3n',\r\n        multiplier: factors.durationMultiplier,\r\n        amount: baseRate * (factors.durationMultiplier - 1)\r\n      },\r\n      {\r\n        factor: 'Urgencia',\r\n        multiplier: factors.urgencyMultiplier,\r\n        amount: baseRate * (factors.urgencyMultiplier - 1)\r\n      },\r\n      {\r\n        factor: 'Estacionalidad y Rendimiento',\r\n        multiplier: factors.seasonalityMultiplier,\r\n        amount: baseRate * (factors.seasonalityMultiplier - 1)\r\n      }\r\n    ];\r\n  }\r\n\r\n  /**\r\n   * Generar recomendaciones\r\n   */\r\n  private async generateRecommendations(\r\n    request: RateCalculationRequest,\r\n    calculatedRate: number,\r\n    marketData: MarketData\r\n  ): Promise<RateCalculationResult['recommendations']> {\r\n    // Obtener tarifas de competidores\r\n    const competitorRates = await this.getCompetitorRates(request.instrument, request.location);\r\n    \r\n    // Calcular tarifa sugerida basada en el mercado\r\n    const suggestedRate = Math.max(\r\n      marketData.minRate,\r\n      Math.min(marketData.maxRate, calculatedRate)\r\n    );\r\n    \r\n    return {\r\n      suggestedRate,\r\n      marketAverage: marketData.averageRate,\r\n      competitorRates\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Obtener tarifas de competidores\r\n   */\r\n  private async getCompetitorRates(instrument: string, location: string): Promise<number[]> {\r\n    try {\r\n      const ratesRef = db.collection(this.COLLECTION_RATES)\r\n        .where('instrument', '==', instrument)\r\n        .where('location', '==', location)\r\n        .orderBy('rate', 'desc')\r\n        .limit(5);\r\n      \r\n      const snapshot = await ratesRef.get();\r\n      return snapshot.docs.map(doc => doc.data().rate);\r\n    } catch (error) {\r\n      logger.error('Error obteniendo tarifas de competidores', error as Error, { \r\n        metadata: { instrument, location }\r\n      });\r\n      return [];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Actualizar datos del mercado\r\n   */\r\n  async updateMarketData(\r\n    instrument: string,\r\n    location: string,\r\n    eventType: string,\r\n    rate: number\r\n  ): Promise<void> {\r\n    try {\r\n      logger.info('[src/services/rateCalculationService.ts:350] Actualizando datos del mercado');\r\n      \r\n      const marketRef = db.collection(this.COLLECTION_MARKET_DATA)\r\n        .where('instrument', '==', instrument)\r\n        .where('location', '==', location)\r\n        .where('eventType', '==', eventType);\r\n      \r\n      const snapshot = await marketRef.get();\r\n      \r\n      if (!snapshot.empty) {\r\n        const doc = snapshot.docs[0];\r\n        const data = doc.data();\r\n        \r\n        // Actualizar promedio\r\n        const newAverage = (data.averageRate * data.count + rate) / (data.count + 1);\r\n        const newMin = Math.min(data.minRate, rate);\r\n        const newMax = Math.max(data.maxRate, rate);\r\n        \r\n        await doc.ref.update({\r\n          averageRate: newAverage,\r\n          minRate: newMin,\r\n          maxRate: newMax,\r\n          count: data.count + 1,\r\n          updatedAt: new Date()\r\n        });\r\n      } else {\r\n        // Crear nuevo registro\r\n        await db.collection(this.COLLECTION_MARKET_DATA).add({\r\n          instrument,\r\n          location,\r\n          eventType,\r\n          averageRate: rate,\r\n          minRate: rate,\r\n          maxRate: rate,\r\n          count: 1,\r\n          demandLevel: 'medium',\r\n          seasonalityFactor: 1.0,\r\n          createdAt: new Date(),\r\n          updatedAt: new Date()\r\n        });\r\n      }\r\n    } catch (error) {\r\n      logger.error('Error actualizando datos del mercado', error as Error, { \r\n        metadata: { instrument, location, eventType, rate }\r\n      });\r\n      throw error;\r\n    }\r\n  }\r\n} "],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "63a85b5662ab0bdd04ac5c60ea94d6fc3a1c4790"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_rf8lsamg1 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_rf8lsamg1();
var __awaiter =
/* istanbul ignore next */
(cov_rf8lsamg1().s[0]++,
/* istanbul ignore next */
(cov_rf8lsamg1().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_rf8lsamg1().b[0][1]++, this.__awaiter) ||
/* istanbul ignore next */
(cov_rf8lsamg1().b[0][2]++, function (thisArg, _arguments, P, generator) {
  /* istanbul ignore next */
  cov_rf8lsamg1().f[0]++;
  function adopt(value) {
    /* istanbul ignore next */
    cov_rf8lsamg1().f[1]++;
    cov_rf8lsamg1().s[1]++;
    return value instanceof P ?
    /* istanbul ignore next */
    (cov_rf8lsamg1().b[1][0]++, value) :
    /* istanbul ignore next */
    (cov_rf8lsamg1().b[1][1]++, new P(function (resolve) {
      /* istanbul ignore next */
      cov_rf8lsamg1().f[2]++;
      cov_rf8lsamg1().s[2]++;
      resolve(value);
    }));
  }
  /* istanbul ignore next */
  cov_rf8lsamg1().s[3]++;
  return new (
  /* istanbul ignore next */
  (cov_rf8lsamg1().b[2][0]++, P) ||
  /* istanbul ignore next */
  (cov_rf8lsamg1().b[2][1]++, P = Promise))(function (resolve, reject) {
    /* istanbul ignore next */
    cov_rf8lsamg1().f[3]++;
    function fulfilled(value) {
      /* istanbul ignore next */
      cov_rf8lsamg1().f[4]++;
      cov_rf8lsamg1().s[4]++;
      try {
        /* istanbul ignore next */
        cov_rf8lsamg1().s[5]++;
        step(generator.next(value));
      } catch (e) {
        /* istanbul ignore next */
        cov_rf8lsamg1().s[6]++;
        reject(e);
      }
    }
    function rejected(value) {
      /* istanbul ignore next */
      cov_rf8lsamg1().f[5]++;
      cov_rf8lsamg1().s[7]++;
      try {
        /* istanbul ignore next */
        cov_rf8lsamg1().s[8]++;
        step(generator["throw"](value));
      } catch (e) {
        /* istanbul ignore next */
        cov_rf8lsamg1().s[9]++;
        reject(e);
      }
    }
    function step(result) {
      /* istanbul ignore next */
      cov_rf8lsamg1().f[6]++;
      cov_rf8lsamg1().s[10]++;
      result.done ?
      /* istanbul ignore next */
      (cov_rf8lsamg1().b[3][0]++, resolve(result.value)) :
      /* istanbul ignore next */
      (cov_rf8lsamg1().b[3][1]++, adopt(result.value).then(fulfilled, rejected));
    }
    /* istanbul ignore next */
    cov_rf8lsamg1().s[11]++;
    step((generator = generator.apply(thisArg,
    /* istanbul ignore next */
    (cov_rf8lsamg1().b[4][0]++, _arguments) ||
    /* istanbul ignore next */
    (cov_rf8lsamg1().b[4][1]++, []))).next());
  });
}));
/* istanbul ignore next */
cov_rf8lsamg1().s[12]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_rf8lsamg1().s[13]++;
exports.RateCalculationService = void 0;
const firebase_1 =
/* istanbul ignore next */
(cov_rf8lsamg1().s[14]++, require("../utils/firebase"));
const loggerService_1 =
/* istanbul ignore next */
(cov_rf8lsamg1().s[15]++, require("./loggerService"));
class RateCalculationService {
  constructor() {
    /* istanbul ignore next */
    cov_rf8lsamg1().f[7]++;
    cov_rf8lsamg1().s[16]++;
    this.COLLECTION_RATES = 'musician_rates';
    /* istanbul ignore next */
    cov_rf8lsamg1().s[17]++;
    this.COLLECTION_MARKET_DATA = 'market_data';
    /* istanbul ignore next */
    cov_rf8lsamg1().s[18]++;
    this.COLLECTION_PERFORMANCE = 'musician_performance';
    // Tarifas base por instrumento (por hora)
    /* istanbul ignore next */
    cov_rf8lsamg1().s[19]++;
    this.BASE_RATES = {
      'guitarra': 50,
      'piano': 60,
      'violin': 70,
      'bateria': 55,
      'bajo': 45,
      'saxofon': 65,
      'trompeta': 60,
      'flauta': 55,
      'canto': 80,
      'dj': 100,
      'banda_completa': 300
    };
    // Multiplicadores por tipo de evento
    /* istanbul ignore next */
    cov_rf8lsamg1().s[20]++;
    this.EVENT_TYPE_MULTIPLIERS = {
      'wedding': 1.5,
      'corporate': 1.3,
      'birthday': 1.0,
      'anniversary': 1.2,
      'graduation': 1.1,
      'party': 1.0,
      'ceremony': 1.4,
      'concert': 1.6,
      'festival': 1.8,
      'private': 1.2
    };
    // Multiplicadores por ubicación
    /* istanbul ignore next */
    cov_rf8lsamg1().s[21]++;
    this.LOCATION_MULTIPLIERS = {
      'madrid': 1.3,
      'barcelona': 1.4,
      'valencia': 1.1,
      'sevilla': 1.0,
      'bilbao': 1.2,
      'malaga': 1.1,
      'granada': 0.9,
      'alicante': 1.0,
      'murcia': 0.9,
      'zaragoza': 1.1
    };
  }
  /**
   * Calcular tarifa automática para un músico
   */
  calculateRate(request) {
    /* istanbul ignore next */
    cov_rf8lsamg1().f[8]++;
    cov_rf8lsamg1().s[22]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_rf8lsamg1().f[9]++;
      cov_rf8lsamg1().s[23]++;
      try {
        /* istanbul ignore next */
        cov_rf8lsamg1().s[24]++;
        loggerService_1.logger.info('Calculando tarifa para músico:', {
          context: 'Rate',
          metadata: {
            musicianId: request.musicianId
          }
        });
        // Obtener datos del músico
        const musicianData =
        /* istanbul ignore next */
        (cov_rf8lsamg1().s[25]++, yield this.getMusicianData(request.musicianId));
        // Obtener datos del mercado
        const marketData =
        /* istanbul ignore next */
        (cov_rf8lsamg1().s[26]++, yield this.getMarketData(request.instrument, request.location, request.eventType));
        // Calcular factores
        const factors =
        /* istanbul ignore next */
        (cov_rf8lsamg1().s[27]++, yield this.calculateFactors(request, musicianData, marketData));
        // Calcular tarifa base
        const baseRate =
        /* istanbul ignore next */
        (cov_rf8lsamg1().s[28]++,
        /* istanbul ignore next */
        (cov_rf8lsamg1().b[5][0]++, this.BASE_RATES[request.instrument]) ||
        /* istanbul ignore next */
        (cov_rf8lsamg1().b[5][1]++, 50));
        // Calcular tarifa final
        const finalRate =
        /* istanbul ignore next */
        (cov_rf8lsamg1().s[29]++, this.calculateFinalRate(baseRate, factors));
        // Generar breakdown
        const breakdown =
        /* istanbul ignore next */
        (cov_rf8lsamg1().s[30]++, this.generateBreakdown(baseRate, factors));
        // Generar recomendaciones
        const recommendations =
        /* istanbul ignore next */
        (cov_rf8lsamg1().s[31]++, yield this.generateRecommendations(request, finalRate, marketData));
        const result =
        /* istanbul ignore next */
        (cov_rf8lsamg1().s[32]++, {
          baseRate,
          finalRate,
          breakdown,
          factors,
          recommendations
        });
        /* istanbul ignore next */
        cov_rf8lsamg1().s[33]++;
        loggerService_1.logger.info('Cálculo de tarifa completado', {
          metadata: {
            musicianId: request.musicianId,
            baseRate,
            finalRate,
            factors
          }
        });
        /* istanbul ignore next */
        cov_rf8lsamg1().s[34]++;
        return result;
      } catch (error) {
        /* istanbul ignore next */
        cov_rf8lsamg1().s[35]++;
        loggerService_1.logger.error('Error calculando tarifa', error, {
          metadata: {
            request
          }
        });
        /* istanbul ignore next */
        cov_rf8lsamg1().s[36]++;
        throw error;
      }
    });
  }
  /**
   * Obtener datos del músico
   */
  getMusicianData(musicianId) {
    /* istanbul ignore next */
    cov_rf8lsamg1().f[10]++;
    cov_rf8lsamg1().s[37]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_rf8lsamg1().f[11]++;
      cov_rf8lsamg1().s[38]++;
      try {
        const performanceRef =
        /* istanbul ignore next */
        (cov_rf8lsamg1().s[39]++, firebase_1.db.collection(this.COLLECTION_PERFORMANCE).doc(musicianId));
        const doc =
        /* istanbul ignore next */
        (cov_rf8lsamg1().s[40]++, yield performanceRef.get());
        /* istanbul ignore next */
        cov_rf8lsamg1().s[41]++;
        if (doc.exists) {
          /* istanbul ignore next */
          cov_rf8lsamg1().b[6][0]++;
          const data =
          /* istanbul ignore next */
          (cov_rf8lsamg1().s[42]++, doc.data());
          /* istanbul ignore next */
          cov_rf8lsamg1().s[43]++;
          return {
            experience:
            /* istanbul ignore next */
            (cov_rf8lsamg1().b[7][0]++,
            /* istanbul ignore next */
            (cov_rf8lsamg1().b[9][0]++, data === null) ||
            /* istanbul ignore next */
            (cov_rf8lsamg1().b[9][1]++, data === void 0) ?
            /* istanbul ignore next */
            (cov_rf8lsamg1().b[8][0]++, void 0) :
            /* istanbul ignore next */
            (cov_rf8lsamg1().b[8][1]++, data.experience)) ||
            /* istanbul ignore next */
            (cov_rf8lsamg1().b[7][1]++, 1),
            rating:
            /* istanbul ignore next */
            (cov_rf8lsamg1().b[10][0]++,
            /* istanbul ignore next */
            (cov_rf8lsamg1().b[12][0]++, data === null) ||
            /* istanbul ignore next */
            (cov_rf8lsamg1().b[12][1]++, data === void 0) ?
            /* istanbul ignore next */
            (cov_rf8lsamg1().b[11][0]++, void 0) :
            /* istanbul ignore next */
            (cov_rf8lsamg1().b[11][1]++, data.rating)) ||
            /* istanbul ignore next */
            (cov_rf8lsamg1().b[10][1]++, 3.0),
            totalEvents:
            /* istanbul ignore next */
            (cov_rf8lsamg1().b[13][0]++,
            /* istanbul ignore next */
            (cov_rf8lsamg1().b[15][0]++, data === null) ||
            /* istanbul ignore next */
            (cov_rf8lsamg1().b[15][1]++, data === void 0) ?
            /* istanbul ignore next */
            (cov_rf8lsamg1().b[14][0]++, void 0) :
            /* istanbul ignore next */
            (cov_rf8lsamg1().b[14][1]++, data.totalEvents)) ||
            /* istanbul ignore next */
            (cov_rf8lsamg1().b[13][1]++, 0),
            completedEvents:
            /* istanbul ignore next */
            (cov_rf8lsamg1().b[16][0]++,
            /* istanbul ignore next */
            (cov_rf8lsamg1().b[18][0]++, data === null) ||
            /* istanbul ignore next */
            (cov_rf8lsamg1().b[18][1]++, data === void 0) ?
            /* istanbul ignore next */
            (cov_rf8lsamg1().b[17][0]++, void 0) :
            /* istanbul ignore next */
            (cov_rf8lsamg1().b[17][1]++, data.completedEvents)) ||
            /* istanbul ignore next */
            (cov_rf8lsamg1().b[16][1]++, 0),
            averageResponseTime:
            /* istanbul ignore next */
            (cov_rf8lsamg1().b[19][0]++,
            /* istanbul ignore next */
            (cov_rf8lsamg1().b[21][0]++, data === null) ||
            /* istanbul ignore next */
            (cov_rf8lsamg1().b[21][1]++, data === void 0) ?
            /* istanbul ignore next */
            (cov_rf8lsamg1().b[20][0]++, void 0) :
            /* istanbul ignore next */
            (cov_rf8lsamg1().b[20][1]++, data.averageResponseTime)) ||
            /* istanbul ignore next */
            (cov_rf8lsamg1().b[19][1]++, 60),
            specializations:
            /* istanbul ignore next */
            (cov_rf8lsamg1().b[22][0]++,
            /* istanbul ignore next */
            (cov_rf8lsamg1().b[24][0]++, data === null) ||
            /* istanbul ignore next */
            (cov_rf8lsamg1().b[24][1]++, data === void 0) ?
            /* istanbul ignore next */
            (cov_rf8lsamg1().b[23][0]++, void 0) :
            /* istanbul ignore next */
            (cov_rf8lsamg1().b[23][1]++, data.specializations)) ||
            /* istanbul ignore next */
            (cov_rf8lsamg1().b[22][1]++, [])
          };
        } else
        /* istanbul ignore next */
        {
          cov_rf8lsamg1().b[6][1]++;
        }
        // Datos por defecto para músicos nuevos
        cov_rf8lsamg1().s[44]++;
        return {
          experience: 1,
          rating: 3.0,
          totalEvents: 0,
          completedEvents: 0,
          averageResponseTime: 60,
          specializations: []
        };
      } catch (error) {
        /* istanbul ignore next */
        cov_rf8lsamg1().s[45]++;
        loggerService_1.logger.error('Error obteniendo datos del músico', error, {
          metadata: {
            musicianId
          }
        });
        /* istanbul ignore next */
        cov_rf8lsamg1().s[46]++;
        throw error;
      }
    });
  }
  /**
   * Obtener datos del mercado
   */
  getMarketData(instrument, location, eventType) {
    /* istanbul ignore next */
    cov_rf8lsamg1().f[12]++;
    cov_rf8lsamg1().s[47]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_rf8lsamg1().f[13]++;
      cov_rf8lsamg1().s[48]++;
      try {
        const marketRef =
        /* istanbul ignore next */
        (cov_rf8lsamg1().s[49]++, firebase_1.db.collection(this.COLLECTION_MARKET_DATA).where('instrument', '==', instrument).where('location', '==', location).where('eventType', '==', eventType));
        const snapshot =
        /* istanbul ignore next */
        (cov_rf8lsamg1().s[50]++, yield marketRef.get());
        /* istanbul ignore next */
        cov_rf8lsamg1().s[51]++;
        if (!snapshot.empty) {
          /* istanbul ignore next */
          cov_rf8lsamg1().b[25][0]++;
          const data =
          /* istanbul ignore next */
          (cov_rf8lsamg1().s[52]++, snapshot.docs[0].data());
          /* istanbul ignore next */
          cov_rf8lsamg1().s[53]++;
          return {
            averageRate:
            /* istanbul ignore next */
            (cov_rf8lsamg1().b[26][0]++, data.averageRate) ||
            /* istanbul ignore next */
            (cov_rf8lsamg1().b[26][1]++, 50),
            minRate:
            /* istanbul ignore next */
            (cov_rf8lsamg1().b[27][0]++, data.minRate) ||
            /* istanbul ignore next */
            (cov_rf8lsamg1().b[27][1]++, 30),
            maxRate:
            /* istanbul ignore next */
            (cov_rf8lsamg1().b[28][0]++, data.maxRate) ||
            /* istanbul ignore next */
            (cov_rf8lsamg1().b[28][1]++, 100),
            demandLevel:
            /* istanbul ignore next */
            (cov_rf8lsamg1().b[29][0]++, data.demandLevel) ||
            /* istanbul ignore next */
            (cov_rf8lsamg1().b[29][1]++, 'medium'),
            seasonalityFactor:
            /* istanbul ignore next */
            (cov_rf8lsamg1().b[30][0]++, data.seasonalityFactor) ||
            /* istanbul ignore next */
            (cov_rf8lsamg1().b[30][1]++, 1.0)
          };
        } else
        /* istanbul ignore next */
        {
          cov_rf8lsamg1().b[25][1]++;
        }
        // Datos por defecto
        cov_rf8lsamg1().s[54]++;
        return {
          averageRate: 50,
          minRate: 30,
          maxRate: 100,
          demandLevel: 'medium',
          seasonalityFactor: 1.0
        };
      } catch (error) {
        /* istanbul ignore next */
        cov_rf8lsamg1().s[55]++;
        loggerService_1.logger.error('Error obteniendo datos del mercado', error, {
          metadata: {
            instrument,
            location,
            eventType
          }
        });
        /* istanbul ignore next */
        cov_rf8lsamg1().s[56]++;
        throw error;
      }
    });
  }
  /**
   * Calcular factores de multiplicación
   */
  calculateFactors(request, musicianData, marketData) {
    /* istanbul ignore next */
    cov_rf8lsamg1().f[14]++;
    cov_rf8lsamg1().s[57]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_rf8lsamg1().f[15]++;
      // Factor de experiencia
      const experienceMultiplier =
      /* istanbul ignore next */
      (cov_rf8lsamg1().s[58]++, this.calculateExperienceMultiplier(musicianData.experience));
      // Factor de demanda del mercado
      const demandMultiplier =
      /* istanbul ignore next */
      (cov_rf8lsamg1().s[59]++, this.calculateDemandMultiplier(marketData.demandLevel));
      // Factor de ubicación
      const locationMultiplier =
      /* istanbul ignore next */
      (cov_rf8lsamg1().s[60]++,
      /* istanbul ignore next */
      (cov_rf8lsamg1().b[31][0]++, this.LOCATION_MULTIPLIERS[request.location.toLowerCase()]) ||
      /* istanbul ignore next */
      (cov_rf8lsamg1().b[31][1]++, 1.0));
      // Factor de tipo de evento
      const eventTypeMultiplier =
      /* istanbul ignore next */
      (cov_rf8lsamg1().s[61]++,
      /* istanbul ignore next */
      (cov_rf8lsamg1().b[32][0]++, this.EVENT_TYPE_MULTIPLIERS[request.eventType.toLowerCase()]) ||
      /* istanbul ignore next */
      (cov_rf8lsamg1().b[32][1]++, 1.0));
      // Factor de duración
      const durationMultiplier =
      /* istanbul ignore next */
      (cov_rf8lsamg1().s[62]++, this.calculateDurationMultiplier(request.duration));
      // Factor de urgencia
      const urgencyMultiplier =
      /* istanbul ignore next */
      (cov_rf8lsamg1().s[63]++, request.isUrgent ?
      /* istanbul ignore next */
      (cov_rf8lsamg1().b[33][0]++, 1.3) :
      /* istanbul ignore next */
      (cov_rf8lsamg1().b[33][1]++, 1.0));
      // Factor de estacionalidad
      const seasonalityMultiplier =
      /* istanbul ignore next */
      (cov_rf8lsamg1().s[64]++, this.calculateSeasonalityMultiplier(request.eventDate, marketData.seasonalityFactor));
      // Factor de rendimiento del músico
      const performanceMultiplier =
      /* istanbul ignore next */
      (cov_rf8lsamg1().s[65]++, this.calculatePerformanceMultiplier(musicianData));
      /* istanbul ignore next */
      cov_rf8lsamg1().s[66]++;
      return {
        baseRate:
        /* istanbul ignore next */
        (cov_rf8lsamg1().b[34][0]++, this.BASE_RATES[request.instrument]) ||
        /* istanbul ignore next */
        (cov_rf8lsamg1().b[34][1]++, 50),
        experienceMultiplier,
        demandMultiplier,
        locationMultiplier,
        eventTypeMultiplier,
        durationMultiplier,
        urgencyMultiplier,
        seasonalityMultiplier: seasonalityMultiplier * performanceMultiplier
      };
    });
  }
  /**
   * Calcular multiplicador por experiencia
   */
  calculateExperienceMultiplier(experience) {
    /* istanbul ignore next */
    cov_rf8lsamg1().f[16]++;
    cov_rf8lsamg1().s[67]++;
    if (experience < 1) {
      /* istanbul ignore next */
      cov_rf8lsamg1().b[35][0]++;
      cov_rf8lsamg1().s[68]++;
      return 0.8;
    } else
    /* istanbul ignore next */
    {
      cov_rf8lsamg1().b[35][1]++;
    }
    cov_rf8lsamg1().s[69]++;
    if (experience < 3) {
      /* istanbul ignore next */
      cov_rf8lsamg1().b[36][0]++;
      cov_rf8lsamg1().s[70]++;
      return 1.0;
    } else
    /* istanbul ignore next */
    {
      cov_rf8lsamg1().b[36][1]++;
    }
    cov_rf8lsamg1().s[71]++;
    if (experience < 5) {
      /* istanbul ignore next */
      cov_rf8lsamg1().b[37][0]++;
      cov_rf8lsamg1().s[72]++;
      return 1.2;
    } else
    /* istanbul ignore next */
    {
      cov_rf8lsamg1().b[37][1]++;
    }
    cov_rf8lsamg1().s[73]++;
    if (experience < 10) {
      /* istanbul ignore next */
      cov_rf8lsamg1().b[38][0]++;
      cov_rf8lsamg1().s[74]++;
      return 1.4;
    } else
    /* istanbul ignore next */
    {
      cov_rf8lsamg1().b[38][1]++;
    }
    cov_rf8lsamg1().s[75]++;
    return 1.6; // 10+ años
  }
  /**
   * Calcular multiplicador por demanda
   */
  calculateDemandMultiplier(demandLevel) {
    /* istanbul ignore next */
    cov_rf8lsamg1().f[17]++;
    cov_rf8lsamg1().s[76]++;
    switch (demandLevel) {
      case 'low':
        /* istanbul ignore next */
        cov_rf8lsamg1().b[39][0]++;
        cov_rf8lsamg1().s[77]++;
        return 0.9;
      case 'medium':
        /* istanbul ignore next */
        cov_rf8lsamg1().b[39][1]++;
        cov_rf8lsamg1().s[78]++;
        return 1.0;
      case 'high':
        /* istanbul ignore next */
        cov_rf8lsamg1().b[39][2]++;
        cov_rf8lsamg1().s[79]++;
        return 1.3;
      default:
        /* istanbul ignore next */
        cov_rf8lsamg1().b[39][3]++;
        cov_rf8lsamg1().s[80]++;
        return 1.0;
    }
  }
  /**
   * Calcular multiplicador por duración
   */
  calculateDurationMultiplier(duration) {
    /* istanbul ignore next */
    cov_rf8lsamg1().f[18]++;
    const hours =
    /* istanbul ignore next */
    (cov_rf8lsamg1().s[81]++, duration / 60);
    /* istanbul ignore next */
    cov_rf8lsamg1().s[82]++;
    if (hours <= 1) {
      /* istanbul ignore next */
      cov_rf8lsamg1().b[40][0]++;
      cov_rf8lsamg1().s[83]++;
      return 1.0;
    } else
    /* istanbul ignore next */
    {
      cov_rf8lsamg1().b[40][1]++;
    }
    cov_rf8lsamg1().s[84]++;
    if (hours <= 2) {
      /* istanbul ignore next */
      cov_rf8lsamg1().b[41][0]++;
      cov_rf8lsamg1().s[85]++;
      return 0.9;
    } else
    /* istanbul ignore next */
    {
      cov_rf8lsamg1().b[41][1]++;
    }
    cov_rf8lsamg1().s[86]++;
    if (hours <= 4) {
      /* istanbul ignore next */
      cov_rf8lsamg1().b[42][0]++;
      cov_rf8lsamg1().s[87]++;
      return 0.85;
    } else
    /* istanbul ignore next */
    {
      cov_rf8lsamg1().b[42][1]++;
    }
    cov_rf8lsamg1().s[88]++;
    if (hours <= 6) {
      /* istanbul ignore next */
      cov_rf8lsamg1().b[43][0]++;
      cov_rf8lsamg1().s[89]++;
      return 0.8;
    } else
    /* istanbul ignore next */
    {
      cov_rf8lsamg1().b[43][1]++;
    }
    cov_rf8lsamg1().s[90]++;
    return 0.75; // Más de 6 horas
  }
  /**
   * Calcular multiplicador por estacionalidad
   */
  calculateSeasonalityMultiplier(eventDate, baseFactor) {
    /* istanbul ignore next */
    cov_rf8lsamg1().f[19]++;
    const month =
    /* istanbul ignore next */
    (cov_rf8lsamg1().s[91]++, eventDate.getMonth() + 1);
    // Meses de alta temporada (verano, diciembre)
    /* istanbul ignore next */
    cov_rf8lsamg1().s[92]++;
    if (
    /* istanbul ignore next */
    (cov_rf8lsamg1().b[45][0]++, month === 6) ||
    /* istanbul ignore next */
    (cov_rf8lsamg1().b[45][1]++, month === 7) ||
    /* istanbul ignore next */
    (cov_rf8lsamg1().b[45][2]++, month === 8) ||
    /* istanbul ignore next */
    (cov_rf8lsamg1().b[45][3]++, month === 12)) {
      /* istanbul ignore next */
      cov_rf8lsamg1().b[44][0]++;
      cov_rf8lsamg1().s[93]++;
      return baseFactor * 1.2;
    } else
    /* istanbul ignore next */
    {
      cov_rf8lsamg1().b[44][1]++;
    }
    // Meses de temporada media (primavera, otoño)
    cov_rf8lsamg1().s[94]++;
    if (
    /* istanbul ignore next */
    (cov_rf8lsamg1().b[47][0]++, month === 3) ||
    /* istanbul ignore next */
    (cov_rf8lsamg1().b[47][1]++, month === 4) ||
    /* istanbul ignore next */
    (cov_rf8lsamg1().b[47][2]++, month === 5) ||
    /* istanbul ignore next */
    (cov_rf8lsamg1().b[47][3]++, month === 9) ||
    /* istanbul ignore next */
    (cov_rf8lsamg1().b[47][4]++, month === 10)) {
      /* istanbul ignore next */
      cov_rf8lsamg1().b[46][0]++;
      cov_rf8lsamg1().s[95]++;
      return baseFactor * 1.1;
    } else
    /* istanbul ignore next */
    {
      cov_rf8lsamg1().b[46][1]++;
    }
    // Meses de baja temporada (enero, febrero, noviembre)
    cov_rf8lsamg1().s[96]++;
    return baseFactor * 0.9;
  }
  /**
   * Calcular multiplicador por rendimiento
   */
  calculatePerformanceMultiplier(musicianData) {
    /* istanbul ignore next */
    cov_rf8lsamg1().f[20]++;
    const ratingMultiplier =
    /* istanbul ignore next */
    (cov_rf8lsamg1().s[97]++, musicianData.rating / 5.0);
    const completionRate =
    /* istanbul ignore next */
    (cov_rf8lsamg1().s[98]++, musicianData.totalEvents > 0 ?
    /* istanbul ignore next */
    (cov_rf8lsamg1().b[48][0]++, musicianData.completedEvents / musicianData.totalEvents) :
    /* istanbul ignore next */
    (cov_rf8lsamg1().b[48][1]++, 0.8));
    const responseMultiplier =
    /* istanbul ignore next */
    (cov_rf8lsamg1().s[99]++, Math.max(0.8, 1.0 - (musicianData.averageResponseTime - 30) / 120));
    /* istanbul ignore next */
    cov_rf8lsamg1().s[100]++;
    return (ratingMultiplier + completionRate + responseMultiplier) / 3;
  }
  /**
   * Calcular tarifa final
   */
  calculateFinalRate(baseRate, factors) {
    /* istanbul ignore next */
    cov_rf8lsamg1().f[21]++;
    const finalRate =
    /* istanbul ignore next */
    (cov_rf8lsamg1().s[101]++, baseRate * factors.experienceMultiplier * factors.demandMultiplier * factors.locationMultiplier * factors.eventTypeMultiplier * factors.durationMultiplier * factors.urgencyMultiplier * factors.seasonalityMultiplier);
    // Redondear a múltiplos de 5
    /* istanbul ignore next */
    cov_rf8lsamg1().s[102]++;
    return Math.round(finalRate / 5) * 5;
  }
  /**
   * Generar breakdown detallado
   */
  generateBreakdown(baseRate, factors) {
    /* istanbul ignore next */
    cov_rf8lsamg1().f[22]++;
    cov_rf8lsamg1().s[103]++;
    return [{
      factor: 'Tarifa Base',
      multiplier: 1.0,
      amount: baseRate
    }, {
      factor: 'Experiencia',
      multiplier: factors.experienceMultiplier,
      amount: baseRate * (factors.experienceMultiplier - 1)
    }, {
      factor: 'Demanda del Mercado',
      multiplier: factors.demandMultiplier,
      amount: baseRate * (factors.demandMultiplier - 1)
    }, {
      factor: 'Ubicación',
      multiplier: factors.locationMultiplier,
      amount: baseRate * (factors.locationMultiplier - 1)
    }, {
      factor: 'Tipo de Evento',
      multiplier: factors.eventTypeMultiplier,
      amount: baseRate * (factors.eventTypeMultiplier - 1)
    }, {
      factor: 'Duración',
      multiplier: factors.durationMultiplier,
      amount: baseRate * (factors.durationMultiplier - 1)
    }, {
      factor: 'Urgencia',
      multiplier: factors.urgencyMultiplier,
      amount: baseRate * (factors.urgencyMultiplier - 1)
    }, {
      factor: 'Estacionalidad y Rendimiento',
      multiplier: factors.seasonalityMultiplier,
      amount: baseRate * (factors.seasonalityMultiplier - 1)
    }];
  }
  /**
   * Generar recomendaciones
   */
  generateRecommendations(request, calculatedRate, marketData) {
    /* istanbul ignore next */
    cov_rf8lsamg1().f[23]++;
    cov_rf8lsamg1().s[104]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_rf8lsamg1().f[24]++;
      // Obtener tarifas de competidores
      const competitorRates =
      /* istanbul ignore next */
      (cov_rf8lsamg1().s[105]++, yield this.getCompetitorRates(request.instrument, request.location));
      // Calcular tarifa sugerida basada en el mercado
      const suggestedRate =
      /* istanbul ignore next */
      (cov_rf8lsamg1().s[106]++, Math.max(marketData.minRate, Math.min(marketData.maxRate, calculatedRate)));
      /* istanbul ignore next */
      cov_rf8lsamg1().s[107]++;
      return {
        suggestedRate,
        marketAverage: marketData.averageRate,
        competitorRates
      };
    });
  }
  /**
   * Obtener tarifas de competidores
   */
  getCompetitorRates(instrument, location) {
    /* istanbul ignore next */
    cov_rf8lsamg1().f[25]++;
    cov_rf8lsamg1().s[108]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_rf8lsamg1().f[26]++;
      cov_rf8lsamg1().s[109]++;
      try {
        const ratesRef =
        /* istanbul ignore next */
        (cov_rf8lsamg1().s[110]++, firebase_1.db.collection(this.COLLECTION_RATES).where('instrument', '==', instrument).where('location', '==', location).orderBy('rate', 'desc').limit(5));
        const snapshot =
        /* istanbul ignore next */
        (cov_rf8lsamg1().s[111]++, yield ratesRef.get());
        /* istanbul ignore next */
        cov_rf8lsamg1().s[112]++;
        return snapshot.docs.map(doc => {
          /* istanbul ignore next */
          cov_rf8lsamg1().f[27]++;
          cov_rf8lsamg1().s[113]++;
          return doc.data().rate;
        });
      } catch (error) {
        /* istanbul ignore next */
        cov_rf8lsamg1().s[114]++;
        loggerService_1.logger.error('Error obteniendo tarifas de competidores', error, {
          metadata: {
            instrument,
            location
          }
        });
        /* istanbul ignore next */
        cov_rf8lsamg1().s[115]++;
        return [];
      }
    });
  }
  /**
   * Actualizar datos del mercado
   */
  updateMarketData(instrument, location, eventType, rate) {
    /* istanbul ignore next */
    cov_rf8lsamg1().f[28]++;
    cov_rf8lsamg1().s[116]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_rf8lsamg1().f[29]++;
      cov_rf8lsamg1().s[117]++;
      try {
        /* istanbul ignore next */
        cov_rf8lsamg1().s[118]++;
        loggerService_1.logger.info('[src/services/rateCalculationService.ts:350] Actualizando datos del mercado');
        const marketRef =
        /* istanbul ignore next */
        (cov_rf8lsamg1().s[119]++, firebase_1.db.collection(this.COLLECTION_MARKET_DATA).where('instrument', '==', instrument).where('location', '==', location).where('eventType', '==', eventType));
        const snapshot =
        /* istanbul ignore next */
        (cov_rf8lsamg1().s[120]++, yield marketRef.get());
        /* istanbul ignore next */
        cov_rf8lsamg1().s[121]++;
        if (!snapshot.empty) {
          /* istanbul ignore next */
          cov_rf8lsamg1().b[49][0]++;
          const doc =
          /* istanbul ignore next */
          (cov_rf8lsamg1().s[122]++, snapshot.docs[0]);
          const data =
          /* istanbul ignore next */
          (cov_rf8lsamg1().s[123]++, doc.data());
          // Actualizar promedio
          const newAverage =
          /* istanbul ignore next */
          (cov_rf8lsamg1().s[124]++, (data.averageRate * data.count + rate) / (data.count + 1));
          const newMin =
          /* istanbul ignore next */
          (cov_rf8lsamg1().s[125]++, Math.min(data.minRate, rate));
          const newMax =
          /* istanbul ignore next */
          (cov_rf8lsamg1().s[126]++, Math.max(data.maxRate, rate));
          /* istanbul ignore next */
          cov_rf8lsamg1().s[127]++;
          yield doc.ref.update({
            averageRate: newAverage,
            minRate: newMin,
            maxRate: newMax,
            count: data.count + 1,
            updatedAt: new Date()
          });
        } else {
          /* istanbul ignore next */
          cov_rf8lsamg1().b[49][1]++;
          cov_rf8lsamg1().s[128]++;
          // Crear nuevo registro
          yield firebase_1.db.collection(this.COLLECTION_MARKET_DATA).add({
            instrument,
            location,
            eventType,
            averageRate: rate,
            minRate: rate,
            maxRate: rate,
            count: 1,
            demandLevel: 'medium',
            seasonalityFactor: 1.0,
            createdAt: new Date(),
            updatedAt: new Date()
          });
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_rf8lsamg1().s[129]++;
        loggerService_1.logger.error('Error actualizando datos del mercado', error, {
          metadata: {
            instrument,
            location,
            eventType,
            rate
          }
        });
        /* istanbul ignore next */
        cov_rf8lsamg1().s[130]++;
        throw error;
      }
    });
  }
}
/* istanbul ignore next */
cov_rf8lsamg1().s[131]++;
exports.RateCalculationService = RateCalculationService;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,