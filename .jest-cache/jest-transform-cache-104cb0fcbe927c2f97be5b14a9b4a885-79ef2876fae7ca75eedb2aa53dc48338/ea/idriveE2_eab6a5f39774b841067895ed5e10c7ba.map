{"file":"C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\utils\\idriveE2.ts","mappings":";;;;;;;;;;;;AAAA,kDAAgE;AAEnD,QAAA,EAAE,GAAG,IAAI,oBAAQ,CAAC;IAC7B,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,gBAAgB;IACpC,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,kBAAkB;IACxC,WAAW,EAAE;QACX,WAAW,EAAE,OAAO,CAAC,GAAG,CAAC,oBAAqB;QAC9C,eAAe,EAAE,OAAO,CAAC,GAAG,CAAC,oBAAqB;KACnD;IACD,cAAc,EAAE,IAAI;CACrB,CAAC,CAAC;AAEH;;GAEG;AACI,MAAM,UAAU,GAAG,+CAKP,EAAE,sFAJnB,IAAY,EACZ,QAAgB,EAChB,WAAmB,EACnB,SAAiB,SAAS;IAE1B,IAAI,CAAC;QACH,MAAM,GAAG,GAAG,GAAG,MAAM,IAAI,IAAI,CAAC,GAAG,EAAE,IAAI,QAAQ,EAAE,CAAC;QAElD,MAAM,OAAO,GAAG,IAAI,4BAAgB,CAAC;YACnC,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,qBAAsB;YAC1C,GAAG,EAAE,GAAG;YACR,IAAI,EAAE,IAAI;YACV,WAAW,EAAE,WAAW;YACxB,GAAG,EAAE,SAAS;SACf,CAAC,CAAC;QAEH,MAAM,UAAE,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAEvB,6BAA6B;QAC7B,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,kBAAkB,IAAI,OAAO,CAAC,GAAG,CAAC,qBAAqB,IAAI,GAAG,EAAE,CAAC;IACzF,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,KAAK,CAAC,sDAAsD,EAAE,KAAK,CAAC,CAAC;QAC7E,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC;IACjD,CAAC;AACH,CAAC,CAAA,CAAC;AAzBW,QAAA,UAAU,cAyBrB","names":[],"sources":["C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\utils\\idriveE2.ts"],"sourcesContent":["import { S3Client, PutObjectCommand } from '@aws-sdk/client-s3';\n\nexport const s3 = new S3Client({\n  region: process.env.IDRIVE_E2_REGION,\n  endpoint: process.env.IDRIVE_E2_ENDPOINT,\n  credentials: {\n    accessKeyId: process.env.IDRIVE_E2_ACCESS_KEY!,\n    secretAccessKey: process.env.IDRIVE_E2_SECRET_KEY!,\n  },\n  forcePathStyle: true,\n});\n\n/**\n * Sube un archivo a iDrive E2 (S3)\n */\nexport const uploadToS3 = async (\n  file: Buffer,\n  fileName: string,\n  contentType: string,\n  folder: string = 'uploads'\n): Promise<string> => {\n  try {\n    const key = `${folder}/${Date.now()}-${fileName}`;\n    \n    const command = new PutObjectCommand({\n      Bucket: process.env.IDRIVE_E2_BUCKET_NAME!,\n      Key: key,\n      Body: file,\n      ContentType: contentType,\n      ACL: 'private',\n    });\n\n    await s3.send(command);\n    \n    // Retorna la URL del archivo\n    return `${process.env.IDRIVE_E2_ENDPOINT}/${process.env.IDRIVE_E2_BUCKET_NAME}/${key}`;\n  } catch (error) {\n    console.error('[src/utils/idriveE2.ts] Error al subir archivo a S3:', error);\n    throw new Error('Error al subir archivo a S3');\n  }\n};\n"],"version":3}