cd044d35a0110746873ccd2eac8bab33
"use strict";

/* istanbul ignore next */
function cov_shkwebwfd() {
  var path = "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\controllers\\musicianSearchController.ts";
  var hash = "9173e1bab76d7fc8a6e2dddfa4a6db60cda0b726";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\controllers\\musicianSearchController.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 16
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 28
        },
        end: {
          line: 3,
          column: 110
        }
      },
      "2": {
        start: {
          line: 3,
          column: 91
        },
        end: {
          line: 3,
          column: 106
        }
      },
      "3": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "4": {
        start: {
          line: 5,
          column: 36
        },
        end: {
          line: 5,
          column: 97
        }
      },
      "5": {
        start: {
          line: 5,
          column: 42
        },
        end: {
          line: 5,
          column: 70
        }
      },
      "6": {
        start: {
          line: 5,
          column: 85
        },
        end: {
          line: 5,
          column: 95
        }
      },
      "7": {
        start: {
          line: 6,
          column: 35
        },
        end: {
          line: 6,
          column: 100
        }
      },
      "8": {
        start: {
          line: 6,
          column: 41
        },
        end: {
          line: 6,
          column: 73
        }
      },
      "9": {
        start: {
          line: 6,
          column: 88
        },
        end: {
          line: 6,
          column: 98
        }
      },
      "10": {
        start: {
          line: 7,
          column: 32
        },
        end: {
          line: 7,
          column: 116
        }
      },
      "11": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 78
        }
      },
      "12": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 62
        }
      },
      "13": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 42
        }
      },
      "14": {
        start: {
          line: 13,
          column: 24
        },
        end: {
          line: 13,
          column: 60
        }
      },
      "15": {
        start: {
          line: 14,
          column: 32
        },
        end: {
          line: 14,
          column: 76
        }
      },
      "16": {
        start: {
          line: 15,
          column: 21
        },
        end: {
          line: 15,
          column: 52
        }
      },
      "17": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 90,
          column: 11
        }
      },
      "18": {
        start: {
          line: 27,
          column: 12
        },
        end: {
          line: 89,
          column: 13
        }
      },
      "19": {
        start: {
          line: 28,
          column: 46
        },
        end: {
          line: 28,
          column: 54
        }
      },
      "20": {
        start: {
          line: 29,
          column: 29
        },
        end: {
          line: 29,
          column: 37
        }
      },
      "21": {
        start: {
          line: 30,
          column: 16
        },
        end: {
          line: 31,
          column: 19
        }
      },
      "22": {
        start: {
          line: 33,
          column: 16
        },
        end: {
          line: 39,
          column: 17
        }
      },
      "23": {
        start: {
          line: 34,
          column: 20
        },
        end: {
          line: 37,
          column: 23
        }
      },
      "24": {
        start: {
          line: 38,
          column: 20
        },
        end: {
          line: 38,
          column: 27
        }
      },
      "25": {
        start: {
          line: 41,
          column: 30
        },
        end: {
          line: 41,
          column: 80
        }
      },
      "26": {
        start: {
          line: 42,
          column: 16
        },
        end: {
          line: 48,
          column: 17
        }
      },
      "27": {
        start: {
          line: 43,
          column: 20
        },
        end: {
          line: 46,
          column: 23
        }
      },
      "28": {
        start: {
          line: 47,
          column: 20
        },
        end: {
          line: 47,
          column: 27
        }
      },
      "29": {
        start: {
          line: 49,
          column: 16
        },
        end: {
          line: 55,
          column: 17
        }
      },
      "30": {
        start: {
          line: 50,
          column: 20
        },
        end: {
          line: 53,
          column: 23
        }
      },
      "31": {
        start: {
          line: 54,
          column: 20
        },
        end: {
          line: 54,
          column: 27
        }
      },
      "32": {
        start: {
          line: 57,
          column: 39
        },
        end: {
          line: 66,
          column: 17
        }
      },
      "33": {
        start: {
          line: 68,
          column: 34
        },
        end: {
          line: 68,
          column: 132
        }
      },
      "34": {
        start: {
          line: 69,
          column: 16
        },
        end: {
          line: 70,
          column: 25
        }
      },
      "35": {
        start: {
          line: 71,
          column: 16
        },
        end: {
          line: 80,
          column: 19
        }
      },
      "36": {
        start: {
          line: 83,
          column: 16
        },
        end: {
          line: 83,
          column: 136
        }
      },
      "37": {
        start: {
          line: 84,
          column: 16
        },
        end: {
          line: 88,
          column: 19
        }
      },
      "38": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 149,
          column: 11
        }
      },
      "39": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 148,
          column: 13
        }
      },
      "40": {
        start: {
          line: 99,
          column: 36
        },
        end: {
          line: 99,
          column: 46
        }
      },
      "41": {
        start: {
          line: 100,
          column: 29
        },
        end: {
          line: 100,
          column: 37
        }
      },
      "42": {
        start: {
          line: 101,
          column: 16
        },
        end: {
          line: 102,
          column: 25
        }
      },
      "43": {
        start: {
          line: 104,
          column: 16
        },
        end: {
          line: 110,
          column: 17
        }
      },
      "44": {
        start: {
          line: 105,
          column: 20
        },
        end: {
          line: 108,
          column: 23
        }
      },
      "45": {
        start: {
          line: 109,
          column: 20
        },
        end: {
          line: 109,
          column: 27
        }
      },
      "46": {
        start: {
          line: 112,
          column: 30
        },
        end: {
          line: 112,
          column: 80
        }
      },
      "47": {
        start: {
          line: 113,
          column: 16
        },
        end: {
          line: 119,
          column: 17
        }
      },
      "48": {
        start: {
          line: 114,
          column: 20
        },
        end: {
          line: 117,
          column: 23
        }
      },
      "49": {
        start: {
          line: 118,
          column: 20
        },
        end: {
          line: 118,
          column: 27
        }
      },
      "50": {
        start: {
          line: 120,
          column: 16
        },
        end: {
          line: 126,
          column: 17
        }
      },
      "51": {
        start: {
          line: 121,
          column: 20
        },
        end: {
          line: 124,
          column: 23
        }
      },
      "52": {
        start: {
          line: 125,
          column: 20
        },
        end: {
          line: 125,
          column: 27
        }
      },
      "53": {
        start: {
          line: 128,
          column: 40
        },
        end: {
          line: 128,
          column: 124
        }
      },
      "54": {
        start: {
          line: 129,
          column: 16
        },
        end: {
          line: 130,
          column: 25
        }
      },
      "55": {
        start: {
          line: 131,
          column: 16
        },
        end: {
          line: 139,
          column: 19
        }
      },
      "56": {
        start: {
          line: 142,
          column: 16
        },
        end: {
          line: 142,
          column: 141
        }
      },
      "57": {
        start: {
          line: 143,
          column: 16
        },
        end: {
          line: 147,
          column: 19
        }
      },
      "58": {
        start: {
          line: 156,
          column: 8
        },
        end: {
          line: 223,
          column: 11
        }
      },
      "59": {
        start: {
          line: 158,
          column: 12
        },
        end: {
          line: 222,
          column: 13
        }
      },
      "60": {
        start: {
          line: 159,
          column: 37
        },
        end: {
          line: 159,
          column: 45
        }
      },
      "61": {
        start: {
          line: 160,
          column: 29
        },
        end: {
          line: 160,
          column: 37
        }
      },
      "62": {
        start: {
          line: 161,
          column: 16
        },
        end: {
          line: 162,
          column: 19
        }
      },
      "63": {
        start: {
          line: 164,
          column: 16
        },
        end: {
          line: 170,
          column: 17
        }
      },
      "64": {
        start: {
          line: 165,
          column: 20
        },
        end: {
          line: 168,
          column: 23
        }
      },
      "65": {
        start: {
          line: 169,
          column: 20
        },
        end: {
          line: 169,
          column: 27
        }
      },
      "66": {
        start: {
          line: 172,
          column: 16
        },
        end: {
          line: 178,
          column: 17
        }
      },
      "67": {
        start: {
          line: 173,
          column: 20
        },
        end: {
          line: 176,
          column: 23
        }
      },
      "68": {
        start: {
          line: 177,
          column: 20
        },
        end: {
          line: 177,
          column: 27
        }
      },
      "69": {
        start: {
          line: 180,
          column: 34
        },
        end: {
          line: 200,
          column: 17
        }
      },
      "70": {
        start: {
          line: 202,
          column: 34
        },
        end: {
          line: 202,
          column: 130
        }
      },
      "71": {
        start: {
          line: 203,
          column: 16
        },
        end: {
          line: 204,
          column: 25
        }
      },
      "72": {
        start: {
          line: 205,
          column: 16
        },
        end: {
          line: 213,
          column: 19
        }
      },
      "73": {
        start: {
          line: 216,
          column: 16
        },
        end: {
          line: 216,
          column: 135
        }
      },
      "74": {
        start: {
          line: 217,
          column: 16
        },
        end: {
          line: 221,
          column: 19
        }
      },
      "75": {
        start: {
          line: 230,
          column: 8
        },
        end: {
          line: 265,
          column: 11
        }
      },
      "76": {
        start: {
          line: 231,
          column: 12
        },
        end: {
          line: 264,
          column: 13
        }
      },
      "77": {
        start: {
          line: 232,
          column: 29
        },
        end: {
          line: 232,
          column: 37
        }
      },
      "78": {
        start: {
          line: 233,
          column: 16
        },
        end: {
          line: 234,
          column: 25
        }
      },
      "79": {
        start: {
          line: 236,
          column: 16
        },
        end: {
          line: 242,
          column: 17
        }
      },
      "80": {
        start: {
          line: 237,
          column: 20
        },
        end: {
          line: 240,
          column: 23
        }
      },
      "81": {
        start: {
          line: 241,
          column: 20
        },
        end: {
          line: 241,
          column: 27
        }
      },
      "82": {
        start: {
          line: 244,
          column: 30
        },
        end: {
          line: 250,
          column: 17
        }
      },
      "83": {
        start: {
          line: 251,
          column: 16
        },
        end: {
          line: 255,
          column: 19
        }
      },
      "84": {
        start: {
          line: 258,
          column: 16
        },
        end: {
          line: 258,
          column: 138
        }
      },
      "85": {
        start: {
          line: 259,
          column: 16
        },
        end: {
          line: 263,
          column: 19
        }
      },
      "86": {
        start: {
          line: 268,
          column: 0
        },
        end: {
          line: 268,
          column: 60
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 2,
            column: 45
          }
        },
        loc: {
          start: {
            line: 2,
            column: 89
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "adopt",
        decl: {
          start: {
            line: 3,
            column: 13
          },
          end: {
            line: 3,
            column: 18
          }
        },
        loc: {
          start: {
            line: 3,
            column: 26
          },
          end: {
            line: 3,
            column: 112
          }
        },
        line: 3
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 3,
            column: 70
          },
          end: {
            line: 3,
            column: 71
          }
        },
        loc: {
          start: {
            line: 3,
            column: 89
          },
          end: {
            line: 3,
            column: 108
          }
        },
        line: 3
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 4,
            column: 36
          },
          end: {
            line: 4,
            column: 37
          }
        },
        loc: {
          start: {
            line: 4,
            column: 63
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 4
      },
      "4": {
        name: "fulfilled",
        decl: {
          start: {
            line: 5,
            column: 17
          },
          end: {
            line: 5,
            column: 26
          }
        },
        loc: {
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 99
          }
        },
        line: 5
      },
      "5": {
        name: "rejected",
        decl: {
          start: {
            line: 6,
            column: 17
          },
          end: {
            line: 6,
            column: 25
          }
        },
        loc: {
          start: {
            line: 6,
            column: 33
          },
          end: {
            line: 6,
            column: 102
          }
        },
        line: 6
      },
      "6": {
        name: "step",
        decl: {
          start: {
            line: 7,
            column: 17
          },
          end: {
            line: 7,
            column: 21
          }
        },
        loc: {
          start: {
            line: 7,
            column: 30
          },
          end: {
            line: 7,
            column: 118
          }
        },
        line: 7
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        },
        loc: {
          start: {
            line: 25,
            column: 45
          },
          end: {
            line: 91,
            column: 5
          }
        },
        line: 25
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 26,
            column: 47
          },
          end: {
            line: 26,
            column: 48
          }
        },
        loc: {
          start: {
            line: 26,
            column: 60
          },
          end: {
            line: 90,
            column: 9
          }
        },
        line: 26
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 96,
            column: 4
          },
          end: {
            line: 96,
            column: 5
          }
        },
        loc: {
          start: {
            line: 96,
            column: 45
          },
          end: {
            line: 150,
            column: 5
          }
        },
        line: 96
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 97,
            column: 47
          },
          end: {
            line: 97,
            column: 48
          }
        },
        loc: {
          start: {
            line: 97,
            column: 60
          },
          end: {
            line: 149,
            column: 9
          }
        },
        line: 97
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 155,
            column: 4
          },
          end: {
            line: 155,
            column: 5
          }
        },
        loc: {
          start: {
            line: 155,
            column: 36
          },
          end: {
            line: 224,
            column: 5
          }
        },
        line: 155
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 156,
            column: 47
          },
          end: {
            line: 156,
            column: 48
          }
        },
        loc: {
          start: {
            line: 156,
            column: 60
          },
          end: {
            line: 223,
            column: 9
          }
        },
        line: 156
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 229,
            column: 4
          },
          end: {
            line: 229,
            column: 5
          }
        },
        loc: {
          start: {
            line: 229,
            column: 36
          },
          end: {
            line: 266,
            column: 5
          }
        },
        line: 229
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 230,
            column: 47
          },
          end: {
            line: 230,
            column: 48
          }
        },
        loc: {
          start: {
            line: 230,
            column: 60
          },
          end: {
            line: 265,
            column: 9
          }
        },
        line: 230
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 16
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 17
          },
          end: {
            line: 2,
            column: 21
          }
        }, {
          start: {
            line: 2,
            column: 25
          },
          end: {
            line: 2,
            column: 39
          }
        }, {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 35
          },
          end: {
            line: 3,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 56
          },
          end: {
            line: 3,
            column: 61
          }
        }, {
          start: {
            line: 3,
            column: 64
          },
          end: {
            line: 3,
            column: 109
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 17
          }
        }, {
          start: {
            line: 4,
            column: 22
          },
          end: {
            line: 4,
            column: 33
          }
        }],
        line: 4
      },
      "3": {
        loc: {
          start: {
            line: 7,
            column: 32
          },
          end: {
            line: 7,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 7,
            column: 46
          },
          end: {
            line: 7,
            column: 67
          }
        }, {
          start: {
            line: 7,
            column: 70
          },
          end: {
            line: 7,
            column: 115
          }
        }],
        line: 7
      },
      "4": {
        loc: {
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 61
          }
        }, {
          start: {
            line: 8,
            column: 65
          },
          end: {
            line: 8,
            column: 67
          }
        }],
        line: 8
      },
      "5": {
        loc: {
          start: {
            line: 33,
            column: 16
          },
          end: {
            line: 39,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 16
          },
          end: {
            line: 39,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "6": {
        loc: {
          start: {
            line: 42,
            column: 16
          },
          end: {
            line: 48,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 16
          },
          end: {
            line: 48,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "7": {
        loc: {
          start: {
            line: 49,
            column: 16
          },
          end: {
            line: 55,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 16
          },
          end: {
            line: 55,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 49
      },
      "8": {
        loc: {
          start: {
            line: 58,
            column: 32
          },
          end: {
            line: 58,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 58,
            column: 32
          },
          end: {
            line: 58,
            column: 51
          }
        }, {
          start: {
            line: 58,
            column: 55
          },
          end: {
            line: 58,
            column: 71
          }
        }],
        line: 58
      },
      "9": {
        loc: {
          start: {
            line: 59,
            column: 30
          },
          end: {
            line: 59,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 59,
            column: 30
          },
          end: {
            line: 59,
            column: 47
          }
        }, {
          start: {
            line: 59,
            column: 51
          },
          end: {
            line: 59,
            column: 65
          }
        }],
        line: 59
      },
      "10": {
        loc: {
          start: {
            line: 60,
            column: 28
          },
          end: {
            line: 60,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 60,
            column: 28
          },
          end: {
            line: 60,
            column: 43
          }
        }, {
          start: {
            line: 60,
            column: 47
          },
          end: {
            line: 60,
            column: 71
          }
        }],
        line: 60
      },
      "11": {
        loc: {
          start: {
            line: 61,
            column: 26
          },
          end: {
            line: 61,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 61,
            column: 26
          },
          end: {
            line: 61,
            column: 39
          }
        }, {
          start: {
            line: 61,
            column: 43
          },
          end: {
            line: 61,
            column: 53
          }
        }],
        line: 61
      },
      "12": {
        loc: {
          start: {
            line: 62,
            column: 26
          },
          end: {
            line: 62,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 62,
            column: 26
          },
          end: {
            line: 62,
            column: 39
          }
        }, {
          start: {
            line: 62,
            column: 43
          },
          end: {
            line: 62,
            column: 53
          }
        }],
        line: 62
      },
      "13": {
        loc: {
          start: {
            line: 63,
            column: 30
          },
          end: {
            line: 63,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 63,
            column: 30
          },
          end: {
            line: 63,
            column: 47
          }
        }, {
          start: {
            line: 63,
            column: 51
          },
          end: {
            line: 63,
            column: 65
          }
        }],
        line: 63
      },
      "14": {
        loc: {
          start: {
            line: 64,
            column: 31
          },
          end: {
            line: 64,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 64,
            column: 31
          },
          end: {
            line: 64,
            column: 49
          }
        }, {
          start: {
            line: 64,
            column: 53
          },
          end: {
            line: 64,
            column: 68
          }
        }],
        line: 64
      },
      "15": {
        loc: {
          start: {
            line: 65,
            column: 33
          },
          end: {
            line: 65,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 65,
            column: 33
          },
          end: {
            line: 65,
            column: 53
          }
        }, {
          start: {
            line: 65,
            column: 57
          },
          end: {
            line: 65,
            column: 59
          }
        }],
        line: 65
      },
      "16": {
        loc: {
          start: {
            line: 87,
            column: 27
          },
          end: {
            line: 87,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 87,
            column: 52
          },
          end: {
            line: 87,
            column: 65
          }
        }, {
          start: {
            line: 87,
            column: 68
          },
          end: {
            line: 87,
            column: 87
          }
        }],
        line: 87
      },
      "17": {
        loc: {
          start: {
            line: 104,
            column: 16
          },
          end: {
            line: 110,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 104,
            column: 16
          },
          end: {
            line: 110,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 104
      },
      "18": {
        loc: {
          start: {
            line: 113,
            column: 16
          },
          end: {
            line: 119,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 113,
            column: 16
          },
          end: {
            line: 119,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 113
      },
      "19": {
        loc: {
          start: {
            line: 120,
            column: 16
          },
          end: {
            line: 126,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 120,
            column: 16
          },
          end: {
            line: 126,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 120
      },
      "20": {
        loc: {
          start: {
            line: 146,
            column: 27
          },
          end: {
            line: 146,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 146,
            column: 52
          },
          end: {
            line: 146,
            column: 65
          }
        }, {
          start: {
            line: 146,
            column: 68
          },
          end: {
            line: 146,
            column: 87
          }
        }],
        line: 146
      },
      "21": {
        loc: {
          start: {
            line: 164,
            column: 16
          },
          end: {
            line: 170,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 164,
            column: 16
          },
          end: {
            line: 170,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 164
      },
      "22": {
        loc: {
          start: {
            line: 172,
            column: 16
          },
          end: {
            line: 178,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 172,
            column: 16
          },
          end: {
            line: 178,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 172
      },
      "23": {
        loc: {
          start: {
            line: 184,
            column: 31
          },
          end: {
            line: 184,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 184,
            column: 31
          },
          end: {
            line: 184,
            column: 49
          }
        }, {
          start: {
            line: 184,
            column: 53
          },
          end: {
            line: 184,
            column: 62
          }
        }],
        line: 184
      },
      "24": {
        loc: {
          start: {
            line: 185,
            column: 26
          },
          end: {
            line: 185,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 185,
            column: 26
          },
          end: {
            line: 185,
            column: 39
          }
        }, {
          start: {
            line: 185,
            column: 43
          },
          end: {
            line: 185,
            column: 81
          }
        }],
        line: 185
      },
      "25": {
        loc: {
          start: {
            line: 186,
            column: 26
          },
          end: {
            line: 186,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 186,
            column: 26
          },
          end: {
            line: 186,
            column: 39
          }
        }, {
          start: {
            line: 186,
            column: 43
          },
          end: {
            line: 186,
            column: 50
          }
        }],
        line: 186
      },
      "26": {
        loc: {
          start: {
            line: 187,
            column: 30
          },
          end: {
            line: 187,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 187,
            column: 30
          },
          end: {
            line: 187,
            column: 47
          }
        }, {
          start: {
            line: 187,
            column: 51
          },
          end: {
            line: 187,
            column: 53
          }
        }],
        line: 187
      },
      "27": {
        loc: {
          start: {
            line: 188,
            column: 30
          },
          end: {
            line: 188,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 188,
            column: 30
          },
          end: {
            line: 188,
            column: 47
          }
        }, {
          start: {
            line: 188,
            column: 51
          },
          end: {
            line: 188,
            column: 58
          }
        }],
        line: 188
      },
      "28": {
        loc: {
          start: {
            line: 190,
            column: 37
          },
          end: {
            line: 190,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 190,
            column: 37
          },
          end: {
            line: 190,
            column: 61
          }
        }, {
          start: {
            line: 190,
            column: 65
          },
          end: {
            line: 190,
            column: 70
          }
        }],
        line: 190
      },
      "29": {
        loc: {
          start: {
            line: 192,
            column: 28
          },
          end: {
            line: 192,
            column: 110
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 192,
            column: 29
          },
          end: {
            line: 192,
            column: 102
          }
        }, {
          start: {
            line: 192,
            column: 107
          },
          end: {
            line: 192,
            column: 110
          }
        }],
        line: 192
      },
      "30": {
        loc: {
          start: {
            line: 192,
            column: 29
          },
          end: {
            line: 192,
            column: 102
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 192,
            column: 80
          },
          end: {
            line: 192,
            column: 86
          }
        }, {
          start: {
            line: 192,
            column: 89
          },
          end: {
            line: 192,
            column: 102
          }
        }],
        line: 192
      },
      "31": {
        loc: {
          start: {
            line: 192,
            column: 29
          },
          end: {
            line: 192,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 192,
            column: 29
          },
          end: {
            line: 192,
            column: 60
          }
        }, {
          start: {
            line: 192,
            column: 64
          },
          end: {
            line: 192,
            column: 77
          }
        }],
        line: 192
      },
      "32": {
        loc: {
          start: {
            line: 220,
            column: 27
          },
          end: {
            line: 220,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 220,
            column: 52
          },
          end: {
            line: 220,
            column: 65
          }
        }, {
          start: {
            line: 220,
            column: 68
          },
          end: {
            line: 220,
            column: 87
          }
        }],
        line: 220
      },
      "33": {
        loc: {
          start: {
            line: 236,
            column: 16
          },
          end: {
            line: 242,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 236,
            column: 16
          },
          end: {
            line: 242,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 236
      },
      "34": {
        loc: {
          start: {
            line: 262,
            column: 27
          },
          end: {
            line: 262,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 262,
            column: 52
          },
          end: {
            line: 262,
            column: 65
          }
        }, {
          start: {
            line: 262,
            column: 68
          },
          end: {
            line: 262,
            column: 87
          }
        }],
        line: 262
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\controllers\\musicianSearchController.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\controllers\\musicianSearchController.ts"],
      sourcesContent: ["import { Request, Response } from 'express';\r\nimport { logger } from '../services/loggerService';\r\nimport { MusicianSearchService, MusicianSearchCriteria } from '../services/musicianSearchService';\r\nimport { getEventByIdModel } from '../models/eventModel';\r\nimport { Event } from '../utils/DataTypes';\r\n\r\n/**\r\n * Controlador para b\xFAsqueda de m\xFAsicos\r\n * Maneja las solicitudes de b\xFAsqueda de m\xFAsicos para eventos\r\n */\r\nexport class MusicianSearchController {\r\n  /**\r\n   * Busca m\xFAsicos disponibles para un evento espec\xEDfico\r\n   * POST /musician-search/search-for-event\r\n   */\r\n  static async searchMusiciansForEvent(req: Request, res: Response): Promise<void> {\r\n    try {\r\n      const { eventId, criteria } = req.body;\r\n      const user = (req as any).user;\r\n\r\n      logger.info('[src/controllers/musicianSearchController.ts:20] \uD83D\uDD0D B\xFAsqueda de m\xFAsicos solicitada:', { metadata: { eventId, userEmail: user.userEmail }\r\n       });\r\n\r\n      // Validar que el usuario sea un creador de eventos\r\n      if (user.roll !== 'eventCreator') {\r\n        res.status(403).json({\r\n          success: false,\r\n          message: 'Solo los creadores de eventos pueden buscar m\xFAsicos',\r\n        });\r\n        return;\r\n      }\r\n\r\n      // Validar que el evento existe y pertenece al usuario\r\n      const event = await getEventByIdModel(eventId);\r\n      if (!event) {\r\n        res.status(404).json({\r\n          success: false,\r\n          message: 'Evento no encontrado',\r\n        });\r\n        return;\r\n      }\r\n\r\n      if (event.user !== user.userEmail) {\r\n        res.status(403).json({\r\n          success: false,\r\n          message: 'No tienes permisos para buscar m\xFAsicos para este evento',\r\n        });\r\n        return;\r\n      }\r\n\r\n      // Validar criterios de b\xFAsqueda\r\n      const searchCriteria: MusicianSearchCriteria = {\r\n        instrument: criteria.instrument || event.instrument,\r\n        location: criteria.location || event.location,\r\n        budget: criteria.budget || parseFloat(event.budget),\r\n        date: criteria.date || event.date,\r\n        time: criteria.time || event.time,\r\n        duration: criteria.duration || event.duration,\r\n        eventType: criteria.eventType || event.eventType,\r\n        maxDistance: criteria.maxDistance || 50, // 50km por defecto\r\n      };\r\n\r\n      // Realizar b\xFAsqueda\r\n      const musicians = await MusicianSearchService.searchMusiciansForEvent(\r\n        event,\r\n        searchCriteria\r\n      );\r\n\r\n      logger.info('[src/controllers/musicianSearchController.ts:65] \u2705 B\xFAsqueda completada. M\xFAsicos encontrados:', { metadata: { id: musicians.length\r\n,    } });\r\n\r\n      res.status(200).json({\r\n        success: true,\r\n        message: 'B\xFAsqueda de m\xFAsicos completada exitosamente',\r\n        data: {\r\n          eventId,\r\n          totalMusicians: musicians.length,\r\n          musicians: musicians.slice(0, 10), // Limitar a 10 resultados\r\n          searchCriteria,\r\n        },\r\n      });\r\n    } catch (error) {\r\n      logger.error('[src/controllers/musicianSearchController.ts:80] \u274C Error en b\xFAsqueda de m\xFAsicos:', error as Error);\r\n      res.status(500).json({\r\n        success: false,\r\n        message: 'Error interno del servidor',\r\n        error: error instanceof Error ? error.message : 'Error desconocido',\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Obtiene m\xFAsicos recomendados para un evento\r\n   * GET /musician-search/recommendations/:eventId\r\n   */\r\n  static async getRecommendedMusicians(req: Request, res: Response): Promise<void> {\r\n    try {\r\n      const { eventId } = req.params;\r\n      const user = (req as any).user;\r\n\r\n      logger.info('[src/controllers/musicianSearchController.ts:95] \uD83C\uDFAF Obteniendo recomendaciones para evento:', { metadata: { id: eventId\r\n,    } });\r\n\r\n      // Validar que el usuario sea un creador de eventos\r\n      if (user.roll !== 'eventCreator') {\r\n        res.status(403).json({\r\n          success: false,\r\n          message: 'Solo los creadores de eventos pueden obtener recomendaciones',\r\n        });\r\n        return;\r\n      }\r\n\r\n      // Validar que el evento existe y pertenece al usuario\r\n      const event = await getEventByIdModel(eventId);\r\n      if (!event) {\r\n        res.status(404).json({\r\n          success: false,\r\n          message: 'Evento no encontrado',\r\n        });\r\n        return;\r\n      }\r\n\r\n      if (event.user !== user.userEmail) {\r\n        res.status(403).json({\r\n          success: false,\r\n          message: 'No tienes permisos para obtener recomendaciones para este evento',\r\n        });\r\n        return;\r\n      }\r\n\r\n      // Obtener recomendaciones\r\n      const recommendations = await MusicianSearchService.getRecommendedMusicians(eventId);\r\n\r\n      logger.info('[src/controllers/musicianSearchController.ts:125] \u2705 Recomendaciones obtenidas:', { metadata: { id: recommendations.length\r\n,    } });\r\n\r\n      res.status(200).json({\r\n        success: true,\r\n        message: 'Recomendaciones obtenidas exitosamente',\r\n        data: {\r\n          eventId,\r\n          totalRecommendations: recommendations.length,\r\n          recommendations: recommendations.slice(0, 5), // Top 5 recomendaciones\r\n        },\r\n      });\r\n    } catch (error) {\r\n      logger.error('[src/controllers/musicianSearchController.ts:140] \u274C Error obteniendo recomendaciones:', error as Error);\r\n      res.status(500).json({\r\n        success: false,\r\n        message: 'Error interno del servidor',\r\n        error: error instanceof Error ? error.message : 'Error desconocido',\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Busca m\xFAsicos por criterios espec\xEDficos (b\xFAsqueda avanzada)\r\n   * POST /musician-search/advanced-search\r\n   */\r\n  static async advancedSearch(req: Request, res: Response): Promise<void> {\r\n    try {\r\n      const { criteria } = req.body;\r\n      const user = (req as any).user;\r\n\r\n      logger.info('[src/controllers/musicianSearchController.ts:155] \uD83D\uDD0D B\xFAsqueda avanzada solicitada:', { metadata: { criteria, userEmail: user.userEmail }\r\n       });\r\n\r\n      // Validar que el usuario sea un creador de eventos\r\n      if (user.roll !== 'eventCreator') {\r\n        res.status(403).json({\r\n          success: false,\r\n          message: 'Solo los creadores de eventos pueden realizar b\xFAsquedas avanzadas',\r\n        });\r\n        return;\r\n      }\r\n\r\n      // Validar criterios m\xEDnimos\r\n      if (!criteria.instrument) {\r\n        res.status(400).json({\r\n          success: false,\r\n          message: 'El instrumento es requerido para la b\xFAsqueda',\r\n        });\r\n        return;\r\n      }\r\n\r\n      // Crear un evento temporal para la b\xFAsqueda\r\n      const tempEvent: Event = {\r\n        id: 'temp',\r\n        user: user.userEmail,\r\n        eventName: 'B\xFAsqueda temporal',\r\n        eventType: criteria.eventType || 'general',\r\n        date: criteria.date || new Date().toISOString().split('T')[0],\r\n        time: criteria.time || '12:00',\r\n        location: criteria.location || '',\r\n        duration: criteria.duration || '02:00',\r\n        instrument: criteria.instrument,\r\n        bringInstrument: criteria.bringInstrument || false,\r\n        comment: '',\r\n        budget: criteria.budget?.toString() || '0',\r\n        flyerUrl: '',\r\n        songs: [],\r\n        recommendations: [],\r\n        mapsLink: '',\r\n        status: 'pending_musician',\r\n        createdAt: new Date().toISOString(),\r\n        updatedAt: new Date().toISOString(),\r\n      };\r\n\r\n      // Realizar b\xFAsqueda\r\n      const musicians = await MusicianSearchService.searchMusiciansForEvent(\r\n        tempEvent,\r\n        criteria\r\n      );\r\n\r\n      logger.info('[src/controllers/musicianSearchController.ts:195] \u2705 B\xFAsqueda avanzada completada. M\xFAsicos encontrados:', { metadata: { id: musicians.length\r\n,    } });\r\n\r\n      res.status(200).json({\r\n        success: true,\r\n        message: 'B\xFAsqueda avanzada completada exitosamente',\r\n        data: {\r\n          totalMusicians: musicians.length,\r\n          musicians: musicians.slice(0, 20), // Limitar a 20 resultados\r\n          searchCriteria: criteria,\r\n        },\r\n      });\r\n    } catch (error) {\r\n      logger.error('[src/controllers/musicianSearchController.ts:210] \u274C Error en b\xFAsqueda avanzada:', error as Error);\r\n      res.status(500).json({\r\n        success: false,\r\n        message: 'Error interno del servidor',\r\n        error: error instanceof Error ? error.message : 'Error desconocido',\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Obtiene estad\xEDsticas de b\xFAsqueda\r\n   * GET /musician-search/stats\r\n   */\r\n  static async getSearchStats(req: Request, res: Response): Promise<void> {\r\n    try {\r\n      const user = (req as any).user;\r\n\r\n      logger.info('[src/controllers/musicianSearchController.ts:225] \uD83D\uDCCA Obteniendo estad\xEDsticas de b\xFAsqueda para:', { metadata: { id: user.userEmail\r\n,    } });\r\n\r\n      // Validar que el usuario sea un creador de eventos\r\n      if (user.roll !== 'eventCreator') {\r\n        res.status(403).json({\r\n          success: false,\r\n          message: 'Solo los creadores de eventos pueden obtener estad\xEDsticas',\r\n        });\r\n        return;\r\n      }\r\n\r\n      // Obtener estad\xEDsticas b\xE1sicas\r\n      const stats = {\r\n        totalSearches: 0, // En producci\xF3n, esto vendr\xEDa de una base de datos\r\n        averageResults: 0,\r\n        mostSearchedInstrument: 'Guitarra',\r\n        lastSearchDate: new Date().toISOString(),\r\n        totalMusiciansAvailable: 0,\r\n      };\r\n\r\n      res.status(200).json({\r\n        success: true,\r\n        message: 'Estad\xEDsticas obtenidas exitosamente',\r\n        data: stats,\r\n      });\r\n    } catch (error) {\r\n      logger.error('[src/controllers/musicianSearchController.ts:250] \u274C Error obteniendo estad\xEDsticas:', error as Error);\r\n      res.status(500).json({\r\n        success: false,\r\n        message: 'Error interno del servidor',\r\n        error: error instanceof Error ? error.message : 'Error desconocido',\r\n      });\r\n    }\r\n  }\r\n} "],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "9173e1bab76d7fc8a6e2dddfa4a6db60cda0b726"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_shkwebwfd = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_shkwebwfd();
var __awaiter =
/* istanbul ignore next */
(cov_shkwebwfd().s[0]++,
/* istanbul ignore next */
(cov_shkwebwfd().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_shkwebwfd().b[0][1]++, this.__awaiter) ||
/* istanbul ignore next */
(cov_shkwebwfd().b[0][2]++, function (thisArg, _arguments, P, generator) {
  /* istanbul ignore next */
  cov_shkwebwfd().f[0]++;
  function adopt(value) {
    /* istanbul ignore next */
    cov_shkwebwfd().f[1]++;
    cov_shkwebwfd().s[1]++;
    return value instanceof P ?
    /* istanbul ignore next */
    (cov_shkwebwfd().b[1][0]++, value) :
    /* istanbul ignore next */
    (cov_shkwebwfd().b[1][1]++, new P(function (resolve) {
      /* istanbul ignore next */
      cov_shkwebwfd().f[2]++;
      cov_shkwebwfd().s[2]++;
      resolve(value);
    }));
  }
  /* istanbul ignore next */
  cov_shkwebwfd().s[3]++;
  return new (
  /* istanbul ignore next */
  (cov_shkwebwfd().b[2][0]++, P) ||
  /* istanbul ignore next */
  (cov_shkwebwfd().b[2][1]++, P = Promise))(function (resolve, reject) {
    /* istanbul ignore next */
    cov_shkwebwfd().f[3]++;
    function fulfilled(value) {
      /* istanbul ignore next */
      cov_shkwebwfd().f[4]++;
      cov_shkwebwfd().s[4]++;
      try {
        /* istanbul ignore next */
        cov_shkwebwfd().s[5]++;
        step(generator.next(value));
      } catch (e) {
        /* istanbul ignore next */
        cov_shkwebwfd().s[6]++;
        reject(e);
      }
    }
    function rejected(value) {
      /* istanbul ignore next */
      cov_shkwebwfd().f[5]++;
      cov_shkwebwfd().s[7]++;
      try {
        /* istanbul ignore next */
        cov_shkwebwfd().s[8]++;
        step(generator["throw"](value));
      } catch (e) {
        /* istanbul ignore next */
        cov_shkwebwfd().s[9]++;
        reject(e);
      }
    }
    function step(result) {
      /* istanbul ignore next */
      cov_shkwebwfd().f[6]++;
      cov_shkwebwfd().s[10]++;
      result.done ?
      /* istanbul ignore next */
      (cov_shkwebwfd().b[3][0]++, resolve(result.value)) :
      /* istanbul ignore next */
      (cov_shkwebwfd().b[3][1]++, adopt(result.value).then(fulfilled, rejected));
    }
    /* istanbul ignore next */
    cov_shkwebwfd().s[11]++;
    step((generator = generator.apply(thisArg,
    /* istanbul ignore next */
    (cov_shkwebwfd().b[4][0]++, _arguments) ||
    /* istanbul ignore next */
    (cov_shkwebwfd().b[4][1]++, []))).next());
  });
}));
/* istanbul ignore next */
cov_shkwebwfd().s[12]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_shkwebwfd().s[13]++;
exports.MusicianSearchController = void 0;
const loggerService_1 =
/* istanbul ignore next */
(cov_shkwebwfd().s[14]++, require("../services/loggerService"));
const musicianSearchService_1 =
/* istanbul ignore next */
(cov_shkwebwfd().s[15]++, require("../services/musicianSearchService"));
const eventModel_1 =
/* istanbul ignore next */
(cov_shkwebwfd().s[16]++, require("../models/eventModel"));
/**
 * Controlador para búsqueda de músicos
 * Maneja las solicitudes de búsqueda de músicos para eventos
 */
class MusicianSearchController {
  /**
   * Busca músicos disponibles para un evento específico
   * POST /musician-search/search-for-event
   */
  static searchMusiciansForEvent(req, res) {
    /* istanbul ignore next */
    cov_shkwebwfd().f[7]++;
    cov_shkwebwfd().s[17]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_shkwebwfd().f[8]++;
      cov_shkwebwfd().s[18]++;
      try {
        const {
          eventId,
          criteria
        } =
        /* istanbul ignore next */
        (cov_shkwebwfd().s[19]++, req.body);
        const user =
        /* istanbul ignore next */
        (cov_shkwebwfd().s[20]++, req.user);
        /* istanbul ignore next */
        cov_shkwebwfd().s[21]++;
        loggerService_1.logger.info('[src/controllers/musicianSearchController.ts:20] 🔍 Búsqueda de músicos solicitada:', {
          metadata: {
            eventId,
            userEmail: user.userEmail
          }
        });
        // Validar que el usuario sea un creador de eventos
        /* istanbul ignore next */
        cov_shkwebwfd().s[22]++;
        if (user.roll !== 'eventCreator') {
          /* istanbul ignore next */
          cov_shkwebwfd().b[5][0]++;
          cov_shkwebwfd().s[23]++;
          res.status(403).json({
            success: false,
            message: 'Solo los creadores de eventos pueden buscar músicos'
          });
          /* istanbul ignore next */
          cov_shkwebwfd().s[24]++;
          return;
        } else
        /* istanbul ignore next */
        {
          cov_shkwebwfd().b[5][1]++;
        }
        // Validar que el evento existe y pertenece al usuario
        const event =
        /* istanbul ignore next */
        (cov_shkwebwfd().s[25]++, yield (0, eventModel_1.getEventByIdModel)(eventId));
        /* istanbul ignore next */
        cov_shkwebwfd().s[26]++;
        if (!event) {
          /* istanbul ignore next */
          cov_shkwebwfd().b[6][0]++;
          cov_shkwebwfd().s[27]++;
          res.status(404).json({
            success: false,
            message: 'Evento no encontrado'
          });
          /* istanbul ignore next */
          cov_shkwebwfd().s[28]++;
          return;
        } else
        /* istanbul ignore next */
        {
          cov_shkwebwfd().b[6][1]++;
        }
        cov_shkwebwfd().s[29]++;
        if (event.user !== user.userEmail) {
          /* istanbul ignore next */
          cov_shkwebwfd().b[7][0]++;
          cov_shkwebwfd().s[30]++;
          res.status(403).json({
            success: false,
            message: 'No tienes permisos para buscar músicos para este evento'
          });
          /* istanbul ignore next */
          cov_shkwebwfd().s[31]++;
          return;
        } else
        /* istanbul ignore next */
        {
          cov_shkwebwfd().b[7][1]++;
        }
        // Validar criterios de búsqueda
        const searchCriteria =
        /* istanbul ignore next */
        (cov_shkwebwfd().s[32]++, {
          instrument:
          /* istanbul ignore next */
          (cov_shkwebwfd().b[8][0]++, criteria.instrument) ||
          /* istanbul ignore next */
          (cov_shkwebwfd().b[8][1]++, event.instrument),
          location:
          /* istanbul ignore next */
          (cov_shkwebwfd().b[9][0]++, criteria.location) ||
          /* istanbul ignore next */
          (cov_shkwebwfd().b[9][1]++, event.location),
          budget:
          /* istanbul ignore next */
          (cov_shkwebwfd().b[10][0]++, criteria.budget) ||
          /* istanbul ignore next */
          (cov_shkwebwfd().b[10][1]++, parseFloat(event.budget)),
          date:
          /* istanbul ignore next */
          (cov_shkwebwfd().b[11][0]++, criteria.date) ||
          /* istanbul ignore next */
          (cov_shkwebwfd().b[11][1]++, event.date),
          time:
          /* istanbul ignore next */
          (cov_shkwebwfd().b[12][0]++, criteria.time) ||
          /* istanbul ignore next */
          (cov_shkwebwfd().b[12][1]++, event.time),
          duration:
          /* istanbul ignore next */
          (cov_shkwebwfd().b[13][0]++, criteria.duration) ||
          /* istanbul ignore next */
          (cov_shkwebwfd().b[13][1]++, event.duration),
          eventType:
          /* istanbul ignore next */
          (cov_shkwebwfd().b[14][0]++, criteria.eventType) ||
          /* istanbul ignore next */
          (cov_shkwebwfd().b[14][1]++, event.eventType),
          maxDistance:
          /* istanbul ignore next */
          (cov_shkwebwfd().b[15][0]++, criteria.maxDistance) ||
          /* istanbul ignore next */
          (cov_shkwebwfd().b[15][1]++, 50) // 50km por defecto
        });
        // Realizar búsqueda
        const musicians =
        /* istanbul ignore next */
        (cov_shkwebwfd().s[33]++, yield musicianSearchService_1.MusicianSearchService.searchMusiciansForEvent(event, searchCriteria));
        /* istanbul ignore next */
        cov_shkwebwfd().s[34]++;
        loggerService_1.logger.info('[src/controllers/musicianSearchController.ts:65] ✅ Búsqueda completada. Músicos encontrados:', {
          metadata: {
            id: musicians.length
          }
        });
        /* istanbul ignore next */
        cov_shkwebwfd().s[35]++;
        res.status(200).json({
          success: true,
          message: 'Búsqueda de músicos completada exitosamente',
          data: {
            eventId,
            totalMusicians: musicians.length,
            musicians: musicians.slice(0, 10),
            // Limitar a 10 resultados
            searchCriteria
          }
        });
      } catch (error) {
        /* istanbul ignore next */
        cov_shkwebwfd().s[36]++;
        loggerService_1.logger.error('[src/controllers/musicianSearchController.ts:80] ❌ Error en búsqueda de músicos:', error);
        /* istanbul ignore next */
        cov_shkwebwfd().s[37]++;
        res.status(500).json({
          success: false,
          message: 'Error interno del servidor',
          error: error instanceof Error ?
          /* istanbul ignore next */
          (cov_shkwebwfd().b[16][0]++, error.message) :
          /* istanbul ignore next */
          (cov_shkwebwfd().b[16][1]++, 'Error desconocido')
        });
      }
    });
  }
  /**
   * Obtiene músicos recomendados para un evento
   * GET /musician-search/recommendations/:eventId
   */
  static getRecommendedMusicians(req, res) {
    /* istanbul ignore next */
    cov_shkwebwfd().f[9]++;
    cov_shkwebwfd().s[38]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_shkwebwfd().f[10]++;
      cov_shkwebwfd().s[39]++;
      try {
        const {
          eventId
        } =
        /* istanbul ignore next */
        (cov_shkwebwfd().s[40]++, req.params);
        const user =
        /* istanbul ignore next */
        (cov_shkwebwfd().s[41]++, req.user);
        /* istanbul ignore next */
        cov_shkwebwfd().s[42]++;
        loggerService_1.logger.info('[src/controllers/musicianSearchController.ts:95] 🎯 Obteniendo recomendaciones para evento:', {
          metadata: {
            id: eventId
          }
        });
        // Validar que el usuario sea un creador de eventos
        /* istanbul ignore next */
        cov_shkwebwfd().s[43]++;
        if (user.roll !== 'eventCreator') {
          /* istanbul ignore next */
          cov_shkwebwfd().b[17][0]++;
          cov_shkwebwfd().s[44]++;
          res.status(403).json({
            success: false,
            message: 'Solo los creadores de eventos pueden obtener recomendaciones'
          });
          /* istanbul ignore next */
          cov_shkwebwfd().s[45]++;
          return;
        } else
        /* istanbul ignore next */
        {
          cov_shkwebwfd().b[17][1]++;
        }
        // Validar que el evento existe y pertenece al usuario
        const event =
        /* istanbul ignore next */
        (cov_shkwebwfd().s[46]++, yield (0, eventModel_1.getEventByIdModel)(eventId));
        /* istanbul ignore next */
        cov_shkwebwfd().s[47]++;
        if (!event) {
          /* istanbul ignore next */
          cov_shkwebwfd().b[18][0]++;
          cov_shkwebwfd().s[48]++;
          res.status(404).json({
            success: false,
            message: 'Evento no encontrado'
          });
          /* istanbul ignore next */
          cov_shkwebwfd().s[49]++;
          return;
        } else
        /* istanbul ignore next */
        {
          cov_shkwebwfd().b[18][1]++;
        }
        cov_shkwebwfd().s[50]++;
        if (event.user !== user.userEmail) {
          /* istanbul ignore next */
          cov_shkwebwfd().b[19][0]++;
          cov_shkwebwfd().s[51]++;
          res.status(403).json({
            success: false,
            message: 'No tienes permisos para obtener recomendaciones para este evento'
          });
          /* istanbul ignore next */
          cov_shkwebwfd().s[52]++;
          return;
        } else
        /* istanbul ignore next */
        {
          cov_shkwebwfd().b[19][1]++;
        }
        // Obtener recomendaciones
        const recommendations =
        /* istanbul ignore next */
        (cov_shkwebwfd().s[53]++, yield musicianSearchService_1.MusicianSearchService.getRecommendedMusicians(eventId));
        /* istanbul ignore next */
        cov_shkwebwfd().s[54]++;
        loggerService_1.logger.info('[src/controllers/musicianSearchController.ts:125] ✅ Recomendaciones obtenidas:', {
          metadata: {
            id: recommendations.length
          }
        });
        /* istanbul ignore next */
        cov_shkwebwfd().s[55]++;
        res.status(200).json({
          success: true,
          message: 'Recomendaciones obtenidas exitosamente',
          data: {
            eventId,
            totalRecommendations: recommendations.length,
            recommendations: recommendations.slice(0, 5) // Top 5 recomendaciones
          }
        });
      } catch (error) {
        /* istanbul ignore next */
        cov_shkwebwfd().s[56]++;
        loggerService_1.logger.error('[src/controllers/musicianSearchController.ts:140] ❌ Error obteniendo recomendaciones:', error);
        /* istanbul ignore next */
        cov_shkwebwfd().s[57]++;
        res.status(500).json({
          success: false,
          message: 'Error interno del servidor',
          error: error instanceof Error ?
          /* istanbul ignore next */
          (cov_shkwebwfd().b[20][0]++, error.message) :
          /* istanbul ignore next */
          (cov_shkwebwfd().b[20][1]++, 'Error desconocido')
        });
      }
    });
  }
  /**
   * Busca músicos por criterios específicos (búsqueda avanzada)
   * POST /musician-search/advanced-search
   */
  static advancedSearch(req, res) {
    /* istanbul ignore next */
    cov_shkwebwfd().f[11]++;
    cov_shkwebwfd().s[58]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_shkwebwfd().f[12]++;
      var _a;
      /* istanbul ignore next */
      cov_shkwebwfd().s[59]++;
      try {
        const {
          criteria
        } =
        /* istanbul ignore next */
        (cov_shkwebwfd().s[60]++, req.body);
        const user =
        /* istanbul ignore next */
        (cov_shkwebwfd().s[61]++, req.user);
        /* istanbul ignore next */
        cov_shkwebwfd().s[62]++;
        loggerService_1.logger.info('[src/controllers/musicianSearchController.ts:155] 🔍 Búsqueda avanzada solicitada:', {
          metadata: {
            criteria,
            userEmail: user.userEmail
          }
        });
        // Validar que el usuario sea un creador de eventos
        /* istanbul ignore next */
        cov_shkwebwfd().s[63]++;
        if (user.roll !== 'eventCreator') {
          /* istanbul ignore next */
          cov_shkwebwfd().b[21][0]++;
          cov_shkwebwfd().s[64]++;
          res.status(403).json({
            success: false,
            message: 'Solo los creadores de eventos pueden realizar búsquedas avanzadas'
          });
          /* istanbul ignore next */
          cov_shkwebwfd().s[65]++;
          return;
        } else
        /* istanbul ignore next */
        {
          cov_shkwebwfd().b[21][1]++;
        }
        // Validar criterios mínimos
        cov_shkwebwfd().s[66]++;
        if (!criteria.instrument) {
          /* istanbul ignore next */
          cov_shkwebwfd().b[22][0]++;
          cov_shkwebwfd().s[67]++;
          res.status(400).json({
            success: false,
            message: 'El instrumento es requerido para la búsqueda'
          });
          /* istanbul ignore next */
          cov_shkwebwfd().s[68]++;
          return;
        } else
        /* istanbul ignore next */
        {
          cov_shkwebwfd().b[22][1]++;
        }
        // Crear un evento temporal para la búsqueda
        const tempEvent =
        /* istanbul ignore next */
        (cov_shkwebwfd().s[69]++, {
          id: 'temp',
          user: user.userEmail,
          eventName: 'Búsqueda temporal',
          eventType:
          /* istanbul ignore next */
          (cov_shkwebwfd().b[23][0]++, criteria.eventType) ||
          /* istanbul ignore next */
          (cov_shkwebwfd().b[23][1]++, 'general'),
          date:
          /* istanbul ignore next */
          (cov_shkwebwfd().b[24][0]++, criteria.date) ||
          /* istanbul ignore next */
          (cov_shkwebwfd().b[24][1]++, new Date().toISOString().split('T')[0]),
          time:
          /* istanbul ignore next */
          (cov_shkwebwfd().b[25][0]++, criteria.time) ||
          /* istanbul ignore next */
          (cov_shkwebwfd().b[25][1]++, '12:00'),
          location:
          /* istanbul ignore next */
          (cov_shkwebwfd().b[26][0]++, criteria.location) ||
          /* istanbul ignore next */
          (cov_shkwebwfd().b[26][1]++, ''),
          duration:
          /* istanbul ignore next */
          (cov_shkwebwfd().b[27][0]++, criteria.duration) ||
          /* istanbul ignore next */
          (cov_shkwebwfd().b[27][1]++, '02:00'),
          instrument: criteria.instrument,
          bringInstrument:
          /* istanbul ignore next */
          (cov_shkwebwfd().b[28][0]++, criteria.bringInstrument) ||
          /* istanbul ignore next */
          (cov_shkwebwfd().b[28][1]++, false),
          comment: '',
          budget:
          /* istanbul ignore next */
          (cov_shkwebwfd().b[29][0]++,
          /* istanbul ignore next */
          (cov_shkwebwfd().b[31][0]++, (_a = criteria.budget) === null) ||
          /* istanbul ignore next */
          (cov_shkwebwfd().b[31][1]++, _a === void 0) ?
          /* istanbul ignore next */
          (cov_shkwebwfd().b[30][0]++, void 0) :
          /* istanbul ignore next */
          (cov_shkwebwfd().b[30][1]++, _a.toString())) ||
          /* istanbul ignore next */
          (cov_shkwebwfd().b[29][1]++, '0'),
          flyerUrl: '',
          songs: [],
          recommendations: [],
          mapsLink: '',
          status: 'pending_musician',
          createdAt: new Date().toISOString(),
          updatedAt: new Date().toISOString()
        });
        // Realizar búsqueda
        const musicians =
        /* istanbul ignore next */
        (cov_shkwebwfd().s[70]++, yield musicianSearchService_1.MusicianSearchService.searchMusiciansForEvent(tempEvent, criteria));
        /* istanbul ignore next */
        cov_shkwebwfd().s[71]++;
        loggerService_1.logger.info('[src/controllers/musicianSearchController.ts:195] ✅ Búsqueda avanzada completada. Músicos encontrados:', {
          metadata: {
            id: musicians.length
          }
        });
        /* istanbul ignore next */
        cov_shkwebwfd().s[72]++;
        res.status(200).json({
          success: true,
          message: 'Búsqueda avanzada completada exitosamente',
          data: {
            totalMusicians: musicians.length,
            musicians: musicians.slice(0, 20),
            // Limitar a 20 resultados
            searchCriteria: criteria
          }
        });
      } catch (error) {
        /* istanbul ignore next */
        cov_shkwebwfd().s[73]++;
        loggerService_1.logger.error('[src/controllers/musicianSearchController.ts:210] ❌ Error en búsqueda avanzada:', error);
        /* istanbul ignore next */
        cov_shkwebwfd().s[74]++;
        res.status(500).json({
          success: false,
          message: 'Error interno del servidor',
          error: error instanceof Error ?
          /* istanbul ignore next */
          (cov_shkwebwfd().b[32][0]++, error.message) :
          /* istanbul ignore next */
          (cov_shkwebwfd().b[32][1]++, 'Error desconocido')
        });
      }
    });
  }
  /**
   * Obtiene estadísticas de búsqueda
   * GET /musician-search/stats
   */
  static getSearchStats(req, res) {
    /* istanbul ignore next */
    cov_shkwebwfd().f[13]++;
    cov_shkwebwfd().s[75]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_shkwebwfd().f[14]++;
      cov_shkwebwfd().s[76]++;
      try {
        const user =
        /* istanbul ignore next */
        (cov_shkwebwfd().s[77]++, req.user);
        /* istanbul ignore next */
        cov_shkwebwfd().s[78]++;
        loggerService_1.logger.info('[src/controllers/musicianSearchController.ts:225] 📊 Obteniendo estadísticas de búsqueda para:', {
          metadata: {
            id: user.userEmail
          }
        });
        // Validar que el usuario sea un creador de eventos
        /* istanbul ignore next */
        cov_shkwebwfd().s[79]++;
        if (user.roll !== 'eventCreator') {
          /* istanbul ignore next */
          cov_shkwebwfd().b[33][0]++;
          cov_shkwebwfd().s[80]++;
          res.status(403).json({
            success: false,
            message: 'Solo los creadores de eventos pueden obtener estadísticas'
          });
          /* istanbul ignore next */
          cov_shkwebwfd().s[81]++;
          return;
        } else
        /* istanbul ignore next */
        {
          cov_shkwebwfd().b[33][1]++;
        }
        // Obtener estadísticas básicas
        const stats =
        /* istanbul ignore next */
        (cov_shkwebwfd().s[82]++, {
          totalSearches: 0,
          // En producción, esto vendría de una base de datos
          averageResults: 0,
          mostSearchedInstrument: 'Guitarra',
          lastSearchDate: new Date().toISOString(),
          totalMusiciansAvailable: 0
        });
        /* istanbul ignore next */
        cov_shkwebwfd().s[83]++;
        res.status(200).json({
          success: true,
          message: 'Estadísticas obtenidas exitosamente',
          data: stats
        });
      } catch (error) {
        /* istanbul ignore next */
        cov_shkwebwfd().s[84]++;
        loggerService_1.logger.error('[src/controllers/musicianSearchController.ts:250] ❌ Error obteniendo estadísticas:', error);
        /* istanbul ignore next */
        cov_shkwebwfd().s[85]++;
        res.status(500).json({
          success: false,
          message: 'Error interno del servidor',
          error: error instanceof Error ?
          /* istanbul ignore next */
          (cov_shkwebwfd().b[34][0]++, error.message) :
          /* istanbul ignore next */
          (cov_shkwebwfd().b[34][1]++, 'Error desconocido')
        });
      }
    });
  }
}
/* istanbul ignore next */
cov_shkwebwfd().s[86]++;
exports.MusicianSearchController = MusicianSearchController;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3Zfc2hrd2Vid2ZkIiwiYWN0dWFsQ292ZXJhZ2UiLCJsb2dnZXJTZXJ2aWNlXzEiLCJzIiwicmVxdWlyZSIsIm11c2ljaWFuU2VhcmNoU2VydmljZV8xIiwiZXZlbnRNb2RlbF8xIiwiTXVzaWNpYW5TZWFyY2hDb250cm9sbGVyIiwic2VhcmNoTXVzaWNpYW5zRm9yRXZlbnQiLCJyZXEiLCJyZXMiLCJmIiwiZXZlbnRJZCIsImNyaXRlcmlhIiwiYm9keSIsInVzZXIiLCJsb2dnZXIiLCJpbmZvIiwibWV0YWRhdGEiLCJ1c2VyRW1haWwiLCJyb2xsIiwiYiIsInN0YXR1cyIsImpzb24iLCJzdWNjZXNzIiwibWVzc2FnZSIsImV2ZW50IiwiZ2V0RXZlbnRCeUlkTW9kZWwiLCJzZWFyY2hDcml0ZXJpYSIsImluc3RydW1lbnQiLCJsb2NhdGlvbiIsImJ1ZGdldCIsInBhcnNlRmxvYXQiLCJkYXRlIiwidGltZSIsImR1cmF0aW9uIiwiZXZlbnRUeXBlIiwibWF4RGlzdGFuY2UiLCJtdXNpY2lhbnMiLCJNdXNpY2lhblNlYXJjaFNlcnZpY2UiLCJpZCIsImxlbmd0aCIsImRhdGEiLCJ0b3RhbE11c2ljaWFucyIsInNsaWNlIiwiZXJyb3IiLCJFcnJvciIsImdldFJlY29tbWVuZGVkTXVzaWNpYW5zIiwicGFyYW1zIiwicmVjb21tZW5kYXRpb25zIiwidG90YWxSZWNvbW1lbmRhdGlvbnMiLCJhZHZhbmNlZFNlYXJjaCIsInRlbXBFdmVudCIsImV2ZW50TmFtZSIsIkRhdGUiLCJ0b0lTT1N0cmluZyIsInNwbGl0IiwiYnJpbmdJbnN0cnVtZW50IiwiY29tbWVudCIsIl9hIiwidG9TdHJpbmciLCJmbHllclVybCIsInNvbmdzIiwibWFwc0xpbmsiLCJjcmVhdGVkQXQiLCJ1cGRhdGVkQXQiLCJnZXRTZWFyY2hTdGF0cyIsInN0YXRzIiwidG90YWxTZWFyY2hlcyIsImF2ZXJhZ2VSZXN1bHRzIiwibW9zdFNlYXJjaGVkSW5zdHJ1bWVudCIsImxhc3RTZWFyY2hEYXRlIiwidG90YWxNdXNpY2lhbnNBdmFpbGFibGUiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiQzpcXHNyY1xcQVBQX011c3Npa09uXFxBUFBfTXVzc2lrT25fRXhwcmVzc1xcc3JjXFxjb250cm9sbGVyc1xcbXVzaWNpYW5TZWFyY2hDb250cm9sbGVyLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJlcXVlc3QsIFJlc3BvbnNlIH0gZnJvbSAnZXhwcmVzcyc7XHJcbmltcG9ydCB7IGxvZ2dlciB9IGZyb20gJy4uL3NlcnZpY2VzL2xvZ2dlclNlcnZpY2UnO1xyXG5pbXBvcnQgeyBNdXNpY2lhblNlYXJjaFNlcnZpY2UsIE11c2ljaWFuU2VhcmNoQ3JpdGVyaWEgfSBmcm9tICcuLi9zZXJ2aWNlcy9tdXNpY2lhblNlYXJjaFNlcnZpY2UnO1xyXG5pbXBvcnQgeyBnZXRFdmVudEJ5SWRNb2RlbCB9IGZyb20gJy4uL21vZGVscy9ldmVudE1vZGVsJztcclxuaW1wb3J0IHsgRXZlbnQgfSBmcm9tICcuLi91dGlscy9EYXRhVHlwZXMnO1xyXG5cclxuLyoqXHJcbiAqIENvbnRyb2xhZG9yIHBhcmEgYsO6c3F1ZWRhIGRlIG3DunNpY29zXHJcbiAqIE1hbmVqYSBsYXMgc29saWNpdHVkZXMgZGUgYsO6c3F1ZWRhIGRlIG3DunNpY29zIHBhcmEgZXZlbnRvc1xyXG4gKi9cclxuZXhwb3J0IGNsYXNzIE11c2ljaWFuU2VhcmNoQ29udHJvbGxlciB7XHJcbiAgLyoqXHJcbiAgICogQnVzY2EgbcO6c2ljb3MgZGlzcG9uaWJsZXMgcGFyYSB1biBldmVudG8gZXNwZWPDrWZpY29cclxuICAgKiBQT1NUIC9tdXNpY2lhbi1zZWFyY2gvc2VhcmNoLWZvci1ldmVudFxyXG4gICAqL1xyXG4gIHN0YXRpYyBhc3luYyBzZWFyY2hNdXNpY2lhbnNGb3JFdmVudChyZXE6IFJlcXVlc3QsIHJlczogUmVzcG9uc2UpOiBQcm9taXNlPHZvaWQ+IHtcclxuICAgIHRyeSB7XHJcbiAgICAgIGNvbnN0IHsgZXZlbnRJZCwgY3JpdGVyaWEgfSA9IHJlcS5ib2R5O1xyXG4gICAgICBjb25zdCB1c2VyID0gKHJlcSBhcyBhbnkpLnVzZXI7XHJcblxyXG4gICAgICBsb2dnZXIuaW5mbygnW3NyYy9jb250cm9sbGVycy9tdXNpY2lhblNlYXJjaENvbnRyb2xsZXIudHM6MjBdIPCflI0gQsO6c3F1ZWRhIGRlIG3DunNpY29zIHNvbGljaXRhZGE6JywgeyBtZXRhZGF0YTogeyBldmVudElkLCB1c2VyRW1haWw6IHVzZXIudXNlckVtYWlsIH1cclxuICAgICAgIH0pO1xyXG5cclxuICAgICAgLy8gVmFsaWRhciBxdWUgZWwgdXN1YXJpbyBzZWEgdW4gY3JlYWRvciBkZSBldmVudG9zXHJcbiAgICAgIGlmICh1c2VyLnJvbGwgIT09ICdldmVudENyZWF0b3InKSB7XHJcbiAgICAgICAgcmVzLnN0YXR1cyg0MDMpLmpzb24oe1xyXG4gICAgICAgICAgc3VjY2VzczogZmFsc2UsXHJcbiAgICAgICAgICBtZXNzYWdlOiAnU29sbyBsb3MgY3JlYWRvcmVzIGRlIGV2ZW50b3MgcHVlZGVuIGJ1c2NhciBtw7pzaWNvcycsXHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgICB9XHJcblxyXG4gICAgICAvLyBWYWxpZGFyIHF1ZSBlbCBldmVudG8gZXhpc3RlIHkgcGVydGVuZWNlIGFsIHVzdWFyaW9cclxuICAgICAgY29uc3QgZXZlbnQgPSBhd2FpdCBnZXRFdmVudEJ5SWRNb2RlbChldmVudElkKTtcclxuICAgICAgaWYgKCFldmVudCkge1xyXG4gICAgICAgIHJlcy5zdGF0dXMoNDA0KS5qc29uKHtcclxuICAgICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxyXG4gICAgICAgICAgbWVzc2FnZTogJ0V2ZW50byBubyBlbmNvbnRyYWRvJyxcclxuICAgICAgICB9KTtcclxuICAgICAgICByZXR1cm47XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGlmIChldmVudC51c2VyICE9PSB1c2VyLnVzZXJFbWFpbCkge1xyXG4gICAgICAgIHJlcy5zdGF0dXMoNDAzKS5qc29uKHtcclxuICAgICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxyXG4gICAgICAgICAgbWVzc2FnZTogJ05vIHRpZW5lcyBwZXJtaXNvcyBwYXJhIGJ1c2NhciBtw7pzaWNvcyBwYXJhIGVzdGUgZXZlbnRvJyxcclxuICAgICAgICB9KTtcclxuICAgICAgICByZXR1cm47XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC8vIFZhbGlkYXIgY3JpdGVyaW9zIGRlIGLDunNxdWVkYVxyXG4gICAgICBjb25zdCBzZWFyY2hDcml0ZXJpYTogTXVzaWNpYW5TZWFyY2hDcml0ZXJpYSA9IHtcclxuICAgICAgICBpbnN0cnVtZW50OiBjcml0ZXJpYS5pbnN0cnVtZW50IHx8IGV2ZW50Lmluc3RydW1lbnQsXHJcbiAgICAgICAgbG9jYXRpb246IGNyaXRlcmlhLmxvY2F0aW9uIHx8IGV2ZW50LmxvY2F0aW9uLFxyXG4gICAgICAgIGJ1ZGdldDogY3JpdGVyaWEuYnVkZ2V0IHx8IHBhcnNlRmxvYXQoZXZlbnQuYnVkZ2V0KSxcclxuICAgICAgICBkYXRlOiBjcml0ZXJpYS5kYXRlIHx8IGV2ZW50LmRhdGUsXHJcbiAgICAgICAgdGltZTogY3JpdGVyaWEudGltZSB8fCBldmVudC50aW1lLFxyXG4gICAgICAgIGR1cmF0aW9uOiBjcml0ZXJpYS5kdXJhdGlvbiB8fCBldmVudC5kdXJhdGlvbixcclxuICAgICAgICBldmVudFR5cGU6IGNyaXRlcmlhLmV2ZW50VHlwZSB8fCBldmVudC5ldmVudFR5cGUsXHJcbiAgICAgICAgbWF4RGlzdGFuY2U6IGNyaXRlcmlhLm1heERpc3RhbmNlIHx8IDUwLCAvLyA1MGttIHBvciBkZWZlY3RvXHJcbiAgICAgIH07XHJcblxyXG4gICAgICAvLyBSZWFsaXphciBiw7pzcXVlZGFcclxuICAgICAgY29uc3QgbXVzaWNpYW5zID0gYXdhaXQgTXVzaWNpYW5TZWFyY2hTZXJ2aWNlLnNlYXJjaE11c2ljaWFuc0ZvckV2ZW50KFxyXG4gICAgICAgIGV2ZW50LFxyXG4gICAgICAgIHNlYXJjaENyaXRlcmlhXHJcbiAgICAgICk7XHJcblxyXG4gICAgICBsb2dnZXIuaW5mbygnW3NyYy9jb250cm9sbGVycy9tdXNpY2lhblNlYXJjaENvbnRyb2xsZXIudHM6NjVdIOKchSBCw7pzcXVlZGEgY29tcGxldGFkYS4gTcO6c2ljb3MgZW5jb250cmFkb3M6JywgeyBtZXRhZGF0YTogeyBpZDogbXVzaWNpYW5zLmxlbmd0aFxyXG4sICAgIH0gfSk7XHJcblxyXG4gICAgICByZXMuc3RhdHVzKDIwMCkuanNvbih7XHJcbiAgICAgICAgc3VjY2VzczogdHJ1ZSxcclxuICAgICAgICBtZXNzYWdlOiAnQsO6c3F1ZWRhIGRlIG3DunNpY29zIGNvbXBsZXRhZGEgZXhpdG9zYW1lbnRlJyxcclxuICAgICAgICBkYXRhOiB7XHJcbiAgICAgICAgICBldmVudElkLFxyXG4gICAgICAgICAgdG90YWxNdXNpY2lhbnM6IG11c2ljaWFucy5sZW5ndGgsXHJcbiAgICAgICAgICBtdXNpY2lhbnM6IG11c2ljaWFucy5zbGljZSgwLCAxMCksIC8vIExpbWl0YXIgYSAxMCByZXN1bHRhZG9zXHJcbiAgICAgICAgICBzZWFyY2hDcml0ZXJpYSxcclxuICAgICAgICB9LFxyXG4gICAgICB9KTtcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIGxvZ2dlci5lcnJvcignW3NyYy9jb250cm9sbGVycy9tdXNpY2lhblNlYXJjaENvbnRyb2xsZXIudHM6ODBdIOKdjCBFcnJvciBlbiBiw7pzcXVlZGEgZGUgbcO6c2ljb3M6JywgZXJyb3IgYXMgRXJyb3IpO1xyXG4gICAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7XHJcbiAgICAgICAgc3VjY2VzczogZmFsc2UsXHJcbiAgICAgICAgbWVzc2FnZTogJ0Vycm9yIGludGVybm8gZGVsIHNlcnZpZG9yJyxcclxuICAgICAgICBlcnJvcjogZXJyb3IgaW5zdGFuY2VvZiBFcnJvciA/IGVycm9yLm1lc3NhZ2UgOiAnRXJyb3IgZGVzY29ub2NpZG8nLFxyXG4gICAgICB9KTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIE9idGllbmUgbcO6c2ljb3MgcmVjb21lbmRhZG9zIHBhcmEgdW4gZXZlbnRvXHJcbiAgICogR0VUIC9tdXNpY2lhbi1zZWFyY2gvcmVjb21tZW5kYXRpb25zLzpldmVudElkXHJcbiAgICovXHJcbiAgc3RhdGljIGFzeW5jIGdldFJlY29tbWVuZGVkTXVzaWNpYW5zKHJlcTogUmVxdWVzdCwgcmVzOiBSZXNwb25zZSk6IFByb21pc2U8dm9pZD4ge1xyXG4gICAgdHJ5IHtcclxuICAgICAgY29uc3QgeyBldmVudElkIH0gPSByZXEucGFyYW1zO1xyXG4gICAgICBjb25zdCB1c2VyID0gKHJlcSBhcyBhbnkpLnVzZXI7XHJcblxyXG4gICAgICBsb2dnZXIuaW5mbygnW3NyYy9jb250cm9sbGVycy9tdXNpY2lhblNlYXJjaENvbnRyb2xsZXIudHM6OTVdIPCfjq8gT2J0ZW5pZW5kbyByZWNvbWVuZGFjaW9uZXMgcGFyYSBldmVudG86JywgeyBtZXRhZGF0YTogeyBpZDogZXZlbnRJZFxyXG4sICAgIH0gfSk7XHJcblxyXG4gICAgICAvLyBWYWxpZGFyIHF1ZSBlbCB1c3VhcmlvIHNlYSB1biBjcmVhZG9yIGRlIGV2ZW50b3NcclxuICAgICAgaWYgKHVzZXIucm9sbCAhPT0gJ2V2ZW50Q3JlYXRvcicpIHtcclxuICAgICAgICByZXMuc3RhdHVzKDQwMykuanNvbih7XHJcbiAgICAgICAgICBzdWNjZXNzOiBmYWxzZSxcclxuICAgICAgICAgIG1lc3NhZ2U6ICdTb2xvIGxvcyBjcmVhZG9yZXMgZGUgZXZlbnRvcyBwdWVkZW4gb2J0ZW5lciByZWNvbWVuZGFjaW9uZXMnLFxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgICAgfVxyXG5cclxuICAgICAgLy8gVmFsaWRhciBxdWUgZWwgZXZlbnRvIGV4aXN0ZSB5IHBlcnRlbmVjZSBhbCB1c3VhcmlvXHJcbiAgICAgIGNvbnN0IGV2ZW50ID0gYXdhaXQgZ2V0RXZlbnRCeUlkTW9kZWwoZXZlbnRJZCk7XHJcbiAgICAgIGlmICghZXZlbnQpIHtcclxuICAgICAgICByZXMuc3RhdHVzKDQwNCkuanNvbih7XHJcbiAgICAgICAgICBzdWNjZXNzOiBmYWxzZSxcclxuICAgICAgICAgIG1lc3NhZ2U6ICdFdmVudG8gbm8gZW5jb250cmFkbycsXHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBpZiAoZXZlbnQudXNlciAhPT0gdXNlci51c2VyRW1haWwpIHtcclxuICAgICAgICByZXMuc3RhdHVzKDQwMykuanNvbih7XHJcbiAgICAgICAgICBzdWNjZXNzOiBmYWxzZSxcclxuICAgICAgICAgIG1lc3NhZ2U6ICdObyB0aWVuZXMgcGVybWlzb3MgcGFyYSBvYnRlbmVyIHJlY29tZW5kYWNpb25lcyBwYXJhIGVzdGUgZXZlbnRvJyxcclxuICAgICAgICB9KTtcclxuICAgICAgICByZXR1cm47XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC8vIE9idGVuZXIgcmVjb21lbmRhY2lvbmVzXHJcbiAgICAgIGNvbnN0IHJlY29tbWVuZGF0aW9ucyA9IGF3YWl0IE11c2ljaWFuU2VhcmNoU2VydmljZS5nZXRSZWNvbW1lbmRlZE11c2ljaWFucyhldmVudElkKTtcclxuXHJcbiAgICAgIGxvZ2dlci5pbmZvKCdbc3JjL2NvbnRyb2xsZXJzL211c2ljaWFuU2VhcmNoQ29udHJvbGxlci50czoxMjVdIOKchSBSZWNvbWVuZGFjaW9uZXMgb2J0ZW5pZGFzOicsIHsgbWV0YWRhdGE6IHsgaWQ6IHJlY29tbWVuZGF0aW9ucy5sZW5ndGhcclxuLCAgICB9IH0pO1xyXG5cclxuICAgICAgcmVzLnN0YXR1cygyMDApLmpzb24oe1xyXG4gICAgICAgIHN1Y2Nlc3M6IHRydWUsXHJcbiAgICAgICAgbWVzc2FnZTogJ1JlY29tZW5kYWNpb25lcyBvYnRlbmlkYXMgZXhpdG9zYW1lbnRlJyxcclxuICAgICAgICBkYXRhOiB7XHJcbiAgICAgICAgICBldmVudElkLFxyXG4gICAgICAgICAgdG90YWxSZWNvbW1lbmRhdGlvbnM6IHJlY29tbWVuZGF0aW9ucy5sZW5ndGgsXHJcbiAgICAgICAgICByZWNvbW1lbmRhdGlvbnM6IHJlY29tbWVuZGF0aW9ucy5zbGljZSgwLCA1KSwgLy8gVG9wIDUgcmVjb21lbmRhY2lvbmVzXHJcbiAgICAgICAgfSxcclxuICAgICAgfSk7XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICBsb2dnZXIuZXJyb3IoJ1tzcmMvY29udHJvbGxlcnMvbXVzaWNpYW5TZWFyY2hDb250cm9sbGVyLnRzOjE0MF0g4p2MIEVycm9yIG9idGVuaWVuZG8gcmVjb21lbmRhY2lvbmVzOicsIGVycm9yIGFzIEVycm9yKTtcclxuICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oe1xyXG4gICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxyXG4gICAgICAgIG1lc3NhZ2U6ICdFcnJvciBpbnRlcm5vIGRlbCBzZXJ2aWRvcicsXHJcbiAgICAgICAgZXJyb3I6IGVycm9yIGluc3RhbmNlb2YgRXJyb3IgPyBlcnJvci5tZXNzYWdlIDogJ0Vycm9yIGRlc2Nvbm9jaWRvJyxcclxuICAgICAgfSk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBCdXNjYSBtw7pzaWNvcyBwb3IgY3JpdGVyaW9zIGVzcGVjw61maWNvcyAoYsO6c3F1ZWRhIGF2YW56YWRhKVxyXG4gICAqIFBPU1QgL211c2ljaWFuLXNlYXJjaC9hZHZhbmNlZC1zZWFyY2hcclxuICAgKi9cclxuICBzdGF0aWMgYXN5bmMgYWR2YW5jZWRTZWFyY2gocmVxOiBSZXF1ZXN0LCByZXM6IFJlc3BvbnNlKTogUHJvbWlzZTx2b2lkPiB7XHJcbiAgICB0cnkge1xyXG4gICAgICBjb25zdCB7IGNyaXRlcmlhIH0gPSByZXEuYm9keTtcclxuICAgICAgY29uc3QgdXNlciA9IChyZXEgYXMgYW55KS51c2VyO1xyXG5cclxuICAgICAgbG9nZ2VyLmluZm8oJ1tzcmMvY29udHJvbGxlcnMvbXVzaWNpYW5TZWFyY2hDb250cm9sbGVyLnRzOjE1NV0g8J+UjSBCw7pzcXVlZGEgYXZhbnphZGEgc29saWNpdGFkYTonLCB7IG1ldGFkYXRhOiB7IGNyaXRlcmlhLCB1c2VyRW1haWw6IHVzZXIudXNlckVtYWlsIH1cclxuICAgICAgIH0pO1xyXG5cclxuICAgICAgLy8gVmFsaWRhciBxdWUgZWwgdXN1YXJpbyBzZWEgdW4gY3JlYWRvciBkZSBldmVudG9zXHJcbiAgICAgIGlmICh1c2VyLnJvbGwgIT09ICdldmVudENyZWF0b3InKSB7XHJcbiAgICAgICAgcmVzLnN0YXR1cyg0MDMpLmpzb24oe1xyXG4gICAgICAgICAgc3VjY2VzczogZmFsc2UsXHJcbiAgICAgICAgICBtZXNzYWdlOiAnU29sbyBsb3MgY3JlYWRvcmVzIGRlIGV2ZW50b3MgcHVlZGVuIHJlYWxpemFyIGLDunNxdWVkYXMgYXZhbnphZGFzJyxcclxuICAgICAgICB9KTtcclxuICAgICAgICByZXR1cm47XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC8vIFZhbGlkYXIgY3JpdGVyaW9zIG3DrW5pbW9zXHJcbiAgICAgIGlmICghY3JpdGVyaWEuaW5zdHJ1bWVudCkge1xyXG4gICAgICAgIHJlcy5zdGF0dXMoNDAwKS5qc29uKHtcclxuICAgICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxyXG4gICAgICAgICAgbWVzc2FnZTogJ0VsIGluc3RydW1lbnRvIGVzIHJlcXVlcmlkbyBwYXJhIGxhIGLDunNxdWVkYScsXHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgICB9XHJcblxyXG4gICAgICAvLyBDcmVhciB1biBldmVudG8gdGVtcG9yYWwgcGFyYSBsYSBiw7pzcXVlZGFcclxuICAgICAgY29uc3QgdGVtcEV2ZW50OiBFdmVudCA9IHtcclxuICAgICAgICBpZDogJ3RlbXAnLFxyXG4gICAgICAgIHVzZXI6IHVzZXIudXNlckVtYWlsLFxyXG4gICAgICAgIGV2ZW50TmFtZTogJ0LDunNxdWVkYSB0ZW1wb3JhbCcsXHJcbiAgICAgICAgZXZlbnRUeXBlOiBjcml0ZXJpYS5ldmVudFR5cGUgfHwgJ2dlbmVyYWwnLFxyXG4gICAgICAgIGRhdGU6IGNyaXRlcmlhLmRhdGUgfHwgbmV3IERhdGUoKS50b0lTT1N0cmluZygpLnNwbGl0KCdUJylbMF0sXHJcbiAgICAgICAgdGltZTogY3JpdGVyaWEudGltZSB8fCAnMTI6MDAnLFxyXG4gICAgICAgIGxvY2F0aW9uOiBjcml0ZXJpYS5sb2NhdGlvbiB8fCAnJyxcclxuICAgICAgICBkdXJhdGlvbjogY3JpdGVyaWEuZHVyYXRpb24gfHwgJzAyOjAwJyxcclxuICAgICAgICBpbnN0cnVtZW50OiBjcml0ZXJpYS5pbnN0cnVtZW50LFxyXG4gICAgICAgIGJyaW5nSW5zdHJ1bWVudDogY3JpdGVyaWEuYnJpbmdJbnN0cnVtZW50IHx8IGZhbHNlLFxyXG4gICAgICAgIGNvbW1lbnQ6ICcnLFxyXG4gICAgICAgIGJ1ZGdldDogY3JpdGVyaWEuYnVkZ2V0Py50b1N0cmluZygpIHx8ICcwJyxcclxuICAgICAgICBmbHllclVybDogJycsXHJcbiAgICAgICAgc29uZ3M6IFtdLFxyXG4gICAgICAgIHJlY29tbWVuZGF0aW9uczogW10sXHJcbiAgICAgICAgbWFwc0xpbms6ICcnLFxyXG4gICAgICAgIHN0YXR1czogJ3BlbmRpbmdfbXVzaWNpYW4nLFxyXG4gICAgICAgIGNyZWF0ZWRBdDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxyXG4gICAgICAgIHVwZGF0ZWRBdDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxyXG4gICAgICB9O1xyXG5cclxuICAgICAgLy8gUmVhbGl6YXIgYsO6c3F1ZWRhXHJcbiAgICAgIGNvbnN0IG11c2ljaWFucyA9IGF3YWl0IE11c2ljaWFuU2VhcmNoU2VydmljZS5zZWFyY2hNdXNpY2lhbnNGb3JFdmVudChcclxuICAgICAgICB0ZW1wRXZlbnQsXHJcbiAgICAgICAgY3JpdGVyaWFcclxuICAgICAgKTtcclxuXHJcbiAgICAgIGxvZ2dlci5pbmZvKCdbc3JjL2NvbnRyb2xsZXJzL211c2ljaWFuU2VhcmNoQ29udHJvbGxlci50czoxOTVdIOKchSBCw7pzcXVlZGEgYXZhbnphZGEgY29tcGxldGFkYS4gTcO6c2ljb3MgZW5jb250cmFkb3M6JywgeyBtZXRhZGF0YTogeyBpZDogbXVzaWNpYW5zLmxlbmd0aFxyXG4sICAgIH0gfSk7XHJcblxyXG4gICAgICByZXMuc3RhdHVzKDIwMCkuanNvbih7XHJcbiAgICAgICAgc3VjY2VzczogdHJ1ZSxcclxuICAgICAgICBtZXNzYWdlOiAnQsO6c3F1ZWRhIGF2YW56YWRhIGNvbXBsZXRhZGEgZXhpdG9zYW1lbnRlJyxcclxuICAgICAgICBkYXRhOiB7XHJcbiAgICAgICAgICB0b3RhbE11c2ljaWFuczogbXVzaWNpYW5zLmxlbmd0aCxcclxuICAgICAgICAgIG11c2ljaWFuczogbXVzaWNpYW5zLnNsaWNlKDAsIDIwKSwgLy8gTGltaXRhciBhIDIwIHJlc3VsdGFkb3NcclxuICAgICAgICAgIHNlYXJjaENyaXRlcmlhOiBjcml0ZXJpYSxcclxuICAgICAgICB9LFxyXG4gICAgICB9KTtcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIGxvZ2dlci5lcnJvcignW3NyYy9jb250cm9sbGVycy9tdXNpY2lhblNlYXJjaENvbnRyb2xsZXIudHM6MjEwXSDinYwgRXJyb3IgZW4gYsO6c3F1ZWRhIGF2YW56YWRhOicsIGVycm9yIGFzIEVycm9yKTtcclxuICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oe1xyXG4gICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxyXG4gICAgICAgIG1lc3NhZ2U6ICdFcnJvciBpbnRlcm5vIGRlbCBzZXJ2aWRvcicsXHJcbiAgICAgICAgZXJyb3I6IGVycm9yIGluc3RhbmNlb2YgRXJyb3IgPyBlcnJvci5tZXNzYWdlIDogJ0Vycm9yIGRlc2Nvbm9jaWRvJyxcclxuICAgICAgfSk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBPYnRpZW5lIGVzdGFkw61zdGljYXMgZGUgYsO6c3F1ZWRhXHJcbiAgICogR0VUIC9tdXNpY2lhbi1zZWFyY2gvc3RhdHNcclxuICAgKi9cclxuICBzdGF0aWMgYXN5bmMgZ2V0U2VhcmNoU3RhdHMocmVxOiBSZXF1ZXN0LCByZXM6IFJlc3BvbnNlKTogUHJvbWlzZTx2b2lkPiB7XHJcbiAgICB0cnkge1xyXG4gICAgICBjb25zdCB1c2VyID0gKHJlcSBhcyBhbnkpLnVzZXI7XHJcblxyXG4gICAgICBsb2dnZXIuaW5mbygnW3NyYy9jb250cm9sbGVycy9tdXNpY2lhblNlYXJjaENvbnRyb2xsZXIudHM6MjI1XSDwn5OKIE9idGVuaWVuZG8gZXN0YWTDrXN0aWNhcyBkZSBiw7pzcXVlZGEgcGFyYTonLCB7IG1ldGFkYXRhOiB7IGlkOiB1c2VyLnVzZXJFbWFpbFxyXG4sICAgIH0gfSk7XHJcblxyXG4gICAgICAvLyBWYWxpZGFyIHF1ZSBlbCB1c3VhcmlvIHNlYSB1biBjcmVhZG9yIGRlIGV2ZW50b3NcclxuICAgICAgaWYgKHVzZXIucm9sbCAhPT0gJ2V2ZW50Q3JlYXRvcicpIHtcclxuICAgICAgICByZXMuc3RhdHVzKDQwMykuanNvbih7XHJcbiAgICAgICAgICBzdWNjZXNzOiBmYWxzZSxcclxuICAgICAgICAgIG1lc3NhZ2U6ICdTb2xvIGxvcyBjcmVhZG9yZXMgZGUgZXZlbnRvcyBwdWVkZW4gb2J0ZW5lciBlc3RhZMOtc3RpY2FzJyxcclxuICAgICAgICB9KTtcclxuICAgICAgICByZXR1cm47XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC8vIE9idGVuZXIgZXN0YWTDrXN0aWNhcyBiw6FzaWNhc1xyXG4gICAgICBjb25zdCBzdGF0cyA9IHtcclxuICAgICAgICB0b3RhbFNlYXJjaGVzOiAwLCAvLyBFbiBwcm9kdWNjacOzbiwgZXN0byB2ZW5kcsOtYSBkZSB1bmEgYmFzZSBkZSBkYXRvc1xyXG4gICAgICAgIGF2ZXJhZ2VSZXN1bHRzOiAwLFxyXG4gICAgICAgIG1vc3RTZWFyY2hlZEluc3RydW1lbnQ6ICdHdWl0YXJyYScsXHJcbiAgICAgICAgbGFzdFNlYXJjaERhdGU6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSxcclxuICAgICAgICB0b3RhbE11c2ljaWFuc0F2YWlsYWJsZTogMCxcclxuICAgICAgfTtcclxuXHJcbiAgICAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKHtcclxuICAgICAgICBzdWNjZXNzOiB0cnVlLFxyXG4gICAgICAgIG1lc3NhZ2U6ICdFc3RhZMOtc3RpY2FzIG9idGVuaWRhcyBleGl0b3NhbWVudGUnLFxyXG4gICAgICAgIGRhdGE6IHN0YXRzLFxyXG4gICAgICB9KTtcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIGxvZ2dlci5lcnJvcignW3NyYy9jb250cm9sbGVycy9tdXNpY2lhblNlYXJjaENvbnRyb2xsZXIudHM6MjUwXSDinYwgRXJyb3Igb2J0ZW5pZW5kbyBlc3RhZMOtc3RpY2FzOicsIGVycm9yIGFzIEVycm9yKTtcclxuICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oe1xyXG4gICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxyXG4gICAgICAgIG1lc3NhZ2U6ICdFcnJvciBpbnRlcm5vIGRlbCBzZXJ2aWRvcicsXHJcbiAgICAgICAgZXJyb3I6IGVycm9yIGluc3RhbmNlb2YgRXJyb3IgPyBlcnJvci5tZXNzYWdlIDogJ0Vycm9yIGRlc2Nvbm9jaWRvJyxcclxuICAgICAgfSk7XHJcbiAgICB9XHJcbiAgfVxyXG59ICJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFNQTtJQUFBQSxhQUFBLFlBQUFBLENBQUE7TUFBQSxPQUFBQyxjQUFBO0lBQUE7RUFBQTtFQUFBLE9BQUFBLGNBQUE7QUFBQTtBQUFBRCxhQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBTEEsTUFBQUUsZUFBQTtBQUFBO0FBQUEsQ0FBQUYsYUFBQSxHQUFBRyxDQUFBLFFBQUFDLE9BQUE7QUFDQSxNQUFBQyx1QkFBQTtBQUFBO0FBQUEsQ0FBQUwsYUFBQSxHQUFBRyxDQUFBLFFBQUFDLE9BQUE7QUFDQSxNQUFBRSxZQUFBO0FBQUE7QUFBQSxDQUFBTixhQUFBLEdBQUFHLENBQUEsUUFBQUMs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