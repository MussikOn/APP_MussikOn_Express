{"version":3,"names":["express_1","cov_2nmsv7vez6","s","require","authMiddleware_1","adminOnly_1","uploadMiddleware_1","imagesController_1","router","Router","post","authMiddleware","imageUpload","single","validateImageFile","uploadImageController","get","listImagesController","getImageByIdController","put","updateImageController","delete","deleteImageController","getUserProfileImagesController","getPostImagesController","getEventImagesController","adminOnly","getImageStatsController","cleanupExpiredImagesController","getAllImagesController","getImageUrlController","exports","default"],"sources":["C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\routes\\imagesRoutes.ts"],"sourcesContent":["import { Router } from 'express';\nimport { authMiddleware } from '../middleware/authMiddleware';\nimport { adminOnly } from '../middleware/adminOnly';\nimport {\n  imageUpload,\n  handleMulterError,\n  validateImageFile,\n} from '../middleware/uploadMiddleware';\nimport {\n  uploadImageController,\n  getImageByIdController,\n  listImagesController,\n  updateImageController,\n  deleteImageController,\n  getImageStatsController,\n  getUserProfileImagesController,\n  getPostImagesController,\n  getEventImagesController,\n  cleanupExpiredImagesController,\n  // Controladores legacy para compatibilidad\n  getAllImagesController,\n  getImageUrlController,\n} from '../controllers/imagesController';\n\nconst router = Router();\n\n/**\n * @swagger\n * components:\n *   schemas:\n *     Image:\n *       type: object\n *       properties:\n *         id:\n *           type: string\n *           description: ID único de la imagen\n *         key:\n *           type: string\n *           description: Clave en S3\n *         url:\n *           type: string\n *           description: URL firmada de la imagen\n *         originalName:\n *           type: string\n *           description: Nombre original del archivo\n *         fileName:\n *           type: string\n *           description: Nombre del archivo en el sistema\n *         size:\n *           type: number\n *           description: Tamaño del archivo en bytes\n *         mimetype:\n *           type: string\n *           description: Tipo MIME del archivo\n *         category:\n *           type: string\n *           enum: [profile, post, event, gallery, admin]\n *           description: Categoría de la imagen\n *         userId:\n *           type: string\n *           description: Email del propietario\n *         description:\n *           type: string\n *           description: Descripción de la imagen\n *         tags:\n *           type: array\n *           items:\n *             type: string\n *           description: Etiquetas de la imagen\n *         metadata:\n *           type: object\n *           description: Metadatos adicionales\n *         isPublic:\n *           type: boolean\n *           description: Si la imagen es pública\n *         isActive:\n *           type: boolean\n *           description: Si la imagen está activa\n *         createdAt:\n *           type: string\n *           format: date-time\n *           description: Fecha de creación\n *         updatedAt:\n *           type: string\n *           format: date-time\n *           description: Fecha de última actualización\n *         expiresAt:\n *           type: string\n *           format: date-time\n *           description: Fecha de expiración (para URLs temporales)\n *     ImageStats:\n *       type: object\n *       properties:\n *         totalImages:\n *           type: number\n *           description: Total de imágenes\n *         totalSize:\n *           type: number\n *           description: Tamaño total en bytes\n *         imagesByCategory:\n *           type: object\n *           description: Conteo de imágenes por categoría\n *         imagesByUser:\n *           type: object\n *           description: Conteo de imágenes por usuario\n *         recentUploads:\n *           type: array\n *           items:\n *             $ref: '#/components/schemas/Image'\n *           description: Imágenes subidas recientemente\n */\n\n// ==================== RUTAS PRINCIPALES ====================\n\n/**\n * POST /images/upload\n * Subir una nueva imagen\n */\nrouter.post(\n  '/upload',\n  authMiddleware,\n  imageUpload.single('image'),\n  validateImageFile,\n  uploadImageController\n);\n\n/**\n * GET /images\n * Listar imágenes con filtros\n */\nrouter.get('/', listImagesController);\n\n/**\n * GET /images/:imageId\n * Obtener imagen por ID\n */\nrouter.get('/:imageId', getImageByIdController);\n\n/**\n * PUT /images/:imageId\n * Actualizar imagen\n */\nrouter.put('/:imageId', authMiddleware, updateImageController);\n\n/**\n * DELETE /images/:imageId\n * Eliminar imagen\n */\nrouter.delete('/:imageId', authMiddleware, deleteImageController);\n\n// ==================== RUTAS ESPECÍFICAS ====================\n\n/**\n * GET /images/profile/:userId\n * Obtener imágenes de perfil de un usuario\n */\nrouter.get('/profile/:userId', getUserProfileImagesController);\n\n/**\n * GET /images/posts\n * Obtener imágenes de posts\n */\nrouter.get('/posts', getPostImagesController);\n\n/**\n * GET /images/events\n * Obtener imágenes de eventos\n */\nrouter.get('/events', getEventImagesController);\n\n// ==================== RUTAS DE ADMINISTRACIÓN ====================\n\n/**\n * GET /images/stats\n * Obtener estadísticas de imágenes (Solo administradores)\n */\nrouter.get('/stats', authMiddleware, adminOnly, getImageStatsController);\n\n/**\n * POST /images/cleanup\n * Limpiar imágenes expiradas (Solo administradores senior)\n */\nrouter.post(\n  '/cleanup',\n  authMiddleware,\n  adminOnly,\n  cleanupExpiredImagesController\n);\n\n// ==================== RUTAS LEGACY (COMPATIBILIDAD) ====================\n\n/**\n * GET /imgs/getAllImg\n * Obtener galería de imágenes (Legacy)\n */\nrouter.get('/getAllImg', getAllImagesController);\n\n/**\n * GET /imgs/url/:key\n * Obtener URL de imagen por clave (Legacy)\n */\nrouter.get('/url/:key', getImageUrlController);\n\nexport default router;\n"],"mappings":"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","ignoreList":[]}