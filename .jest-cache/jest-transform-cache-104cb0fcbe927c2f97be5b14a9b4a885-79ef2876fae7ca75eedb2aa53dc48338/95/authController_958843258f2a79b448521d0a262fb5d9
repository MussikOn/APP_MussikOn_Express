ea2a852228ef819c83533d28b6f9b4a5
"use strict";

/* istanbul ignore next */
function cov_1ebl7we1os() {
  var path = "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\controllers\\authController.ts";
  var hash = "715ddb15facfb29dbff385b21d4355641cc088d5";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\controllers\\authController.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 12,
          column: 3
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "2": {
        start: {
          line: 3,
          column: 26
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "3": {
        start: {
          line: 4,
          column: 15
        },
        end: {
          line: 4,
          column: 52
        }
      },
      "4": {
        start: {
          line: 5,
          column: 4
        },
        end: {
          line: 7,
          column: 5
        }
      },
      "5": {
        start: {
          line: 6,
          column: 6
        },
        end: {
          line: 6,
          column: 68
        }
      },
      "6": {
        start: {
          line: 6,
          column: 51
        },
        end: {
          line: 6,
          column: 63
        }
      },
      "7": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 39
        }
      },
      "8": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "9": {
        start: {
          line: 10,
          column: 26
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "10": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 17
        }
      },
      "11": {
        start: {
          line: 13,
          column: 25
        },
        end: {
          line: 17,
          column: 2
        }
      },
      "12": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 72
        }
      },
      "13": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 21
        }
      },
      "14": {
        start: {
          line: 18,
          column: 19
        },
        end: {
          line: 34,
          column: 4
        }
      },
      "15": {
        start: {
          line: 19,
          column: 18
        },
        end: {
          line: 26,
          column: 5
        }
      },
      "16": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 24,
          column: 10
        }
      },
      "17": {
        start: {
          line: 21,
          column: 21
        },
        end: {
          line: 21,
          column: 23
        }
      },
      "18": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "19": {
        start: {
          line: 22,
          column: 29
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "20": {
        start: {
          line: 22,
          column: 77
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "21": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 22
        }
      },
      "22": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 26
        }
      },
      "23": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 33,
          column: 6
        }
      },
      "24": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "25": {
        start: {
          line: 28,
          column: 35
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "26": {
        start: {
          line: 29,
          column: 21
        },
        end: {
          line: 29,
          column: 23
        }
      },
      "27": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "28": {
        start: {
          line: 30,
          column: 25
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "29": {
        start: {
          line: 30,
          column: 38
        },
        end: {
          line: 30,
          column: 50
        }
      },
      "30": {
        start: {
          line: 30,
          column: 56
        },
        end: {
          line: 30,
          column: 57
        }
      },
      "31": {
        start: {
          line: 30,
          column: 78
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "32": {
        start: {
          line: 30,
          column: 102
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "33": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 40
        }
      },
      "34": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 22
        }
      },
      "35": {
        start: {
          line: 35,
          column: 16
        },
        end: {
          line: 43,
          column: 1
        }
      },
      "36": {
        start: {
          line: 36,
          column: 28
        },
        end: {
          line: 36,
          column: 110
        }
      },
      "37": {
        start: {
          line: 36,
          column: 91
        },
        end: {
          line: 36,
          column: 106
        }
      },
      "38": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 42,
          column: 7
        }
      },
      "39": {
        start: {
          line: 38,
          column: 36
        },
        end: {
          line: 38,
          column: 97
        }
      },
      "40": {
        start: {
          line: 38,
          column: 42
        },
        end: {
          line: 38,
          column: 70
        }
      },
      "41": {
        start: {
          line: 38,
          column: 85
        },
        end: {
          line: 38,
          column: 95
        }
      },
      "42": {
        start: {
          line: 39,
          column: 35
        },
        end: {
          line: 39,
          column: 100
        }
      },
      "43": {
        start: {
          line: 39,
          column: 41
        },
        end: {
          line: 39,
          column: 73
        }
      },
      "44": {
        start: {
          line: 39,
          column: 88
        },
        end: {
          line: 39,
          column: 98
        }
      },
      "45": {
        start: {
          line: 40,
          column: 32
        },
        end: {
          line: 40,
          column: 116
        }
      },
      "46": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 78
        }
      },
      "47": {
        start: {
          line: 44,
          column: 0
        },
        end: {
          line: 44,
          column: 62
        }
      },
      "48": {
        start: {
          line: 45,
          column: 0
        },
        end: {
          line: 45,
          column: 379
        }
      },
      "49": {
        start: {
          line: 46,
          column: 0
        },
        end: {
          line: 46,
          column: 48
        }
      },
      "50": {
        start: {
          line: 47,
          column: 0
        },
        end: {
          line: 47,
          column: 42
        }
      },
      "51": {
        start: {
          line: 48,
          column: 15
        },
        end: {
          line: 48,
          column: 46
        }
      },
      "52": {
        start: {
          line: 49,
          column: 20
        },
        end: {
          line: 49,
          column: 50
        }
      },
      "53": {
        start: {
          line: 50,
          column: 21
        },
        end: {
          line: 50,
          column: 51
        }
      },
      "54": {
        start: {
          line: 51,
          column: 14
        },
        end: {
          line: 51,
          column: 37
        }
      },
      "55": {
        start: {
          line: 52,
          column: 17
        },
        end: {
          line: 52,
          column: 43
        }
      },
      "56": {
        start: {
          line: 53,
          column: 20
        },
        end: {
          line: 53,
          column: 49
        }
      },
      "57": {
        start: {
          line: 54,
          column: 19
        },
        end: {
          line: 54,
          column: 47
        }
      },
      "58": {
        start: {
          line: 115,
          column: 4
        },
        end: {
          line: 166,
          column: 7
        }
      },
      "59": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 165,
          column: 9
        }
      },
      "60": {
        start: {
          line: 117,
          column: 79
        },
        end: {
          line: 117,
          column: 87
        }
      },
      "61": {
        start: {
          line: 118,
          column: 12
        },
        end: {
          line: 118,
          column: 105
        }
      },
      "62": {
        start: {
          line: 119,
          column: 12
        },
        end: {
          line: 124,
          column: 13
        }
      },
      "63": {
        start: {
          line: 120,
          column: 16
        },
        end: {
          line: 122,
          column: 19
        }
      },
      "64": {
        start: {
          line: 123,
          column: 16
        },
        end: {
          line: 123,
          column: 23
        }
      },
      "65": {
        start: {
          line: 125,
          column: 12
        },
        end: {
          line: 130,
          column: 13
        }
      },
      "66": {
        start: {
          line: 126,
          column: 16
        },
        end: {
          line: 128,
          column: 19
        }
      },
      "67": {
        start: {
          line: 129,
          column: 16
        },
        end: {
          line: 129,
          column: 23
        }
      },
      "68": {
        start: {
          line: 131,
          column: 12
        },
        end: {
          line: 134,
          column: 13
        }
      },
      "69": {
        start: {
          line: 132,
          column: 16
        },
        end: {
          line: 132,
          column: 78
        }
      },
      "70": {
        start: {
          line: 133,
          column: 16
        },
        end: {
          line: 133,
          column: 23
        }
      },
      "71": {
        start: {
          line: 135,
          column: 25
        },
        end: {
          line: 135,
          column: 60
        }
      },
      "72": {
        start: {
          line: 137,
          column: 31
        },
        end: {
          line: 137,
          column: 74
        }
      },
      "73": {
        start: {
          line: 138,
          column: 26
        },
        end: {
          line: 138,
          column: 113
        }
      },
      "74": {
        start: {
          line: 139,
          column: 12
        },
        end: {
          line: 159,
          column: 13
        }
      },
      "75": {
        start: {
          line: 140,
          column: 30
        },
        end: {
          line: 140,
          column: 85
        }
      },
      "76": {
        start: {
          line: 141,
          column: 29
        },
        end: {
          line: 141,
          column: 82
        }
      },
      "77": {
        start: {
          line: 142,
          column: 16
        },
        end: {
          line: 144,
          column: 81
        }
      },
      "78": {
        start: {
          line: 145,
          column: 16
        },
        end: {
          line: 145,
          column: 23
        }
      },
      "79": {
        start: {
          line: 147,
          column: 17
        },
        end: {
          line: 159,
          column: 13
        }
      },
      "80": {
        start: {
          line: 148,
          column: 16
        },
        end: {
          line: 150,
          column: 87
        }
      },
      "81": {
        start: {
          line: 151,
          column: 16
        },
        end: {
          line: 151,
          column: 23
        }
      },
      "82": {
        start: {
          line: 153,
          column: 17
        },
        end: {
          line: 159,
          column: 13
        }
      },
      "83": {
        start: {
          line: 154,
          column: 16
        },
        end: {
          line: 157,
          column: 19
        }
      },
      "84": {
        start: {
          line: 158,
          column: 16
        },
        end: {
          line: 158,
          column: 23
        }
      },
      "85": {
        start: {
          line: 162,
          column: 12
        },
        end: {
          line: 162,
          column: 123
        }
      },
      "86": {
        start: {
          line: 163,
          column: 12
        },
        end: {
          line: 163,
          column: 74
        }
      },
      "87": {
        start: {
          line: 164,
          column: 12
        },
        end: {
          line: 164,
          column: 19
        }
      },
      "88": {
        start: {
          line: 169,
          column: 4
        },
        end: {
          line: 207,
          column: 7
        }
      },
      "89": {
        start: {
          line: 170,
          column: 8
        },
        end: {
          line: 206,
          column: 9
        }
      },
      "90": {
        start: {
          line: 171,
          column: 48
        },
        end: {
          line: 171,
          column: 56
        }
      },
      "91": {
        start: {
          line: 172,
          column: 12
        },
        end: {
          line: 175,
          column: 13
        }
      },
      "92": {
        start: {
          line: 173,
          column: 16
        },
        end: {
          line: 173,
          column: 89
        }
      },
      "93": {
        start: {
          line: 174,
          column: 16
        },
        end: {
          line: 174,
          column: 23
        }
      },
      "94": {
        start: {
          line: 176,
          column: 12
        },
        end: {
          line: 181,
          column: 13
        }
      },
      "95": {
        start: {
          line: 177,
          column: 16
        },
        end: {
          line: 179,
          column: 81
        }
      },
      "96": {
        start: {
          line: 180,
          column: 16
        },
        end: {
          line: 180,
          column: 23
        }
      },
      "97": {
        start: {
          line: 182,
          column: 25
        },
        end: {
          line: 182,
          column: 78
        }
      },
      "98": {
        start: {
          line: 183,
          column: 12
        },
        end: {
          line: 188,
          column: 13
        }
      },
      "99": {
        start: {
          line: 184,
          column: 16
        },
        end: {
          line: 186,
          column: 19
        }
      },
      "100": {
        start: {
          line: 187,
          column: 16
        },
        end: {
          line: 187,
          column: 23
        }
      },
      "101": {
        start: {
          line: 189,
          column: 25
        },
        end: {
          line: 189,
          column: 34
        }
      },
      "102": {
        start: {
          line: 190,
          column: 29
        },
        end: {
          line: 190,
          column: 42
        }
      },
      "103": {
        start: {
          line: 191,
          column: 25
        },
        end: {
          line: 191,
          column: 34
        }
      },
      "104": {
        start: {
          line: 192,
          column: 25
        },
        end: {
          line: 192,
          column: 42
        }
      },
      "105": {
        start: {
          line: 193,
          column: 28
        },
        end: {
          line: 193,
          column: 68
        }
      },
      "106": {
        start: {
          line: 194,
          column: 12
        },
        end: {
          line: 197,
          column: 13
        }
      },
      "107": {
        start: {
          line: 195,
          column: 16
        },
        end: {
          line: 195,
          column: 72
        }
      },
      "108": {
        start: {
          line: 196,
          column: 16
        },
        end: {
          line: 196,
          column: 23
        }
      },
      "109": {
        start: {
          line: 198,
          column: 26
        },
        end: {
          line: 198,
          column: 81
        }
      },
      "110": {
        start: {
          line: 199,
          column: 12
        },
        end: {
          line: 199,
          column: 78
        }
      },
      "111": {
        start: {
          line: 202,
          column: 12
        },
        end: {
          line: 204,
          column: 84
        }
      },
      "112": {
        start: {
          line: 205,
          column: 12
        },
        end: {
          line: 205,
          column: 19
        }
      },
      "113": {
        start: {
          line: 209,
          column: 36
        },
        end: {
          line: 238,
          column: 2
        }
      },
      "114": {
        start: {
          line: 209,
          column: 50
        },
        end: {
          line: 238,
          column: 2
        }
      },
      "115": {
        start: {
          line: 210,
          column: 4
        },
        end: {
          line: 237,
          column: 5
        }
      },
      "116": {
        start: {
          line: 211,
          column: 26
        },
        end: {
          line: 211,
          column: 34
        }
      },
      "117": {
        start: {
          line: 212,
          column: 26
        },
        end: {
          line: 212,
          column: 66
        }
      },
      "118": {
        start: {
          line: 213,
          column: 8
        },
        end: {
          line: 215,
          column: 9
        }
      },
      "119": {
        start: {
          line: 214,
          column: 12
        },
        end: {
          line: 214,
          column: 74
        }
      },
      "120": {
        start: {
          line: 216,
          column: 8
        },
        end: {
          line: 221,
          column: 9
        }
      },
      "121": {
        start: {
          line: 217,
          column: 12
        },
        end: {
          line: 219,
          column: 77
        }
      },
      "122": {
        start: {
          line: 220,
          column: 12
        },
        end: {
          line: 220,
          column: 19
        }
      },
      "123": {
        start: {
          line: 223,
          column: 8
        },
        end: {
          line: 225,
          column: 9
        }
      },
      "124": {
        start: {
          line: 224,
          column: 12
        },
        end: {
          line: 224,
          column: 36
        }
      },
      "125": {
        start: {
          line: 226,
          column: 33
        },
        end: {
          line: 226,
          column: 100
        }
      },
      "126": {
        start: {
          line: 227,
          column: 8
        },
        end: {
          line: 231,
          column: 9
        }
      },
      "127": {
        start: {
          line: 228,
          column: 12
        },
        end: {
          line: 228,
          column: 64
        }
      },
      "128": {
        start: {
          line: 229,
          column: 12
        },
        end: {
          line: 229,
          column: 43
        }
      },
      "129": {
        start: {
          line: 230,
          column: 12
        },
        end: {
          line: 230,
          column: 60
        }
      },
      "130": {
        start: {
          line: 232,
          column: 8
        },
        end: {
          line: 232,
          column: 58
        }
      },
      "131": {
        start: {
          line: 235,
          column: 8
        },
        end: {
          line: 235,
          column: 55
        }
      },
      "132": {
        start: {
          line: 236,
          column: 8
        },
        end: {
          line: 236,
          column: 73
        }
      },
      "133": {
        start: {
          line: 239,
          column: 0
        },
        end: {
          line: 239,
          column: 66
        }
      },
      "134": {
        start: {
          line: 240,
          column: 32
        },
        end: {
          line: 331,
          column: 2
        }
      },
      "135": {
        start: {
          line: 240,
          column: 46
        },
        end: {
          line: 331,
          column: 2
        }
      },
      "136": {
        start: {
          line: 241,
          column: 22
        },
        end: {
          line: 241,
          column: 64
        }
      },
      "137": {
        start: {
          line: 242,
          column: 21
        },
        end: {
          line: 242,
          column: 53
        }
      },
      "138": {
        start: {
          line: 243,
          column: 17
        },
        end: {
          line: 297,
          column: 10
        }
      },
      "139": {
        start: {
          line: 298,
          column: 4
        },
        end: {
          line: 330,
          column: 5
        }
      },
      "140": {
        start: {
          line: 299,
          column: 26
        },
        end: {
          line: 299,
          column: 64
        }
      },
      "141": {
        start: {
          line: 300,
          column: 8
        },
        end: {
          line: 303,
          column: 9
        }
      },
      "142": {
        start: {
          line: 301,
          column: 12
        },
        end: {
          line: 301,
          column: 85
        }
      },
      "143": {
        start: {
          line: 302,
          column: 12
        },
        end: {
          line: 302,
          column: 19
        }
      },
      "144": {
        start: {
          line: 304,
          column: 8
        },
        end: {
          line: 309,
          column: 9
        }
      },
      "145": {
        start: {
          line: 305,
          column: 12
        },
        end: {
          line: 307,
          column: 77
        }
      },
      "146": {
        start: {
          line: 308,
          column: 12
        },
        end: {
          line: 308,
          column: 19
        }
      },
      "147": {
        start: {
          line: 310,
          column: 30
        },
        end: {
          line: 313,
          column: 18
        }
      },
      "148": {
        start: {
          line: 314,
          column: 8
        },
        end: {
          line: 323,
          column: 9
        }
      },
      "149": {
        start: {
          line: 315,
          column: 12
        },
        end: {
          line: 317,
          column: 15
        }
      },
      "150": {
        start: {
          line: 318,
          column: 12
        },
        end: {
          line: 318,
          column: 19
        }
      },
      "151": {
        start: {
          line: 321,
          column: 12
        },
        end: {
          line: 321,
          column: 92
        }
      },
      "152": {
        start: {
          line: 322,
          column: 12
        },
        end: {
          line: 322,
          column: 81
        }
      },
      "153": {
        start: {
          line: 326,
          column: 8
        },
        end: {
          line: 328,
          column: 86
        }
      },
      "154": {
        start: {
          line: 329,
          column: 8
        },
        end: {
          line: 329,
          column: 15
        }
      },
      "155": {
        start: {
          line: 332,
          column: 0
        },
        end: {
          line: 332,
          column: 58
        }
      },
      "156": {
        start: {
          line: 333,
          column: 30
        },
        end: {
          line: 354,
          column: 2
        }
      },
      "157": {
        start: {
          line: 333,
          column: 44
        },
        end: {
          line: 354,
          column: 2
        }
      },
      "158": {
        start: {
          line: 334,
          column: 4
        },
        end: {
          line: 353,
          column: 5
        }
      },
      "159": {
        start: {
          line: 335,
          column: 24
        },
        end: {
          line: 335,
          column: 55
        }
      },
      "160": {
        start: {
          line: 336,
          column: 25
        },
        end: {
          line: 336,
          column: 58
        }
      },
      "161": {
        start: {
          line: 337,
          column: 8
        },
        end: {
          line: 340,
          column: 9
        }
      },
      "162": {
        start: {
          line: 338,
          column: 12
        },
        end: {
          line: 338,
          column: 70
        }
      },
      "163": {
        start: {
          line: 339,
          column: 12
        },
        end: {
          line: 339,
          column: 19
        }
      },
      "164": {
        start: {
          line: 341,
          column: 24
        },
        end: {
          line: 341,
          column: 63
        }
      },
      "165": {
        start: {
          line: 342,
          column: 8
        },
        end: {
          line: 346,
          column: 9
        }
      },
      "166": {
        start: {
          line: 343,
          column: 12
        },
        end: {
          line: 343,
          column: 65
        }
      },
      "167": {
        start: {
          line: 344,
          column: 12
        },
        end: {
          line: 344,
          column: 64
        }
      },
      "168": {
        start: {
          line: 345,
          column: 12
        },
        end: {
          line: 345,
          column: 19
        }
      },
      "169": {
        start: {
          line: 347,
          column: 8
        },
        end: {
          line: 347,
          column: 52
        }
      },
      "170": {
        start: {
          line: 348,
          column: 8
        },
        end: {
          line: 348,
          column: 59
        }
      },
      "171": {
        start: {
          line: 349,
          column: 8
        },
        end: {
          line: 349,
          column: 53
        }
      },
      "172": {
        start: {
          line: 352,
          column: 8
        },
        end: {
          line: 352,
          column: 59
        }
      },
      "173": {
        start: {
          line: 355,
          column: 0
        },
        end: {
          line: 355,
          column: 54
        }
      },
      "174": {
        start: {
          line: 356,
          column: 33
        },
        end: {
          line: 381,
          column: 2
        }
      },
      "175": {
        start: {
          line: 356,
          column: 47
        },
        end: {
          line: 381,
          column: 2
        }
      },
      "176": {
        start: {
          line: 357,
          column: 4
        },
        end: {
          line: 380,
          column: 5
        }
      },
      "177": {
        start: {
          line: 358,
          column: 21
        },
        end: {
          line: 358,
          column: 29
        }
      },
      "178": {
        start: {
          line: 359,
          column: 8
        },
        end: {
          line: 362,
          column: 9
        }
      },
      "179": {
        start: {
          line: 360,
          column: 12
        },
        end: {
          line: 360,
          column: 69
        }
      },
      "180": {
        start: {
          line: 361,
          column: 12
        },
        end: {
          line: 361,
          column: 19
        }
      },
      "181": {
        start: {
          line: 363,
          column: 26
        },
        end: {
          line: 363,
          column: 34
        }
      },
      "182": {
        start: {
          line: 364,
          column: 8
        },
        end: {
          line: 369,
          column: 9
        }
      },
      "183": {
        start: {
          line: 365,
          column: 12
        },
        end: {
          line: 367,
          column: 76
        }
      },
      "184": {
        start: {
          line: 368,
          column: 12
        },
        end: {
          line: 368,
          column: 19
        }
      },
      "185": {
        start: {
          line: 370,
          column: 23
        },
        end: {
          line: 370,
          column: 92
        }
      },
      "186": {
        start: {
          line: 371,
          column: 8
        },
        end: {
          line: 376,
          column: 9
        }
      },
      "187": {
        start: {
          line: 372,
          column: 12
        },
        end: {
          line: 372,
          column: 75
        }
      },
      "188": {
        start: {
          line: 375,
          column: 12
        },
        end: {
          line: 375,
          column: 50
        }
      },
      "189": {
        start: {
          line: 379,
          column: 8
        },
        end: {
          line: 379,
          column: 76
        }
      },
      "190": {
        start: {
          line: 382,
          column: 0
        },
        end: {
          line: 382,
          column: 60
        }
      },
      "191": {
        start: {
          line: 384,
          column: 43
        },
        end: {
          line: 527,
          column: 2
        }
      },
      "192": {
        start: {
          line: 384,
          column: 57
        },
        end: {
          line: 527,
          column: 2
        }
      },
      "193": {
        start: {
          line: 385,
          column: 4
        },
        end: {
          line: 526,
          column: 5
        }
      },
      "194": {
        start: {
          line: 386,
          column: 66
        },
        end: {
          line: 386,
          column: 74
        }
      },
      "195": {
        start: {
          line: 387,
          column: 8
        },
        end: {
          line: 387,
          column: 136
        }
      },
      "196": {
        start: {
          line: 389,
          column: 8
        },
        end: {
          line: 394,
          column: 9
        }
      },
      "197": {
        start: {
          line: 390,
          column: 12
        },
        end: {
          line: 393,
          column: 15
        }
      },
      "198": {
        start: {
          line: 396,
          column: 8
        },
        end: {
          line: 401,
          column: 9
        }
      },
      "199": {
        start: {
          line: 397,
          column: 12
        },
        end: {
          line: 400,
          column: 15
        }
      },
      "200": {
        start: {
          line: 403,
          column: 8
        },
        end: {
          line: 408,
          column: 9
        }
      },
      "201": {
        start: {
          line: 404,
          column: 12
        },
        end: {
          line: 407,
          column: 15
        }
      },
      "202": {
        start: {
          line: 410,
          column: 8
        },
        end: {
          line: 415,
          column: 9
        }
      },
      "203": {
        start: {
          line: 411,
          column: 12
        },
        end: {
          line: 414,
          column: 15
        }
      },
      "204": {
        start: {
          line: 417,
          column: 29
        },
        end: {
          line: 417,
          column: 82
        }
      },
      "205": {
        start: {
          line: 418,
          column: 8
        },
        end: {
          line: 423,
          column: 9
        }
      },
      "206": {
        start: {
          line: 419,
          column: 12
        },
        end: {
          line: 422,
          column: 15
        }
      },
      "207": {
        start: {
          line: 425,
          column: 33
        },
        end: {
          line: 425,
          column: 75
        }
      },
      "208": {
        start: {
          line: 426,
          column: 27
        },
        end: {
          line: 426,
          column: 66
        }
      },
      "209": {
        start: {
          line: 428,
          column: 29
        },
        end: {
          line: 436,
          column: 9
        }
      },
      "210": {
        start: {
          line: 438,
          column: 8
        },
        end: {
          line: 442,
          column: 11
        }
      },
      "211": {
        start: {
          line: 444,
          column: 21
        },
        end: {
          line: 506,
          column: 12
        }
      },
      "212": {
        start: {
          line: 507,
          column: 8
        },
        end: {
          line: 507,
          column: 88
        }
      },
      "213": {
        start: {
          line: 508,
          column: 8
        },
        end: {
          line: 508,
          column: 105
        }
      },
      "214": {
        start: {
          line: 509,
          column: 8
        },
        end: {
          line: 517,
          column: 11
        }
      },
      "215": {
        start: {
          line: 520,
          column: 8
        },
        end: {
          line: 520,
          column: 117
        }
      },
      "216": {
        start: {
          line: 521,
          column: 8
        },
        end: {
          line: 525,
          column: 11
        }
      },
      "217": {
        start: {
          line: 528,
          column: 0
        },
        end: {
          line: 528,
          column: 80
        }
      },
      "218": {
        start: {
          line: 530,
          column: 48
        },
        end: {
          line: 619,
          column: 2
        }
      },
      "219": {
        start: {
          line: 530,
          column: 62
        },
        end: {
          line: 619,
          column: 2
        }
      },
      "220": {
        start: {
          line: 531,
          column: 4
        },
        end: {
          line: 618,
          column: 5
        }
      },
      "221": {
        start: {
          line: 532,
          column: 36
        },
        end: {
          line: 532,
          column: 44
        }
      },
      "222": {
        start: {
          line: 533,
          column: 8
        },
        end: {
          line: 533,
          column: 117
        }
      },
      "223": {
        start: {
          line: 535,
          column: 8
        },
        end: {
          line: 540,
          column: 9
        }
      },
      "224": {
        start: {
          line: 536,
          column: 12
        },
        end: {
          line: 539,
          column: 15
        }
      },
      "225": {
        start: {
          line: 542,
          column: 8
        },
        end: {
          line: 547,
          column: 9
        }
      },
      "226": {
        start: {
          line: 543,
          column: 12
        },
        end: {
          line: 546,
          column: 15
        }
      },
      "227": {
        start: {
          line: 549,
          column: 27
        },
        end: {
          line: 549,
          column: 73
        }
      },
      "228": {
        start: {
          line: 550,
          column: 8
        },
        end: {
          line: 555,
          column: 9
        }
      },
      "229": {
        start: {
          line: 551,
          column: 12
        },
        end: {
          line: 554,
          column: 15
        }
      },
      "230": {
        start: {
          line: 557,
          column: 8
        },
        end: {
          line: 563,
          column: 9
        }
      },
      "231": {
        start: {
          line: 558,
          column: 12
        },
        end: {
          line: 558,
          column: 62
        }
      },
      "232": {
        start: {
          line: 559,
          column: 12
        },
        end: {
          line: 562,
          column: 15
        }
      },
      "233": {
        start: {
          line: 565,
          column: 8
        },
        end: {
          line: 570,
          column: 9
        }
      },
      "234": {
        start: {
          line: 566,
          column: 12
        },
        end: {
          line: 569,
          column: 15
        }
      },
      "235": {
        start: {
          line: 572,
          column: 28
        },
        end: {
          line: 572,
          column: 92
        }
      },
      "236": {
        start: {
          line: 573,
          column: 8
        },
        end: {
          line: 578,
          column: 9
        }
      },
      "237": {
        start: {
          line: 574,
          column: 12
        },
        end: {
          line: 577,
          column: 15
        }
      },
      "238": {
        start: {
          line: 580,
          column: 55
        },
        end: {
          line: 580,
          column: 74
        }
      },
      "239": {
        start: {
          line: 581,
          column: 23
        },
        end: {
          line: 581,
          column: 112
        }
      },
      "240": {
        start: {
          line: 582,
          column: 8
        },
        end: {
          line: 609,
          column: 9
        }
      },
      "241": {
        start: {
          line: 584,
          column: 12
        },
        end: {
          line: 584,
          column: 62
        }
      },
      "242": {
        start: {
          line: 586,
          column: 26
        },
        end: {
          line: 586,
          column: 81
        }
      },
      "243": {
        start: {
          line: 587,
          column: 12
        },
        end: {
          line: 587,
          column: 111
        }
      },
      "244": {
        start: {
          line: 588,
          column: 12
        },
        end: {
          line: 601,
          column: 15
        }
      },
      "245": {
        start: {
          line: 604,
          column: 12
        },
        end: {
          line: 608,
          column: 15
        }
      },
      "246": {
        start: {
          line: 612,
          column: 8
        },
        end: {
          line: 612,
          column: 122
        }
      },
      "247": {
        start: {
          line: 613,
          column: 8
        },
        end: {
          line: 617,
          column: 11
        }
      },
      "248": {
        start: {
          line: 620,
          column: 0
        },
        end: {
          line: 620,
          column: 90
        }
      },
      "249": {
        start: {
          line: 621,
          column: 36
        },
        end: {
          line: 655,
          column: 2
        }
      },
      "250": {
        start: {
          line: 621,
          column: 50
        },
        end: {
          line: 655,
          column: 2
        }
      },
      "251": {
        start: {
          line: 622,
          column: 4
        },
        end: {
          line: 654,
          column: 5
        }
      },
      "252": {
        start: {
          line: 623,
          column: 30
        },
        end: {
          line: 623,
          column: 38
        }
      },
      "253": {
        start: {
          line: 624,
          column: 8
        },
        end: {
          line: 624,
          column: 103
        }
      },
      "254": {
        start: {
          line: 625,
          column: 8
        },
        end: {
          line: 628,
          column: 9
        }
      },
      "255": {
        start: {
          line: 626,
          column: 12
        },
        end: {
          line: 626,
          column: 64
        }
      },
      "256": {
        start: {
          line: 627,
          column: 12
        },
        end: {
          line: 627,
          column: 19
        }
      },
      "257": {
        start: {
          line: 629,
          column: 23
        },
        end: {
          line: 629,
          column: 79
        }
      },
      "258": {
        start: {
          line: 630,
          column: 8
        },
        end: {
          line: 630,
          column: 108
        }
      },
      "259": {
        start: {
          line: 631,
          column: 8
        },
        end: {
          line: 631,
          column: 117
        }
      },
      "260": {
        start: {
          line: 632,
          column: 8
        },
        end: {
          line: 645,
          column: 9
        }
      },
      "261": {
        start: {
          line: 633,
          column: 12
        },
        end: {
          line: 633,
          column: 69
        }
      },
      "262": {
        start: {
          line: 635,
          column: 13
        },
        end: {
          line: 645,
          column: 9
        }
      },
      "263": {
        start: {
          line: 636,
          column: 12
        },
        end: {
          line: 636,
          column: 64
        }
      },
      "264": {
        start: {
          line: 638,
          column: 13
        },
        end: {
          line: 645,
          column: 9
        }
      },
      "265": {
        start: {
          line: 639,
          column: 12
        },
        end: {
          line: 641,
          column: 78
        }
      },
      "266": {
        start: {
          line: 644,
          column: 12
        },
        end: {
          line: 644,
          column: 54
        }
      },
      "267": {
        start: {
          line: 648,
          column: 8
        },
        end: {
          line: 648,
          column: 100
        }
      },
      "268": {
        start: {
          line: 649,
          column: 8
        },
        end: {
          line: 649,
          column: 108
        }
      },
      "269": {
        start: {
          line: 650,
          column: 8
        },
        end: {
          line: 653,
          column: 11
        }
      },
      "270": {
        start: {
          line: 656,
          column: 0
        },
        end: {
          line: 656,
          column: 66
        }
      },
      "271": {
        start: {
          line: 725,
          column: 26
        },
        end: {
          line: 725,
          column: 35
        }
      },
      "272": {
        start: {
          line: 728,
          column: 4
        },
        end: {
          line: 728,
          column: 66
        }
      },
      "273": {
        start: {
          line: 732,
          column: 16
        },
        end: {
          line: 732,
          column: 26
        }
      },
      "274": {
        start: {
          line: 733,
          column: 4
        },
        end: {
          line: 737,
          column: 5
        }
      },
      "275": {
        start: {
          line: 734,
          column: 8
        },
        end: {
          line: 736,
          column: 9
        }
      },
      "276": {
        start: {
          line: 735,
          column: 12
        },
        end: {
          line: 735,
          column: 44
        }
      },
      "277": {
        start: {
          line: 740,
          column: 0
        },
        end: {
          line: 742,
          column: 1
        }
      },
      "278": {
        start: {
          line: 741,
          column: 4
        },
        end: {
          line: 741,
          column: 52
        }
      },
      "279": {
        start: {
          line: 744,
          column: 33
        },
        end: {
          line: 872,
          column: 2
        }
      },
      "280": {
        start: {
          line: 744,
          column: 47
        },
        end: {
          line: 872,
          column: 2
        }
      },
      "281": {
        start: {
          line: 745,
          column: 4
        },
        end: {
          line: 871,
          column: 5
        }
      },
      "282": {
        start: {
          line: 746,
          column: 30
        },
        end: {
          line: 746,
          column: 38
        }
      },
      "283": {
        start: {
          line: 747,
          column: 8
        },
        end: {
          line: 750,
          column: 9
        }
      },
      "284": {
        start: {
          line: 748,
          column: 12
        },
        end: {
          line: 748,
          column: 64
        }
      },
      "285": {
        start: {
          line: 749,
          column: 12
        },
        end: {
          line: 749,
          column: 19
        }
      },
      "286": {
        start: {
          line: 751,
          column: 8
        },
        end: {
          line: 754,
          column: 9
        }
      },
      "287": {
        start: {
          line: 752,
          column: 12
        },
        end: {
          line: 752,
          column: 60
        }
      },
      "288": {
        start: {
          line: 753,
          column: 12
        },
        end: {
          line: 753,
          column: 19
        }
      },
      "289": {
        start: {
          line: 756,
          column: 21
        },
        end: {
          line: 756,
          column: 74
        }
      },
      "290": {
        start: {
          line: 757,
          column: 8
        },
        end: {
          line: 760,
          column: 9
        }
      },
      "291": {
        start: {
          line: 758,
          column: 12
        },
        end: {
          line: 758,
          column: 67
        }
      },
      "292": {
        start: {
          line: 759,
          column: 12
        },
        end: {
          line: 759,
          column: 19
        }
      },
      "293": {
        start: {
          line: 762,
          column: 8
        },
        end: {
          line: 767,
          column: 9
        }
      },
      "294": {
        start: {
          line: 763,
          column: 12
        },
        end: {
          line: 765,
          column: 77
        }
      },
      "295": {
        start: {
          line: 766,
          column: 12
        },
        end: {
          line: 766,
          column: 19
        }
      },
      "296": {
        start: {
          line: 769,
          column: 33
        },
        end: {
          line: 769,
          column: 59
        }
      },
      "297": {
        start: {
          line: 770,
          column: 26
        },
        end: {
          line: 770,
          column: 53
        }
      },
      "298": {
        start: {
          line: 772,
          column: 8
        },
        end: {
          line: 775,
          column: 11
        }
      },
      "299": {
        start: {
          line: 777,
          column: 21
        },
        end: {
          line: 855,
          column: 12
        }
      },
      "300": {
        start: {
          line: 856,
          column: 8
        },
        end: {
          line: 866,
          column: 9
        }
      },
      "301": {
        start: {
          line: 857,
          column: 12
        },
        end: {
          line: 857,
          column: 93
        }
      },
      "302": {
        start: {
          line: 858,
          column: 12
        },
        end: {
          line: 861,
          column: 15
        }
      },
      "303": {
        start: {
          line: 864,
          column: 12
        },
        end: {
          line: 864,
          column: 64
        }
      },
      "304": {
        start: {
          line: 865,
          column: 12
        },
        end: {
          line: 865,
          column: 83
        }
      },
      "305": {
        start: {
          line: 869,
          column: 8
        },
        end: {
          line: 869,
          column: 67
        }
      },
      "306": {
        start: {
          line: 870,
          column: 8
        },
        end: {
          line: 870,
          column: 68
        }
      },
      "307": {
        start: {
          line: 873,
          column: 0
        },
        end: {
          line: 873,
          column: 60
        }
      },
      "308": {
        start: {
          line: 875,
          column: 29
        },
        end: {
          line: 923,
          column: 2
        }
      },
      "309": {
        start: {
          line: 875,
          column: 43
        },
        end: {
          line: 923,
          column: 2
        }
      },
      "310": {
        start: {
          line: 876,
          column: 4
        },
        end: {
          line: 922,
          column: 5
        }
      },
      "311": {
        start: {
          line: 877,
          column: 36
        },
        end: {
          line: 877,
          column: 44
        }
      },
      "312": {
        start: {
          line: 878,
          column: 8
        },
        end: {
          line: 881,
          column: 9
        }
      },
      "313": {
        start: {
          line: 879,
          column: 12
        },
        end: {
          line: 879,
          column: 75
        }
      },
      "314": {
        start: {
          line: 880,
          column: 12
        },
        end: {
          line: 880,
          column: 19
        }
      },
      "315": {
        start: {
          line: 882,
          column: 8
        },
        end: {
          line: 885,
          column: 9
        }
      },
      "316": {
        start: {
          line: 883,
          column: 12
        },
        end: {
          line: 883,
          column: 60
        }
      },
      "317": {
        start: {
          line: 884,
          column: 12
        },
        end: {
          line: 884,
          column: 19
        }
      },
      "318": {
        start: {
          line: 887,
          column: 21
        },
        end: {
          line: 887,
          column: 74
        }
      },
      "319": {
        start: {
          line: 888,
          column: 8
        },
        end: {
          line: 891,
          column: 9
        }
      },
      "320": {
        start: {
          line: 889,
          column: 12
        },
        end: {
          line: 889,
          column: 67
        }
      },
      "321": {
        start: {
          line: 890,
          column: 12
        },
        end: {
          line: 890,
          column: 19
        }
      },
      "322": {
        start: {
          line: 893,
          column: 8
        },
        end: {
          line: 898,
          column: 9
        }
      },
      "323": {
        start: {
          line: 894,
          column: 12
        },
        end: {
          line: 896,
          column: 77
        }
      },
      "324": {
        start: {
          line: 897,
          column: 12
        },
        end: {
          line: 897,
          column: 19
        }
      },
      "325": {
        start: {
          line: 900,
          column: 27
        },
        end: {
          line: 900,
          column: 73
        }
      },
      "326": {
        start: {
          line: 901,
          column: 8
        },
        end: {
          line: 904,
          column: 9
        }
      },
      "327": {
        start: {
          line: 902,
          column: 12
        },
        end: {
          line: 902,
          column: 77
        }
      },
      "328": {
        start: {
          line: 903,
          column: 12
        },
        end: {
          line: 903,
          column: 19
        }
      },
      "329": {
        start: {
          line: 905,
          column: 8
        },
        end: {
          line: 909,
          column: 9
        }
      },
      "330": {
        start: {
          line: 906,
          column: 12
        },
        end: {
          line: 906,
          column: 62
        }
      },
      "331": {
        start: {
          line: 907,
          column: 12
        },
        end: {
          line: 907,
          column: 61
        }
      },
      "332": {
        start: {
          line: 908,
          column: 12
        },
        end: {
          line: 908,
          column: 19
        }
      },
      "333": {
        start: {
          line: 910,
          column: 8
        },
        end: {
          line: 913,
          column: 9
        }
      },
      "334": {
        start: {
          line: 911,
          column: 12
        },
        end: {
          line: 911,
          column: 61
        }
      },
      "335": {
        start: {
          line: 912,
          column: 12
        },
        end: {
          line: 912,
          column: 19
        }
      },
      "336": {
        start: {
          line: 914,
          column: 8
        },
        end: {
          line: 917,
          column: 11
        }
      },
      "337": {
        start: {
          line: 920,
          column: 8
        },
        end: {
          line: 920,
          column: 63
        }
      },
      "338": {
        start: {
          line: 921,
          column: 8
        },
        end: {
          line: 921,
          column: 68
        }
      },
      "339": {
        start: {
          line: 924,
          column: 0
        },
        end: {
          line: 924,
          column: 52
        }
      },
      "340": {
        start: {
          line: 926,
          column: 32
        },
        end: {
          line: 996,
          column: 2
        }
      },
      "341": {
        start: {
          line: 926,
          column: 46
        },
        end: {
          line: 996,
          column: 2
        }
      },
      "342": {
        start: {
          line: 927,
          column: 4
        },
        end: {
          line: 995,
          column: 5
        }
      },
      "343": {
        start: {
          line: 928,
          column: 49
        },
        end: {
          line: 928,
          column: 57
        }
      },
      "344": {
        start: {
          line: 929,
          column: 8
        },
        end: {
          line: 934,
          column: 9
        }
      },
      "345": {
        start: {
          line: 930,
          column: 12
        },
        end: {
          line: 932,
          column: 82
        }
      },
      "346": {
        start: {
          line: 933,
          column: 12
        },
        end: {
          line: 933,
          column: 19
        }
      },
      "347": {
        start: {
          line: 935,
          column: 8
        },
        end: {
          line: 938,
          column: 9
        }
      },
      "348": {
        start: {
          line: 936,
          column: 12
        },
        end: {
          line: 936,
          column: 60
        }
      },
      "349": {
        start: {
          line: 937,
          column: 12
        },
        end: {
          line: 937,
          column: 19
        }
      },
      "350": {
        start: {
          line: 939,
          column: 8
        },
        end: {
          line: 944,
          column: 9
        }
      },
      "351": {
        start: {
          line: 940,
          column: 12
        },
        end: {
          line: 942,
          column: 15
        }
      },
      "352": {
        start: {
          line: 943,
          column: 12
        },
        end: {
          line: 943,
          column: 19
        }
      },
      "353": {
        start: {
          line: 946,
          column: 21
        },
        end: {
          line: 946,
          column: 74
        }
      },
      "354": {
        start: {
          line: 947,
          column: 8
        },
        end: {
          line: 950,
          column: 9
        }
      },
      "355": {
        start: {
          line: 948,
          column: 12
        },
        end: {
          line: 948,
          column: 67
        }
      },
      "356": {
        start: {
          line: 949,
          column: 12
        },
        end: {
          line: 949,
          column: 19
        }
      },
      "357": {
        start: {
          line: 952,
          column: 8
        },
        end: {
          line: 957,
          column: 9
        }
      },
      "358": {
        start: {
          line: 953,
          column: 12
        },
        end: {
          line: 955,
          column: 77
        }
      },
      "359": {
        start: {
          line: 956,
          column: 12
        },
        end: {
          line: 956,
          column: 19
        }
      },
      "360": {
        start: {
          line: 959,
          column: 27
        },
        end: {
          line: 959,
          column: 73
        }
      },
      "361": {
        start: {
          line: 960,
          column: 8
        },
        end: {
          line: 963,
          column: 9
        }
      },
      "362": {
        start: {
          line: 961,
          column: 12
        },
        end: {
          line: 961,
          column: 77
        }
      },
      "363": {
        start: {
          line: 962,
          column: 12
        },
        end: {
          line: 962,
          column: 19
        }
      },
      "364": {
        start: {
          line: 964,
          column: 8
        },
        end: {
          line: 968,
          column: 9
        }
      },
      "365": {
        start: {
          line: 965,
          column: 12
        },
        end: {
          line: 965,
          column: 62
        }
      },
      "366": {
        start: {
          line: 966,
          column: 12
        },
        end: {
          line: 966,
          column: 61
        }
      },
      "367": {
        start: {
          line: 967,
          column: 12
        },
        end: {
          line: 967,
          column: 19
        }
      },
      "368": {
        start: {
          line: 969,
          column: 8
        },
        end: {
          line: 972,
          column: 9
        }
      },
      "369": {
        start: {
          line: 970,
          column: 12
        },
        end: {
          line: 970,
          column: 61
        }
      },
      "370": {
        start: {
          line: 971,
          column: 12
        },
        end: {
          line: 971,
          column: 19
        }
      },
      "371": {
        start: {
          line: 974,
          column: 31
        },
        end: {
          line: 974,
          column: 65
        }
      },
      "372": {
        start: {
          line: 976,
          column: 27
        },
        end: {
          line: 979,
          column: 9
        }
      },
      "373": {
        start: {
          line: 980,
          column: 29
        },
        end: {
          line: 980,
          column: 97
        }
      },
      "374": {
        start: {
          line: 981,
          column: 8
        },
        end: {
          line: 984,
          column: 9
        }
      },
      "375": {
        start: {
          line: 982,
          column: 12
        },
        end: {
          line: 982,
          column: 56
        }
      },
      "376": {
        start: {
          line: 983,
          column: 12
        },
        end: {
          line: 983,
          column: 19
        }
      },
      "377": {
        start: {
          line: 986,
          column: 8
        },
        end: {
          line: 986,
          column: 58
        }
      },
      "378": {
        start: {
          line: 987,
          column: 8
        },
        end: {
          line: 990,
          column: 11
        }
      },
      "379": {
        start: {
          line: 993,
          column: 8
        },
        end: {
          line: 993,
          column: 66
        }
      },
      "380": {
        start: {
          line: 994,
          column: 8
        },
        end: {
          line: 994,
          column: 68
        }
      },
      "381": {
        start: {
          line: 997,
          column: 0
        },
        end: {
          line: 997,
          column: 58
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 2,
            column: 75
          }
        },
        loc: {
          start: {
            line: 2,
            column: 96
          },
          end: {
            line: 9,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 6,
            column: 38
          },
          end: {
            line: 6,
            column: 39
          }
        },
        loc: {
          start: {
            line: 6,
            column: 49
          },
          end: {
            line: 6,
            column: 65
          }
        },
        line: 6
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 9,
            column: 7
          }
        },
        loc: {
          start: {
            line: 9,
            column: 28
          },
          end: {
            line: 12,
            column: 1
          }
        },
        line: 9
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 13,
            column: 81
          }
        },
        loc: {
          start: {
            line: 13,
            column: 95
          },
          end: {
            line: 15,
            column: 1
          }
        },
        line: 13
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 15,
            column: 6
          }
        },
        loc: {
          start: {
            line: 15,
            column: 20
          },
          end: {
            line: 17,
            column: 1
          }
        },
        line: 15
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 18,
            column: 51
          },
          end: {
            line: 18,
            column: 52
          }
        },
        loc: {
          start: {
            line: 18,
            column: 63
          },
          end: {
            line: 34,
            column: 1
          }
        },
        line: 18
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 19,
            column: 18
          },
          end: {
            line: 19,
            column: 19
          }
        },
        loc: {
          start: {
            line: 19,
            column: 30
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 19
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 20,
            column: 49
          }
        },
        loc: {
          start: {
            line: 20,
            column: 61
          },
          end: {
            line: 24,
            column: 9
          }
        },
        line: 20
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 27,
            column: 11
          },
          end: {
            line: 27,
            column: 12
          }
        },
        loc: {
          start: {
            line: 27,
            column: 26
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 27
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 35,
            column: 44
          },
          end: {
            line: 35,
            column: 45
          }
        },
        loc: {
          start: {
            line: 35,
            column: 89
          },
          end: {
            line: 43,
            column: 1
          }
        },
        line: 35
      },
      "10": {
        name: "adopt",
        decl: {
          start: {
            line: 36,
            column: 13
          },
          end: {
            line: 36,
            column: 18
          }
        },
        loc: {
          start: {
            line: 36,
            column: 26
          },
          end: {
            line: 36,
            column: 112
          }
        },
        line: 36
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 36,
            column: 70
          },
          end: {
            line: 36,
            column: 71
          }
        },
        loc: {
          start: {
            line: 36,
            column: 89
          },
          end: {
            line: 36,
            column: 108
          }
        },
        line: 36
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 37,
            column: 36
          },
          end: {
            line: 37,
            column: 37
          }
        },
        loc: {
          start: {
            line: 37,
            column: 63
          },
          end: {
            line: 42,
            column: 5
          }
        },
        line: 37
      },
      "13": {
        name: "fulfilled",
        decl: {
          start: {
            line: 38,
            column: 17
          },
          end: {
            line: 38,
            column: 26
          }
        },
        loc: {
          start: {
            line: 38,
            column: 34
          },
          end: {
            line: 38,
            column: 99
          }
        },
        line: 38
      },
      "14": {
        name: "rejected",
        decl: {
          start: {
            line: 39,
            column: 17
          },
          end: {
            line: 39,
            column: 25
          }
        },
        loc: {
          start: {
            line: 39,
            column: 33
          },
          end: {
            line: 39,
            column: 102
          }
        },
        line: 39
      },
      "15": {
        name: "step",
        decl: {
          start: {
            line: 40,
            column: 17
          },
          end: {
            line: 40,
            column: 21
          }
        },
        loc: {
          start: {
            line: 40,
            column: 30
          },
          end: {
            line: 40,
            column: 118
          }
        },
        line: 40
      },
      "16": {
        name: "registerController",
        decl: {
          start: {
            line: 114,
            column: 9
          },
          end: {
            line: 114,
            column: 27
          }
        },
        loc: {
          start: {
            line: 114,
            column: 38
          },
          end: {
            line: 167,
            column: 1
          }
        },
        line: 114
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 115,
            column: 43
          },
          end: {
            line: 115,
            column: 44
          }
        },
        loc: {
          start: {
            line: 115,
            column: 56
          },
          end: {
            line: 166,
            column: 5
          }
        },
        line: 115
      },
      "18": {
        name: "loginController",
        decl: {
          start: {
            line: 168,
            column: 9
          },
          end: {
            line: 168,
            column: 24
          }
        },
        loc: {
          start: {
            line: 168,
            column: 35
          },
          end: {
            line: 208,
            column: 1
          }
        },
        line: 168
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 169,
            column: 43
          },
          end: {
            line: 169,
            column: 44
          }
        },
        loc: {
          start: {
            line: 169,
            column: 56
          },
          end: {
            line: 207,
            column: 5
          }
        },
        line: 169
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 209,
            column: 36
          },
          end: {
            line: 209,
            column: 37
          }
        },
        loc: {
          start: {
            line: 209,
            column: 50
          },
          end: {
            line: 238,
            column: 2
          }
        },
        line: 209
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 209,
            column: 84
          },
          end: {
            line: 209,
            column: 85
          }
        },
        loc: {
          start: {
            line: 209,
            column: 97
          },
          end: {
            line: 238,
            column: 1
          }
        },
        line: 209
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 240,
            column: 32
          },
          end: {
            line: 240,
            column: 33
          }
        },
        loc: {
          start: {
            line: 240,
            column: 46
          },
          end: {
            line: 331,
            column: 2
          }
        },
        line: 240
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 240,
            column: 80
          },
          end: {
            line: 240,
            column: 81
          }
        },
        loc: {
          start: {
            line: 240,
            column: 93
          },
          end: {
            line: 331,
            column: 1
          }
        },
        line: 240
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 333,
            column: 30
          },
          end: {
            line: 333,
            column: 31
          }
        },
        loc: {
          start: {
            line: 333,
            column: 44
          },
          end: {
            line: 354,
            column: 2
          }
        },
        line: 333
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 333,
            column: 78
          },
          end: {
            line: 333,
            column: 79
          }
        },
        loc: {
          start: {
            line: 333,
            column: 91
          },
          end: {
            line: 354,
            column: 1
          }
        },
        line: 333
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 356,
            column: 33
          },
          end: {
            line: 356,
            column: 34
          }
        },
        loc: {
          start: {
            line: 356,
            column: 47
          },
          end: {
            line: 381,
            column: 2
          }
        },
        line: 356
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 356,
            column: 81
          },
          end: {
            line: 356,
            column: 82
          }
        },
        loc: {
          start: {
            line: 356,
            column: 94
          },
          end: {
            line: 381,
            column: 1
          }
        },
        line: 356
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 384,
            column: 43
          },
          end: {
            line: 384,
            column: 44
          }
        },
        loc: {
          start: {
            line: 384,
            column: 57
          },
          end: {
            line: 527,
            column: 2
          }
        },
        line: 384
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 384,
            column: 91
          },
          end: {
            line: 384,
            column: 92
          }
        },
        loc: {
          start: {
            line: 384,
            column: 104
          },
          end: {
            line: 527,
            column: 1
          }
        },
        line: 384
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 530,
            column: 48
          },
          end: {
            line: 530,
            column: 49
          }
        },
        loc: {
          start: {
            line: 530,
            column: 62
          },
          end: {
            line: 619,
            column: 2
          }
        },
        line: 530
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 530,
            column: 96
          },
          end: {
            line: 530,
            column: 97
          }
        },
        loc: {
          start: {
            line: 530,
            column: 109
          },
          end: {
            line: 619,
            column: 1
          }
        },
        line: 530
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 621,
            column: 36
          },
          end: {
            line: 621,
            column: 37
          }
        },
        loc: {
          start: {
            line: 621,
            column: 50
          },
          end: {
            line: 655,
            column: 2
          }
        },
        line: 621
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 621,
            column: 84
          },
          end: {
            line: 621,
            column: 85
          }
        },
        loc: {
          start: {
            line: 621,
            column: 97
          },
          end: {
            line: 655,
            column: 1
          }
        },
        line: 621
      },
      "34": {
        name: "generateVerificationCode",
        decl: {
          start: {
            line: 727,
            column: 9
          },
          end: {
            line: 727,
            column: 33
          }
        },
        loc: {
          start: {
            line: 727,
            column: 36
          },
          end: {
            line: 729,
            column: 1
          }
        },
        line: 727
      },
      "35": {
        name: "cleanupExpiredCodes",
        decl: {
          start: {
            line: 731,
            column: 9
          },
          end: {
            line: 731,
            column: 28
          }
        },
        loc: {
          start: {
            line: 731,
            column: 31
          },
          end: {
            line: 738,
            column: 1
          }
        },
        line: 731
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 744,
            column: 33
          },
          end: {
            line: 744,
            column: 34
          }
        },
        loc: {
          start: {
            line: 744,
            column: 47
          },
          end: {
            line: 872,
            column: 2
          }
        },
        line: 744
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 744,
            column: 81
          },
          end: {
            line: 744,
            column: 82
          }
        },
        loc: {
          start: {
            line: 744,
            column: 94
          },
          end: {
            line: 872,
            column: 1
          }
        },
        line: 744
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 875,
            column: 29
          },
          end: {
            line: 875,
            column: 30
          }
        },
        loc: {
          start: {
            line: 875,
            column: 43
          },
          end: {
            line: 923,
            column: 2
          }
        },
        line: 875
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 875,
            column: 77
          },
          end: {
            line: 875,
            column: 78
          }
        },
        loc: {
          start: {
            line: 875,
            column: 90
          },
          end: {
            line: 923,
            column: 1
          }
        },
        line: 875
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 926,
            column: 32
          },
          end: {
            line: 926,
            column: 33
          }
        },
        loc: {
          start: {
            line: 926,
            column: 46
          },
          end: {
            line: 996,
            column: 2
          }
        },
        line: 926
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 926,
            column: 80
          },
          end: {
            line: 926,
            column: 81
          }
        },
        loc: {
          start: {
            line: 926,
            column: 93
          },
          end: {
            line: 996,
            column: 1
          }
        },
        line: 926
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 12,
            column: 3
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 9,
            column: 1
          }
        }, {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 12,
            column: 1
          }
        }],
        line: 2
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "4": {
        loc: {
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 13
          }
        }, {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 47
          }
        }, {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 63
          }
        }, {
          start: {
            line: 5,
            column: 67
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 10
      },
      "8": {
        loc: {
          start: {
            line: 13,
            column: 25
          },
          end: {
            line: 17,
            column: 2
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 26
          },
          end: {
            line: 13,
            column: 30
          }
        }, {
          start: {
            line: 13,
            column: 34
          },
          end: {
            line: 13,
            column: 57
          }
        }, {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "9": {
        loc: {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 15,
            column: 1
          }
        }, {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "10": {
        loc: {
          start: {
            line: 18,
            column: 19
          },
          end: {
            line: 34,
            column: 4
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 20
          },
          end: {
            line: 18,
            column: 24
          }
        }, {
          start: {
            line: 18,
            column: 28
          },
          end: {
            line: 18,
            column: 45
          }
        }, {
          start: {
            line: 18,
            column: 50
          },
          end: {
            line: 34,
            column: 4
          }
        }],
        line: 18
      },
      "11": {
        loc: {
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 24,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 20,
            column: 44
          }
        }, {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 24,
            column: 9
          }
        }],
        line: 20
      },
      "12": {
        loc: {
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 95
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 95
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "13": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "14": {
        loc: {
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 15
          }
        }, {
          start: {
            line: 28,
            column: 19
          },
          end: {
            line: 28,
            column: 33
          }
        }],
        line: 28
      },
      "15": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "16": {
        loc: {
          start: {
            line: 30,
            column: 78
          },
          end: {
            line: 30,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 78
          },
          end: {
            line: 30,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "17": {
        loc: {
          start: {
            line: 35,
            column: 16
          },
          end: {
            line: 43,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 17
          },
          end: {
            line: 35,
            column: 21
          }
        }, {
          start: {
            line: 35,
            column: 25
          },
          end: {
            line: 35,
            column: 39
          }
        }, {
          start: {
            line: 35,
            column: 44
          },
          end: {
            line: 43,
            column: 1
          }
        }],
        line: 35
      },
      "18": {
        loc: {
          start: {
            line: 36,
            column: 35
          },
          end: {
            line: 36,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 36,
            column: 56
          },
          end: {
            line: 36,
            column: 61
          }
        }, {
          start: {
            line: 36,
            column: 64
          },
          end: {
            line: 36,
            column: 109
          }
        }],
        line: 36
      },
      "19": {
        loc: {
          start: {
            line: 37,
            column: 16
          },
          end: {
            line: 37,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 37,
            column: 16
          },
          end: {
            line: 37,
            column: 17
          }
        }, {
          start: {
            line: 37,
            column: 22
          },
          end: {
            line: 37,
            column: 33
          }
        }],
        line: 37
      },
      "20": {
        loc: {
          start: {
            line: 40,
            column: 32
          },
          end: {
            line: 40,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 40,
            column: 46
          },
          end: {
            line: 40,
            column: 67
          }
        }, {
          start: {
            line: 40,
            column: 70
          },
          end: {
            line: 40,
            column: 115
          }
        }],
        line: 40
      },
      "21": {
        loc: {
          start: {
            line: 41,
            column: 51
          },
          end: {
            line: 41,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 51
          },
          end: {
            line: 41,
            column: 61
          }
        }, {
          start: {
            line: 41,
            column: 65
          },
          end: {
            line: 41,
            column: 67
          }
        }],
        line: 41
      },
      "22": {
        loc: {
          start: {
            line: 119,
            column: 12
          },
          end: {
            line: 124,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 119,
            column: 12
          },
          end: {
            line: 124,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 119
      },
      "23": {
        loc: {
          start: {
            line: 119,
            column: 16
          },
          end: {
            line: 119,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 119,
            column: 16
          },
          end: {
            line: 119,
            column: 21
          }
        }, {
          start: {
            line: 119,
            column: 25
          },
          end: {
            line: 119,
            column: 34
          }
        }, {
          start: {
            line: 119,
            column: 38
          },
          end: {
            line: 119,
            column: 43
          }
        }, {
          start: {
            line: 119,
            column: 47
          },
          end: {
            line: 119,
            column: 57
          }
        }, {
          start: {
            line: 119,
            column: 61
          },
          end: {
            line: 119,
            column: 74
          }
        }],
        line: 119
      },
      "24": {
        loc: {
          start: {
            line: 125,
            column: 12
          },
          end: {
            line: 130,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 125,
            column: 12
          },
          end: {
            line: 130,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 125
      },
      "25": {
        loc: {
          start: {
            line: 131,
            column: 12
          },
          end: {
            line: 134,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 131,
            column: 12
          },
          end: {
            line: 134,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 131
      },
      "26": {
        loc: {
          start: {
            line: 137,
            column: 31
          },
          end: {
            line: 137,
            column: 74
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 137,
            column: 61
          },
          end: {
            line: 137,
            column: 67
          }
        }, {
          start: {
            line: 137,
            column: 70
          },
          end: {
            line: 137,
            column: 74
          }
        }],
        line: 137
      },
      "27": {
        loc: {
          start: {
            line: 139,
            column: 12
          },
          end: {
            line: 159,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 139,
            column: 12
          },
          end: {
            line: 159,
            column: 13
          }
        }, {
          start: {
            line: 147,
            column: 17
          },
          end: {
            line: 159,
            column: 13
          }
        }],
        line: 139
      },
      "28": {
        loc: {
          start: {
            line: 147,
            column: 17
          },
          end: {
            line: 159,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 147,
            column: 17
          },
          end: {
            line: 159,
            column: 13
          }
        }, {
          start: {
            line: 153,
            column: 17
          },
          end: {
            line: 159,
            column: 13
          }
        }],
        line: 147
      },
      "29": {
        loc: {
          start: {
            line: 153,
            column: 17
          },
          end: {
            line: 159,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 153,
            column: 17
          },
          end: {
            line: 159,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 153
      },
      "30": {
        loc: {
          start: {
            line: 172,
            column: 12
          },
          end: {
            line: 175,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 172,
            column: 12
          },
          end: {
            line: 175,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 172
      },
      "31": {
        loc: {
          start: {
            line: 172,
            column: 16
          },
          end: {
            line: 172,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 172,
            column: 16
          },
          end: {
            line: 172,
            column: 26
          }
        }, {
          start: {
            line: 172,
            column: 30
          },
          end: {
            line: 172,
            column: 43
          }
        }],
        line: 172
      },
      "32": {
        loc: {
          start: {
            line: 176,
            column: 12
          },
          end: {
            line: 181,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 176,
            column: 12
          },
          end: {
            line: 181,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 176
      },
      "33": {
        loc: {
          start: {
            line: 183,
            column: 12
          },
          end: {
            line: 188,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 183,
            column: 12
          },
          end: {
            line: 188,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 183
      },
      "34": {
        loc: {
          start: {
            line: 194,
            column: 12
          },
          end: {
            line: 197,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 194,
            column: 12
          },
          end: {
            line: 197,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 194
      },
      "35": {
        loc: {
          start: {
            line: 213,
            column: 8
          },
          end: {
            line: 215,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 213,
            column: 8
          },
          end: {
            line: 215,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 213
      },
      "36": {
        loc: {
          start: {
            line: 213,
            column: 12
          },
          end: {
            line: 213,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 213,
            column: 12
          },
          end: {
            line: 213,
            column: 22
          }
        }, {
          start: {
            line: 213,
            column: 26
          },
          end: {
            line: 213,
            column: 36
          }
        }],
        line: 213
      },
      "37": {
        loc: {
          start: {
            line: 216,
            column: 8
          },
          end: {
            line: 221,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 216,
            column: 8
          },
          end: {
            line: 221,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 216
      },
      "38": {
        loc: {
          start: {
            line: 223,
            column: 8
          },
          end: {
            line: 225,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 223,
            column: 8
          },
          end: {
            line: 225,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 223
      },
      "39": {
        loc: {
          start: {
            line: 227,
            column: 8
          },
          end: {
            line: 231,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 227,
            column: 8
          },
          end: {
            line: 231,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 227
      },
      "40": {
        loc: {
          start: {
            line: 300,
            column: 8
          },
          end: {
            line: 303,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 300,
            column: 8
          },
          end: {
            line: 303,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 300
      },
      "41": {
        loc: {
          start: {
            line: 304,
            column: 8
          },
          end: {
            line: 309,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 304,
            column: 8
          },
          end: {
            line: 309,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 304
      },
      "42": {
        loc: {
          start: {
            line: 314,
            column: 8
          },
          end: {
            line: 323,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 314,
            column: 8
          },
          end: {
            line: 323,
            column: 9
          }
        }, {
          start: {
            line: 320,
            column: 13
          },
          end: {
            line: 323,
            column: 9
          }
        }],
        line: 314
      },
      "43": {
        loc: {
          start: {
            line: 337,
            column: 8
          },
          end: {
            line: 340,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 337,
            column: 8
          },
          end: {
            line: 340,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 337
      },
      "44": {
        loc: {
          start: {
            line: 337,
            column: 12
          },
          end: {
            line: 337,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 337,
            column: 12
          },
          end: {
            line: 337,
            column: 26
          }
        }, {
          start: {
            line: 337,
            column: 30
          },
          end: {
            line: 337,
            column: 45
          }
        }],
        line: 337
      },
      "45": {
        loc: {
          start: {
            line: 342,
            column: 8
          },
          end: {
            line: 346,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 342,
            column: 8
          },
          end: {
            line: 346,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 342
      },
      "46": {
        loc: {
          start: {
            line: 359,
            column: 8
          },
          end: {
            line: 362,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 359,
            column: 8
          },
          end: {
            line: 362,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 359
      },
      "47": {
        loc: {
          start: {
            line: 359,
            column: 12
          },
          end: {
            line: 359,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 359,
            column: 12
          },
          end: {
            line: 359,
            column: 17
          }
        }, {
          start: {
            line: 359,
            column: 21
          },
          end: {
            line: 359,
            column: 36
          }
        }],
        line: 359
      },
      "48": {
        loc: {
          start: {
            line: 364,
            column: 8
          },
          end: {
            line: 369,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 364,
            column: 8
          },
          end: {
            line: 369,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 364
      },
      "49": {
        loc: {
          start: {
            line: 371,
            column: 8
          },
          end: {
            line: 376,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 371,
            column: 8
          },
          end: {
            line: 376,
            column: 9
          }
        }, {
          start: {
            line: 374,
            column: 13
          },
          end: {
            line: 376,
            column: 9
          }
        }],
        line: 371
      },
      "50": {
        loc: {
          start: {
            line: 389,
            column: 8
          },
          end: {
            line: 394,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 389,
            column: 8
          },
          end: {
            line: 394,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 389
      },
      "51": {
        loc: {
          start: {
            line: 389,
            column: 12
          },
          end: {
            line: 389,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 389,
            column: 12
          },
          end: {
            line: 389,
            column: 17
          }
        }, {
          start: {
            line: 389,
            column: 21
          },
          end: {
            line: 389,
            column: 30
          }
        }, {
          start: {
            line: 389,
            column: 34
          },
          end: {
            line: 389,
            column: 44
          }
        }, {
          start: {
            line: 389,
            column: 48
          },
          end: {
            line: 389,
            column: 61
          }
        }, {
          start: {
            line: 389,
            column: 65
          },
          end: {
            line: 389,
            column: 70
          }
        }],
        line: 389
      },
      "52": {
        loc: {
          start: {
            line: 396,
            column: 8
          },
          end: {
            line: 401,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 396,
            column: 8
          },
          end: {
            line: 401,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 396
      },
      "53": {
        loc: {
          start: {
            line: 403,
            column: 8
          },
          end: {
            line: 408,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 403,
            column: 8
          },
          end: {
            line: 408,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 403
      },
      "54": {
        loc: {
          start: {
            line: 410,
            column: 8
          },
          end: {
            line: 415,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 410,
            column: 8
          },
          end: {
            line: 415,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 410
      },
      "55": {
        loc: {
          start: {
            line: 418,
            column: 8
          },
          end: {
            line: 423,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 418,
            column: 8
          },
          end: {
            line: 423,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 418
      },
      "56": {
        loc: {
          start: {
            line: 467,
            column: 105
          },
          end: {
            line: 467,
            column: 156
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 467,
            column: 125
          },
          end: {
            line: 467,
            column: 133
          }
        }, {
          start: {
            line: 467,
            column: 136
          },
          end: {
            line: 467,
            column: 156
          }
        }],
        line: 467
      },
      "57": {
        loc: {
          start: {
            line: 524,
            column: 19
          },
          end: {
            line: 524,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 524,
            column: 44
          },
          end: {
            line: 524,
            column: 57
          }
        }, {
          start: {
            line: 524,
            column: 60
          },
          end: {
            line: 524,
            column: 79
          }
        }],
        line: 524
      },
      "58": {
        loc: {
          start: {
            line: 535,
            column: 8
          },
          end: {
            line: 540,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 535,
            column: 8
          },
          end: {
            line: 540,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 535
      },
      "59": {
        loc: {
          start: {
            line: 535,
            column: 12
          },
          end: {
            line: 535,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 535,
            column: 12
          },
          end: {
            line: 535,
            column: 22
          }
        }, {
          start: {
            line: 535,
            column: 26
          },
          end: {
            line: 535,
            column: 31
          }
        }],
        line: 535
      },
      "60": {
        loc: {
          start: {
            line: 542,
            column: 8
          },
          end: {
            line: 547,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 542,
            column: 8
          },
          end: {
            line: 547,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 542
      },
      "61": {
        loc: {
          start: {
            line: 550,
            column: 8
          },
          end: {
            line: 555,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 550,
            column: 8
          },
          end: {
            line: 555,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 550
      },
      "62": {
        loc: {
          start: {
            line: 557,
            column: 8
          },
          end: {
            line: 563,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 557,
            column: 8
          },
          end: {
            line: 563,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 557
      },
      "63": {
        loc: {
          start: {
            line: 565,
            column: 8
          },
          end: {
            line: 570,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 565,
            column: 8
          },
          end: {
            line: 570,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 565
      },
      "64": {
        loc: {
          start: {
            line: 573,
            column: 8
          },
          end: {
            line: 578,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 573,
            column: 8
          },
          end: {
            line: 578,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 573
      },
      "65": {
        loc: {
          start: {
            line: 582,
            column: 8
          },
          end: {
            line: 609,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 582,
            column: 8
          },
          end: {
            line: 609,
            column: 9
          }
        }, {
          start: {
            line: 603,
            column: 13
          },
          end: {
            line: 609,
            column: 9
          }
        }],
        line: 582
      },
      "66": {
        loc: {
          start: {
            line: 590,
            column: 25
          },
          end: {
            line: 592,
            column: 67
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 591,
            column: 22
          },
          end: {
            line: 591,
            column: 103
          }
        }, {
          start: {
            line: 592,
            column: 22
          },
          end: {
            line: 592,
            column: 67
          }
        }],
        line: 590
      },
      "67": {
        loc: {
          start: {
            line: 598,
            column: 28
          },
          end: {
            line: 598,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 598,
            column: 48
          },
          end: {
            line: 598,
            column: 66
          }
        }, {
          start: {
            line: 598,
            column: 69
          },
          end: {
            line: 598,
            column: 77
          }
        }],
        line: 598
      },
      "68": {
        loc: {
          start: {
            line: 616,
            column: 19
          },
          end: {
            line: 616,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 616,
            column: 44
          },
          end: {
            line: 616,
            column: 57
          }
        }, {
          start: {
            line: 616,
            column: 60
          },
          end: {
            line: 616,
            column: 79
          }
        }],
        line: 616
      },
      "69": {
        loc: {
          start: {
            line: 625,
            column: 8
          },
          end: {
            line: 628,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 625,
            column: 8
          },
          end: {
            line: 628,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 625
      },
      "70": {
        loc: {
          start: {
            line: 632,
            column: 8
          },
          end: {
            line: 645,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 632,
            column: 8
          },
          end: {
            line: 645,
            column: 9
          }
        }, {
          start: {
            line: 635,
            column: 13
          },
          end: {
            line: 645,
            column: 9
          }
        }],
        line: 632
      },
      "71": {
        loc: {
          start: {
            line: 635,
            column: 13
          },
          end: {
            line: 645,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 635,
            column: 13
          },
          end: {
            line: 645,
            column: 9
          }
        }, {
          start: {
            line: 638,
            column: 13
          },
          end: {
            line: 645,
            column: 9
          }
        }],
        line: 635
      },
      "72": {
        loc: {
          start: {
            line: 638,
            column: 13
          },
          end: {
            line: 645,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 638,
            column: 13
          },
          end: {
            line: 645,
            column: 9
          }
        }, {
          start: {
            line: 643,
            column: 13
          },
          end: {
            line: 645,
            column: 9
          }
        }],
        line: 638
      },
      "73": {
        loc: {
          start: {
            line: 734,
            column: 8
          },
          end: {
            line: 736,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 734,
            column: 8
          },
          end: {
            line: 736,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 734
      },
      "74": {
        loc: {
          start: {
            line: 740,
            column: 0
          },
          end: {
            line: 742,
            column: 1
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 740,
            column: 0
          },
          end: {
            line: 742,
            column: 1
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 740
      },
      "75": {
        loc: {
          start: {
            line: 747,
            column: 8
          },
          end: {
            line: 750,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 747,
            column: 8
          },
          end: {
            line: 750,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 747
      },
      "76": {
        loc: {
          start: {
            line: 751,
            column: 8
          },
          end: {
            line: 754,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 751,
            column: 8
          },
          end: {
            line: 754,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 751
      },
      "77": {
        loc: {
          start: {
            line: 757,
            column: 8
          },
          end: {
            line: 760,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 757,
            column: 8
          },
          end: {
            line: 760,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 757
      },
      "78": {
        loc: {
          start: {
            line: 762,
            column: 8
          },
          end: {
            line: 767,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 762,
            column: 8
          },
          end: {
            line: 767,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 762
      },
      "79": {
        loc: {
          start: {
            line: 878,
            column: 8
          },
          end: {
            line: 881,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 878,
            column: 8
          },
          end: {
            line: 881,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 878
      },
      "80": {
        loc: {
          start: {
            line: 878,
            column: 12
          },
          end: {
            line: 878,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 878,
            column: 12
          },
          end: {
            line: 878,
            column: 22
          }
        }, {
          start: {
            line: 878,
            column: 26
          },
          end: {
            line: 878,
            column: 31
          }
        }],
        line: 878
      },
      "81": {
        loc: {
          start: {
            line: 882,
            column: 8
          },
          end: {
            line: 885,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 882,
            column: 8
          },
          end: {
            line: 885,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 882
      },
      "82": {
        loc: {
          start: {
            line: 888,
            column: 8
          },
          end: {
            line: 891,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 888,
            column: 8
          },
          end: {
            line: 891,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 888
      },
      "83": {
        loc: {
          start: {
            line: 893,
            column: 8
          },
          end: {
            line: 898,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 893,
            column: 8
          },
          end: {
            line: 898,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 893
      },
      "84": {
        loc: {
          start: {
            line: 901,
            column: 8
          },
          end: {
            line: 904,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 901,
            column: 8
          },
          end: {
            line: 904,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 901
      },
      "85": {
        loc: {
          start: {
            line: 905,
            column: 8
          },
          end: {
            line: 909,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 905,
            column: 8
          },
          end: {
            line: 909,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 905
      },
      "86": {
        loc: {
          start: {
            line: 910,
            column: 8
          },
          end: {
            line: 913,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 910,
            column: 8
          },
          end: {
            line: 913,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 910
      },
      "87": {
        loc: {
          start: {
            line: 929,
            column: 8
          },
          end: {
            line: 934,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 929,
            column: 8
          },
          end: {
            line: 934,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 929
      },
      "88": {
        loc: {
          start: {
            line: 929,
            column: 12
          },
          end: {
            line: 929,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 929,
            column: 12
          },
          end: {
            line: 929,
            column: 22
          }
        }, {
          start: {
            line: 929,
            column: 26
          },
          end: {
            line: 929,
            column: 31
          }
        }, {
          start: {
            line: 929,
            column: 35
          },
          end: {
            line: 929,
            column: 47
          }
        }],
        line: 929
      },
      "89": {
        loc: {
          start: {
            line: 935,
            column: 8
          },
          end: {
            line: 938,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 935,
            column: 8
          },
          end: {
            line: 938,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 935
      },
      "90": {
        loc: {
          start: {
            line: 939,
            column: 8
          },
          end: {
            line: 944,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 939,
            column: 8
          },
          end: {
            line: 944,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 939
      },
      "91": {
        loc: {
          start: {
            line: 947,
            column: 8
          },
          end: {
            line: 950,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 947,
            column: 8
          },
          end: {
            line: 950,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 947
      },
      "92": {
        loc: {
          start: {
            line: 952,
            column: 8
          },
          end: {
            line: 957,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 952,
            column: 8
          },
          end: {
            line: 957,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 952
      },
      "93": {
        loc: {
          start: {
            line: 960,
            column: 8
          },
          end: {
            line: 963,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 960,
            column: 8
          },
          end: {
            line: 963,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 960
      },
      "94": {
        loc: {
          start: {
            line: 964,
            column: 8
          },
          end: {
            line: 968,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 964,
            column: 8
          },
          end: {
            line: 968,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 964
      },
      "95": {
        loc: {
          start: {
            line: 969,
            column: 8
          },
          end: {
            line: 972,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 969,
            column: 8
          },
          end: {
            line: 972,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 969
      },
      "96": {
        loc: {
          start: {
            line: 981,
            column: 8
          },
          end: {
            line: 984,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 981,
            column: 8
          },
          end: {
            line: 984,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 981
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0,
      "259": 0,
      "260": 0,
      "261": 0,
      "262": 0,
      "263": 0,
      "264": 0,
      "265": 0,
      "266": 0,
      "267": 0,
      "268": 0,
      "269": 0,
      "270": 0,
      "271": 0,
      "272": 0,
      "273": 0,
      "274": 0,
      "275": 0,
      "276": 0,
      "277": 0,
      "278": 0,
      "279": 0,
      "280": 0,
      "281": 0,
      "282": 0,
      "283": 0,
      "284": 0,
      "285": 0,
      "286": 0,
      "287": 0,
      "288": 0,
      "289": 0,
      "290": 0,
      "291": 0,
      "292": 0,
      "293": 0,
      "294": 0,
      "295": 0,
      "296": 0,
      "297": 0,
      "298": 0,
      "299": 0,
      "300": 0,
      "301": 0,
      "302": 0,
      "303": 0,
      "304": 0,
      "305": 0,
      "306": 0,
      "307": 0,
      "308": 0,
      "309": 0,
      "310": 0,
      "311": 0,
      "312": 0,
      "313": 0,
      "314": 0,
      "315": 0,
      "316": 0,
      "317": 0,
      "318": 0,
      "319": 0,
      "320": 0,
      "321": 0,
      "322": 0,
      "323": 0,
      "324": 0,
      "325": 0,
      "326": 0,
      "327": 0,
      "328": 0,
      "329": 0,
      "330": 0,
      "331": 0,
      "332": 0,
      "333": 0,
      "334": 0,
      "335": 0,
      "336": 0,
      "337": 0,
      "338": 0,
      "339": 0,
      "340": 0,
      "341": 0,
      "342": 0,
      "343": 0,
      "344": 0,
      "345": 0,
      "346": 0,
      "347": 0,
      "348": 0,
      "349": 0,
      "350": 0,
      "351": 0,
      "352": 0,
      "353": 0,
      "354": 0,
      "355": 0,
      "356": 0,
      "357": 0,
      "358": 0,
      "359": 0,
      "360": 0,
      "361": 0,
      "362": 0,
      "363": 0,
      "364": 0,
      "365": 0,
      "366": 0,
      "367": 0,
      "368": 0,
      "369": 0,
      "370": 0,
      "371": 0,
      "372": 0,
      "373": 0,
      "374": 0,
      "375": 0,
      "376": 0,
      "377": 0,
      "378": 0,
      "379": 0,
      "380": 0,
      "381": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0, 0, 0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0, 0, 0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0],
      "69": [0, 0],
      "70": [0, 0],
      "71": [0, 0],
      "72": [0, 0],
      "73": [0, 0],
      "74": [0, 0],
      "75": [0, 0],
      "76": [0, 0],
      "77": [0, 0],
      "78": [0, 0],
      "79": [0, 0],
      "80": [0, 0],
      "81": [0, 0],
      "82": [0, 0],
      "83": [0, 0],
      "84": [0, 0],
      "85": [0, 0],
      "86": [0, 0],
      "87": [0, 0],
      "88": [0, 0, 0],
      "89": [0, 0],
      "90": [0, 0],
      "91": [0, 0],
      "92": [0, 0],
      "93": [0, 0],
      "94": [0, 0],
      "95": [0, 0],
      "96": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\controllers\\authController.ts",
      mappings: ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2EA,gDAmEC;AAED,0CAqCC;AApLD,+CAAiC;AACjC,mDAM6B;AAE7B,oDAAoE;AACpE,sCAA2C;AAC3C,4CAA4C;AAC5C,kDAAkD;AAClD,gDAAuC;AAEvC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA0DG;AACH,SAAsB,kBAAkB,CAAC,GAAY,EAAE,GAAa;;QAClE,IAAI,CAAC;YACH,MAAM,EACJ,IAAI,EACJ,QAAQ,EACR,IAAI,EACJ,SAAS,EACT,YAAY,EACZ,MAAM,GACP,GAAqB,GAAG,CAAC,IAAI,CAAC;YAC/B,OAAO,CAAC,GAAG,CACT,qEAAqE,EACrE,GAAG,CAAC,IAAI,CACT,CAAC;YACF,IAAI,CAAC,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,IAAI,CAAC,SAAS,IAAI,CAAC,YAAY,EAAE,CAAC;gBAC/D,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;oBACnB,GAAG,EAAE,8DAA8D;iBACpE,CAAC,CAAC;gBACH,OAAO;YACT,CAAC;YACD,IAAI,CAAC,IAAA,4BAAe,EAAC,YAAY,CAAC,EAAE,CAAC;gBACnC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;oBACnB,GAAG,EAAE,mJAAmJ;iBACzJ,CAAC,CAAC;gBACH,OAAO;YACT,CAAC;YACD,IAAI,CAAC,IAAA,yBAAY,EAAC,SAAS,CAAC,EAAE,CAAC;gBAC7B,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,8BAA8B,EAAE,CAAC,CAAC;gBAC9D,OAAO;YACT,CAAC;YACD,MAAM,IAAI,GAAG,MAAM,MAAM,CAAC,IAAI,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC;YACjD,yCAAyC;YACzC,MAAM,UAAU,GAAG,OAAO,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC;YAC/D,MAAM,KAAK,GAAG,MAAM,IAAA,yBAAa,EAC/B,IAAI,EACJ,QAAQ,EACR,IAAI,EACJ,SAAS,EACT,IAAI,EACJ,UAAU,CACX,CAAC;YACF,IAAI,CAAC,KAAK,EAAE,CAAC;gBACX,MAAM,KAAK,GAAG,IAAA,iBAAW,EAAC,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;gBAC3D,MAAM,IAAI,GAAG,MAAM,IAAA,+BAAmB,EAAC,SAAS,CAAC,CAAC;gBAClD,GAAG;qBACA,MAAM,CAAC,GAAG,CAAC;qBACX,IAAI,CAAC,EAAE,GAAG,EAAE,+BAA+B,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;gBAC/D,OAAO;YACT,CAAC;iBAAM,IAAI,KAAK,KAAK,qCAAqC,EAAE,CAAC;gBAC3D,GAAG;qBACA,MAAM,CAAC,GAAG,CAAC;qBACX,IAAI,CAAC,EAAE,GAAG,EAAE,qCAAqC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC;gBACrE,OAAO;YACT,CAAC;iBAAM,IAAI,KAAK,KAAK,uBAAuB,EAAE,CAAC;gBAC7C,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;oBACnB,GAAG,EAAE,6DAA6D;oBAClE,IAAI,EAAE,KAAK;iBACZ,CAAC,CAAC;gBACH,OAAO;YACT,CAAC;QACH,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,IAAI,CACV,yFAAyF,KAAK,EAAE,CACjG,CAAC;YACF,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,uBAAuB,EAAE,KAAK,EAAE,CAAC,CAAC;YAC9D,OAAO;QACT,CAAC;IACH,CAAC;CAAA;AAED,SAAsB,eAAe,CAAC,GAAY,EAAE,GAAa;;QAC/D,IAAI,CAAC;YACH,MAAM,EAAE,SAAS,EAAE,YAAY,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC;YAC7C,IAAI,CAAC,SAAS,IAAI,CAAC,YAAY,EAAE,CAAC;gBAChC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,yCAAyC,EAAE,CAAC,CAAC;gBACzE,OAAO;YACT,CAAC;YACD,IAAI,CAAC,IAAA,yBAAY,EAAC,SAAS,CAAC,EAAE,CAAC;gBAC7B,GAAG;qBACA,MAAM,CAAC,GAAG,CAAC;qBACX,IAAI,CAAC,EAAE,GAAG,EAAE,4CAA4C,EAAE,CAAC,CAAC;gBAC/D,OAAO;YACT,CAAC;YACD,MAAM,IAAI,GAAG,MAAM,IAAA,+BAAmB,EAAC,SAAS,CAAC,CAAC;YAClD,IAAI,CAAC,IAAI,EAAE,CAAC;gBACV,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;oBACnB,GAAG,EAAE,mFAAmF;iBACzF,CAAC,CAAC;gBACH,OAAO;YACT,CAAC;YACD,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;YACvB,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YAC/B,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;YACvB,MAAM,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC;YAC/B,MAAM,OAAO,GAAG,MAAM,MAAM,CAAC,OAAO,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;YACzD,IAAI,CAAC,OAAO,EAAE,CAAC;gBACb,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,wBAAwB,EAAE,CAAC,CAAC;gBACxD,OAAO;YACT,CAAC;YACD,MAAM,KAAK,GAAG,IAAA,iBAAW,EAAC,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;YAC3D,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,eAAe,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;QACpE,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,GAAG;iBACA,MAAM,CAAC,GAAG,CAAC;iBACX,IAAI,CAAC,EAAE,GAAG,EAAE,4CAA4C,EAAE,KAAK,EAAE,CAAC,CAAC;YACtE,OAAO;QACT,CAAC;IACH,CAAC;CAAA;AAEM,MAAM,2BAA2B,GAAG,CACzC,GAAY,EACZ,GAAa,EACb,EAAE;IACF,IAAI,CAAC;QACH,MAAM,SAAS,GAAG,GAAG,CAAC,IAAI,CAAC;QAC3B,MAAM,SAAS,GAAG,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,iBAAiB,EAAE,CAAC;QAC3D,IAAI,CAAC,SAAS,IAAI,CAAC,SAAS,EAAE,CAAC;YAC7B,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,8BAA8B,EAAE,CAAC,CAAC;QAChE,CAAC;QACD,IAAI,CAAC,IAAA,yBAAY,EAAC,SAAS,CAAC,EAAE,CAAC;YAC7B,GAAG;iBACA,MAAM,CAAC,GAAG,CAAC;iBACX,IAAI,CAAC,EAAE,GAAG,EAAE,4CAA4C,EAAE,CAAC,CAAC;YAC/D,OAAO;QACT,CAAC;QACD,yCAAyC;QACzC,IAAI,OAAO,SAAS,CAAC,MAAM,KAAK,SAAS,EAAE,CAAC;YAC1C,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC;QAC1B,CAAC;QACD,MAAM,gBAAgB,GAAG,MAAM,IAAA,kCAAsB,EAAC,SAAS,EAAE,SAAS,CAAC,CAAC;QAC5E,IAAI,gBAAgB,EAAE,CAAC;YACrB,OAAO,CAAC,IAAI,CAAC,qCAAqC,CAAC,CAAC;YACpD,OAAO,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;YAC/B,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,gBAAgB,EAAE,CAAC,CAAC;QAClD,CAAC;QACD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,kBAAkB,EAAE,CAAC,CAAC;IACpD,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,IAAI,CAAC,gCAAgC,CAAC,CAAC;QAC/C,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,iCAAiC,EAAE,CAAC,CAAC;IACnE,CAAC;AACH,CAAC,CAAA,CAAC;AA/BW,QAAA,2BAA2B,+BA+BtC;AAEK,MAAM,uBAAuB,GAAG,CAAO,GAAY,EAAE,GAAa,EAAE,EAAE;IAC3E,MAAM,SAAS,GAAG,IAAA,wBAAY,GAAE,CAAC,QAAQ,EAAE,CAAC;IAC5C,MAAM,QAAQ,GAAG,MAAM,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;IAClD,MAAM,IAAI,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBA+BK,SAAS;;;;;;;;;;;;;;;;;;;;;;;UAuBnB,CAAC;IACT,IAAI,CAAC;QACH,MAAM,SAAS,GAAG,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,iBAAiB,EAAE,CAAC;QACzD,IAAI,CAAC,SAAS,EAAE,CAAC;YACf,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,yCAAyC,EAAE,CAAC,CAAC;YACzE,OAAO;QACT,CAAC;QACD,IAAI,CAAC,IAAA,yBAAY,EAAC,SAAS,CAAC,EAAE,CAAC;YAC7B,GAAG;iBACA,MAAM,CAAC,GAAG,CAAC;iBACX,IAAI,CAAC,EAAE,GAAG,EAAE,4CAA4C,EAAE,CAAC,CAAC;YAC/D,OAAO;QACT,CAAC;QACD,MAAM,aAAa,GAAG,MAAM,aAAE;aAC3B,UAAU,CAAC,OAAO,CAAC;aACnB,KAAK,CAAC,WAAW,EAAE,IAAI,EAAE,SAAS,CAAC;aACnC,GAAG,EAAE,CAAC;QACT,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;YACzB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;gBACnB,GAAG,EAAE,6DAA6D;aACnE,CAAC,CAAC;YACH,OAAO;QACT,CAAC;aAAM,CAAC;YACN,MAAM,IAAA,kBAAS,EAAC,SAAS,EAAE,+BAA+B,EAAE,IAAI,CAAC,CAAC;YAClE,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,2BAA2B,EAAE,QAAQ,EAAE,CAAC,CAAC;QACvE,CAAC;IACH,CAAC;IAAC,OAAO,GAAG,EAAE,CAAC;QACb,GAAG;aACA,MAAM,CAAC,GAAG,CAAC;aACX,IAAI,CAAC,EAAE,GAAG,EAAE,oDAAoD,EAAE,GAAG,EAAE,CAAC,CAAC;QAC5E,OAAO;IACT,CAAC;AACH,CAAC,CAAA,CAAC;AAzFW,QAAA,uBAAuB,2BAyFlC;AAEK,MAAM,qBAAqB,GAAG,CAAO,GAAY,EAAE,GAAa,EAAE,EAAE;IACzE,IAAI,CAAC;QACH,MAAM,OAAO,GAAG,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;QAChD,MAAM,QAAQ,GAAG,GAAG,CAAC,MAAM,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;QACnD,IAAI,OAAO,KAAK,EAAE,IAAI,QAAQ,KAAK,EAAE,EAAE,CAAC;YACtC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,0BAA0B,EAAE,CAAC,CAAC;YAC1D,OAAO;QACT,CAAC;QACD,MAAM,OAAO,GAAG,MAAM,MAAM,CAAC,OAAO,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;QACxD,IAAI,CAAC,OAAO,EAAE,CAAC;YACb,OAAO,CAAC,IAAI,CAAC,gBAAgB,OAAO,IAAI,QAAQ,GAAG,CAAC,CAAC;YACrD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,oBAAoB,EAAE,CAAC,CAAC;YACpD,OAAO;QACT,CAAC;QACD,OAAO,CAAC,IAAI,CAAC,oBAAoB,OAAO,EAAE,CAAC,CAAC;QAC5C,OAAO,CAAC,IAAI,CAAC,0BAA0B,QAAQ,EAAE,CAAC,CAAC;QACnD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,aAAa,EAAE,CAAC,CAAC;IAC/C,CAAC;IAAC,OAAO,GAAG,EAAE,CAAC;QACb,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,mBAAmB,EAAE,CAAC,CAAC;IACrD,CAAC;AACH,CAAC,CAAA,CAAC;AApBW,QAAA,qBAAqB,yBAoBhC;AAEK,MAAM,wBAAwB,GAAG,CAAO,GAAY,EAAE,GAAa,EAAE,EAAE;IAC5E,IAAI,CAAC;QACH,MAAM,IAAI,GAAI,GAAW,CAAC,IAAI,CAAC;QAC/B,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC;YAC7B,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,yBAAyB,EAAE,CAAC,CAAC;YACzD,OAAO;QACT,CAAC;QACD,MAAM,SAAS,GAAG,GAAG,CAAC,IAAI,CAAC;QAC3B,IAAI,CAAC,SAAS,EAAE,CAAC;YACf,GAAG;iBACA,MAAM,CAAC,GAAG,CAAC;iBACX,IAAI,CAAC,EAAE,GAAG,EAAE,2CAA2C,EAAE,CAAC,CAAC;YAC9D,OAAO;QACT,CAAC;QACD,MAAM,MAAM,GAAG,MAAM,IAAA,+BAAmB,EAAC,IAAI,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;QACpE,IAAI,CAAC,MAAM,EAAE,CAAC;YACZ,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,+BAA+B,EAAE,CAAC,CAAC;QACjE,CAAC;aAAM,CAAC;YACN,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,CAAC;QACxC,CAAC;IACH,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,6BAA6B,EAAE,KAAK,EAAE,CAAC,CAAC;IACtE,CAAC;AACH,CAAC,CAAA,CAAC;AAvBW,QAAA,wBAAwB,4BAuBnC;AAEF,yFAAyF;AAClF,MAAM,kCAAkC,GAAG,CAChD,GAAY,EACZ,GAAa,EACb,EAAE;IACF,IAAI,CAAC;QACH,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,YAAY,EAAE,IAAI,EAAE,GAMnD,GAAG,CAAC,IAAI,CAAC;QAEb,OAAO,CAAC,GAAG,CACT,6EAA6E,EAC7E,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,IAAI,EAAE,CACpC,CAAC;QAEF,4BAA4B;QAC5B,IAAI,CAAC,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC,SAAS,IAAI,CAAC,YAAY,IAAI,CAAC,IAAI,EAAE,CAAC;YAC/D,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;gBAC1B,OAAO,EAAE,KAAK;gBACd,OAAO,EAAE,gFAAgF;aAC1F,CAAC,CAAC;QACL,CAAC;QAED,gBAAgB;QAChB,IAAI,CAAC,IAAA,yBAAY,EAAC,SAAS,CAAC,EAAE,CAAC;YAC7B,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;gBAC1B,OAAO,EAAE,KAAK;gBACd,OAAO,EAAE,mCAAmC;aAC7C,CAAC,CAAC;QACL,CAAC;QAED,qBAAqB;QACrB,IAAI,CAAC,IAAA,4BAAe,EAAC,YAAY,CAAC,EAAE,CAAC;YACnC,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;gBAC1B,OAAO,EAAE,KAAK;gBACd,OAAO,EAAE,qFAAqF;aAC/F,CAAC,CAAC;QACL,CAAC;QAED,cAAc;QACd,IAAI,CAAC,CAAC,QAAQ,EAAE,cAAc,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC;YAC/C,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;gBAC1B,OAAO,EAAE,KAAK;gBACd,OAAO,EAAE,2CAA2C;aACrD,CAAC,CAAC;QACL,CAAC;QAED,oCAAoC;QACpC,MAAM,YAAY,GAAG,MAAM,IAAA,+BAAmB,EAAC,SAAS,CAAC,CAAC;QAC1D,IAAI,YAAY,EAAE,CAAC;YACjB,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;gBAC1B,OAAO,EAAE,KAAK;gBACd,OAAO,EAAE,qCAAqC;aAC/C,CAAC,CAAC;QACL,CAAC;QAED,iCAAiC;QACjC,MAAM,gBAAgB,GAAG,IAAA,wBAAY,GAAE,CAAC,QAAQ,EAAE,CAAC;QACnD,MAAM,UAAU,GAAG,MAAM,MAAM,CAAC,IAAI,CAAC,gBAAgB,EAAE,EAAE,CAAC,CAAC;QAE3D,4FAA4F;QAC5F,MAAM,YAAY,GAAG;YACnB,IAAI;YACJ,QAAQ;YACR,SAAS,EAAE,SAAS,CAAC,WAAW,EAAE;YAClC,YAAY;YACZ,IAAI;YACJ,gBAAgB,EAAE,UAAU;YAC5B,SAAS,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,EAAE,aAAa;SACtD,CAAC;QAEF,yDAAyD;QACzD,iBAAiB,CAAC,GAAG,CAAC,SAAS,CAAC,WAAW,EAAE,EAAE;YAC7C,IAAI,EAAE,gBAAgB;YACtB,QAAQ,EAAE,YAAY;YACtB,SAAS,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI;SACvC,CAAC,CAAC;QAEH,+BAA+B;QAC/B,MAAM,IAAI,GAAG;;;;;;;;;;;;;;;;;;;;;;;yGAuBwF,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,oBAAoB;;;;;;;;sBAQtI,gBAAgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YA+B1B,CAAC;QAET,MAAM,IAAA,kBAAS,EAAC,SAAS,EAAE,+BAA+B,EAAE,IAAI,CAAC,CAAC;QAElE,OAAO,CAAC,GAAG,CACT,wEAAwE,EACxE,SAAS,CACV,CAAC;QAEF,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;YAC1B,OAAO,EAAE,IAAI;YACb,OAAO,EAAE,2EAA2E;YACpF,IAAI,EAAE;gBACJ,SAAS;gBACT,IAAI;gBACJ,SAAS,EAAE,YAAY;aACxB;SACF,CAAC,CAAC;IACL,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,KAAK,CACX,sFAAsF,EACtF,KAAK,CACN,CAAC;QACF,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;YAC1B,OAAO,EAAE,KAAK;YACd,OAAO,EAAE,4BAA4B;YACrC,KAAK,EAAE,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,mBAAmB;SACpE,CAAC,CAAC;IACL,CAAC;AACH,CAAC,CAAA,CAAC;AA7KW,QAAA,kCAAkC,sCA6K7C;AAEF,yDAAyD;AAClD,MAAM,uCAAuC,GAAG,CACrD,GAAY,EACZ,GAAa,EACb,EAAE;IACF,IAAI,CAAC;QACH,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAGrB,GAAG,CAAC,IAAI,CAAC;QAEb,OAAO,CAAC,GAAG,CACT,0EAA0E,EAC1E,EAAE,SAAS,EAAE,IAAI,EAAE,CACpB,CAAC;QAEF,4BAA4B;QAC5B,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,EAAE,CAAC;YACxB,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;gBAC1B,OAAO,EAAE,KAAK;gBACd,OAAO,EAAE,+BAA+B;aACzC,CAAC,CAAC;QACL,CAAC;QAED,gBAAgB;QAChB,IAAI,CAAC,IAAA,yBAAY,EAAC,SAAS,CAAC,EAAE,CAAC;YAC7B,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;gBAC1B,OAAO,EAAE,KAAK;gBACd,OAAO,EAAE,gBAAgB;aAC1B,CAAC,CAAC;QACL,CAAC;QAED,0BAA0B;QAC1B,MAAM,UAAU,GAAG,iBAAiB,CAAC,GAAG,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC;QAClE,IAAI,CAAC,UAAU,EAAE,CAAC;YAChB,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;gBAC1B,OAAO,EAAE,KAAK;gBACd,OAAO,EAAE,iCAAiC;aAC3C,CAAC,CAAC;QACL,CAAC;QAED,uBAAuB;QACvB,IAAI,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC;YACtC,iBAAiB,CAAC,MAAM,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC;YAClD,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;gBAC1B,OAAO,EAAE,KAAK;gBACd,OAAO,EAAE,iBAAiB;aAC3B,CAAC,CAAC;QACL,CAAC;QAED,8CAA8C;QAC9C,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;YACzB,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;gBAC1B,OAAO,EAAE,KAAK;gBACd,OAAO,EAAE,kCAAkC;aAC5C,CAAC,CAAC;QACL,CAAC;QAED,mBAAmB;QACnB,MAAM,WAAW,GAAG,MAAM,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,UAAU,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC;QACrF,IAAI,CAAC,WAAW,EAAE,CAAC;YACjB,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;gBAC1B,OAAO,EAAE,KAAK;gBACd,OAAO,EAAE,iBAAiB;aAC3B,CAAC,CAAC;QACL,CAAC;QAED,wCAAwC;QACxC,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,YAAY,EAAE,IAAI,EAAE,GAAG,UAAU,CAAC,QAAQ,CAAC;QACnE,MAAM,MAAM,GAAG,MAAM,IAAA,yBAAa,EAAC,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,SAAS,EAAE,YAAY,EAAE,IAAI,CAAC,CAAC;QAExF,IAAI,MAAM,KAAK,KAAK,EAAE,CAAC;YACrB,2BAA2B;YAC3B,iBAAiB,CAAC,MAAM,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC;YAElD,oBAAoB;YACpB,MAAM,KAAK,GAAG,IAAA,iBAAW,EAAC,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;YAE3D,OAAO,CAAC,GAAG,CACT,0EAA0E,EAC1E,SAAS,CACV,CAAC;YAEF,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;gBAC1B,OAAO,EAAE,IAAI;gBACb,OAAO,EAAE,IAAI,KAAK,QAAQ;oBACxB,CAAC,CAAC,iFAAiF;oBACnF,CAAC,CAAC,6CAA6C;gBACjD,IAAI,EAAE;oBACJ,SAAS;oBACT,IAAI;oBACJ,QAAQ;oBACR,IAAI;oBACJ,MAAM,EAAE,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC,QAAQ;oBACzD,KAAK;iBACN;aACF,CAAC,CAAC;QACL,CAAC;aAAM,CAAC;YACN,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;gBAC1B,OAAO,EAAE,KAAK;gBACd,OAAO,EAAE,+BAA+B;gBACxC,KAAK,EAAE,MAAM;aACd,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,KAAK,CACX,2FAA2F,EAC3F,KAAK,CACN,CAAC;QACF,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;YAC1B,OAAO,EAAE,KAAK;YACd,OAAO,EAAE,4BAA4B;YACrC,KAAK,EAAE,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,mBAAmB;SACpE,CAAC,CAAC;IACL,CAAC;AACH,CAAC,CAAA,CAAC;AAlHW,QAAA,uCAAuC,2CAkHlD;AAEK,MAAM,2BAA2B,GAAG,CACzC,GAAY,EACZ,GAAa,EACb,EAAE;IACF,IAAI,CAAC;QACH,MAAM,EAAE,SAAS,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC;QAC/B,OAAO,CAAC,GAAG,CACT,sEAAsE,EACtE,SAAS,CACV,CAAC,CAAC,oBAAoB;QACvB,IAAI,CAAC,SAAS,EAAE,CAAC;YACf,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,gBAAgB,EAAE,CAAC,CAAC;YACpD,OAAO;QACT,CAAC;QACD,MAAM,MAAM,GAAG,MAAM,IAAA,kCAAsB,EAAC,SAAS,CAAC,CAAC;QACvD,OAAO,CAAC,GAAG,CACT,8EAA8E,EAC9E,MAAM,CACP,CAAC;QACF,OAAO,CAAC,GAAG,CACT,uFAAuF,EACvF,MAAM,CACP,CAAC,CAAC,oBAAoB;QACvB,IAAI,MAAM,KAAK,KAAK,EAAE,CAAC;YACrB,GAAG,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,iCAAiC,EAAE,CAAC,CAAC;QAC3D,CAAC;aAAM,IAAI,MAAM,KAAK,gBAAgB,EAAE,CAAC;YACvC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,gBAAgB,EAAE,CAAC,CAAC;QACtD,CAAC;aAAM,IAAI,MAAM,KAAK,WAAW,EAAE,CAAC;YAClC,GAAG;iBACA,MAAM,CAAC,GAAG,CAAC;iBACX,IAAI,CAAC,EAAE,OAAO,EAAE,yCAAyC,EAAE,CAAC,CAAC;QAClE,CAAC;aAAM,CAAC;YACN,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC,CAAC;QAC5C,CAAC;IACH,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,GAAG,CACT,8EAA8E,CAC/E,CAAC;QACF,OAAO,CAAC,KAAK,CACX,6EAA6E,EAC7E,KAAK,CACN,CAAC,CAAC,eAAe;QAClB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;YACnB,OAAO,EAAE,2BAA2B;YACpC,KAAK,EAAG,KAAe,CAAC,OAAO;SAChC,CAAC,CAAC;IACL,CAAC;AACH,CAAC,CAAA,CAAC;AA/CW,QAAA,2BAA2B,+BA+CtC;AAEF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAkEG;AAEH,2EAA2E;AAC3E,MAAM,iBAAiB,GAAG,IAAI,GAAG,EAe9B,CAAC;AAEJ,8CAA8C;AAC9C,SAAS,wBAAwB;IAC/B,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,MAAM,CAAC,CAAC,QAAQ,EAAE,CAAC;AAChE,CAAC;AAED,yCAAyC;AACzC,SAAS,mBAAmB;IAC1B,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;IACvB,KAAK,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,iBAAiB,CAAC,OAAO,EAAE,EAAE,CAAC;QACxD,IAAI,IAAI,CAAC,SAAS,GAAG,GAAG,EAAE,CAAC;YACzB,iBAAiB,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAClC,CAAC;IACH,CAAC;AACH,CAAC;AAED,sDAAsD;AACtD,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,EAAE,CAAC;IAC1C,WAAW,CAAC,mBAAmB,EAAE,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC;AAClD,CAAC;AAED,yDAAyD;AAClD,MAAM,wBAAwB,GAAG,CAAO,GAAY,EAAE,GAAa,EAAE,EAAE;IAC5E,IAAI,CAAC;QACH,MAAM,EAAE,SAAS,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC;QAE/B,IAAI,CAAC,SAAS,EAAE,CAAC;YACf,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,oBAAoB,EAAE,CAAC,CAAC;YACpD,OAAO;QACT,CAAC;QAED,IAAI,CAAC,IAAA,yBAAY,EAAC,SAAS,CAAC,EAAE,CAAC;YAC7B,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,gBAAgB,EAAE,CAAC,CAAC;YAChD,OAAO;QACT,CAAC;QAED,iBAAiB;QACjB,MAAM,IAAI,GAAG,MAAM,IAAA,+BAAmB,EAAC,SAAS,CAAC,CAAC;QAClD,IAAI,CAAC,IAAI,EAAE,CAAC;YACV,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,uBAAuB,EAAE,CAAC,CAAC;YACvD,OAAO;QACT,CAAC;QAED,+BAA+B;QAC/B,IAAI,IAAI,CAAC,IAAI,KAAK,YAAY,EAAE,CAAC;YAC/B,GAAG;iBACA,MAAM,CAAC,GAAG,CAAC;iBACX,IAAI,CAAC,EAAE,GAAG,EAAE,4CAA4C,EAAE,CAAC,CAAC;YAC/D,OAAO;QACT,CAAC;QAED,iCAAiC;QACjC,MAAM,gBAAgB,GAAG,wBAAwB,EAAE,CAAC;QACpD,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC,aAAa;QAE5D,+BAA+B;QAC/B,iBAAiB,CAAC,GAAG,CAAC,SAAS,CAAC,WAAW,EAAE,EAAE;YAC7C,IAAI,EAAE,gBAAgB;YACtB,SAAS;SACV,CAAC,CAAC;QAEH,0BAA0B;QAC1B,MAAM,IAAI,GAAG;;;;;;;;;;;;;;;;;;;;;;;iFAuBgE,IAAI,CAAC,IAAI;;;;;;;;sBAQpE,gBAAgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YA+C1B,CAAC;QAET,IAAI,CAAC;YACH,MAAM,IAAA,kBAAS,EAAC,SAAS,EAAE,gCAAgC,EAAE,IAAI,CAAC,CAAC;YAEnE,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;gBACnB,GAAG,EAAE,yCAAyC;gBAC9C,SAAS,EAAE,SAAS;aACrB,CAAC,CAAC;QACL,CAAC;QAAC,OAAO,UAAU,EAAE,CAAC;YACpB,OAAO,CAAC,KAAK,CAAC,wBAAwB,EAAE,UAAU,CAAC,CAAC;YACpD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,uCAAuC,EAAE,CAAC,CAAC;QACzE,CAAC;IACH,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,KAAK,CAAC,oCAAoC,EAAE,KAAK,CAAC,CAAC;QAC3D,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,4BAA4B,EAAE,CAAC,CAAC;IAC9D,CAAC;AACH,CAAC,CAAA,CAAC;AAvIW,QAAA,wBAAwB,4BAuInC;AAEF,mCAAmC;AAC5B,MAAM,oBAAoB,GAAG,CAAO,GAAY,EAAE,GAAa,EAAE,EAAE;IACxE,IAAI,CAAC;QACH,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC;QAErC,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,EAAE,CAAC;YACxB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,+BAA+B,EAAE,CAAC,CAAC;YAC/D,OAAO;QACT,CAAC;QAED,IAAI,CAAC,IAAA,yBAAY,EAAC,SAAS,CAAC,EAAE,CAAC;YAC7B,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,gBAAgB,EAAE,CAAC,CAAC;YAChD,OAAO;QACT,CAAC;QAED,iBAAiB;QACjB,MAAM,IAAI,GAAG,MAAM,IAAA,+BAAmB,EAAC,SAAS,CAAC,CAAC;QAClD,IAAI,CAAC,IAAI,EAAE,CAAC;YACV,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,uBAAuB,EAAE,CAAC,CAAC;YACvD,OAAO;QACT,CAAC;QAED,+BAA+B;QAC/B,IAAI,IAAI,CAAC,IAAI,KAAK,YAAY,EAAE,CAAC;YAC/B,GAAG;iBACA,MAAM,CAAC,GAAG,CAAC;iBACX,IAAI,CAAC,EAAE,GAAG,EAAE,4CAA4C,EAAE,CAAC,CAAC;YAC/D,OAAO;QACT,CAAC;QAED,mBAAmB;QACnB,MAAM,UAAU,GAAG,iBAAiB,CAAC,GAAG,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC;QAClE,IAAI,CAAC,UAAU,EAAE,CAAC;YAChB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,iCAAiC,EAAE,CAAC,CAAC;YACjE,OAAO;QACT,CAAC;QAED,IAAI,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC;YACtC,iBAAiB,CAAC,MAAM,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC;YAClD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,iBAAiB,EAAE,CAAC,CAAC;YACjD,OAAO;QACT,CAAC;QAED,IAAI,UAAU,CAAC,IAAI,KAAK,IAAI,EAAE,CAAC;YAC7B,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,iBAAiB,EAAE,CAAC,CAAC;YACjD,OAAO;QACT,CAAC;QAED,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;YACnB,GAAG,EAAE,iCAAiC;YACtC,SAAS,EAAE,SAAS;SACrB,CAAC,CAAC;IACL,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,KAAK,CAAC,gCAAgC,EAAE,KAAK,CAAC,CAAC;QACvD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,4BAA4B,EAAE,CAAC,CAAC;IAC9D,CAAC;AACH,CAAC,CAAA,CAAC;AAvDW,QAAA,oBAAoB,wBAuD/B;AAEF,yBAAyB;AAClB,MAAM,uBAAuB,GAAG,CAAO,GAAY,EAAE,GAAa,EAAE,EAAE;IAC3E,IAAI,CAAC;QACH,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,WAAW,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC;QAElD,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,IAAI,CAAC,WAAW,EAAE,CAAC;YACxC,GAAG;iBACA,MAAM,CAAC,GAAG,CAAC;iBACX,IAAI,CAAC,EAAE,GAAG,EAAE,iDAAiD,EAAE,CAAC,CAAC;YACpE,OAAO;QACT,CAAC;QAED,IAAI,CAAC,IAAA,yBAAY,EAAC,SAAS,CAAC,EAAE,CAAC;YAC7B,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,gBAAgB,EAAE,CAAC,CAAC;YAChD,OAAO;QACT,CAAC;QAED,IAAI,CAAC,IAAA,4BAAe,EAAC,WAAW,CAAC,EAAE,CAAC;YAClC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;gBACnB,GAAG,EAAE,sHAAsH;aAC5H,CAAC,CAAC;YACH,OAAO;QACT,CAAC;QAED,iBAAiB;QACjB,MAAM,IAAI,GAAG,MAAM,IAAA,+BAAmB,EAAC,SAAS,CAAC,CAAC;QAClD,IAAI,CAAC,IAAI,EAAE,CAAC;YACV,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,uBAAuB,EAAE,CAAC,CAAC;YACvD,OAAO;QACT,CAAC;QAED,+BAA+B;QAC/B,IAAI,IAAI,CAAC,IAAI,KAAK,YAAY,EAAE,CAAC;YAC/B,GAAG;iBACA,MAAM,CAAC,GAAG,CAAC;iBACX,IAAI,CAAC,EAAE,GAAG,EAAE,4CAA4C,EAAE,CAAC,CAAC;YAC/D,OAAO;QACT,CAAC;QAED,mBAAmB;QACnB,MAAM,UAAU,GAAG,iBAAiB,CAAC,GAAG,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC;QAClE,IAAI,CAAC,UAAU,EAAE,CAAC;YAChB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,iCAAiC,EAAE,CAAC,CAAC;YACjE,OAAO;QACT,CAAC;QAED,IAAI,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC;YACtC,iBAAiB,CAAC,MAAM,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC;YAClD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,iBAAiB,EAAE,CAAC,CAAC;YACjD,OAAO;QACT,CAAC;QAED,IAAI,UAAU,CAAC,IAAI,KAAK,IAAI,EAAE,CAAC;YAC7B,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,iBAAiB,EAAE,CAAC,CAAC;YACjD,OAAO;QACT,CAAC;QAED,2BAA2B;QAC3B,MAAM,cAAc,GAAG,MAAM,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;QAE1D,4CAA4C;QAC5C,MAAM,UAAU,GAAG;YACjB,YAAY,EAAE,cAAc;YAC5B,SAAS,EAAE,IAAI,IAAI,EAAE,CAAC,QAAQ,EAAE;SACjC,CAAC;QAEF,MAAM,YAAY,GAAG,MAAM,IAAA,kCAAsB,EAAC,SAAS,EAAE,UAAU,CAAC,CAAC;QACzE,IAAI,YAAY,EAAE,CAAC;YACjB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,YAAY,EAAE,CAAC,CAAC;YAC5C,OAAO;QACT,CAAC;QAED,wBAAwB;QACxB,iBAAiB,CAAC,MAAM,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC;QAElD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;YACnB,GAAG,EAAE,sCAAsC;YAC3C,SAAS,EAAE,SAAS;SACrB,CAAC,CAAC;IACL,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,KAAK,CAAC,mCAAmC,EAAE,KAAK,CAAC,CAAC;QAC1D,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,4BAA4B,EAAE,CAAC,CAAC;IAC9D,CAAC;AACH,CAAC,CAAA,CAAC;AAlFW,QAAA,uBAAuB,2BAkFlC",
      names: [],
      sources: ["C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\controllers\\authController.ts"],
      sourcesContent: ["import { Request, Response } from 'express';\nimport * as bcrypt from 'bcrypt';\nimport {\n  getUserByEmailModel,\n  registerModel,\n  updateUserByEmailModel,\n  addEventToUserModel,\n  deleteUserByEmailModel,\n} from '../models/authModel';\nimport { authUserRegister } from '../utils/DataTypes';\nimport { validarEmail, validarPassword } from '../utils/validatios';\nimport { createToken } from '../utils/jwt';\nimport { sendEmail } from '../utils/mailer';\nimport { numberRandon } from '../utils/functions';\nimport { db } from '../utils/firebase';\n\n/**\n * @swagger\n * components:\n *   schemas:\n *     AuthUserRegister:\n *       type: object\n *       properties:\n *         name:\n *           type: string\n *         lastName:\n *           type: string\n *         roll:\n *           type: string\n *         userEmail:\n *           type: string\n *         userPassword:\n *           type: string\n *     Event:\n *       type: object\n *       properties:\n *         id:\n *           type: integer\n *         user:\n *           type: string\n *         eventName:\n *           type: string\n *         requesterName:\n *           type: string\n *         location:\n *           type: string\n *         date:\n *           type: string\n *         time:\n *           type: string\n *         duration:\n *           type: string\n *         instrument:\n *           type: string\n *         bringInstrument:\n *           type: boolean\n *         comment:\n *           type: string\n *         budget:\n *           type: string\n *         eventType:\n *           type: string\n *         flyerUrl:\n *           type: string\n *         songs:\n *           type: array\n *           items:\n *             type: string\n *         recommendations:\n *           type: array\n *           items:\n *             type: string\n *         mapsLink:\n *           type: string\n */\nexport async function registerController(req: Request, res: Response) {\n  try {\n    const {\n      name,\n      lastName,\n      roll,\n      userEmail,\n      userPassword,\n      status,\n    }: authUserRegister = req.body;\n    console.log(\n      '[src/controllers/authController.ts:72] Datos de registro recibidos:',\n      req.body\n    );\n    if (!name || !lastName || !roll || !userEmail || !userPassword) {\n      res.status(400).json({\n        msg: 'Error al registrarse, todos los campos deben de ser llenados',\n      });\n      return;\n    }\n    if (!validarPassword(userPassword)) {\n      res.status(400).json({\n        msg: 'La contrase\xF1a no cumple con los requisitos, debe de contener May\xFAsculas, Min\xFAsculas, N\xFAmeros y Car\xE1cteres especiales \\n\\n\\nEjemplo: Tunombre*55 .',\n      });\n      return;\n    }\n    if (!validarEmail(userEmail)) {\n      res.status(400).json({ msg: 'Correo Electr\xF3nico inv\xE1lido.' });\n      return;\n    }\n    const pass = await bcrypt.hash(userPassword, 10);\n    // status por defecto true si no se env\xEDa\n    const userStatus = typeof status === 'boolean' ? status : true;\n    const saved = await registerModel(\n      name,\n      lastName,\n      roll,\n      userEmail,\n      pass,\n      userStatus\n    );\n    if (!saved) {\n      const token = createToken(name, lastName, userEmail, roll);\n      const user = await getUserByEmailModel(userEmail);\n      res\n        .status(200)\n        .json({ msg: 'Usuario Registrado con \xE9xito.', token, user });\n      return;\n    } else if (saved === 'Hay campos que no han sido llenados') {\n      res\n        .status(409)\n        .json({ msg: 'Hay campos que no han sido llenados', data: saved });\n      return;\n    } else if (saved === 'El usuario ya Existe.') {\n      res.status(409).json({\n        msg: 'Ya hay un usuario con esta direccion de correo electr\xF3nico.',\n        data: saved,\n      });\n      return;\n    }\n  } catch (error) {\n    console.info(\n      `[src/controllers/authController.ts:95] Hubo un error al intentar registar un Usuario: ${error}`\n    );\n    res.status(400).json({ msg: 'Error al registrarse.', error });\n    return;\n  }\n}\n\nexport async function loginController(req: Request, res: Response) {\n  try {\n    const { userEmail, userPassword } = req.body;\n    if (!userEmail || !userPassword) {\n      res.status(400).json({ msg: 'Todos los campos deben de ser llenados.' });\n      return;\n    }\n    if (!validarEmail(userEmail)) {\n      res\n        .status(400)\n        .json({ msg: 'Direcci\xF3n de correo electr\xF3nico no v\xE1lido.' });\n      return;\n    }\n    const data = await getUserByEmailModel(userEmail);\n    if (!data) {\n      res.status(401).json({\n        msg: 'Verifique su direcci\xF3n de correo electr\xF3nico o reg\xEDstrese si no tiene una cuenta.',\n      });\n      return;\n    }\n    const name = data.name;\n    const lastName = data.lastName;\n    const roll = data.roll;\n    const pass = data.userPassword;\n    const isMatch = await bcrypt.compare(userPassword, pass);\n    if (!isMatch) {\n      res.status(401).json({ msg: 'Contrase\xF1a incorrecta.' });\n      return;\n    }\n    const token = createToken(name, lastName, userEmail, roll);\n    res.status(200).json({ msg: 'Login Exitoso', token, user: data });\n  } catch (error) {\n    res\n      .status(401)\n      .json({ msg: 'Error en la petici\xF3n, Int\xE9ntelo mas tarde.', error });\n    return;\n  }\n}\n\nexport const updateUserByEmailController = async (\n  req: Request,\n  res: Response\n) => {\n  try {\n    const dataUsers = req.body;\n    const userEmail = req.params.userEmail.toLocaleLowerCase();\n    if (!dataUsers || !userEmail) {\n      res.status(401).json({ msg: 'No hay Datos para actualizar' });\n    }\n    if (!validarEmail(userEmail)) {\n      res\n        .status(400)\n        .json({ msg: 'Direcci\xF3n de correo electr\xF3nico no v\xE1lido.' });\n      return;\n    }\n    // status por defecto true si no se env\xEDa\n    if (typeof dataUsers.status !== 'boolean') {\n      dataUsers.status = true;\n    }\n    const updateValidation = await updateUserByEmailModel(userEmail, dataUsers);\n    if (updateValidation) {\n      console.info('Resultado de updateUserByEmailModel');\n      console.info(updateValidation);\n      res.status(401).json({ msg: updateValidation });\n    }\n    res.status(200).json({ msg: 'Consulta \xE9xitosa' });\n  } catch (error) {\n    console.info('Error al actualizar los datos.');\n    res.status(401).json({ msg: 'Error al actualizar el usuario.' });\n  }\n};\n\nexport const emailRegisterController = async (req: Request, res: Response) => {\n  const numRandon = numberRandon().toString();\n  const numParam = await bcrypt.hash(numRandon, 10);\n  const html = `<!DOCTYPE html>\n  <html lang=\"es\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/>\n    <title>Verifica tu correo - MusikOn</title>\n  </head>\n  <body style=\"margin: 0; padding: 0; background-color: #f4f4f4; font-family: 'Segoe UI', sans-serif;\">\n    <table align=\"center\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" style=\"background-color: #f4f4f4; padding: 20px;\">\n      <tr>\n        <td align=\"center\">\n          <table width=\"600\" cellpadding=\"0\" cellspacing=\"0\" style=\"background-color: #004aad; border-radius: 10px; overflow: hidden; box-shadow: 0 4px 12px rgba(0,0,0,0.1);\">\n            <!-- Logo -->\n            <tr>\n              <td style=\"padding: 30px 0; text-align: center; background-color: #ffffff;\">\n                <img src=\"https://lh3.googleusercontent.com/a/ACg8ocLSs4B7UmP4bKLb26G-puyYjCURVh0Qnf9yHD_zxbCfRJTd3DFOovBly95OzJTWk34hnBf1RhigsdCnM0Wwg3TKCgsJ3rs=s288-c-no\" alt=\"MusikOn Logo\" width=\"120\" style=\"border-radius: 50%;\" />\n              </td>\n            </tr>\n\n            <!-- T\xEDtulo -->\n            <tr>\n              <td style=\"padding: 30px; text-align: center;\">\n                <h2 style=\"margin: 0; font-size: 26px; color: #fff;\">\xA1Bienvenido a <span style=\"color: #f1f1f1;\">MusikOn</span>!</h2>\n                <p style=\"font-size: 16px; color: hsl(246, 100%, 92%);\">Gracias por registrarte. Solo falta un paso para activar tu cuenta.</p>\n              </td>\n            </tr>\n\n            <!-- Bot\xF3n -->\n            <tr>\n              <td style=\"text-align: center; padding: 20px;\">\n                <h1 style=\"display: inline-block; padding: 15px 30px; background-color: #004aad; color: #fff; text-decoration: none; font-weight: bold; border-radius: 8px; font-size: 50px;\">\n                  ${numRandon}\n                </h1>\n              </td>\n            </tr>\n\n            <!-- Mensaje de soporte -->\n            <tr>\n              <td style=\"padding: 20px 40px; text-align: center; font-size: 14px; color: #b6c9ff;\">\n                Si no creaste esta cuenta, puedes ignorar este mensaje. Si tienes dudas, cont\xE1ctanos en <a href=\"mailto:appmusikon@gmail.com\" style=\"color: hsl(214, 100%, 77%);\">appmusikon@gmail.com</a>\n              </td>\n            </tr>\n\n            <!-- Footer -->\n            <tr>\n              <td style=\"text-align: center; padding: 30px; background-color: #f0f0f0; font-size: 12px; color: #0041f3;\">\n                &copy; 2025 MusikOn. Todos los derechos reservados.\n              </td>\n            </tr>\n          </table>\n        </td>\n      </tr>\n    </table>\n  </body>\n  </html>`;\n  try {\n    const userEmail = req.body.userEmail.toLocaleLowerCase();\n    if (!userEmail) {\n      res.status(400).json({ msg: 'Todos los campos deben de ser llenados.' });\n      return;\n    }\n    if (!validarEmail(userEmail)) {\n      res\n        .status(402)\n        .json({ msg: 'Direcci\xF3n de correo electr\xF3nico no v\xE1lido.' });\n      return;\n    }\n    const querySnapshot = await db\n      .collection('users')\n      .where('userEmail', '==', userEmail)\n      .get();\n    if (!querySnapshot.empty) {\n      res.status(409).json({\n        msg: 'Ya hay un usuario con esta direcci\xF3n de correo electr\xF3nico.',\n      });\n      return;\n    } else {\n      await sendEmail(userEmail, 'Verifica tu cuenta en MusikOn', html);\n      res.status(200).json({ msg: 'Email recibido con exito!', numParam });\n    }\n  } catch (err) {\n    res\n      .status(400)\n      .json({ msg: 'Verifique bien su direcci\xF3n de correo electr\xF3nico.', err });\n    return;\n  }\n};\n\nexport const validNumberGetByEmail = async (req: Request, res: Response) => {\n  try {\n    const numBack = req.body.vaildNumber.toString();\n    const numParam = req.params.vaildNumber.toString();\n    if (numBack === '' || numParam === '') {\n      res.status(402).json({ msg: 'Faltan datos requeridos.' });\n      return;\n    }\n    const isMatch = await bcrypt.compare(numParam, numBack);\n    if (!isMatch) {\n      console.info(`Son Iguales: ${numBack},${numParam}.`);\n      res.status(402).json({ msg: 'Codigo Incorrecto.' });\n      return;\n    }\n    console.info(`Numero del Body: ${numBack}`);\n    console.info(`Numero del Parametros: ${numParam}`);\n    res.status(200).json({ msg: 'Bien hecho!' });\n  } catch (err) {\n    res.status(402).json({ msg: 'Fallo el proceso!' });\n  }\n};\n\nexport const addEventToUserController = async (req: Request, res: Response) => {\n  try {\n    const user = (req as any).user;\n    if (!user || !user.userEmail) {\n      res.status(401).json({ msg: 'Usuario no autenticado.' });\n      return;\n    }\n    const eventData = req.body;\n    if (!eventData) {\n      res\n        .status(400)\n        .json({ msg: 'No se proporcion\xF3 informaci\xF3n del evento.' });\n      return;\n    }\n    const result = await addEventToUserModel(user.userEmail, eventData);\n    if (!result) {\n      res.status(200).json({ msg: 'Evento guardado exitosamente.' });\n    } else {\n      res.status(400).json({ msg: result });\n    }\n  } catch (error) {\n    res.status(500).json({ msg: 'Error al guardar el evento.', error });\n  }\n};\n\n// Controlador para solicitar verificaci\xF3n de email (para m\xFAsicos y creadores de eventos)\nexport const requestEmailVerificationController = async (\n  req: Request,\n  res: Response\n) => {\n  try {\n    const { name, lastName, userEmail, userPassword, roll }: {\n      name: string;\n      lastName: string;\n      userEmail: string;\n      userPassword: string;\n      roll: 'musico' | 'eventCreator';\n    } = req.body;\n\n    console.log(\n      '[src/controllers/authController.ts:356] Solicitud de verificaci\xF3n recibida:',\n      { name, lastName, userEmail, roll }\n    );\n\n    // Validar campos requeridos\n    if (!name || !lastName || !userEmail || !userPassword || !roll) {\n      return res.status(400).json({\n        success: false,\n        message: 'Todos los campos son requeridos: name, lastName, userEmail, userPassword, roll',\n      });\n    }\n\n    // Validar email\n    if (!validarEmail(userEmail)) {\n      return res.status(400).json({\n        success: false,\n        message: 'El formato del email no es v\xE1lido',\n      });\n    }\n\n    // Validar contrase\xF1a\n    if (!validarPassword(userPassword)) {\n      return res.status(400).json({\n        success: false,\n        message: 'La contrase\xF1a debe contener may\xFAsculas, min\xFAsculas, n\xFAmeros y caracteres especiales',\n      });\n    }\n\n    // Validar rol\n    if (!['musico', 'eventCreator'].includes(roll)) {\n      return res.status(400).json({\n        success: false,\n        message: 'El rol debe ser \"musico\" o \"eventCreator\"',\n      });\n    }\n\n    // Verificar si el usuario ya existe\n    const existingUser = await getUserByEmailModel(userEmail);\n    if (existingUser) {\n      return res.status(409).json({\n        success: false,\n        message: 'Ya existe un usuario con este email',\n      });\n    }\n\n    // Generar c\xF3digo de verificaci\xF3n\n    const verificationCode = numberRandon().toString();\n    const hashedCode = await bcrypt.hash(verificationCode, 10);\n\n    // Guardar datos temporalmente (se guardar\xE1n en la base de datos despu\xE9s de la verificaci\xF3n)\n    const tempUserData = {\n      name,\n      lastName,\n      userEmail: userEmail.toLowerCase(),\n      userPassword,\n      roll,\n      verificationCode: hashedCode,\n      expiresAt: Date.now() + 15 * 60 * 1000, // 15 minutos\n    };\n\n    // Guardar en memoria temporal (en producci\xF3n usar Redis)\n    verificationCodes.set(userEmail.toLowerCase(), {\n      code: verificationCode,\n      userData: tempUserData,\n      expiresAt: Date.now() + 15 * 60 * 1000,\n    });\n\n    // Enviar email de verificaci\xF3n\n    const html = `<!DOCTYPE html>\n    <html lang=\"es\">\n    <head>\n      <meta charset=\"UTF-8\" />\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/>\n      <title>Verifica tu cuenta - MusikOn</title>\n    </head>\n    <body style=\"margin: 0; padding: 0; background-color: #f4f4f4; font-family: 'Segoe UI', sans-serif;\">\n      <table align=\"center\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" style=\"background-color: #f4f4f4; padding: 20px;\">\n        <tr>\n          <td align=\"center\">\n            <table width=\"600\" cellpadding=\"0\" cellspacing=\"0\" style=\"background-color: #004aad; border-radius: 10px; overflow: hidden; box-shadow: 0 4px 12px rgba(0,0,0,0.1);\">\n              <!-- Logo -->\n              <tr>\n                <td style=\"padding: 30px 0; text-align: center; background-color: #ffffff;\">\n                  <img src=\"https://lh3.googleusercontent.com/a/ACg8ocLSs4B7UmP4bKLb26G-puyYjCURVh0Qnf9yHD_zxbCfRJTd3DFOovBly95OzJTWk34hnBf1RhigsdCnM0Wwg3TKCgsJ3rs=s288-c-no\" alt=\"MusikOn Logo\" width=\"120\" style=\"border-radius: 50%;\" />\n                </td>\n              </tr>\n\n              <!-- T\xEDtulo -->\n              <tr>\n                <td style=\"padding: 30px; text-align: center;\">\n                  <h2 style=\"margin: 0; font-size: 26px; color: #fff;\">\xA1Bienvenido a <span style=\"color: #f1f1f1;\">MusikOn</span>!</h2>\n                  <p style=\"font-size: 16px; color: hsl(246, 100%, 92%);\">Gracias por registrarte como ${roll === 'musico' ? 'm\xFAsico' : 'creador de eventos'}. Solo falta un paso para activar tu cuenta.</p>\n                </td>\n              </tr>\n\n              <!-- C\xF3digo -->\n              <tr>\n                <td style=\"text-align: center; padding: 20px;\">\n                  <h1 style=\"display: inline-block; padding: 15px 30px; background-color: #004aad; color: #fff; text-decoration: none; font-weight: bold; border-radius: 8px; font-size: 50px;\">\n                    ${verificationCode}\n                  </h1>\n                </td>\n              </tr>\n\n              <!-- Instrucciones -->\n              <tr>\n                <td style=\"padding: 20px 40px; text-align: center; font-size: 14px; color: #b6c9ff;\">\n                  <p>Ingresa este c\xF3digo en la aplicaci\xF3n para completar tu registro.</p>\n                  <p>Este c\xF3digo expira en 15 minutos.</p>\n                </td>\n              </tr>\n\n              <!-- Mensaje de soporte -->\n              <tr>\n                <td style=\"padding: 20px 40px; text-align: center; font-size: 14px; color: #b6c9ff;\">\n                  Si no creaste esta cuenta, puedes ignorar este mensaje. Si tienes dudas, cont\xE1ctanos en <a href=\"mailto:appmusikon@gmail.com\" style=\"color: hsl(214, 100%, 77%);\">appmusikon@gmail.com</a>\n                </td>\n              </tr>\n\n              <!-- Footer -->\n              <tr>\n                <td style=\"text-align: center; padding: 30px; background-color: #f0f0f0; font-size: 12px; color: #0041f3;\">\n                  &copy; 2025 MusikOn. Todos los derechos reservados.\n                </td>\n              </tr>\n            </table>\n          </td>\n        </tr>\n      </table>\n    </body>\n    </html>`;\n\n    await sendEmail(userEmail, 'Verifica tu cuenta en MusikOn', html);\n\n    console.log(\n      '[src/controllers/authController.ts:420] Email de verificaci\xF3n enviado:',\n      userEmail\n    );\n\n    return res.status(200).json({\n      success: true,\n      message: 'Email de verificaci\xF3n enviado exitosamente. Revisa tu bandeja de entrada.',\n      data: {\n        userEmail,\n        roll,\n        expiresIn: '15 minutos',\n      },\n    });\n  } catch (error) {\n    console.error(\n      '[src/controllers/authController.ts:440] Error en requestEmailVerificationController:',\n      error\n    );\n    return res.status(500).json({\n      success: false,\n      message: 'Error interno del servidor',\n      error: error instanceof Error ? error.message : 'Error desconocido',\n    });\n  }\n};\n\n// Controlador para verificar c\xF3digo y completar registro\nexport const verifyAndCompleteRegistrationController = async (\n  req: Request,\n  res: Response\n) => {\n  try {\n    const { userEmail, code }: {\n      userEmail: string;\n      code: string;\n    } = req.body;\n\n    console.log(\n      '[src/controllers/authController.ts:450] Verificaci\xF3n de c\xF3digo recibida:',\n      { userEmail, code }\n    );\n\n    // Validar campos requeridos\n    if (!userEmail || !code) {\n      return res.status(400).json({\n        success: false,\n        message: 'Email y c\xF3digo son requeridos',\n      });\n    }\n\n    // Validar email\n    if (!validarEmail(userEmail)) {\n      return res.status(400).json({\n        success: false,\n        message: 'Email inv\xE1lido',\n      });\n    }\n\n    // Buscar datos temporales\n    const storedData = verificationCodes.get(userEmail.toLowerCase());\n    if (!storedData) {\n      return res.status(400).json({\n        success: false,\n        message: 'C\xF3digo no encontrado o expirado',\n      });\n    }\n\n    // Verificar expiraci\xF3n\n    if (storedData.expiresAt < Date.now()) {\n      verificationCodes.delete(userEmail.toLowerCase());\n      return res.status(400).json({\n        success: false,\n        message: 'C\xF3digo expirado',\n      });\n    }\n\n    // Verificar que existan los datos del usuario\n    if (!storedData.userData) {\n      return res.status(400).json({\n        success: false,\n        message: 'Datos de registro no encontrados',\n      });\n    }\n\n    // Verificar c\xF3digo\n    const isCodeValid = await bcrypt.compare(code, storedData.userData.verificationCode);\n    if (!isCodeValid) {\n      return res.status(400).json({\n        success: false,\n        message: 'C\xF3digo inv\xE1lido',\n      });\n    }\n\n    // Registrar usuario en la base de datos\n    const { name, lastName, userPassword, roll } = storedData.userData;\n    const result = await registerModel(name, lastName, roll, userEmail, userPassword, true);\n\n    if (result === false) {\n      // Limpiar datos temporales\n      verificationCodes.delete(userEmail.toLowerCase());\n\n      // Generar token JWT\n      const token = createToken(name, lastName, userEmail, roll);\n\n      console.log(\n        '[src/controllers/authController.ts:500] Usuario registrado exitosamente:',\n        userEmail\n      );\n\n      return res.status(201).json({\n        success: true,\n        message: roll === 'musico' \n          ? 'M\xFAsico registrado exitosamente. Su perfil ser\xE1 completado por un administrador.'\n          : 'Creador de eventos registrado exitosamente.',\n        data: {\n          userEmail,\n          name,\n          lastName,\n          roll,\n          status: roll === 'musico' ? 'pending_approval' : 'active',\n          token,\n        },\n      });\n    } else {\n      return res.status(400).json({\n        success: false,\n        message: 'Error al registrar el usuario',\n        error: result,\n      });\n    }\n  } catch (error) {\n    console.error(\n      '[src/controllers/authController.ts:520] Error en verifyAndCompleteRegistrationController:',\n      error\n    );\n    return res.status(500).json({\n      success: false,\n      message: 'Error interno del servidor',\n      error: error instanceof Error ? error.message : 'Error desconocido',\n    });\n  }\n};\n\nexport const deleteUserByEmailController = async (\n  req: Request,\n  res: Response\n) => {\n  try {\n    const { userEmail } = req.body;\n    console.log(\n      '[src/controllers/authController.ts:270] [DELETE] userEmail recibido:',\n      userEmail\n    ); // LOG de depuraci\xF3n\n    if (!userEmail) {\n      res.status(400).json({ message: 'Falta el email' });\n      return;\n    }\n    const result = await deleteUserByEmailModel(userEmail);\n    console.log(\n      '[src/controllers/authController.ts:276] Resultado de deleteUserByEmailModel:',\n      result\n    );\n    console.log(\n      '[src/controllers/authController.ts:277] [DELETE] Resultado de deleteUserByEmailModel:',\n      result\n    ); // LOG de depuraci\xF3n\n    if (result === false) {\n      res.json({ message: 'Usuario eliminado correctamente' });\n    } else if (result === 'Falta el email') {\n      res.status(400).json({ message: 'Falta el email' });\n    } else if (result === 'not_found') {\n      res\n        .status(404)\n        .json({ message: 'El usuario no existe o ya fue eliminado' });\n    } else {\n      res.status(500).json({ message: result });\n    }\n  } catch (error) {\n    console.log(\n      '[src/controllers/authController.ts:288] Error en deleteUserByEmailController'\n    );\n    console.error(\n      '[src/controllers/authController.ts:289] [DELETE] Error al eliminar usuario:',\n      error\n    ); // LOG de error\n    res.status(500).json({\n      message: 'Error al eliminar usuario',\n      error: (error as Error).message,\n    });\n  }\n};\n\n/**\n * @swagger\n * /auth/forgot-password:\n *   post:\n *     summary: Solicitar recuperaci\xF3n de contrase\xF1a (solo superadmin)\n *     tags: [Auth]\n *     requestBody:\n *       required: true\n *       content:\n *         application/json:\n *           schema:\n *             type: object\n *             properties:\n *               userEmail:\n *                 type: string\n *     responses:\n *       200:\n *         description: C\xF3digo de verificaci\xF3n enviado\n *       404:\n *         description: Usuario no encontrado\n *       403:\n *         description: Solo superadmin puede recuperar contrase\xF1a\n *\n * /auth/verify-code:\n *   post:\n *     summary: Verificar c\xF3digo de recuperaci\xF3n\n *     tags: [Auth]\n *     requestBody:\n *       required: true\n *       content:\n *         application/json:\n *           schema:\n *             type: object\n *             properties:\n *               userEmail:\n *                 type: string\n *               code:\n *                 type: string\n *     responses:\n *       200:\n *         description: C\xF3digo verificado correctamente\n *       400:\n *         description: C\xF3digo inv\xE1lido o expirado\n *\n * /auth/reset-password:\n *   post:\n *     summary: Restablecer contrase\xF1a\n *     tags: [Auth]\n *     requestBody:\n *       required: true\n *       content:\n *         application/json:\n *           schema:\n *             type: object\n *             properties:\n *               userEmail:\n *                 type: string\n *               code:\n *                 type: string\n *               newPassword:\n *                 type: string\n *     responses:\n *       200:\n *         description: Contrase\xF1a actualizada correctamente\n *       400:\n *         description: C\xF3digo inv\xE1lido o contrase\xF1a d\xE9bil\n */\n\n// Almac\xE9n temporal para c\xF3digos de verificaci\xF3n (en producci\xF3n usar Redis)\nconst verificationCodes = new Map<\n  string,\n  { \n    code: string; \n    expiresAt: number;\n    userData?: {\n      name: string;\n      lastName: string;\n      userEmail: string;\n      userPassword: string;\n      roll: string;\n      verificationCode: string;\n      expiresAt: number;\n    };\n  }\n>();\n\n// Funci\xF3n para generar c\xF3digo de verificaci\xF3n\nfunction generateVerificationCode(): string {\n  return Math.floor(100000 + Math.random() * 900000).toString();\n}\n\n// Funci\xF3n para limpiar c\xF3digos expirados\nfunction cleanupExpiredCodes() {\n  const now = Date.now();\n  for (const [email, data] of verificationCodes.entries()) {\n    if (data.expiresAt < now) {\n      verificationCodes.delete(email);\n    }\n  }\n}\n\n// Ejecutar limpieza cada 5 minutos solo en producci\xF3n\nif (process.env.NODE_ENV === 'production') {\n  setInterval(cleanupExpiredCodes, 5 * 60 * 1000);\n}\n\n// Solicitar recuperaci\xF3n de contrase\xF1a (solo superadmin)\nexport const forgotPasswordController = async (req: Request, res: Response) => {\n  try {\n    const { userEmail } = req.body;\n\n    if (!userEmail) {\n      res.status(400).json({ msg: 'Email es requerido' });\n      return;\n    }\n\n    if (!validarEmail(userEmail)) {\n      res.status(400).json({ msg: 'Email inv\xE1lido' });\n      return;\n    }\n\n    // Buscar usuario\n    const user = await getUserByEmailModel(userEmail);\n    if (!user) {\n      res.status(404).json({ msg: 'Usuario no encontrado' });\n      return;\n    }\n\n    // Verificar que sea superadmin\n    if (user.roll !== 'superadmin') {\n      res\n        .status(403)\n        .json({ msg: 'Solo superadmin puede recuperar contrase\xF1a' });\n      return;\n    }\n\n    // Generar c\xF3digo de verificaci\xF3n\n    const verificationCode = generateVerificationCode();\n    const expiresAt = Date.now() + 10 * 60 * 1000; // 10 minutos\n\n    // Guardar c\xF3digo temporalmente\n    verificationCodes.set(userEmail.toLowerCase(), {\n      code: verificationCode,\n      expiresAt,\n    });\n\n    // Enviar email con c\xF3digo\n    const html = `<!DOCTYPE html>\n    <html lang=\"es\">\n    <head>\n      <meta charset=\"UTF-8\" />\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/>\n      <title>Recuperar Contrase\xF1a - MusikOn</title>\n    </head>\n    <body style=\"margin: 0; padding: 0; background-color: #f4f4f4; font-family: 'Segoe UI', sans-serif;\">\n      <table align=\"center\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" style=\"background-color: #f4f4f4; padding: 20px;\">\n        <tr>\n          <td align=\"center\">\n            <table width=\"600\" cellpadding=\"0\" cellspacing=\"0\" style=\"background-color: #004aad; border-radius: 10px; overflow: hidden; box-shadow: 0 4px 12px rgba(0,0,0,0.1);\">\n              <!-- Logo -->\n              <tr>\n                <td style=\"padding: 30px 0; text-align: center; background-color: #ffffff;\">\n                  <img src=\"https://lh3.googleusercontent.com/a/ACg8ocLSs4B7UmP4bKLb26G-puyYjCURVh0Qnf9yHD_zxbCfRJTd3DFOovBly95OzJTWk34hnBf1RhigsdCnM0Wwg3TKCgsJ3rs=s288-c-no\" alt=\"MusikOn Logo\" width=\"120\" style=\"border-radius: 50%;\" />\n                </td>\n              </tr>\n\n              <!-- T\xEDtulo -->\n              <tr>\n                <td style=\"padding: 30px; text-align: center;\">\n                  <h2 style=\"margin: 0; font-size: 26px; color: #fff;\">Recuperar Contrase\xF1a</h2>\n                  <p style=\"font-size: 16px; color: hsl(246, 100%, 92%);\">Hola ${user.name}, has solicitado restablecer tu contrase\xF1a.</p>\n                </td>\n              </tr>\n\n              <!-- C\xF3digo de Verificaci\xF3n -->\n              <tr>\n                <td style=\"text-align: center; padding: 20px;\">\n                  <h1 style=\"display: inline-block; padding: 15px 30px; background-color: #004aad; color: #fff; text-decoration: none; font-weight: bold; border-radius: 8px; font-size: 50px;\">\n                    ${verificationCode}\n                  </h1>\n                </td>\n              </tr>\n\n              <!-- Instrucciones -->\n              <tr>\n                <td style=\"padding: 20px 40px; text-align: center;\">\n                  <p style=\"font-size: 16px; color: #fff; margin-bottom: 10px;\">\n                    <strong>Instrucciones:</strong>\n                  </p>\n                  <p style=\"font-size: 14px; color: #b6c9ff; margin: 5px 0;\">\n                    1. Copia el c\xF3digo de 6 d\xEDgitos de arriba\n                  </p>\n                  <p style=\"font-size: 14px; color: #b6c9ff; margin: 5px 0;\">\n                    2. Ve a la p\xE1gina de recuperaci\xF3n de contrase\xF1a\n                  </p>\n                  <p style=\"font-size: 14px; color: #b6c9ff; margin: 5px 0;\">\n                    3. Ingresa el c\xF3digo y tu nueva contrase\xF1a\n                  </p>\n                  <p style=\"font-size: 14px; color: #b6c9ff; margin: 5px 0;\">\n                    4. El c\xF3digo expira en 10 minutos\n                  </p>\n                </td>\n              </tr>\n\n              <!-- Mensaje de seguridad -->\n              <tr>\n                <td style=\"padding: 20px 40px; text-align: center; font-size: 14px; color: #b6c9ff;\">\n                  <p style=\"margin: 0;\">\n                    <strong>\u26A0\uFE0F Importante:</strong> Si no solicitaste este cambio, puedes ignorar este mensaje. \n                    Tu contrase\xF1a actual permanecer\xE1 sin cambios.\n                  </p>\n                </td>\n              </tr>\n\n              <!-- Footer -->\n              <tr>\n                <td style=\"text-align: center; padding: 30px; background-color: #f0f0f0; font-size: 12px; color: #0041f3;\">\n                  &copy; 2025 MusikOn. Todos los derechos reservados.\n                </td>\n              </tr>\n            </table>\n          </td>\n        </tr>\n      </table>\n    </body>\n    </html>`;\n\n    try {\n      await sendEmail(userEmail, 'Recuperar Contrase\xF1a - MusikOn', html);\n\n      res.status(200).json({\n        msg: 'C\xF3digo de verificaci\xF3n enviado al email',\n        userEmail: userEmail,\n      });\n    } catch (emailError) {\n      console.error('Error al enviar email:', emailError);\n      res.status(500).json({ msg: 'Error al enviar email de verificaci\xF3n' });\n    }\n  } catch (error) {\n    console.error('Error en forgotPasswordController:', error);\n    res.status(500).json({ msg: 'Error interno del servidor' });\n  }\n};\n\n// Verificar c\xF3digo de recuperaci\xF3n\nexport const verifyCodeController = async (req: Request, res: Response) => {\n  try {\n    const { userEmail, code } = req.body;\n\n    if (!userEmail || !code) {\n      res.status(400).json({ msg: 'Email y c\xF3digo son requeridos' });\n      return;\n    }\n\n    if (!validarEmail(userEmail)) {\n      res.status(400).json({ msg: 'Email inv\xE1lido' });\n      return;\n    }\n\n    // Buscar usuario\n    const user = await getUserByEmailModel(userEmail);\n    if (!user) {\n      res.status(404).json({ msg: 'Usuario no encontrado' });\n      return;\n    }\n\n    // Verificar que sea superadmin\n    if (user.roll !== 'superadmin') {\n      res\n        .status(403)\n        .json({ msg: 'Solo superadmin puede recuperar contrase\xF1a' });\n      return;\n    }\n\n    // Verificar c\xF3digo\n    const storedData = verificationCodes.get(userEmail.toLowerCase());\n    if (!storedData) {\n      res.status(400).json({ msg: 'C\xF3digo no encontrado o expirado' });\n      return;\n    }\n\n    if (storedData.expiresAt < Date.now()) {\n      verificationCodes.delete(userEmail.toLowerCase());\n      res.status(400).json({ msg: 'C\xF3digo expirado' });\n      return;\n    }\n\n    if (storedData.code !== code) {\n      res.status(400).json({ msg: 'C\xF3digo inv\xE1lido' });\n      return;\n    }\n\n    res.status(200).json({\n      msg: 'C\xF3digo verificado correctamente',\n      userEmail: userEmail,\n    });\n  } catch (error) {\n    console.error('Error en verifyCodeController:', error);\n    res.status(500).json({ msg: 'Error interno del servidor' });\n  }\n};\n\n// Restablecer contrase\xF1a\nexport const resetPasswordController = async (req: Request, res: Response) => {\n  try {\n    const { userEmail, code, newPassword } = req.body;\n\n    if (!userEmail || !code || !newPassword) {\n      res\n        .status(400)\n        .json({ msg: 'Email, c\xF3digo y nueva contrase\xF1a son requeridos' });\n      return;\n    }\n\n    if (!validarEmail(userEmail)) {\n      res.status(400).json({ msg: 'Email inv\xE1lido' });\n      return;\n    }\n\n    if (!validarPassword(newPassword)) {\n      res.status(400).json({\n        msg: 'La contrase\xF1a no cumple con los requisitos, debe de contener May\xFAsculas, Min\xFAsculas, N\xFAmeros y Car\xE1cteres especiales',\n      });\n      return;\n    }\n\n    // Buscar usuario\n    const user = await getUserByEmailModel(userEmail);\n    if (!user) {\n      res.status(404).json({ msg: 'Usuario no encontrado' });\n      return;\n    }\n\n    // Verificar que sea superadmin\n    if (user.roll !== 'superadmin') {\n      res\n        .status(403)\n        .json({ msg: 'Solo superadmin puede recuperar contrase\xF1a' });\n      return;\n    }\n\n    // Verificar c\xF3digo\n    const storedData = verificationCodes.get(userEmail.toLowerCase());\n    if (!storedData) {\n      res.status(400).json({ msg: 'C\xF3digo no encontrado o expirado' });\n      return;\n    }\n\n    if (storedData.expiresAt < Date.now()) {\n      verificationCodes.delete(userEmail.toLowerCase());\n      res.status(400).json({ msg: 'C\xF3digo expirado' });\n      return;\n    }\n\n    if (storedData.code !== code) {\n      res.status(400).json({ msg: 'C\xF3digo inv\xE1lido' });\n      return;\n    }\n\n    // Hashear nueva contrase\xF1a\n    const hashedPassword = await bcrypt.hash(newPassword, 10);\n\n    // Actualizar contrase\xF1a en la base de datos\n    const updateData = {\n      userPassword: hashedPassword,\n      update_at: new Date().toString(),\n    };\n\n    const updateResult = await updateUserByEmailModel(userEmail, updateData);\n    if (updateResult) {\n      res.status(400).json({ msg: updateResult });\n      return;\n    }\n\n    // Eliminar c\xF3digo usado\n    verificationCodes.delete(userEmail.toLowerCase());\n\n    res.status(200).json({\n      msg: 'Contrase\xF1a actualizada correctamente',\n      userEmail: userEmail,\n    });\n  } catch (error) {\n    console.error('Error en resetPasswordController:', error);\n    res.status(500).json({ msg: 'Error interno del servidor' });\n  }\n};\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "715ddb15facfb29dbff385b21d4355641cc088d5"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1ebl7we1os = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1ebl7we1os();
var __createBinding =
/* istanbul ignore next */
(cov_1ebl7we1os().s[0]++,
/* istanbul ignore next */
(cov_1ebl7we1os().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1ebl7we1os().b[0][1]++, this.__createBinding) ||
/* istanbul ignore next */
(cov_1ebl7we1os().b[0][2]++, Object.create ?
/* istanbul ignore next */
(cov_1ebl7we1os().b[1][0]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_1ebl7we1os().f[0]++;
  cov_1ebl7we1os().s[1]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_1ebl7we1os().b[2][0]++;
    cov_1ebl7we1os().s[2]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_1ebl7we1os().b[2][1]++;
  }
  var desc =
  /* istanbul ignore next */
  (cov_1ebl7we1os().s[3]++, Object.getOwnPropertyDescriptor(m, k));
  /* istanbul ignore next */
  cov_1ebl7we1os().s[4]++;
  if (
  /* istanbul ignore next */
  (cov_1ebl7we1os().b[4][0]++, !desc) ||
  /* istanbul ignore next */
  (cov_1ebl7we1os().b[4][1]++, "get" in desc ?
  /* istanbul ignore next */
  (cov_1ebl7we1os().b[5][0]++, !m.__esModule) :
  /* istanbul ignore next */
  (cov_1ebl7we1os().b[5][1]++,
  /* istanbul ignore next */
  (cov_1ebl7we1os().b[6][0]++, desc.writable) ||
  /* istanbul ignore next */
  (cov_1ebl7we1os().b[6][1]++, desc.configurable)))) {
    /* istanbul ignore next */
    cov_1ebl7we1os().b[3][0]++;
    cov_1ebl7we1os().s[5]++;
    desc = {
      enumerable: true,
      get: function () {
        /* istanbul ignore next */
        cov_1ebl7we1os().f[1]++;
        cov_1ebl7we1os().s[6]++;
        return m[k];
      }
    };
  } else
  /* istanbul ignore next */
  {
    cov_1ebl7we1os().b[3][1]++;
  }
  cov_1ebl7we1os().s[7]++;
  Object.defineProperty(o, k2, desc);
}) :
/* istanbul ignore next */
(cov_1ebl7we1os().b[1][1]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_1ebl7we1os().f[2]++;
  cov_1ebl7we1os().s[8]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_1ebl7we1os().b[7][0]++;
    cov_1ebl7we1os().s[9]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_1ebl7we1os().b[7][1]++;
  }
  cov_1ebl7we1os().s[10]++;
  o[k2] = m[k];
})));
var __setModuleDefault =
/* istanbul ignore next */
(cov_1ebl7we1os().s[11]++,
/* istanbul ignore next */
(cov_1ebl7we1os().b[8][0]++, this) &&
/* istanbul ignore next */
(cov_1ebl7we1os().b[8][1]++, this.__setModuleDefault) ||
/* istanbul ignore next */
(cov_1ebl7we1os().b[8][2]++, Object.create ?
/* istanbul ignore next */
(cov_1ebl7we1os().b[9][0]++, function (o, v) {
  /* istanbul ignore next */
  cov_1ebl7we1os().f[3]++;
  cov_1ebl7we1os().s[12]++;
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
}) :
/* istanbul ignore next */
(cov_1ebl7we1os().b[9][1]++, function (o, v) {
  /* istanbul ignore next */
  cov_1ebl7we1os().f[4]++;
  cov_1ebl7we1os().s[13]++;
  o["default"] = v;
})));
var __importStar =
/* istanbul ignore next */
(cov_1ebl7we1os().s[14]++,
/* istanbul ignore next */
(cov_1ebl7we1os().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_1ebl7we1os().b[10][1]++, this.__importStar) ||
/* istanbul ignore next */
(cov_1ebl7we1os().b[10][2]++, function () {
  /* istanbul ignore next */
  cov_1ebl7we1os().f[5]++;
  cov_1ebl7we1os().s[15]++;
  var ownKeys = function (o) {
    /* istanbul ignore next */
    cov_1ebl7we1os().f[6]++;
    cov_1ebl7we1os().s[16]++;
    ownKeys =
    /* istanbul ignore next */
    (cov_1ebl7we1os().b[11][0]++, Object.getOwnPropertyNames) ||
    /* istanbul ignore next */
    (cov_1ebl7we1os().b[11][1]++, function (o) {
      /* istanbul ignore next */
      cov_1ebl7we1os().f[7]++;
      var ar =
      /* istanbul ignore next */
      (cov_1ebl7we1os().s[17]++, []);
      /* istanbul ignore next */
      cov_1ebl7we1os().s[18]++;
      for (var k in o) {
        /* istanbul ignore next */
        cov_1ebl7we1os().s[19]++;
        if (Object.prototype.hasOwnProperty.call(o, k)) {
          /* istanbul ignore next */
          cov_1ebl7we1os().b[12][0]++;
          cov_1ebl7we1os().s[20]++;
          ar[ar.length] = k;
        } else
        /* istanbul ignore next */
        {
          cov_1ebl7we1os().b[12][1]++;
        }
      }
      /* istanbul ignore next */
      cov_1ebl7we1os().s[21]++;
      return ar;
    });
    /* istanbul ignore next */
    cov_1ebl7we1os().s[22]++;
    return ownKeys(o);
  };
  /* istanbul ignore next */
  cov_1ebl7we1os().s[23]++;
  return function (mod) {
    /* istanbul ignore next */
    cov_1ebl7we1os().f[8]++;
    cov_1ebl7we1os().s[24]++;
    if (
    /* istanbul ignore next */
    (cov_1ebl7we1os().b[14][0]++, mod) &&
    /* istanbul ignore next */
    (cov_1ebl7we1os().b[14][1]++, mod.__esModule)) {
      /* istanbul ignore next */
      cov_1ebl7we1os().b[13][0]++;
      cov_1ebl7we1os().s[25]++;
      return mod;
    } else
    /* istanbul ignore next */
    {
      cov_1ebl7we1os().b[13][1]++;
    }
    var result =
    /* istanbul ignore next */
    (cov_1ebl7we1os().s[26]++, {});
    /* istanbul ignore next */
    cov_1ebl7we1os().s[27]++;
    if (mod != null) {
      /* istanbul ignore next */
      cov_1ebl7we1os().b[15][0]++;
      cov_1ebl7we1os().s[28]++;
      for (var k =
        /* istanbul ignore next */
        (cov_1ebl7we1os().s[29]++, ownKeys(mod)), i =
        /* istanbul ignore next */
        (cov_1ebl7we1os().s[30]++, 0); i < k.length; i++) {
        /* istanbul ignore next */
        cov_1ebl7we1os().s[31]++;
        if (k[i] !== "default") {
          /* istanbul ignore next */
          cov_1ebl7we1os().b[16][0]++;
          cov_1ebl7we1os().s[32]++;
          __createBinding(result, mod, k[i]);
        } else
        /* istanbul ignore next */
        {
          cov_1ebl7we1os().b[16][1]++;
        }
      }
    } else
    /* istanbul ignore next */
    {
      cov_1ebl7we1os().b[15][1]++;
    }
    cov_1ebl7we1os().s[33]++;
    __setModuleDefault(result, mod);
    /* istanbul ignore next */
    cov_1ebl7we1os().s[34]++;
    return result;
  };
}()));
var __awaiter =
/* istanbul ignore next */
(cov_1ebl7we1os().s[35]++,
/* istanbul ignore next */
(cov_1ebl7we1os().b[17][0]++, this) &&
/* istanbul ignore next */
(cov_1ebl7we1os().b[17][1]++, this.__awaiter) ||
/* istanbul ignore next */
(cov_1ebl7we1os().b[17][2]++, function (thisArg, _arguments, P, generator) {
  /* istanbul ignore next */
  cov_1ebl7we1os().f[9]++;
  function adopt(value) {
    /* istanbul ignore next */
    cov_1ebl7we1os().f[10]++;
    cov_1ebl7we1os().s[36]++;
    return value instanceof P ?
    /* istanbul ignore next */
    (cov_1ebl7we1os().b[18][0]++, value) :
    /* istanbul ignore next */
    (cov_1ebl7we1os().b[18][1]++, new P(function (resolve) {
      /* istanbul ignore next */
      cov_1ebl7we1os().f[11]++;
      cov_1ebl7we1os().s[37]++;
      resolve(value);
    }));
  }
  /* istanbul ignore next */
  cov_1ebl7we1os().s[38]++;
  return new (
  /* istanbul ignore next */
  (cov_1ebl7we1os().b[19][0]++, P) ||
  /* istanbul ignore next */
  (cov_1ebl7we1os().b[19][1]++, P = Promise))(function (resolve, reject) {
    /* istanbul ignore next */
    cov_1ebl7we1os().f[12]++;
    function fulfilled(value) {
      /* istanbul ignore next */
      cov_1ebl7we1os().f[13]++;
      cov_1ebl7we1os().s[39]++;
      try {
        /* istanbul ignore next */
        cov_1ebl7we1os().s[40]++;
        step(generator.next(value));
      } catch (e) {
        /* istanbul ignore next */
        cov_1ebl7we1os().s[41]++;
        reject(e);
      }
    }
    function rejected(value) {
      /* istanbul ignore next */
      cov_1ebl7we1os().f[14]++;
      cov_1ebl7we1os().s[42]++;
      try {
        /* istanbul ignore next */
        cov_1ebl7we1os().s[43]++;
        step(generator["throw"](value));
      } catch (e) {
        /* istanbul ignore next */
        cov_1ebl7we1os().s[44]++;
        reject(e);
      }
    }
    function step(result) {
      /* istanbul ignore next */
      cov_1ebl7we1os().f[15]++;
      cov_1ebl7we1os().s[45]++;
      result.done ?
      /* istanbul ignore next */
      (cov_1ebl7we1os().b[20][0]++, resolve(result.value)) :
      /* istanbul ignore next */
      (cov_1ebl7we1os().b[20][1]++, adopt(result.value).then(fulfilled, rejected));
    }
    /* istanbul ignore next */
    cov_1ebl7we1os().s[46]++;
    step((generator = generator.apply(thisArg,
    /* istanbul ignore next */
    (cov_1ebl7we1os().b[21][0]++, _arguments) ||
    /* istanbul ignore next */
    (cov_1ebl7we1os().b[21][1]++, []))).next());
  });
}));
/* istanbul ignore next */
cov_1ebl7we1os().s[47]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1ebl7we1os().s[48]++;
exports.resetPasswordController = exports.verifyCodeController = exports.forgotPasswordController = exports.deleteUserByEmailController = exports.verifyAndCompleteRegistrationController = exports.requestEmailVerificationController = exports.addEventToUserController = exports.validNumberGetByEmail = exports.emailRegisterController = exports.updateUserByEmailController = void 0;
/* istanbul ignore next */
cov_1ebl7we1os().s[49]++;
exports.registerController = registerController;
/* istanbul ignore next */
cov_1ebl7we1os().s[50]++;
exports.loginController = loginController;
const bcrypt =
/* istanbul ignore next */
(cov_1ebl7we1os().s[51]++, __importStar(require("bcrypt")));
const authModel_1 =
/* istanbul ignore next */
(cov_1ebl7we1os().s[52]++, require("../models/authModel"));
const validatios_1 =
/* istanbul ignore next */
(cov_1ebl7we1os().s[53]++, require("../utils/validatios"));
const jwt_1 =
/* istanbul ignore next */
(cov_1ebl7we1os().s[54]++, require("../utils/jwt"));
const mailer_1 =
/* istanbul ignore next */
(cov_1ebl7we1os().s[55]++, require("../utils/mailer"));
const functions_1 =
/* istanbul ignore next */
(cov_1ebl7we1os().s[56]++, require("../utils/functions"));
const firebase_1 =
/* istanbul ignore next */
(cov_1ebl7we1os().s[57]++, require("../utils/firebase"));
/**
 * @swagger
 * components:
 *   schemas:
 *     AuthUserRegister:
 *       type: object
 *       properties:
 *         name:
 *           type: string
 *         lastName:
 *           type: string
 *         roll:
 *           type: string
 *         userEmail:
 *           type: string
 *         userPassword:
 *           type: string
 *     Event:
 *       type: object
 *       properties:
 *         id:
 *           type: integer
 *         user:
 *           type: string
 *         eventName:
 *           type: string
 *         requesterName:
 *           type: string
 *         location:
 *           type: string
 *         date:
 *           type: string
 *         time:
 *           type: string
 *         duration:
 *           type: string
 *         instrument:
 *           type: string
 *         bringInstrument:
 *           type: boolean
 *         comment:
 *           type: string
 *         budget:
 *           type: string
 *         eventType:
 *           type: string
 *         flyerUrl:
 *           type: string
 *         songs:
 *           type: array
 *           items:
 *             type: string
 *         recommendations:
 *           type: array
 *           items:
 *             type: string
 *         mapsLink:
 *           type: string
 */
function registerController(req, res) {
  /* istanbul ignore next */
  cov_1ebl7we1os().f[16]++;
  cov_1ebl7we1os().s[58]++;
  return __awaiter(this, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1ebl7we1os().f[17]++;
    cov_1ebl7we1os().s[59]++;
    try {
      const {
        name,
        lastName,
        roll,
        userEmail,
        userPassword,
        status
      } =
      /* istanbul ignore next */
      (cov_1ebl7we1os().s[60]++, req.body);
      /* istanbul ignore next */
      cov_1ebl7we1os().s[61]++;
      console.log('[src/controllers/authController.ts:72] Datos de registro recibidos:', req.body);
      /* istanbul ignore next */
      cov_1ebl7we1os().s[62]++;
      if (
      /* istanbul ignore next */
      (cov_1ebl7we1os().b[23][0]++, !name) ||
      /* istanbul ignore next */
      (cov_1ebl7we1os().b[23][1]++, !lastName) ||
      /* istanbul ignore next */
      (cov_1ebl7we1os().b[23][2]++, !roll) ||
      /* istanbul ignore next */
      (cov_1ebl7we1os().b[23][3]++, !userEmail) ||
      /* istanbul ignore next */
      (cov_1ebl7we1os().b[23][4]++, !userPassword)) {
        /* istanbul ignore next */
        cov_1ebl7we1os().b[22][0]++;
        cov_1ebl7we1os().s[63]++;
        res.status(400).json({
          msg: 'Error al registrarse, todos los campos deben de ser llenados'
        });
        /* istanbul ignore next */
        cov_1ebl7we1os().s[64]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1ebl7we1os().b[22][1]++;
      }
      cov_1ebl7we1os().s[65]++;
      if (!(0, validatios_1.validarPassword)(userPassword)) {
        /* istanbul ignore next */
        cov_1ebl7we1os().b[24][0]++;
        cov_1ebl7we1os().s[66]++;
        res.status(400).json({
          msg: 'La contraseña no cumple con los requisitos, debe de contener Mayúsculas, Minúsculas, Números y Carácteres especiales \n\n\nEjemplo: Tunombre*55 .'
        });
        /* istanbul ignore next */
        cov_1ebl7we1os().s[67]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1ebl7we1os().b[24][1]++;
      }
      cov_1ebl7we1os().s[68]++;
      if (!(0, validatios_1.validarEmail)(userEmail)) {
        /* istanbul ignore next */
        cov_1ebl7we1os().b[25][0]++;
        cov_1ebl7we1os().s[69]++;
        res.status(400).json({
          msg: 'Correo Electrónico inválido.'
        });
        /* istanbul ignore next */
        cov_1ebl7we1os().s[70]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1ebl7we1os().b[25][1]++;
      }
      const pass =
      /* istanbul ignore next */
      (cov_1ebl7we1os().s[71]++, yield bcrypt.hash(userPassword, 10));
      // status por defecto true si no se envía
      const userStatus =
      /* istanbul ignore next */
      (cov_1ebl7we1os().s[72]++, typeof status === 'boolean' ?
      /* istanbul ignore next */
      (cov_1ebl7we1os().b[26][0]++, status) :
      /* istanbul ignore next */
      (cov_1ebl7we1os().b[26][1]++, true));
      const saved =
      /* istanbul ignore next */
      (cov_1ebl7we1os().s[73]++, yield (0, authModel_1.registerModel)(name, lastName, roll, userEmail, pass, userStatus));
      /* istanbul ignore next */
      cov_1ebl7we1os().s[74]++;
      if (!saved) {
        /* istanbul ignore next */
        cov_1ebl7we1os().b[27][0]++;
        const token =
        /* istanbul ignore next */
        (cov_1ebl7we1os().s[75]++, (0, jwt_1.createToken)(name, lastName, userEmail, roll));
        const user =
        /* istanbul ignore next */
        (cov_1ebl7we1os().s[76]++, yield (0, authModel_1.getUserByEmailModel)(userEmail));
        /* istanbul ignore next */
        cov_1ebl7we1os().s[77]++;
        res.status(200).json({
          msg: 'Usuario Registrado con éxito.',
          token,
          user
        });
        /* istanbul ignore next */
        cov_1ebl7we1os().s[78]++;
        return;
      } else {
        /* istanbul ignore next */
        cov_1ebl7we1os().b[27][1]++;
        cov_1ebl7we1os().s[79]++;
        if (saved === 'Hay campos que no han sido llenados') {
          /* istanbul ignore next */
          cov_1ebl7we1os().b[28][0]++;
          cov_1ebl7we1os().s[80]++;
          res.status(409).json({
            msg: 'Hay campos que no han sido llenados',
            data: saved
          });
          /* istanbul ignore next */
          cov_1ebl7we1os().s[81]++;
          return;
        } else {
          /* istanbul ignore next */
          cov_1ebl7we1os().b[28][1]++;
          cov_1ebl7we1os().s[82]++;
          if (saved === 'El usuario ya Existe.') {
            /* istanbul ignore next */
            cov_1ebl7we1os().b[29][0]++;
            cov_1ebl7we1os().s[83]++;
            res.status(409).json({
              msg: 'Ya hay un usuario con esta direccion de correo electrónico.',
              data: saved
            });
            /* istanbul ignore next */
            cov_1ebl7we1os().s[84]++;
            return;
          } else
          /* istanbul ignore next */
          {
            cov_1ebl7we1os().b[29][1]++;
          }
        }
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_1ebl7we1os().s[85]++;
      console.info(`[src/controllers/authController.ts:95] Hubo un error al intentar registar un Usuario: ${error}`);
      /* istanbul ignore next */
      cov_1ebl7we1os().s[86]++;
      res.status(400).json({
        msg: 'Error al registrarse.',
        error
      });
      /* istanbul ignore next */
      cov_1ebl7we1os().s[87]++;
      return;
    }
  });
}
function loginController(req, res) {
  /* istanbul ignore next */
  cov_1ebl7we1os().f[18]++;
  cov_1ebl7we1os().s[88]++;
  return __awaiter(this, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1ebl7we1os().f[19]++;
    cov_1ebl7we1os().s[89]++;
    try {
      const {
        userEmail,
        userPassword
      } =
      /* istanbul ignore next */
      (cov_1ebl7we1os().s[90]++, req.body);
      /* istanbul ignore next */
      cov_1ebl7we1os().s[91]++;
      if (
      /* istanbul ignore next */
      (cov_1ebl7we1os().b[31][0]++, !userEmail) ||
      /* istanbul ignore next */
      (cov_1ebl7we1os().b[31][1]++, !userPassword)) {
        /* istanbul ignore next */
        cov_1ebl7we1os().b[30][0]++;
        cov_1ebl7we1os().s[92]++;
        res.status(400).json({
          msg: 'Todos los campos deben de ser llenados.'
        });
        /* istanbul ignore next */
        cov_1ebl7we1os().s[93]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1ebl7we1os().b[30][1]++;
      }
      cov_1ebl7we1os().s[94]++;
      if (!(0, validatios_1.validarEmail)(userEmail)) {
        /* istanbul ignore next */
        cov_1ebl7we1os().b[32][0]++;
        cov_1ebl7we1os().s[95]++;
        res.status(400).json({
          msg: 'Dirección de correo electrónico no válido.'
        });
        /* istanbul ignore next */
        cov_1ebl7we1os().s[96]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1ebl7we1os().b[32][1]++;
      }
      const data =
      /* istanbul ignore next */
      (cov_1ebl7we1os().s[97]++, yield (0, authModel_1.getUserByEmailModel)(userEmail));
      /* istanbul ignore next */
      cov_1ebl7we1os().s[98]++;
      if (!data) {
        /* istanbul ignore next */
        cov_1ebl7we1os().b[33][0]++;
        cov_1ebl7we1os().s[99]++;
        res.status(401).json({
          msg: 'Verifique su dirección de correo electrónico o regístrese si no tiene una cuenta.'
        });
        /* istanbul ignore next */
        cov_1ebl7we1os().s[100]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1ebl7we1os().b[33][1]++;
      }
      const name =
      /* istanbul ignore next */
      (cov_1ebl7we1os().s[101]++, data.name);
      const lastName =
      /* istanbul ignore next */
      (cov_1ebl7we1os().s[102]++, data.lastName);
      const roll =
      /* istanbul ignore next */
      (cov_1ebl7we1os().s[103]++, data.roll);
      const pass =
      /* istanbul ignore next */
      (cov_1ebl7we1os().s[104]++, data.userPassword);
      const isMatch =
      /* istanbul ignore next */
      (cov_1ebl7we1os().s[105]++, yield bcrypt.compare(userPassword, pass));
      /* istanbul ignore next */
      cov_1ebl7we1os().s[106]++;
      if (!isMatch) {
        /* istanbul ignore next */
        cov_1ebl7we1os().b[34][0]++;
        cov_1ebl7we1os().s[107]++;
        res.status(401).json({
          msg: 'Contraseña incorrecta.'
        });
        /* istanbul ignore next */
        cov_1ebl7we1os().s[108]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1ebl7we1os().b[34][1]++;
      }
      const token =
      /* istanbul ignore next */
      (cov_1ebl7we1os().s[109]++, (0, jwt_1.createToken)(name, lastName, userEmail, roll));
      /* istanbul ignore next */
      cov_1ebl7we1os().s[110]++;
      res.status(200).json({
        msg: 'Login Exitoso',
        token,
        user: data
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1ebl7we1os().s[111]++;
      res.status(401).json({
        msg: 'Error en la petición, Inténtelo mas tarde.',
        error
      });
      /* istanbul ignore next */
      cov_1ebl7we1os().s[112]++;
      return;
    }
  });
}
/* istanbul ignore next */
cov_1ebl7we1os().s[113]++;
const updateUserByEmailController = (req, res) => {
  /* istanbul ignore next */
  cov_1ebl7we1os().f[20]++;
  cov_1ebl7we1os().s[114]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1ebl7we1os().f[21]++;
    cov_1ebl7we1os().s[115]++;
    try {
      const dataUsers =
      /* istanbul ignore next */
      (cov_1ebl7we1os().s[116]++, req.body);
      const userEmail =
      /* istanbul ignore next */
      (cov_1ebl7we1os().s[117]++, req.params.userEmail.toLocaleLowerCase());
      /* istanbul ignore next */
      cov_1ebl7we1os().s[118]++;
      if (
      /* istanbul ignore next */
      (cov_1ebl7we1os().b[36][0]++, !dataUsers) ||
      /* istanbul ignore next */
      (cov_1ebl7we1os().b[36][1]++, !userEmail)) {
        /* istanbul ignore next */
        cov_1ebl7we1os().b[35][0]++;
        cov_1ebl7we1os().s[119]++;
        res.status(401).json({
          msg: 'No hay Datos para actualizar'
        });
      } else
      /* istanbul ignore next */
      {
        cov_1ebl7we1os().b[35][1]++;
      }
      cov_1ebl7we1os().s[120]++;
      if (!(0, validatios_1.validarEmail)(userEmail)) {
        /* istanbul ignore next */
        cov_1ebl7we1os().b[37][0]++;
        cov_1ebl7we1os().s[121]++;
        res.status(400).json({
          msg: 'Dirección de correo electrónico no válido.'
        });
        /* istanbul ignore next */
        cov_1ebl7we1os().s[122]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1ebl7we1os().b[37][1]++;
      }
      // status por defecto true si no se envía
      cov_1ebl7we1os().s[123]++;
      if (typeof dataUsers.status !== 'boolean') {
        /* istanbul ignore next */
        cov_1ebl7we1os().b[38][0]++;
        cov_1ebl7we1os().s[124]++;
        dataUsers.status = true;
      } else
      /* istanbul ignore next */
      {
        cov_1ebl7we1os().b[38][1]++;
      }
      const updateValidation =
      /* istanbul ignore next */
      (cov_1ebl7we1os().s[125]++, yield (0, authModel_1.updateUserByEmailModel)(userEmail, dataUsers));
      /* istanbul ignore next */
      cov_1ebl7we1os().s[126]++;
      if (updateValidation) {
        /* istanbul ignore next */
        cov_1ebl7we1os().b[39][0]++;
        cov_1ebl7we1os().s[127]++;
        console.info('Resultado de updateUserByEmailModel');
        /* istanbul ignore next */
        cov_1ebl7we1os().s[128]++;
        console.info(updateValidation);
        /* istanbul ignore next */
        cov_1ebl7we1os().s[129]++;
        res.status(401).json({
          msg: updateValidation
        });
      } else
      /* istanbul ignore next */
      {
        cov_1ebl7we1os().b[39][1]++;
      }
      cov_1ebl7we1os().s[130]++;
      res.status(200).json({
        msg: 'Consulta éxitosa'
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1ebl7we1os().s[131]++;
      console.info('Error al actualizar los datos.');
      /* istanbul ignore next */
      cov_1ebl7we1os().s[132]++;
      res.status(401).json({
        msg: 'Error al actualizar el usuario.'
      });
    }
  });
};
/* istanbul ignore next */
cov_1ebl7we1os().s[133]++;
exports.updateUserByEmailController = updateUserByEmailController;
/* istanbul ignore next */
cov_1ebl7we1os().s[134]++;
const emailRegisterController = (req, res) => {
  /* istanbul ignore next */
  cov_1ebl7we1os().f[22]++;
  cov_1ebl7we1os().s[135]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1ebl7we1os().f[23]++;
    const numRandon =
    /* istanbul ignore next */
    (cov_1ebl7we1os().s[136]++, (0, functions_1.numberRandon)().toString());
    const numParam =
    /* istanbul ignore next */
    (cov_1ebl7we1os().s[137]++, yield bcrypt.hash(numRandon, 10));
    const html =
    /* istanbul ignore next */
    (cov_1ebl7we1os().s[138]++, `<!DOCTYPE html>
  <html lang="es">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <title>Verifica tu correo - MusikOn</title>
  </head>
  <body style="margin: 0; padding: 0; background-color: #f4f4f4; font-family: 'Segoe UI', sans-serif;">
    <table align="center" width="100%" cellpadding="0" cellspacing="0" style="background-color: #f4f4f4; padding: 20px;">
      <tr>
        <td align="center">
          <table width="600" cellpadding="0" cellspacing="0" style="background-color: #004aad; border-radius: 10px; overflow: hidden; box-shadow: 0 4px 12px rgba(0,0,0,0.1);">
            <!-- Logo -->
            <tr>
              <td style="padding: 30px 0; text-align: center; background-color: #ffffff;">
                <img src="https://lh3.googleusercontent.com/a/ACg8ocLSs4B7UmP4bKLb26G-puyYjCURVh0Qnf9yHD_zxbCfRJTd3DFOovBly95OzJTWk34hnBf1RhigsdCnM0Wwg3TKCgsJ3rs=s288-c-no" alt="MusikOn Logo" width="120" style="border-radius: 50%;" />
              </td>
            </tr>

            <!-- Título -->
            <tr>
              <td style="padding: 30px; text-align: center;">
                <h2 style="margin: 0; font-size: 26px; color: #fff;">¡Bienvenido a <span style="color: #f1f1f1;">MusikOn</span>!</h2>
                <p style="font-size: 16px; color: hsl(246, 100%, 92%);">Gracias por registrarte. Solo falta un paso para activar tu cuenta.</p>
              </td>
            </tr>

            <!-- Botón -->
            <tr>
              <td style="text-align: center; padding: 20px;">
                <h1 style="display: inline-block; padding: 15px 30px; background-color: #004aad; color: #fff; text-decoration: none; font-weight: bold; border-radius: 8px; font-size: 50px;">
                  ${numRandon}
                </h1>
              </td>
            </tr>

            <!-- Mensaje de soporte -->
            <tr>
              <td style="padding: 20px 40px; text-align: center; font-size: 14px; color: #b6c9ff;">
                Si no creaste esta cuenta, puedes ignorar este mensaje. Si tienes dudas, contáctanos en <a href="mailto:appmusikon@gmail.com" style="color: hsl(214, 100%, 77%);">appmusikon@gmail.com</a>
              </td>
            </tr>

            <!-- Footer -->
            <tr>
              <td style="text-align: center; padding: 30px; background-color: #f0f0f0; font-size: 12px; color: #0041f3;">
                &copy; 2025 MusikOn. Todos los derechos reservados.
              </td>
            </tr>
          </table>
        </td>
      </tr>
    </table>
  </body>
  </html>`);
    /* istanbul ignore next */
    cov_1ebl7we1os().s[139]++;
    try {
      const userEmail =
      /* istanbul ignore next */
      (cov_1ebl7we1os().s[140]++, req.body.userEmail.toLocaleLowerCase());
      /* istanbul ignore next */
      cov_1ebl7we1os().s[141]++;
      if (!userEmail) {
        /* istanbul ignore next */
        cov_1ebl7we1os().b[40][0]++;
        cov_1ebl7we1os().s[142]++;
        res.status(400).json({
          msg: 'Todos los campos deben de ser llenados.'
        });
        /* istanbul ignore next */
        cov_1ebl7we1os().s[143]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1ebl7we1os().b[40][1]++;
      }
      cov_1ebl7we1os().s[144]++;
      if (!(0, validatios_1.validarEmail)(userEmail)) {
        /* istanbul ignore next */
        cov_1ebl7we1os().b[41][0]++;
        cov_1ebl7we1os().s[145]++;
        res.status(402).json({
          msg: 'Dirección de correo electrónico no válido.'
        });
        /* istanbul ignore next */
        cov_1ebl7we1os().s[146]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1ebl7we1os().b[41][1]++;
      }
      const querySnapshot =
      /* istanbul ignore next */
      (cov_1ebl7we1os().s[147]++, yield firebase_1.db.collection('users').where('userEmail', '==', userEmail).get());
      /* istanbul ignore next */
      cov_1ebl7we1os().s[148]++;
      if (!querySnapshot.empty) {
        /* istanbul ignore next */
        cov_1ebl7we1os().b[42][0]++;
        cov_1ebl7we1os().s[149]++;
        res.status(409).json({
          msg: 'Ya hay un usuario con esta dirección de correo electrónico.'
        });
        /* istanbul ignore next */
        cov_1ebl7we1os().s[150]++;
        return;
      } else {
        /* istanbul ignore next */
        cov_1ebl7we1os().b[42][1]++;
        cov_1ebl7we1os().s[151]++;
        yield (0, mailer_1.sendEmail)(userEmail, 'Verifica tu cuenta en MusikOn', html);
        /* istanbul ignore next */
        cov_1ebl7we1os().s[152]++;
        res.status(200).json({
          msg: 'Email recibido con exito!',
          numParam
        });
      }
    } catch (err) {
      /* istanbul ignore next */
      cov_1ebl7we1os().s[153]++;
      res.status(400).json({
        msg: 'Verifique bien su dirección de correo electrónico.',
        err
      });
      /* istanbul ignore next */
      cov_1ebl7we1os().s[154]++;
      return;
    }
  });
};
/* istanbul ignore next */
cov_1ebl7we1os().s[155]++;
exports.emailRegisterController = emailRegisterController;
/* istanbul ignore next */
cov_1ebl7we1os().s[156]++;
const validNumberGetByEmail = (req, res) => {
  /* istanbul ignore next */
  cov_1ebl7we1os().f[24]++;
  cov_1ebl7we1os().s[157]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1ebl7we1os().f[25]++;
    cov_1ebl7we1os().s[158]++;
    try {
      const numBack =
      /* istanbul ignore next */
      (cov_1ebl7we1os().s[159]++, req.body.vaildNumber.toString());
      const numParam =
      /* istanbul ignore next */
      (cov_1ebl7we1os().s[160]++, req.params.vaildNumber.toString());
      /* istanbul ignore next */
      cov_1ebl7we1os().s[161]++;
      if (
      /* istanbul ignore next */
      (cov_1ebl7we1os().b[44][0]++, numBack === '') ||
      /* istanbul ignore next */
      (cov_1ebl7we1os().b[44][1]++, numParam === '')) {
        /* istanbul ignore next */
        cov_1ebl7we1os().b[43][0]++;
        cov_1ebl7we1os().s[162]++;
        res.status(402).json({
          msg: 'Faltan datos requeridos.'
        });
        /* istanbul ignore next */
        cov_1ebl7we1os().s[163]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1ebl7we1os().b[43][1]++;
      }
      const isMatch =
      /* istanbul ignore next */
      (cov_1ebl7we1os().s[164]++, yield bcrypt.compare(numParam, numBack));
      /* istanbul ignore next */
      cov_1ebl7we1os().s[165]++;
      if (!isMatch) {
        /* istanbul ignore next */
        cov_1ebl7we1os().b[45][0]++;
        cov_1ebl7we1os().s[166]++;
        console.info(`Son Iguales: ${numBack},${numParam}.`);
        /* istanbul ignore next */
        cov_1ebl7we1os().s[167]++;
        res.status(402).json({
          msg: 'Codigo Incorrecto.'
        });
        /* istanbul ignore next */
        cov_1ebl7we1os().s[168]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1ebl7we1os().b[45][1]++;
      }
      cov_1ebl7we1os().s[169]++;
      console.info(`Numero del Body: ${numBack}`);
      /* istanbul ignore next */
      cov_1ebl7we1os().s[170]++;
      console.info(`Numero del Parametros: ${numParam}`);
      /* istanbul ignore next */
      cov_1ebl7we1os().s[171]++;
      res.status(200).json({
        msg: 'Bien hecho!'
      });
    } catch (err) {
      /* istanbul ignore next */
      cov_1ebl7we1os().s[172]++;
      res.status(402).json({
        msg: 'Fallo el proceso!'
      });
    }
  });
};
/* istanbul ignore next */
cov_1ebl7we1os().s[173]++;
exports.validNumberGetByEmail = validNumberGetByEmail;
/* istanbul ignore next */
cov_1ebl7we1os().s[174]++;
const addEventToUserController = (req, res) => {
  /* istanbul ignore next */
  cov_1ebl7we1os().f[26]++;
  cov_1ebl7we1os().s[175]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1ebl7we1os().f[27]++;
    cov_1ebl7we1os().s[176]++;
    try {
      const user =
      /* istanbul ignore next */
      (cov_1ebl7we1os().s[177]++, req.user);
      /* istanbul ignore next */
      cov_1ebl7we1os().s[178]++;
      if (
      /* istanbul ignore next */
      (cov_1ebl7we1os().b[47][0]++, !user) ||
      /* istanbul ignore next */
      (cov_1ebl7we1os().b[47][1]++, !user.userEmail)) {
        /* istanbul ignore next */
        cov_1ebl7we1os().b[46][0]++;
        cov_1ebl7we1os().s[179]++;
        res.status(401).json({
          msg: 'Usuario no autenticado.'
        });
        /* istanbul ignore next */
        cov_1ebl7we1os().s[180]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1ebl7we1os().b[46][1]++;
      }
      const eventData =
      /* istanbul ignore next */
      (cov_1ebl7we1os().s[181]++, req.body);
      /* istanbul ignore next */
      cov_1ebl7we1os().s[182]++;
      if (!eventData) {
        /* istanbul ignore next */
        cov_1ebl7we1os().b[48][0]++;
        cov_1ebl7we1os().s[183]++;
        res.status(400).json({
          msg: 'No se proporcionó información del evento.'
        });
        /* istanbul ignore next */
        cov_1ebl7we1os().s[184]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1ebl7we1os().b[48][1]++;
      }
      const result =
      /* istanbul ignore next */
      (cov_1ebl7we1os().s[185]++, yield (0, authModel_1.addEventToUserModel)(user.userEmail, eventData));
      /* istanbul ignore next */
      cov_1ebl7we1os().s[186]++;
      if (!result) {
        /* istanbul ignore next */
        cov_1ebl7we1os().b[49][0]++;
        cov_1ebl7we1os().s[187]++;
        res.status(200).json({
          msg: 'Evento guardado exitosamente.'
        });
      } else {
        /* istanbul ignore next */
        cov_1ebl7we1os().b[49][1]++;
        cov_1ebl7we1os().s[188]++;
        res.status(400).json({
          msg: result
        });
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_1ebl7we1os().s[189]++;
      res.status(500).json({
        msg: 'Error al guardar el evento.',
        error
      });
    }
  });
};
/* istanbul ignore next */
cov_1ebl7we1os().s[190]++;
exports.addEventToUserController = addEventToUserController;
// Controlador para solicitar verificación de email (para músicos y creadores de eventos)
/* istanbul ignore next */
cov_1ebl7we1os().s[191]++;
const requestEmailVerificationController = (req, res) => {
  /* istanbul ignore next */
  cov_1ebl7we1os().f[28]++;
  cov_1ebl7we1os().s[192]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1ebl7we1os().f[29]++;
    cov_1ebl7we1os().s[193]++;
    try {
      const {
        name,
        lastName,
        userEmail,
        userPassword,
        roll
      } =
      /* istanbul ignore next */
      (cov_1ebl7we1os().s[194]++, req.body);
      /* istanbul ignore next */
      cov_1ebl7we1os().s[195]++;
      console.log('[src/controllers/authController.ts:356] Solicitud de verificación recibida:', {
        name,
        lastName,
        userEmail,
        roll
      });
      // Validar campos requeridos
      /* istanbul ignore next */
      cov_1ebl7we1os().s[196]++;
      if (
      /* istanbul ignore next */
      (cov_1ebl7we1os().b[51][0]++, !name) ||
      /* istanbul ignore next */
      (cov_1ebl7we1os().b[51][1]++, !lastName) ||
      /* istanbul ignore next */
      (cov_1ebl7we1os().b[51][2]++, !userEmail) ||
      /* istanbul ignore next */
      (cov_1ebl7we1os().b[51][3]++, !userPassword) ||
      /* istanbul ignore next */
      (cov_1ebl7we1os().b[51][4]++, !roll)) {
        /* istanbul ignore next */
        cov_1ebl7we1os().b[50][0]++;
        cov_1ebl7we1os().s[197]++;
        return res.status(400).json({
          success: false,
          message: 'Todos los campos son requeridos: name, lastName, userEmail, userPassword, roll'
        });
      } else
      /* istanbul ignore next */
      {
        cov_1ebl7we1os().b[50][1]++;
      }
      // Validar email
      cov_1ebl7we1os().s[198]++;
      if (!(0, validatios_1.validarEmail)(userEmail)) {
        /* istanbul ignore next */
        cov_1ebl7we1os().b[52][0]++;
        cov_1ebl7we1os().s[199]++;
        return res.status(400).json({
          success: false,
          message: 'El formato del email no es válido'
        });
      } else
      /* istanbul ignore next */
      {
        cov_1ebl7we1os().b[52][1]++;
      }
      // Validar contraseña
      cov_1ebl7we1os().s[200]++;
      if (!(0, validatios_1.validarPassword)(userPassword)) {
        /* istanbul ignore next */
        cov_1ebl7we1os().b[53][0]++;
        cov_1ebl7we1os().s[201]++;
        return res.status(400).json({
          success: false,
          message: 'La contraseña debe contener mayúsculas, minúsculas, números y caracteres especiales'
        });
      } else
      /* istanbul ignore next */
      {
        cov_1ebl7we1os().b[53][1]++;
      }
      // Validar rol
      cov_1ebl7we1os().s[202]++;
      if (!['musico', 'eventCreator'].includes(roll)) {
        /* istanbul ignore next */
        cov_1ebl7we1os().b[54][0]++;
        cov_1ebl7we1os().s[203]++;
        return res.status(400).json({
          success: false,
          message: 'El rol debe ser "musico" o "eventCreator"'
        });
      } else
      /* istanbul ignore next */
      {
        cov_1ebl7we1os().b[54][1]++;
      }
      // Verificar si el usuario ya existe
      const existingUser =
      /* istanbul ignore next */
      (cov_1ebl7we1os().s[204]++, yield (0, authModel_1.getUserByEmailModel)(userEmail));
      /* istanbul ignore next */
      cov_1ebl7we1os().s[205]++;
      if (existingUser) {
        /* istanbul ignore next */
        cov_1ebl7we1os().b[55][0]++;
        cov_1ebl7we1os().s[206]++;
        return res.status(409).json({
          success: false,
          message: 'Ya existe un usuario con este email'
        });
      } else
      /* istanbul ignore next */
      {
        cov_1ebl7we1os().b[55][1]++;
      }
      // Generar código de verificación
      const verificationCode =
      /* istanbul ignore next */
      (cov_1ebl7we1os().s[207]++, (0, functions_1.numberRandon)().toString());
      const hashedCode =
      /* istanbul ignore next */
      (cov_1ebl7we1os().s[208]++, yield bcrypt.hash(verificationCode, 10));
      // Guardar datos temporalmente (se guardarán en la base de datos después de la verificación)
      const tempUserData =
      /* istanbul ignore next */
      (cov_1ebl7we1os().s[209]++, {
        name,
        lastName,
        userEmail: userEmail.toLowerCase(),
        userPassword,
        roll,
        verificationCode: hashedCode,
        expiresAt: Date.now() + 15 * 60 * 1000 // 15 minutos
      });
      // Guardar en memoria temporal (en producción usar Redis)
      /* istanbul ignore next */
      cov_1ebl7we1os().s[210]++;
      verificationCodes.set(userEmail.toLowerCase(), {
        code: verificationCode,
        userData: tempUserData,
        expiresAt: Date.now() + 15 * 60 * 1000
      });
      // Enviar email de verificación
      const html =
      /* istanbul ignore next */
      (cov_1ebl7we1os().s[211]++, `<!DOCTYPE html>
    <html lang="es">
    <head>
      <meta charset="UTF-8" />
      <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
      <title>Verifica tu cuenta - MusikOn</title>
    </head>
    <body style="margin: 0; padding: 0; background-color: #f4f4f4; font-family: 'Segoe UI', sans-serif;">
      <table align="center" width="100%" cellpadding="0" cellspacing="0" style="background-color: #f4f4f4; padding: 20px;">
        <tr>
          <td align="center">
            <table width="600" cellpadding="0" cellspacing="0" style="background-color: #004aad; border-radius: 10px; overflow: hidden; box-shadow: 0 4px 12px rgba(0,0,0,0.1);">
              <!-- Logo -->
              <tr>
                <td style="padding: 30px 0; text-align: center; background-color: #ffffff;">
                  <img src="https://lh3.googleusercontent.com/a/ACg8ocLSs4B7UmP4bKLb26G-puyYjCURVh0Qnf9yHD_zxbCfRJTd3DFOovBly95OzJTWk34hnBf1RhigsdCnM0Wwg3TKCgsJ3rs=s288-c-no" alt="MusikOn Logo" width="120" style="border-radius: 50%;" />
                </td>
              </tr>

              <!-- Título -->
              <tr>
                <td style="padding: 30px; text-align: center;">
                  <h2 style="margin: 0; font-size: 26px; color: #fff;">¡Bienvenido a <span style="color: #f1f1f1;">MusikOn</span>!</h2>
                  <p style="font-size: 16px; color: hsl(246, 100%, 92%);">Gracias por registrarte como ${roll === 'musico' ?
      /* istanbul ignore next */
      (cov_1ebl7we1os().b[56][0]++, 'músico') :
      /* istanbul ignore next */
      (cov_1ebl7we1os().b[56][1]++, 'creador de eventos')}. Solo falta un paso para activar tu cuenta.</p>
                </td>
              </tr>

              <!-- Código -->
              <tr>
                <td style="text-align: center; padding: 20px;">
                  <h1 style="display: inline-block; padding: 15px 30px; background-color: #004aad; color: #fff; text-decoration: none; font-weight: bold; border-radius: 8px; font-size: 50px;">
                    ${verificationCode}
                  </h1>
                </td>
              </tr>

              <!-- Instrucciones -->
              <tr>
                <td style="padding: 20px 40px; text-align: center; font-size: 14px; color: #b6c9ff;">
                  <p>Ingresa este código en la aplicación para completar tu registro.</p>
                  <p>Este código expira en 15 minutos.</p>
                </td>
              </tr>

              <!-- Mensaje de soporte -->
              <tr>
                <td style="padding: 20px 40px; text-align: center; font-size: 14px; color: #b6c9ff;">
                  Si no creaste esta cuenta, puedes ignorar este mensaje. Si tienes dudas, contáctanos en <a href="mailto:appmusikon@gmail.com" style="color: hsl(214, 100%, 77%);">appmusikon@gmail.com</a>
                </td>
              </tr>

              <!-- Footer -->
              <tr>
                <td style="text-align: center; padding: 30px; background-color: #f0f0f0; font-size: 12px; color: #0041f3;">
                  &copy; 2025 MusikOn. Todos los derechos reservados.
                </td>
              </tr>
            </table>
          </td>
        </tr>
      </table>
    </body>
    </html>`);
      /* istanbul ignore next */
      cov_1ebl7we1os().s[212]++;
      yield (0, mailer_1.sendEmail)(userEmail, 'Verifica tu cuenta en MusikOn', html);
      /* istanbul ignore next */
      cov_1ebl7we1os().s[213]++;
      console.log('[src/controllers/authController.ts:420] Email de verificación enviado:', userEmail);
      /* istanbul ignore next */
      cov_1ebl7we1os().s[214]++;
      return res.status(200).json({
        success: true,
        message: 'Email de verificación enviado exitosamente. Revisa tu bandeja de entrada.',
        data: {
          userEmail,
          roll,
          expiresIn: '15 minutos'
        }
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1ebl7we1os().s[215]++;
      console.error('[src/controllers/authController.ts:440] Error en requestEmailVerificationController:', error);
      /* istanbul ignore next */
      cov_1ebl7we1os().s[216]++;
      return res.status(500).json({
        success: false,
        message: 'Error interno del servidor',
        error: error instanceof Error ?
        /* istanbul ignore next */
        (cov_1ebl7we1os().b[57][0]++, error.message) :
        /* istanbul ignore next */
        (cov_1ebl7we1os().b[57][1]++, 'Error desconocido')
      });
    }
  });
};
/* istanbul ignore next */
cov_1ebl7we1os().s[217]++;
exports.requestEmailVerificationController = requestEmailVerificationController;
// Controlador para verificar código y completar registro
/* istanbul ignore next */
cov_1ebl7we1os().s[218]++;
const verifyAndCompleteRegistrationController = (req, res) => {
  /* istanbul ignore next */
  cov_1ebl7we1os().f[30]++;
  cov_1ebl7we1os().s[219]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1ebl7we1os().f[31]++;
    cov_1ebl7we1os().s[220]++;
    try {
      const {
        userEmail,
        code
      } =
      /* istanbul ignore next */
      (cov_1ebl7we1os().s[221]++, req.body);
      /* istanbul ignore next */
      cov_1ebl7we1os().s[222]++;
      console.log('[src/controllers/authController.ts:450] Verificación de código recibida:', {
        userEmail,
        code
      });
      // Validar campos requeridos
      /* istanbul ignore next */
      cov_1ebl7we1os().s[223]++;
      if (
      /* istanbul ignore next */
      (cov_1ebl7we1os().b[59][0]++, !userEmail) ||
      /* istanbul ignore next */
      (cov_1ebl7we1os().b[59][1]++, !code)) {
        /* istanbul ignore next */
        cov_1ebl7we1os().b[58][0]++;
        cov_1ebl7we1os().s[224]++;
        return res.status(400).json({
          success: false,
          message: 'Email y código son requeridos'
        });
      } else
      /* istanbul ignore next */
      {
        cov_1ebl7we1os().b[58][1]++;
      }
      // Validar email
      cov_1ebl7we1os().s[225]++;
      if (!(0, validatios_1.validarEmail)(userEmail)) {
        /* istanbul ignore next */
        cov_1ebl7we1os().b[60][0]++;
        cov_1ebl7we1os().s[226]++;
        return res.status(400).json({
          success: false,
          message: 'Email inválido'
        });
      } else
      /* istanbul ignore next */
      {
        cov_1ebl7we1os().b[60][1]++;
      }
      // Buscar datos temporales
      const storedData =
      /* istanbul ignore next */
      (cov_1ebl7we1os().s[227]++, verificationCodes.get(userEmail.toLowerCase()));
      /* istanbul ignore next */
      cov_1ebl7we1os().s[228]++;
      if (!storedData) {
        /* istanbul ignore next */
        cov_1ebl7we1os().b[61][0]++;
        cov_1ebl7we1os().s[229]++;
        return res.status(400).json({
          success: false,
          message: 'Código no encontrado o expirado'
        });
      } else
      /* istanbul ignore next */
      {
        cov_1ebl7we1os().b[61][1]++;
      }
      // Verificar expiración
      cov_1ebl7we1os().s[230]++;
      if (storedData.expiresAt < Date.now()) {
        /* istanbul ignore next */
        cov_1ebl7we1os().b[62][0]++;
        cov_1ebl7we1os().s[231]++;
        verificationCodes.delete(userEmail.toLowerCase());
        /* istanbul ignore next */
        cov_1ebl7we1os().s[232]++;
        return res.status(400).json({
          success: false,
          message: 'Código expirado'
        });
      } else
      /* istanbul ignore next */
      {
        cov_1ebl7we1os().b[62][1]++;
      }
      // Verificar que existan los datos del usuario
      cov_1ebl7we1os().s[233]++;
      if (!storedData.userData) {
        /* istanbul ignore next */
        cov_1ebl7we1os().b[63][0]++;
        cov_1ebl7we1os().s[234]++;
        return res.status(400).json({
          success: false,
          message: 'Datos de registro no encontrados'
        });
      } else
      /* istanbul ignore next */
      {
        cov_1ebl7we1os().b[63][1]++;
      }
      // Verificar código
      const isCodeValid =
      /* istanbul ignore next */
      (cov_1ebl7we1os().s[235]++, yield bcrypt.compare(code, storedData.userData.verificationCode));
      /* istanbul ignore next */
      cov_1ebl7we1os().s[236]++;
      if (!isCodeValid) {
        /* istanbul ignore next */
        cov_1ebl7we1os().b[64][0]++;
        cov_1ebl7we1os().s[237]++;
        return res.status(400).json({
          success: false,
          message: 'Código inválido'
        });
      } else
      /* istanbul ignore next */
      {
        cov_1ebl7we1os().b[64][1]++;
      }
      // Registrar usuario en la base de datos
      const {
        name,
        lastName,
        userPassword,
        roll
      } =
      /* istanbul ignore next */
      (cov_1ebl7we1os().s[238]++, storedData.userData);
      const result =
      /* istanbul ignore next */
      (cov_1ebl7we1os().s[239]++, yield (0, authModel_1.registerModel)(name, lastName, roll, userEmail, userPassword, true));
      /* istanbul ignore next */
      cov_1ebl7we1os().s[240]++;
      if (result === false) {
        /* istanbul ignore next */
        cov_1ebl7we1os().b[65][0]++;
        cov_1ebl7we1os().s[241]++;
        // Limpiar datos temporales
        verificationCodes.delete(userEmail.toLowerCase());
        // Generar token JWT
        const token =
        /* istanbul ignore next */
        (cov_1ebl7we1os().s[242]++, (0, jwt_1.createToken)(name, lastName, userEmail, roll));
        /* istanbul ignore next */
        cov_1ebl7we1os().s[243]++;
        console.log('[src/controllers/authController.ts:500] Usuario registrado exitosamente:', userEmail);
        /* istanbul ignore next */
        cov_1ebl7we1os().s[244]++;
        return res.status(201).json({
          success: true,
          message: roll === 'musico' ?
          /* istanbul ignore next */
          (cov_1ebl7we1os().b[66][0]++, 'Músico registrado exitosamente. Su perfil será completado por un administrador.') :
          /* istanbul ignore next */
          (cov_1ebl7we1os().b[66][1]++, 'Creador de eventos registrado exitosamente.'),
          data: {
            userEmail,
            name,
            lastName,
            roll,
            status: roll === 'musico' ?
            /* istanbul ignore next */
            (cov_1ebl7we1os().b[67][0]++, 'pending_approval') :
            /* istanbul ignore next */
            (cov_1ebl7we1os().b[67][1]++, 'active'),
            token
          }
        });
      } else {
        /* istanbul ignore next */
        cov_1ebl7we1os().b[65][1]++;
        cov_1ebl7we1os().s[245]++;
        return res.status(400).json({
          success: false,
          message: 'Error al registrar el usuario',
          error: result
        });
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_1ebl7we1os().s[246]++;
      console.error('[src/controllers/authController.ts:520] Error en verifyAndCompleteRegistrationController:', error);
      /* istanbul ignore next */
      cov_1ebl7we1os().s[247]++;
      return res.status(500).json({
        success: false,
        message: 'Error interno del servidor',
        error: error instanceof Error ?
        /* istanbul ignore next */
        (cov_1ebl7we1os().b[68][0]++, error.message) :
        /* istanbul ignore next */
        (cov_1ebl7we1os().b[68][1]++, 'Error desconocido')
      });
    }
  });
};
/* istanbul ignore next */
cov_1ebl7we1os().s[248]++;
exports.verifyAndCompleteRegistrationController = verifyAndCompleteRegistrationController;
/* istanbul ignore next */
cov_1ebl7we1os().s[249]++;
const deleteUserByEmailController = (req, res) => {
  /* istanbul ignore next */
  cov_1ebl7we1os().f[32]++;
  cov_1ebl7we1os().s[250]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1ebl7we1os().f[33]++;
    cov_1ebl7we1os().s[251]++;
    try {
      const {
        userEmail
      } =
      /* istanbul ignore next */
      (cov_1ebl7we1os().s[252]++, req.body);
      /* istanbul ignore next */
      cov_1ebl7we1os().s[253]++;
      console.log('[src/controllers/authController.ts:270] [DELETE] userEmail recibido:', userEmail); // LOG de depuración
      /* istanbul ignore next */
      cov_1ebl7we1os().s[254]++;
      if (!userEmail) {
        /* istanbul ignore next */
        cov_1ebl7we1os().b[69][0]++;
        cov_1ebl7we1os().s[255]++;
        res.status(400).json({
          message: 'Falta el email'
        });
        /* istanbul ignore next */
        cov_1ebl7we1os().s[256]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1ebl7we1os().b[69][1]++;
      }
      const result =
      /* istanbul ignore next */
      (cov_1ebl7we1os().s[257]++, yield (0, authModel_1.deleteUserByEmailModel)(userEmail));
      /* istanbul ignore next */
      cov_1ebl7we1os().s[258]++;
      console.log('[src/controllers/authController.ts:276] Resultado de deleteUserByEmailModel:', result);
      /* istanbul ignore next */
      cov_1ebl7we1os().s[259]++;
      console.log('[src/controllers/authController.ts:277] [DELETE] Resultado de deleteUserByEmailModel:', result); // LOG de depuración
      /* istanbul ignore next */
      cov_1ebl7we1os().s[260]++;
      if (result === false) {
        /* istanbul ignore next */
        cov_1ebl7we1os().b[70][0]++;
        cov_1ebl7we1os().s[261]++;
        res.json({
          message: 'Usuario eliminado correctamente'
        });
      } else {
        /* istanbul ignore next */
        cov_1ebl7we1os().b[70][1]++;
        cov_1ebl7we1os().s[262]++;
        if (result === 'Falta el email') {
          /* istanbul ignore next */
          cov_1ebl7we1os().b[71][0]++;
          cov_1ebl7we1os().s[263]++;
          res.status(400).json({
            message: 'Falta el email'
          });
        } else {
          /* istanbul ignore next */
          cov_1ebl7we1os().b[71][1]++;
          cov_1ebl7we1os().s[264]++;
          if (result === 'not_found') {
            /* istanbul ignore next */
            cov_1ebl7we1os().b[72][0]++;
            cov_1ebl7we1os().s[265]++;
            res.status(404).json({
              message: 'El usuario no existe o ya fue eliminado'
            });
          } else {
            /* istanbul ignore next */
            cov_1ebl7we1os().b[72][1]++;
            cov_1ebl7we1os().s[266]++;
            res.status(500).json({
              message: result
            });
          }
        }
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_1ebl7we1os().s[267]++;
      console.log('[src/controllers/authController.ts:288] Error en deleteUserByEmailController');
      /* istanbul ignore next */
      cov_1ebl7we1os().s[268]++;
      console.error('[src/controllers/authController.ts:289] [DELETE] Error al eliminar usuario:', error); // LOG de error
      /* istanbul ignore next */
      cov_1ebl7we1os().s[269]++;
      res.status(500).json({
        message: 'Error al eliminar usuario',
        error: error.message
      });
    }
  });
};
/* istanbul ignore next */
cov_1ebl7we1os().s[270]++;
exports.deleteUserByEmailController = deleteUserByEmailController;
/**
 * @swagger
 * /auth/forgot-password:
 *   post:
 *     summary: Solicitar recuperación de contraseña (solo superadmin)
 *     tags: [Auth]
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             type: object
 *             properties:
 *               userEmail:
 *                 type: string
 *     responses:
 *       200:
 *         description: Código de verificación enviado
 *       404:
 *         description: Usuario no encontrado
 *       403:
 *         description: Solo superadmin puede recuperar contraseña
 *
 * /auth/verify-code:
 *   post:
 *     summary: Verificar código de recuperación
 *     tags: [Auth]
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             type: object
 *             properties:
 *               userEmail:
 *                 type: string
 *               code:
 *                 type: string
 *     responses:
 *       200:
 *         description: Código verificado correctamente
 *       400:
 *         description: Código inválido o expirado
 *
 * /auth/reset-password:
 *   post:
 *     summary: Restablecer contraseña
 *     tags: [Auth]
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             type: object
 *             properties:
 *               userEmail:
 *                 type: string
 *               code:
 *                 type: string
 *               newPassword:
 *                 type: string
 *     responses:
 *       200:
 *         description: Contraseña actualizada correctamente
 *       400:
 *         description: Código inválido o contraseña débil
 */
// Almacén temporal para códigos de verificación (en producción usar Redis)
const verificationCodes =
/* istanbul ignore next */
(cov_1ebl7we1os().s[271]++, new Map());
// Función para generar código de verificación
function generateVerificationCode() {
  /* istanbul ignore next */
  cov_1ebl7we1os().f[34]++;
  cov_1ebl7we1os().s[272]++;
  return Math.floor(100000 + Math.random() * 900000).toString();
}
// Función para limpiar códigos expirados
function cleanupExpiredCodes() {
  /* istanbul ignore next */
  cov_1ebl7we1os().f[35]++;
  const now =
  /* istanbul ignore next */
  (cov_1ebl7we1os().s[273]++, Date.now());
  /* istanbul ignore next */
  cov_1ebl7we1os().s[274]++;
  for (const [email, data] of verificationCodes.entries()) {
    /* istanbul ignore next */
    cov_1ebl7we1os().s[275]++;
    if (data.expiresAt < now) {
      /* istanbul ignore next */
      cov_1ebl7we1os().b[73][0]++;
      cov_1ebl7we1os().s[276]++;
      verificationCodes.delete(email);
    } else
    /* istanbul ignore next */
    {
      cov_1ebl7we1os().b[73][1]++;
    }
  }
}
// Ejecutar limpieza cada 5 minutos solo en producción
/* istanbul ignore next */
cov_1ebl7we1os().s[277]++;
if (process.env.NODE_ENV === 'production') {
  /* istanbul ignore next */
  cov_1ebl7we1os().b[74][0]++;
  cov_1ebl7we1os().s[278]++;
  setInterval(cleanupExpiredCodes, 5 * 60 * 1000);
} else
/* istanbul ignore next */
{
  cov_1ebl7we1os().b[74][1]++;
}
// Solicitar recuperación de contraseña (solo superadmin)
cov_1ebl7we1os().s[279]++;
const forgotPasswordController = (req, res) => {
  /* istanbul ignore next */
  cov_1ebl7we1os().f[36]++;
  cov_1ebl7we1os().s[280]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1ebl7we1os().f[37]++;
    cov_1ebl7we1os().s[281]++;
    try {
      const {
        userEmail
      } =
      /* istanbul ignore next */
      (cov_1ebl7we1os().s[282]++, req.body);
      /* istanbul ignore next */
      cov_1ebl7we1os().s[283]++;
      if (!userEmail) {
        /* istanbul ignore next */
        cov_1ebl7we1os().b[75][0]++;
        cov_1ebl7we1os().s[284]++;
        res.status(400).json({
          msg: 'Email es requerido'
        });
        /* istanbul ignore next */
        cov_1ebl7we1os().s[285]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1ebl7we1os().b[75][1]++;
      }
      cov_1ebl7we1os().s[286]++;
      if (!(0, validatios_1.validarEmail)(userEmail)) {
        /* istanbul ignore next */
        cov_1ebl7we1os().b[76][0]++;
        cov_1ebl7we1os().s[287]++;
        res.status(400).json({
          msg: 'Email inválido'
        });
        /* istanbul ignore next */
        cov_1ebl7we1os().s[288]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1ebl7we1os().b[76][1]++;
      }
      // Buscar usuario
      const user =
      /* istanbul ignore next */
      (cov_1ebl7we1os().s[289]++, yield (0, authModel_1.getUserByEmailModel)(userEmail));
      /* istanbul ignore next */
      cov_1ebl7we1os().s[290]++;
      if (!user) {
        /* istanbul ignore next */
        cov_1ebl7we1os().b[77][0]++;
        cov_1ebl7we1os().s[291]++;
        res.status(404).json({
          msg: 'Usuario no encontrado'
        });
        /* istanbul ignore next */
        cov_1ebl7we1os().s[292]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1ebl7we1os().b[77][1]++;
      }
      // Verificar que sea superadmin
      cov_1ebl7we1os().s[293]++;
      if (user.roll !== 'superadmin') {
        /* istanbul ignore next */
        cov_1ebl7we1os().b[78][0]++;
        cov_1ebl7we1os().s[294]++;
        res.status(403).json({
          msg: 'Solo superadmin puede recuperar contraseña'
        });
        /* istanbul ignore next */
        cov_1ebl7we1os().s[295]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1ebl7we1os().b[78][1]++;
      }
      // Generar código de verificación
      const verificationCode =
      /* istanbul ignore next */
      (cov_1ebl7we1os().s[296]++, generateVerificationCode());
      const expiresAt =
      /* istanbul ignore next */
      (cov_1ebl7we1os().s[297]++, Date.now() + 10 * 60 * 1000); // 10 minutos
      // Guardar código temporalmente
      /* istanbul ignore next */
      cov_1ebl7we1os().s[298]++;
      verificationCodes.set(userEmail.toLowerCase(), {
        code: verificationCode,
        expiresAt
      });
      // Enviar email con código
      const html =
      /* istanbul ignore next */
      (cov_1ebl7we1os().s[299]++, `<!DOCTYPE html>
    <html lang="es">
    <head>
      <meta charset="UTF-8" />
      <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
      <title>Recuperar Contraseña - MusikOn</title>
    </head>
    <body style="margin: 0; padding: 0; background-color: #f4f4f4; font-family: 'Segoe UI', sans-serif;">
      <table align="center" width="100%" cellpadding="0" cellspacing="0" style="background-color: #f4f4f4; padding: 20px;">
        <tr>
          <td align="center">
            <table width="600" cellpadding="0" cellspacing="0" style="background-color: #004aad; border-radius: 10px; overflow: hidden; box-shadow: 0 4px 12px rgba(0,0,0,0.1);">
              <!-- Logo -->
              <tr>
                <td style="padding: 30px 0; text-align: center; background-color: #ffffff;">
                  <img src="https://lh3.googleusercontent.com/a/ACg8ocLSs4B7UmP4bKLb26G-puyYjCURVh0Qnf9yHD_zxbCfRJTd3DFOovBly95OzJTWk34hnBf1RhigsdCnM0Wwg3TKCgsJ3rs=s288-c-no" alt="MusikOn Logo" width="120" style="border-radius: 50%;" />
                </td>
              </tr>

              <!-- Título -->
              <tr>
                <td style="padding: 30px; text-align: center;">
                  <h2 style="margin: 0; font-size: 26px; color: #fff;">Recuperar Contraseña</h2>
                  <p style="font-size: 16px; color: hsl(246, 100%, 92%);">Hola ${user.name}, has solicitado restablecer tu contraseña.</p>
                </td>
              </tr>

              <!-- Código de Verificación -->
              <tr>
                <td style="text-align: center; padding: 20px;">
                  <h1 style="display: inline-block; padding: 15px 30px; background-color: #004aad; color: #fff; text-decoration: none; font-weight: bold; border-radius: 8px; font-size: 50px;">
                    ${verificationCode}
                  </h1>
                </td>
              </tr>

              <!-- Instrucciones -->
              <tr>
                <td style="padding: 20px 40px; text-align: center;">
                  <p style="font-size: 16px; color: #fff; margin-bottom: 10px;">
                    <strong>Instrucciones:</strong>
                  </p>
                  <p style="font-size: 14px; color: #b6c9ff; margin: 5px 0;">
                    1. Copia el código de 6 dígitos de arriba
                  </p>
                  <p style="font-size: 14px; color: #b6c9ff; margin: 5px 0;">
                    2. Ve a la página de recuperación de contraseña
                  </p>
                  <p style="font-size: 14px; color: #b6c9ff; margin: 5px 0;">
                    3. Ingresa el código y tu nueva contraseña
                  </p>
                  <p style="font-size: 14px; color: #b6c9ff; margin: 5px 0;">
                    4. El código expira en 10 minutos
                  </p>
                </td>
              </tr>

              <!-- Mensaje de seguridad -->
              <tr>
                <td style="padding: 20px 40px; text-align: center; font-size: 14px; color: #b6c9ff;">
                  <p style="margin: 0;">
                    <strong>⚠️ Importante:</strong> Si no solicitaste este cambio, puedes ignorar este mensaje. 
                    Tu contraseña actual permanecerá sin cambios.
                  </p>
                </td>
              </tr>

              <!-- Footer -->
              <tr>
                <td style="text-align: center; padding: 30px; background-color: #f0f0f0; font-size: 12px; color: #0041f3;">
                  &copy; 2025 MusikOn. Todos los derechos reservados.
                </td>
              </tr>
            </table>
          </td>
        </tr>
      </table>
    </body>
    </html>`);
      /* istanbul ignore next */
      cov_1ebl7we1os().s[300]++;
      try {
        /* istanbul ignore next */
        cov_1ebl7we1os().s[301]++;
        yield (0, mailer_1.sendEmail)(userEmail, 'Recuperar Contraseña - MusikOn', html);
        /* istanbul ignore next */
        cov_1ebl7we1os().s[302]++;
        res.status(200).json({
          msg: 'Código de verificación enviado al email',
          userEmail: userEmail
        });
      } catch (emailError) {
        /* istanbul ignore next */
        cov_1ebl7we1os().s[303]++;
        console.error('Error al enviar email:', emailError);
        /* istanbul ignore next */
        cov_1ebl7we1os().s[304]++;
        res.status(500).json({
          msg: 'Error al enviar email de verificación'
        });
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_1ebl7we1os().s[305]++;
      console.error('Error en forgotPasswordController:', error);
      /* istanbul ignore next */
      cov_1ebl7we1os().s[306]++;
      res.status(500).json({
        msg: 'Error interno del servidor'
      });
    }
  });
};
/* istanbul ignore next */
cov_1ebl7we1os().s[307]++;
exports.forgotPasswordController = forgotPasswordController;
// Verificar código de recuperación
/* istanbul ignore next */
cov_1ebl7we1os().s[308]++;
const verifyCodeController = (req, res) => {
  /* istanbul ignore next */
  cov_1ebl7we1os().f[38]++;
  cov_1ebl7we1os().s[309]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1ebl7we1os().f[39]++;
    cov_1ebl7we1os().s[310]++;
    try {
      const {
        userEmail,
        code
      } =
      /* istanbul ignore next */
      (cov_1ebl7we1os().s[311]++, req.body);
      /* istanbul ignore next */
      cov_1ebl7we1os().s[312]++;
      if (
      /* istanbul ignore next */
      (cov_1ebl7we1os().b[80][0]++, !userEmail) ||
      /* istanbul ignore next */
      (cov_1ebl7we1os().b[80][1]++, !code)) {
        /* istanbul ignore next */
        cov_1ebl7we1os().b[79][0]++;
        cov_1ebl7we1os().s[313]++;
        res.status(400).json({
          msg: 'Email y código son requeridos'
        });
        /* istanbul ignore next */
        cov_1ebl7we1os().s[314]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1ebl7we1os().b[79][1]++;
      }
      cov_1ebl7we1os().s[315]++;
      if (!(0, validatios_1.validarEmail)(userEmail)) {
        /* istanbul ignore next */
        cov_1ebl7we1os().b[81][0]++;
        cov_1ebl7we1os().s[316]++;
        res.status(400).json({
          msg: 'Email inválido'
        });
        /* istanbul ignore next */
        cov_1ebl7we1os().s[317]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1ebl7we1os().b[81][1]++;
      }
      // Buscar usuario
      const user =
      /* istanbul ignore next */
      (cov_1ebl7we1os().s[318]++, yield (0, authModel_1.getUserByEmailModel)(userEmail));
      /* istanbul ignore next */
      cov_1ebl7we1os().s[319]++;
      if (!user) {
        /* istanbul ignore next */
        cov_1ebl7we1os().b[82][0]++;
        cov_1ebl7we1os().s[320]++;
        res.status(404).json({
          msg: 'Usuario no encontrado'
        });
        /* istanbul ignore next */
        cov_1ebl7we1os().s[321]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1ebl7we1os().b[82][1]++;
      }
      // Verificar que sea superadmin
      cov_1ebl7we1os().s[322]++;
      if (user.roll !== 'superadmin') {
        /* istanbul ignore next */
        cov_1ebl7we1os().b[83][0]++;
        cov_1ebl7we1os().s[323]++;
        res.status(403).json({
          msg: 'Solo superadmin puede recuperar contraseña'
        });
        /* istanbul ignore next */
        cov_1ebl7we1os().s[324]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1ebl7we1os().b[83][1]++;
      }
      // Verificar código
      const storedData =
      /* istanbul ignore next */
      (cov_1ebl7we1os().s[325]++, verificationCodes.get(userEmail.toLowerCase()));
      /* istanbul ignore next */
      cov_1ebl7we1os().s[326]++;
      if (!storedData) {
        /* istanbul ignore next */
        cov_1ebl7we1os().b[84][0]++;
        cov_1ebl7we1os().s[327]++;
        res.status(400).json({
          msg: 'Código no encontrado o expirado'
        });
        /* istanbul ignore next */
        cov_1ebl7we1os().s[328]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1ebl7we1os().b[84][1]++;
      }
      cov_1ebl7we1os().s[329]++;
      if (storedData.expiresAt < Date.now()) {
        /* istanbul ignore next */
        cov_1ebl7we1os().b[85][0]++;
        cov_1ebl7we1os().s[330]++;
        verificationCodes.delete(userEmail.toLowerCase());
        /* istanbul ignore next */
        cov_1ebl7we1os().s[331]++;
        res.status(400).json({
          msg: 'Código expirado'
        });
        /* istanbul ignore next */
        cov_1ebl7we1os().s[332]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1ebl7we1os().b[85][1]++;
      }
      cov_1ebl7we1os().s[333]++;
      if (storedData.code !== code) {
        /* istanbul ignore next */
        cov_1ebl7we1os().b[86][0]++;
        cov_1ebl7we1os().s[334]++;
        res.status(400).json({
          msg: 'Código inválido'
        });
        /* istanbul ignore next */
        cov_1ebl7we1os().s[335]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1ebl7we1os().b[86][1]++;
      }
      cov_1ebl7we1os().s[336]++;
      res.status(200).json({
        msg: 'Código verificado correctamente',
        userEmail: userEmail
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1ebl7we1os().s[337]++;
      console.error('Error en verifyCodeController:', error);
      /* istanbul ignore next */
      cov_1ebl7we1os().s[338]++;
      res.status(500).json({
        msg: 'Error interno del servidor'
      });
    }
  });
};
/* istanbul ignore next */
cov_1ebl7we1os().s[339]++;
exports.verifyCodeController = verifyCodeController;
// Restablecer contraseña
/* istanbul ignore next */
cov_1ebl7we1os().s[340]++;
const resetPasswordController = (req, res) => {
  /* istanbul ignore next */
  cov_1ebl7we1os().f[40]++;
  cov_1ebl7we1os().s[341]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_1ebl7we1os().f[41]++;
    cov_1ebl7we1os().s[342]++;
    try {
      const {
        userEmail,
        code,
        newPassword
      } =
      /* istanbul ignore next */
      (cov_1ebl7we1os().s[343]++, req.body);
      /* istanbul ignore next */
      cov_1ebl7we1os().s[344]++;
      if (
      /* istanbul ignore next */
      (cov_1ebl7we1os().b[88][0]++, !userEmail) ||
      /* istanbul ignore next */
      (cov_1ebl7we1os().b[88][1]++, !code) ||
      /* istanbul ignore next */
      (cov_1ebl7we1os().b[88][2]++, !newPassword)) {
        /* istanbul ignore next */
        cov_1ebl7we1os().b[87][0]++;
        cov_1ebl7we1os().s[345]++;
        res.status(400).json({
          msg: 'Email, código y nueva contraseña son requeridos'
        });
        /* istanbul ignore next */
        cov_1ebl7we1os().s[346]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1ebl7we1os().b[87][1]++;
      }
      cov_1ebl7we1os().s[347]++;
      if (!(0, validatios_1.validarEmail)(userEmail)) {
        /* istanbul ignore next */
        cov_1ebl7we1os().b[89][0]++;
        cov_1ebl7we1os().s[348]++;
        res.status(400).json({
          msg: 'Email inválido'
        });
        /* istanbul ignore next */
        cov_1ebl7we1os().s[349]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1ebl7we1os().b[89][1]++;
      }
      cov_1ebl7we1os().s[350]++;
      if (!(0, validatios_1.validarPassword)(newPassword)) {
        /* istanbul ignore next */
        cov_1ebl7we1os().b[90][0]++;
        cov_1ebl7we1os().s[351]++;
        res.status(400).json({
          msg: 'La contraseña no cumple con los requisitos, debe de contener Mayúsculas, Minúsculas, Números y Carácteres especiales'
        });
        /* istanbul ignore next */
        cov_1ebl7we1os().s[352]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1ebl7we1os().b[90][1]++;
      }
      // Buscar usuario
      const user =
      /* istanbul ignore next */
      (cov_1ebl7we1os().s[353]++, yield (0, authModel_1.getUserByEmailModel)(userEmail));
      /* istanbul ignore next */
      cov_1ebl7we1os().s[354]++;
      if (!user) {
        /* istanbul ignore next */
        cov_1ebl7we1os().b[91][0]++;
        cov_1ebl7we1os().s[355]++;
        res.status(404).json({
          msg: 'Usuario no encontrado'
        });
        /* istanbul ignore next */
        cov_1ebl7we1os().s[356]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1ebl7we1os().b[91][1]++;
      }
      // Verificar que sea superadmin
      cov_1ebl7we1os().s[357]++;
      if (user.roll !== 'superadmin') {
        /* istanbul ignore next */
        cov_1ebl7we1os().b[92][0]++;
        cov_1ebl7we1os().s[358]++;
        res.status(403).json({
          msg: 'Solo superadmin puede recuperar contraseña'
        });
        /* istanbul ignore next */
        cov_1ebl7we1os().s[359]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1ebl7we1os().b[92][1]++;
      }
      // Verificar código
      const storedData =
      /* istanbul ignore next */
      (cov_1ebl7we1os().s[360]++, verificationCodes.get(userEmail.toLowerCase()));
      /* istanbul ignore next */
      cov_1ebl7we1os().s[361]++;
      if (!storedData) {
        /* istanbul ignore next */
        cov_1ebl7we1os().b[93][0]++;
        cov_1ebl7we1os().s[362]++;
        res.status(400).json({
          msg: 'Código no encontrado o expirado'
        });
        /* istanbul ignore next */
        cov_1ebl7we1os().s[363]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1ebl7we1os().b[93][1]++;
      }
      cov_1ebl7we1os().s[364]++;
      if (storedData.expiresAt < Date.now()) {
        /* istanbul ignore next */
        cov_1ebl7we1os().b[94][0]++;
        cov_1ebl7we1os().s[365]++;
        verificationCodes.delete(userEmail.toLowerCase());
        /* istanbul ignore next */
        cov_1ebl7we1os().s[366]++;
        res.status(400).json({
          msg: 'Código expirado'
        });
        /* istanbul ignore next */
        cov_1ebl7we1os().s[367]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1ebl7we1os().b[94][1]++;
      }
      cov_1ebl7we1os().s[368]++;
      if (storedData.code !== code) {
        /* istanbul ignore next */
        cov_1ebl7we1os().b[95][0]++;
        cov_1ebl7we1os().s[369]++;
        res.status(400).json({
          msg: 'Código inválido'
        });
        /* istanbul ignore next */
        cov_1ebl7we1os().s[370]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1ebl7we1os().b[95][1]++;
      }
      // Hashear nueva contraseña
      const hashedPassword =
      /* istanbul ignore next */
      (cov_1ebl7we1os().s[371]++, yield bcrypt.hash(newPassword, 10));
      // Actualizar contraseña en la base de datos
      const updateData =
      /* istanbul ignore next */
      (cov_1ebl7we1os().s[372]++, {
        userPassword: hashedPassword,
        update_at: new Date().toString()
      });
      const updateResult =
      /* istanbul ignore next */
      (cov_1ebl7we1os().s[373]++, yield (0, authModel_1.updateUserByEmailModel)(userEmail, updateData));
      /* istanbul ignore next */
      cov_1ebl7we1os().s[374]++;
      if (updateResult) {
        /* istanbul ignore next */
        cov_1ebl7we1os().b[96][0]++;
        cov_1ebl7we1os().s[375]++;
        res.status(400).json({
          msg: updateResult
        });
        /* istanbul ignore next */
        cov_1ebl7we1os().s[376]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1ebl7we1os().b[96][1]++;
      }
      // Eliminar código usado
      cov_1ebl7we1os().s[377]++;
      verificationCodes.delete(userEmail.toLowerCase());
      /* istanbul ignore next */
      cov_1ebl7we1os().s[378]++;
      res.status(200).json({
        msg: 'Contraseña actualizada correctamente',
        userEmail: userEmail
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1ebl7we1os().s[379]++;
      console.error('Error en resetPasswordController:', error);
      /* istanbul ignore next */
      cov_1ebl7we1os().s[380]++;
      res.status(500).json({
        msg: 'Error interno del servidor'
      });
    }
  });
};
/* istanbul ignore next */
cov_1ebl7we1os().s[381]++;
exports.resetPasswordController = resetPasswordController;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJleHBvcnRzIiwicmVnaXN0ZXJDb250cm9sbGVyIiwiY292XzFlYmw3d2Uxb3MiLCJzIiwibG9naW5Db250cm9sbGVyIiwiYmNyeXB0IiwiX19pbXBvcnRTdGFyIiwicmVxdWlyZSIsImF1dGhNb2RlbF8xIiwidmFsaWRhdGlvc18xIiwiand0XzEiLCJtYWlsZXJfMSIsImZ1bmN0aW9uc18xIiwiZmlyZWJhc2VfMSIsInJlcSIsInJlcyIsImYiLCJuYW1lIiwibGFzdE5hbWUiLCJyb2xsIiwidXNlckVtYWlsIiwidXNlclBhc3N3b3JkIiwic3RhdHVzIiwiYm9keSIsImNvbnNvbGUiLCJsb2ciLCJiIiwianNvbiIsIm1zZyIsInZhbGlkYXJQYXNzd29yZCIsInZhbGlkYXJFbWFpbCIsInBhc3MiLCJoYXNoIiwidXNlclN0YXR1cyIsInNhdmVkIiwicmVnaXN0ZXJNb2RlbCIsInRva2VuIiwiY3JlYXRlVG9rZW4iLCJ1c2VyIiwiZ2V0VXNlckJ5RW1haWxNb2RlbCIsImRhdGEiLCJlcnJvciIsImluZm8iLCJpc01hdGNoIiwiY29tcGFyZSIsInVwZGF0ZVVzZXJCeUVtYWlsQ29udHJvbGxlciIsIl9fYXdhaXRlciIsImRhdGFVc2VycyIsInBhcmFtcyIsInRvTG9jYWxlTG93ZXJDYXNlIiwidXBkYXRlVmFsaWRhdGlvbiIsInVwZGF0ZVVzZXJCeUVtYWlsTW9kZWwiLCJlbWFpbFJlZ2lzdGVyQ29udHJvbGxlciIsIm51bVJhbmRvbiIsIm51bWJlclJhbmRvbiIsInRvU3RyaW5nIiwibnVtUGFyYW0iLCJodG1sIiwicXVlcnlTbmFwc2hvdCIsImRiIiwiY29sbGVjdGlvbiIsIndoZXJlIiwiZ2V0IiwiZW1wdHkiLCJzZW5kRW1haWwiLCJlcnIiLCJ2YWxpZE51bWJlckdldEJ5RW1haWwiLCJudW1CYWNrIiwidmFpbGROdW1iZXIiLCJhZGRFdmVudFRvVXNlckNvbnRyb2xsZXIiLCJldmVudERhdGEiLCJyZXN1bHQiLCJhZGRFdmVudFRvVXNlck1vZGVsIiwicmVxdWVzdEVtYWlsVmVyaWZpY2F0aW9uQ29udHJvbGxlciIsInN1Y2Nlc3MiLCJtZXNzYWdlIiwiaW5jbHVkZXMiLCJleGlzdGluZ1VzZXIiLCJ2ZXJpZmljYXRpb25Db2RlIiwiaGFzaGVkQ29kZSIsInRlbXBVc2VyRGF0YSIsInRvTG93ZXJDYXNlIiwiZXhwaXJlc0F0IiwiRGF0ZSIsIm5vdyIsInZlcmlmaWNhdGlvbkNvZGVzIiwic2V0IiwiY29kZSIsInVzZXJEYXRhIiwiZXhwaXJlc0luIiwiRXJyb3IiLCJ2ZXJpZnlBbmRDb21wbGV0ZVJlZ2lzdHJhdGlvbkNvbnRyb2xsZXIiLCJzdG9yZWREYXRhIiwiZGVsZXRlIiwiaXNDb2RlVmFsaWQiLCJkZWxldGVVc2VyQnlFbWFpbENvbnRyb2xsZXIiLCJkZWxldGVVc2VyQnlFbWFpbE1vZGVsIiwiTWFwIiwiZ2VuZXJhdGVWZXJpZmljYXRpb25Db2RlIiwiTWF0aCIsImZsb29yIiwicmFuZG9tIiwiY2xlYW51cEV4cGlyZWRDb2RlcyIsImVtYWlsIiwiZW50cmllcyIsInByb2Nlc3MiLCJlbnYiLCJOT0RFX0VOViIsInNldEludGVydmFsIiwiZm9yZ290UGFzc3dvcmRDb250cm9sbGVyIiwiZW1haWxFcnJvciIsInZlcmlmeUNvZGVDb250cm9sbGVyIiwicmVzZXRQYXNzd29yZENvbnRyb2xsZXIiLCJuZXdQYXNzd29yZCIsImhhc2hlZFBhc3N3b3JkIiwidXBkYXRlRGF0YSIsInVwZGF0ZV9hdCIsInVwZGF0ZVJlc3VsdCJdLCJzb3VyY2VzIjpbIkM6XFxzcmNcXEFQUF9NdXNzaWtPblxcQVBQX011c3Npa09uX0V4cHJlc3NcXHNyY1xcY29udHJvbGxlcnNcXGF1dGhDb250cm9sbGVyLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJlcXVlc3QsIFJlc3BvbnNlIH0gZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQgKiBhcyBiY3J5cHQgZnJvbSAnYmNyeXB0JztcbmltcG9ydCB7XG4gIGdldFVzZXJCeUVtYWlsTW9kZWwsXG4gIHJlZ2lzdGVyTW9kZWwsXG4gIHVwZGF0ZVVzZXJCeUVtYWlsTW9kZWwsXG4gIGFkZEV2ZW50VG9Vc2VyTW9kZWwsXG4gIGRlbGV0ZVVzZXJCeUVtYWlsTW9kZWwsXG59IGZyb20gJy4uL21vZGVscy9hdXRoTW9kZWwnO1xuaW1wb3J0IHsgYXV0aFVzZXJSZWdpc3RlciB9IGZyb20gJy4uL3V0aWxzL0RhdGFUeXBlcyc7XG5pbXBvcnQgeyB2YWxpZGFyRW1haWwsIHZhbGlkYXJQYXNzd29yZCB9IGZyb20gJy4uL3V0aWxzL3ZhbGlkYXRpb3MnO1xuaW1wb3J0IHsgY3JlYXRlVG9rZW4gfSBmcm9tICcuLi91dGlscy9qd3QnO1xuaW1wb3J0IHsgc2VuZEVtYWlsIH0gZnJvbSAnLi4vdXRpbHMvbWFpbGVyJztcbmltcG9ydCB7IG51bWJlclJhbmRvbiB9IGZyb20gJy4uL3V0aWxzL2Z1bmN0aW9ucyc7XG5pbXBvcnQgeyBkYiB9IGZyb20gJy4uL3V0aWxzL2ZpcmViYXNlJztcblxuLyoqXG4gKiBAc3dhZ2dlclxuICogY29tcG9uZW50czpcbiAqICAgc2NoZW1hczpcbiAqICAgICBBdXRoVXNlclJlZ2lzdGVyOlxuICogICAgICAgdHlwZTogb2JqZWN0XG4gKiAgICAgICBwcm9wZXJ0aWVzOlxuICogICAgICAgICBuYW1lOlxuICogICAgICAgICAgIHR5cGU6IHN0cmluZ1xuICogICAgICAgICBsYXN0TmFtZTpcbiAqICAgICAgICAgICB0eXBlOiBzdHJpbmdcbiAqICAgICAgICAgcm9sbDpcbiAqICAgICAgICAgICB0eXBlOiBzdHJpbmdcbiAqICAgICAgICAgdXNlckVtYWlsOlxuICogICAgICAgICAgIHR5cGU6IHN0cmluZ1xuICogICAgICAgICB1c2VyUGFzc3dvcmQ6XG4gKiAgICAgICAgICAgdHlwZTogc3RyaW5nXG4gKiAgICAgRXZlbnQ6XG4gKiAgICAgICB0eXBlOiBvYmplY3RcbiAqICAgICAgIHByb3BlcnRpZXM6XG4gKiAgICAgICAgIGlkOlxuICogICAgICAgICAgIHR5cGU6IGludGVnZXJcbiAqICAgICAgICAgdXNlcjpcbiAqICAgICAgICAgICB0eXBlOiBzdHJpbmdcbiAqICAgICAgICAgZXZlbnROYW1lOlxuICogICAgICAgICAgIHR5cGU6IHN0cmluZ1xuICogICAgICAgICByZXF1ZXN0ZXJOYW1lOlxuICogICAgICAgICAgIHR5cGU6IHN0cmluZ1xuICogICAgICAgICBsb2NhdGlvbjpcbiAqICAgICAgICAgICB0eXBlOiBzdHJpbmdcbiAqICAgICAgICAgZGF0ZTpcbiAqICAgICAgICAgICB0eXBlOiBzdHJpbmdcbiAqICAgICAgICAgdGltZTpcbiAqICAgICAgICAgICB0eXBlOiBzdHJpbmdcbiAqICAgICAgICAgZHVyYXRpb246XG4gKiAgICAgICAgICAgdHlwZTogc3RyaW5nXG4gKiAgICAgICAgIGluc3RydW1lbnQ6XG4gKiAgICAgICAgICAgdHlwZTogc3RyaW5nXG4gKiAgICAgICAgIGJyaW5nSW5zdHJ1bWVudDpcbiAqICAgICAgICAgICB0eXBlOiBib29sZWFuXG4gKiAgICAgICAgIGNvbW1lbnQ6XG4gKiAgICAgICAgICAgdHlwZTogc3RyaW5nXG4gKiAgICAgICAgIGJ1ZGdldDpcbiAqICAgICAgICAgICB0eXBlOiBzdHJpbmdcbiAqICAgICAgICAgZXZlbnRUeXBlOlxuICogICAgICAgICAgIHR5cGU6IHN0cmluZ1xuICogICAgICAgICBmbHllclVybDpcbiAqICAgICAgICAgICB0eXBlOiBzdHJpbmdcbiAqICAgICAgICAgc29uZ3M6XG4gKiAgICAgICAgICAgdHlwZTogYXJyYXlcbiAqICAgICAgICAgICBpdGVtczpcbiAqICAgICAgICAgICAgIHR5cGU6IHN0cmluZ1xuICogICAgICAgICByZWNvbW1lbmRhdGlvbnM6XG4gKiAgICAgICAgICAgdHlwZTogYXJyYXlcbiAqICAgICAgICAgICBpdGVtczpcbiAqICAgICAgICAgICAgIHR5cGU6IHN0cmluZ1xuICogICAgICAgICBtYXBzTGluazpcbiAqICAgICAgICAgICB0eXBlOiBzdHJpbmdcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHJlZ2lzdGVyQ29udHJvbGxlcihyZXE6IFJlcXVlc3QsIHJlczogUmVzcG9uc2UpIHtcbiAgdHJ5IHtcbiAgICBjb25zdCB7XG4gICAgICBuYW1lLFxuICAgICAgbGFzdE5hbWUsXG4gICAgICByb2xsLFxuICAgICAgdXNlckVtYWlsLFxuICAgICAgdXNlclBhc3N3b3JkLFxuICAgICAgc3RhdHVzLFxuICAgIH06IGF1dGhVc2VyUmVnaXN0ZXIgPSByZXEuYm9keTtcbiAgICBjb25zb2xlLmxvZyhcbiAgICAgICdbc3JjL2NvbnRyb2xsZXJzL2F1dGhDb250cm9sbGVyLnRzOjcyXSBEYXRvcyBkZSByZWdpc3RybyByZWNpYmlkb3M6JyxcbiAgICAgIHJlcS5ib2R5XG4gICAgKTtcbiAgICBpZiAoIW5hbWUgfHwgIWxhc3ROYW1lIHx8ICFyb2xsIHx8ICF1c2VyRW1haWwgfHwgIXVzZXJQYXNzd29yZCkge1xuICAgICAgcmVzLnN0YXR1cyg0MDApLmpzb24oe1xuICAgICAgICBtc2c6ICdFcnJvciBhbCByZWdpc3RyYXJzZSwgdG9kb3MgbG9zIGNhbXBvcyBkZWJlbiBkZSBzZXIgbGxlbmFkb3MnLFxuICAgICAgfSk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmICghdmFsaWRhclBhc3N3b3JkKHVzZXJQYXNzd29yZCkpIHtcbiAgICAgIHJlcy5zdGF0dXMoNDAwKS5qc29uKHtcbiAgICAgICAgbXNnOiAnTGEgY29udHJhc2XDsWEgbm8gY3VtcGxlIGNvbiBsb3MgcmVxdWlzaXRvcywgZGViZSBkZSBjb250ZW5lciBNYXnDunNjdWxhcywgTWluw7pzY3VsYXMsIE7Dum1lcm9zIHkgQ2Fyw6FjdGVyZXMgZXNwZWNpYWxlcyBcXG5cXG5cXG5FamVtcGxvOiBUdW5vbWJyZSo1NSAuJyxcbiAgICAgIH0pO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZiAoIXZhbGlkYXJFbWFpbCh1c2VyRW1haWwpKSB7XG4gICAgICByZXMuc3RhdHVzKDQwMCkuanNvbih7IG1zZzogJ0NvcnJlbyBFbGVjdHLDs25pY28gaW52w6FsaWRvLicgfSk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGNvbnN0IHBhc3MgPSBhd2FpdCBiY3J5cHQuaGFzaCh1c2VyUGFzc3dvcmQsIDEwKTtcbiAgICAvLyBzdGF0dXMgcG9yIGRlZmVjdG8gdHJ1ZSBzaSBubyBzZSBlbnbDrWFcbiAgICBjb25zdCB1c2VyU3RhdHVzID0gdHlwZW9mIHN0YXR1cyA9PT0gJ2Jvb2xlYW4nID8gc3RhdHVzIDogdHJ1ZTtcbiAgICBjb25zdCBzYXZlZCA9IGF3YWl0IHJlZ2lzdGVyTW9kZWwoXG4gICAgICBuYW1lLFxuICAgICAgbGFzdE5hbWUsXG4gICAgICByb2xsLFxuICAgICAgdXNlckVtYWlsLFxuICAgICAgcGFzcyxcbiAgICAgIHVzZXJTdGF0dXNcbiAgICApO1xuICAgIGlmICghc2F2ZWQpIHtcbiAgICAgIGNvbnN0IHRva2VuID0gY3JlYXRlVG9rZW4obmFtZSwgbGFzdE5hbWUsIHVzZXJFbWFpbCwgcm9sbCk7XG4gICAgICBjb25zdCB1c2VyID0gYXdhaXQgZ2V0VXNlckJ5RW1haWxNb2RlbCh1c2VyRW1haWwpO1xuICAgICAgcmVzXG4gICAgICAgIC5zdGF0dXMoMjAwKVxuICAgICAgICAuanNvbih7IG1zZzogJ1VzdWFyaW8gUmVnaXN0cmFkbyBjb24gw6l4aXRvLicsIHRva2VuLCB1c2VyIH0pO1xuICAgICAgcmV0dXJuO1xuICAgIH0gZWxzZSBpZiAoc2F2ZWQgPT09ICdIYXkgY2FtcG9zIHF1ZSBubyBoYW4gc2lkbyBsbGVuYWRvcycpIHtcbiAgICAgIHJlc1xuICAgICAgICAuc3RhdHVzKDQwOSlcbiAgICAgICAgLmpzb24oeyBtc2c6ICdIYXkgY2FtcG9zIHF1ZSBubyBoYW4gc2lkbyBsbGVuYWRvcycsIGRhdGE6IHNhdmVkIH0pO1xuICAgICAgcmV0dXJuO1xuICAgIH0gZWxzZSBpZiAoc2F2ZWQgPT09ICdFbCB1c3VhcmlvIHlhIEV4aXN0ZS4nKSB7XG4gICAgICByZXMuc3RhdHVzKDQwOSkuanNvbih7XG4gICAgICAgIG1zZzogJ1lhIGhheSB1biB1c3VhcmlvIGNvbiBlc3RhIGRpcmVjY2lvbiBkZSBjb3JyZW8gZWxlY3Ryw7NuaWNvLicsXG4gICAgICAgIGRhdGE6IHNhdmVkLFxuICAgICAgfSk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuaW5mbyhcbiAgICAgIGBbc3JjL2NvbnRyb2xsZXJzL2F1dGhDb250cm9sbGVyLnRzOjk1XSBIdWJvIHVuIGVycm9yIGFsIGludGVudGFyIHJlZ2lzdGFyIHVuIFVzdWFyaW86ICR7ZXJyb3J9YFxuICAgICk7XG4gICAgcmVzLnN0YXR1cyg0MDApLmpzb24oeyBtc2c6ICdFcnJvciBhbCByZWdpc3RyYXJzZS4nLCBlcnJvciB9KTtcbiAgICByZXR1cm47XG4gIH1cbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGxvZ2luQ29udHJvbGxlcihyZXE6IFJlcXVlc3QsIHJlczogUmVzcG9uc2UpIHtcbiAgdHJ5IHtcbiAgICBjb25zdCB7IHVzZXJFbWFpbCwgdXNlclBhc3N3b3JkIH0gPSByZXEuYm9keTtcbiAgICBpZiAoIXVzZXJFbWFpbCB8fCAhdXNlclBhc3N3b3JkKSB7XG4gICAgICByZXMuc3RhdHVzKDQwMCkuanNvbih7IG1zZzogJ1RvZG9zIGxvcyBjYW1wb3MgZGViZW4gZGUgc2VyIGxsZW5hZG9zLicgfSk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmICghdmFsaWRhckVtYWlsKHVzZXJFbWFpbCkpIHtcbiAgICAgIHJlc1xuICAgICAgICAuc3RhdHVzKDQwMClcbiAgICAgICAgLmpzb24oeyBtc2c6ICdEaXJlY2Npw7NuIGRlIGNvcnJlbyBlbGVjdHLDs25pY28gbm8gdsOhbGlkby4nIH0pO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBjb25zdCBkYXRhID0gYXdhaXQgZ2V0VXNlckJ5RW1haWxNb2RlbCh1c2VyRW1haWwpO1xuICAgIGlmICghZGF0YSkge1xuICAgICAgcmVzLnN0YXR1cyg0MDEpLmpzb24oe1xuICAgICAgICBtc2c6ICdWZXJpZmlxdWUgc3UgZGlyZWNjacOzbiBkZSBjb3JyZW8gZWxlY3Ryw7NuaWNvIG8gcmVnw61zdHJlc2Ugc2kgbm8gdGllbmUgdW5hIGN1ZW50YS4nLFxuICAgICAgfSk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGNvbnN0IG5hbWUgPSBkYXRhLm5hbWU7XG4gICAgY29uc3QgbGFzdE5hbWUgPSBkYXRhLmxhc3ROYW1lO1xuICAgIGNvbnN0IHJvbGwgPSBkYXRhLnJvbGw7XG4gICAgY29uc3QgcGFzcyA9IGRhdGEudXNlclBhc3N3b3JkO1xuICAgIGNvbnN0IGlzTWF0Y2ggPSBhd2FpdCBiY3J5cHQuY29tcGFyZSh1c2VyUGFzc3dvcmQsIHBhc3MpO1xuICAgIGlmICghaXNNYXRjaCkge1xuICAgICAgcmVzLnN0YXR1cyg0MDEpLmpzb24oeyBtc2c6ICdDb250cmFzZcOxYSBpbmNvcnJlY3RhLicgfSk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGNvbnN0IHRva2VuID0gY3JlYXRlVG9rZW4obmFtZSwgbGFzdE5hbWUsIHVzZXJFbWFpbCwgcm9sbCk7XG4gICAgcmVzLnN0YXR1cygyMDApLmpzb24oeyBtc2c6ICdMb2dpbiBFeGl0b3NvJywgdG9rZW4sIHVzZXI6IGRhdGEgfSk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgcmVzXG4gICAgICAuc3RhdHVzKDQwMSlcbiAgICAgIC5qc29uKHsgbXNnOiAnRXJyb3IgZW4gbGEgcGV0aWNpw7NuLCBJbnTDqW50ZWxvIG1hcyB0YXJkZS4nLCBlcnJvciB9KTtcbiAgICByZXR1cm47XG4gIH1cbn1cblxuZXhwb3J0IGNvbnN0IHVwZGF0ZVVzZXJCeUVtYWlsQ29udHJvbGxlciA9IGFzeW5jIChcbiAgcmVxOiBSZXF1ZXN0LFxuICByZXM6IFJlc3BvbnNlXG4pID0+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCBkYXRhVXNlcnMgPSByZXEuYm9keTtcbiAgICBjb25zdCB1c2VyRW1haWwgPSByZXEucGFyYW1zLnVzZXJFbWFpbC50b0xvY2FsZUxvd2VyQ2FzZSgpO1xuICAgIGlmICghZGF0YVVzZXJzIHx8ICF1c2VyRW1haWwpIHtcbiAgICAgIHJlcy5zdGF0dXMoNDAxKS5qc29uKHsgbXNnOiAnTm8gaGF5IERhdG9zIHBhcmEgYWN0dWFsaXphcicgfSk7XG4gICAgfVxuICAgIGlmICghdmFsaWRhckVtYWlsKHVzZXJFbWFpbCkpIHtcbiAgICAgIHJlc1xuICAgICAgICAuc3RhdHVzKDQwMClcbiAgICAgICAgLmpzb24oeyBtc2c6ICdEaXJlY2Npw7NuIGRlIGNvcnJlbyBlbGVjdHLDs25pY28gbm8gdsOhbGlkby4nIH0pO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICAvLyBzdGF0dXMgcG9yIGRlZmVjdG8gdHJ1ZSBzaSBubyBzZSBlbnbDrWFcbiAgICBpZiAodHlwZW9mIGRhdGFVc2Vycy5zdGF0dXMgIT09ICdib29sZWFuJykge1xuICAgICAgZGF0YVVzZXJzLnN0YXR1cyA9IHRydWU7XG4gICAgfVxuICAgIGNvbnN0IHVwZGF0ZVZhbGlkYXRpb24gPSBhd2FpdCB1cGRhdGVVc2VyQnlFbWFpbE1vZGVsKHVzZXJFbWFpbCwgZGF0YVVzZXJzKTtcbiAgICBpZiAodXBkYXRlVmFsaWRhdGlvbikge1xuICAgICAgY29uc29sZS5pbmZvKCdSZXN1bHRhZG8gZGUgdXBkYXRlVXNlckJ5RW1haWxNb2RlbCcpO1xuICAgICAgY29uc29sZS5pbmZvKHVwZGF0ZVZhbGlkYXRpb24pO1xuICAgICAgcmVzLnN0YXR1cyg0MDEpLmpzb24oeyBtc2c6IHVwZGF0ZVZhbGlkYXRpb24gfSk7XG4gICAgfVxuICAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKHsgbXNnOiAnQ29uc3VsdGEgw6l4aXRvc2EnIH0pO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuaW5mbygnRXJyb3IgYWwgYWN0dWFsaXphciBsb3MgZGF0b3MuJyk7XG4gICAgcmVzLnN0YXR1cyg0MDEpLmpzb24oeyBtc2c6ICdFcnJvciBhbCBhY3R1YWxpemFyIGVsIHVzdWFyaW8uJyB9KTtcbiAgfVxufTtcblxuZXhwb3J0IGNvbnN0IGVtYWlsUmVnaXN0ZXJDb250cm9sbGVyID0gYXN5bmMgKHJlcTogUmVxdWVzdCwgcmVzOiBSZXNwb25zZSkgPT4ge1xuICBjb25zdCBudW1SYW5kb24gPSBudW1iZXJSYW5kb24oKS50b1N0cmluZygpO1xuICBjb25zdCBudW1QYXJhbSA9IGF3YWl0IGJjcnlwdC5oYXNoKG51bVJhbmRvbiwgMTApO1xuICBjb25zdCBodG1sID0gYDwhRE9DVFlQRSBodG1sPlxuICA8aHRtbCBsYW5nPVwiZXNcIj5cbiAgPGhlYWQ+XG4gICAgPG1ldGEgY2hhcnNldD1cIlVURi04XCIgLz5cbiAgICA8bWV0YSBuYW1lPVwidmlld3BvcnRcIiBjb250ZW50PVwid2lkdGg9ZGV2aWNlLXdpZHRoLCBpbml0aWFsLXNjYWxlPTEuMFwiLz5cbiAgICA8dGl0bGU+VmVyaWZpY2EgdHUgY29ycmVvIC0gTXVzaWtPbjwvdGl0bGU+XG4gIDwvaGVhZD5cbiAgPGJvZHkgc3R5bGU9XCJtYXJnaW46IDA7IHBhZGRpbmc6IDA7IGJhY2tncm91bmQtY29sb3I6ICNmNGY0ZjQ7IGZvbnQtZmFtaWx5OiAnU2Vnb2UgVUknLCBzYW5zLXNlcmlmO1wiPlxuICAgIDx0YWJsZSBhbGlnbj1cImNlbnRlclwiIHdpZHRoPVwiMTAwJVwiIGNlbGxwYWRkaW5nPVwiMFwiIGNlbGxzcGFjaW5nPVwiMFwiIHN0eWxlPVwiYmFja2dyb3VuZC1jb2xvcjogI2Y0ZjRmNDsgcGFkZGluZzogMjBweDtcIj5cbiAgICAgIDx0cj5cbiAgICAgICAgPHRkIGFsaWduPVwiY2VudGVyXCI+XG4gICAgICAgICAgPHRhYmxlIHdpZHRoPVwiNjAwXCIgY2VsbHBhZGRpbmc9XCIwXCIgY2VsbHNwYWNpbmc9XCIwXCIgc3R5bGU9XCJiYWNrZ3JvdW5kLWNvbG9yOiAjMDA0YWFkOyBib3JkZXItcmFkaXVzOiAxMHB4OyBvdmVyZmxvdzogaGlkZGVuOyBib3gtc2hhZG93OiAwIDRweCAxMnB4IHJnYmEoMCwwLDAsMC4xKTtcIj5cbiAgICAgICAgICAgIDwhLS0gTG9nbyAtLT5cbiAgICAgICAgICAgIDx0cj5cbiAgICAgICAgICAgICAgPHRkIHN0eWxlPVwicGFkZGluZzogMzBweCAwOyB0ZXh0LWFsaWduOiBjZW50ZXI7IGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XCI+XG4gICAgICAgICAgICAgICAgPGltZyBzcmM9XCJodHRwczovL2xoMy5nb29nbGV1c2VyY29udGVudC5jb20vYS9BQ2c4b2NMU3M0QjdVbVA0YktMYjI2Ry1wdXlZakNVUlZoMFFuZjl5SERfenhiQ2ZSSlRkM0RGT292Qmx5OTVPekpUV2szNGhuQmYxUmhpZ3NkQ25NMFd3ZzNUS0Nnc0ozcnM9czI4OC1jLW5vXCIgYWx0PVwiTXVzaWtPbiBMb2dvXCIgd2lkdGg9XCIxMjBcIiBzdHlsZT1cImJvcmRlci1yYWRpdXM6IDUwJTtcIiAvPlxuICAgICAgICAgICAgICA8L3RkPlxuICAgICAgICAgICAgPC90cj5cblxuICAgICAgICAgICAgPCEtLSBUw610dWxvIC0tPlxuICAgICAgICAgICAgPHRyPlxuICAgICAgICAgICAgICA8dGQgc3R5bGU9XCJwYWRkaW5nOiAzMHB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7XCI+XG4gICAgICAgICAgICAgICAgPGgyIHN0eWxlPVwibWFyZ2luOiAwOyBmb250LXNpemU6IDI2cHg7IGNvbG9yOiAjZmZmO1wiPsKhQmllbnZlbmlkbyBhIDxzcGFuIHN0eWxlPVwiY29sb3I6ICNmMWYxZjE7XCI+TXVzaWtPbjwvc3Bhbj4hPC9oMj5cbiAgICAgICAgICAgICAgICA8cCBzdHlsZT1cImZvbnQtc2l6ZTogMTZweDsgY29sb3I6IGhzbCgyNDYsIDEwMCUsIDkyJSk7XCI+R3JhY2lhcyBwb3IgcmVnaXN0cmFydGUuIFNvbG8gZmFsdGEgdW4gcGFzbyBwYXJhIGFjdGl2YXIgdHUgY3VlbnRhLjwvcD5cbiAgICAgICAgICAgICAgPC90ZD5cbiAgICAgICAgICAgIDwvdHI+XG5cbiAgICAgICAgICAgIDwhLS0gQm90w7NuIC0tPlxuICAgICAgICAgICAgPHRyPlxuICAgICAgICAgICAgICA8dGQgc3R5bGU9XCJ0ZXh0LWFsaWduOiBjZW50ZXI7IHBhZGRpbmc6IDIwcHg7XCI+XG4gICAgICAgICAgICAgICAgPGgxIHN0eWxlPVwiZGlzcGxheTogaW5saW5lLWJsb2NrOyBwYWRkaW5nOiAxNXB4IDMwcHg7IGJhY2tncm91bmQtY29sb3I6ICMwMDRhYWQ7IGNvbG9yOiAjZmZmOyB0ZXh0LWRlY29yYXRpb246IG5vbmU7IGZvbnQtd2VpZ2h0OiBib2xkOyBib3JkZXItcmFkaXVzOiA4cHg7IGZvbnQtc2l6ZTogNTBweDtcIj5cbiAgICAgICAgICAgICAgICAgICR7bnVtUmFuZG9ufVxuICAgICAgICAgICAgICAgIDwvaDE+XG4gICAgICAgICAgICAgIDwvdGQ+XG4gICAgICAgICAgICA8L3RyPlxuXG4gICAgICAgICAgICA8IS0tIE1lbnNhamUgZGUgc29wb3J0ZSAtLT5cbiAgICAgICAgICAgIDx0cj5cbiAgICAgICAgICAgICAgPHRkIHN0eWxlPVwicGFkZGluZzogMjBweCA0MHB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7IGZvbnQtc2l6ZTogMTRweDsgY29sb3I6ICNiNmM5ZmY7XCI+XG4gICAgICAgICAgICAgICAgU2kgbm8gY3JlYXN0ZSBlc3RhIGN1ZW50YSwgcHVlZGVzIGlnbm9yYXIgZXN0ZSBtZW5zYWplLiBTaSB0aWVuZXMgZHVkYXMsIGNvbnTDoWN0YW5vcyBlbiA8YSBocmVmPVwibWFpbHRvOmFwcG11c2lrb25AZ21haWwuY29tXCIgc3R5bGU9XCJjb2xvcjogaHNsKDIxNCwgMTAwJSwgNzclKTtcIj5hcHBtdXNpa29uQGdtYWlsLmNvbTwvYT5cbiAgICAgICAgICAgICAgPC90ZD5cbiAgICAgICAgICAgIDwvdHI+XG5cbiAgICAgICAgICAgIDwhLS0gRm9vdGVyIC0tPlxuICAgICAgICAgICAgPHRyPlxuICAgICAgICAgICAgICA8dGQgc3R5bGU9XCJ0ZXh0LWFsaWduOiBjZW50ZXI7IHBhZGRpbmc6IDMwcHg7IGJhY2tncm91bmQtY29sb3I6ICNmMGYwZjA7IGZvbnQtc2l6ZTogMTJweDsgY29sb3I6ICMwMDQxZjM7XCI+XG4gICAgICAgICAgICAgICAgJmNvcHk7IDIwMjUgTXVzaWtPbi4gVG9kb3MgbG9zIGRlcmVjaG9zIHJlc2VydmFkb3MuXG4gICAgICAgICAgICAgIDwvdGQ+XG4gICAgICAgICAgICA8L3RyPlxuICAgICAgICAgIDwvdGFibGU+XG4gICAgICAgIDwvdGQ+XG4gICAgICA8L3RyPlxuICAgIDwvdGFibGU+XG4gIDwvYm9keT5cbiAgPC9odG1sPmA7XG4gIHRyeSB7XG4gICAgY29uc3QgdXNlckVtYWlsID0gcmVxLmJvZHkudXNlckVtYWlsLnRvTG9jYWxlTG93ZXJDYXNlKCk7XG4gICAgaWYgKCF1c2VyRW1haWwpIHtcbiAgICAgIHJlcy5zdGF0dXMoNDAwKS5qc29uKHsgbXNnOiAnVG9kb3MgbG9zIGNhbXBvcyBkZWJlbiBkZSBzZXIgbGxlbmFkb3MuJyB9KTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKCF2YWxpZGFyRW1haWwodXNlckVtYWlsKSkge1xuICAgICAgcmVzXG4gICAgICAgIC5zdGF0dXMoNDAyKVxuICAgICAgICAuanNvbih7IG1zZzogJ0RpcmVjY2nDs24gZGUgY29ycmVvIGVsZWN0csOzbmljbyBubyB2w6FsaWRvLicgfSk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGNvbnN0IHF1ZXJ5U25hcHNob3QgPSBhd2FpdCBkYlxuICAgICAgLmNvbGxlY3Rpb24oJ3VzZXJzJylcbiAgICAgIC53aGVyZSgndXNlckVtYWlsJywgJz09JywgdXNlckVtYWlsKVxuICAgICAgLmdldCgpO1xuICAgIGlmICghcXVlcnlTbmFwc2hvdC5lbXB0eSkge1xuICAgICAgcmVzLnN0YXR1cyg0MDkpLmpzb24oe1xuICAgICAgICBtc2c6ICdZYSBoYXkgdW4gdXN1YXJpbyBjb24gZXN0YSBkaXJlY2Npw7NuIGRlIGNvcnJlbyBlbGVjdHLDs25pY28uJyxcbiAgICAgIH0pO1xuICAgICAgcmV0dXJuO1xuICAgIH0gZWxzZSB7XG4gICAgICBhd2FpdCBzZW5kRW1haWwodXNlckVtYWlsLCAnVmVyaWZpY2EgdHUgY3VlbnRhIGVuIE11c2lrT24nLCBodG1sKTtcbiAgICAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKHsgbXNnOiAnRW1haWwgcmVjaWJpZG8gY29uIGV4aXRvIScsIG51bVBhcmFtIH0pO1xuICAgIH1cbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgcmVzXG4gICAgICAuc3RhdHVzKDQwMClcbiAgICAgIC5qc29uKHsgbXNnOiAnVmVyaWZpcXVlIGJpZW4gc3UgZGlyZWNjacOzbiBkZSBjb3JyZW8gZWxlY3Ryw7NuaWNvLicsIGVyciB9KTtcbiAgICByZXR1cm47XG4gIH1cbn07XG5cbmV4cG9ydCBjb25zdCB2YWxpZE51bWJlckdldEJ5RW1haWwgPSBhc3luYyAocmVxOiBSZXF1ZXN0LCByZXM6IFJlc3BvbnNlKSA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgbnVtQmFjayA9IHJlcS5ib2R5LnZhaWxkTnVtYmVyLnRvU3RyaW5nKCk7XG4gICAgY29uc3QgbnVtUGFyYW0gPSByZXEucGFyYW1zLnZhaWxkTnVtYmVyLnRvU3RyaW5nKCk7XG4gICAgaWYgKG51bUJhY2sgPT09ICcnIHx8IG51bVBhcmFtID09PSAnJykge1xuICAgICAgcmVzLnN0YXR1cyg0MDIpLmpzb24oeyBtc2c6ICdGYWx0YW4gZGF0b3MgcmVxdWVyaWRvcy4nIH0pO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBjb25zdCBpc01hdGNoID0gYXdhaXQgYmNyeXB0LmNvbXBhcmUobnVtUGFyYW0sIG51bUJhY2spO1xuICAgIGlmICghaXNNYXRjaCkge1xuICAgICAgY29uc29sZS5pbmZvKGBTb24gSWd1YWxlczogJHtudW1CYWNrfSwke251bVBhcmFtfS5gKTtcbiAgICAgIHJlcy5zdGF0dXMoNDAyKS5qc29uKHsgbXNnOiAnQ29kaWdvIEluY29ycmVjdG8uJyB9KTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgY29uc29sZS5pbmZvKGBOdW1lcm8gZGVsIEJvZHk6ICR7bnVtQmFja31gKTtcbiAgICBjb25zb2xlLmluZm8oYE51bWVybyBkZWwgUGFyYW1ldHJvczogJHtudW1QYXJhbX1gKTtcbiAgICByZXMuc3RhdHVzKDIwMCkuanNvbih7IG1zZzogJ0JpZW4gaGVjaG8hJyB9KTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgcmVzLnN0YXR1cyg0MDIpLmpzb24oeyBtc2c6ICdGYWxsbyBlbCBwcm9jZXNvIScgfSk7XG4gIH1cbn07XG5cbmV4cG9ydCBjb25zdCBhZGRFdmVudFRvVXNlckNvbnRyb2xsZXIgPSBhc3luYyAocmVxOiBSZXF1ZXN0LCByZXM6IFJlc3BvbnNlKSA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgdXNlciA9IChyZXEgYXMgYW55KS51c2VyO1xuICAgIGlmICghdXNlciB8fCAhdXNlci51c2VyRW1haWwpIHtcbiAgICAgIHJlcy5zdGF0dXMoNDAxKS5qc29uKHsgbXNnOiAnVXN1YXJpbyBubyBhdXRlbnRpY2Fkby4nIH0pO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBjb25zdCBldmVudERhdGEgPSByZXEuYm9keTtcbiAgICBpZiAoIWV2ZW50RGF0YSkge1xuICAgICAgcmVzXG4gICAgICAgIC5zdGF0dXMoNDAwKVxuICAgICAgICAuanNvbih7IG1zZzogJ05vIHNlIHByb3BvcmNpb27DsyBpbmZvcm1hY2nDs24gZGVsIGV2ZW50by4nIH0pO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBhZGRFdmVudFRvVXNlck1vZGVsKHVzZXIudXNlckVtYWlsLCBldmVudERhdGEpO1xuICAgIGlmICghcmVzdWx0KSB7XG4gICAgICByZXMuc3RhdHVzKDIwMCkuanNvbih7IG1zZzogJ0V2ZW50byBndWFyZGFkbyBleGl0b3NhbWVudGUuJyB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmVzLnN0YXR1cyg0MDApLmpzb24oeyBtc2c6IHJlc3VsdCB9KTtcbiAgICB9XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgcmVzLnN0YXR1cyg1MDApLmpzb24oeyBtc2c6ICdFcnJvciBhbCBndWFyZGFyIGVsIGV2ZW50by4nLCBlcnJvciB9KTtcbiAgfVxufTtcblxuLy8gQ29udHJvbGFkb3IgcGFyYSBzb2xpY2l0YXIgdmVyaWZpY2FjacOzbiBkZSBlbWFpbCAocGFyYSBtw7pzaWNvcyB5IGNyZWFkb3JlcyBkZSBldmVudG9zKVxuZXhwb3J0IGNvbnN0IHJlcXVlc3RFbWFpbFZlcmlmaWNhdGlvbkNvbnRyb2xsZXIgPSBhc3luYyAoXG4gIHJlcTogUmVxdWVzdCxcbiAgcmVzOiBSZXNwb25zZVxuKSA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgeyBuYW1lLCBsYXN0TmFtZSwgdXNlckVtYWlsLCB1c2VyUGFzc3dvcmQsIHJvbGwgfToge1xuICAgICAgbmFtZTogc3RyaW5nO1xuICAgICAgbGFzdE5hbWU6IHN0cmluZztcbiAgICAgIHVzZXJFbWFpbDogc3RyaW5nO1xuICAgICAgdXNlclBhc3N3b3JkOiBzdHJpbmc7XG4gICAgICByb2xsOiAnbXVzaWNvJyB8ICdldmVudENyZWF0b3InO1xuICAgIH0gPSByZXEuYm9keTtcblxuICAgIGNvbnNvbGUubG9nKFxuICAgICAgJ1tzcmMvY29udHJvbGxlcnMvYXV0aENvbnRyb2xsZXIudHM6MzU2XSBTb2xpY2l0dWQgZGUgdmVyaWZpY2FjacOzbiByZWNpYmlkYTonLFxuICAgICAgeyBuYW1lLCBsYXN0TmFtZSwgdXNlckVtYWlsLCByb2xsIH1cbiAgICApO1xuXG4gICAgLy8gVmFsaWRhciBjYW1wb3MgcmVxdWVyaWRvc1xuICAgIGlmICghbmFtZSB8fCAhbGFzdE5hbWUgfHwgIXVzZXJFbWFpbCB8fCAhdXNlclBhc3N3b3JkIHx8ICFyb2xsKSB7XG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDApLmpzb24oe1xuICAgICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgICAgbWVzc2FnZTogJ1RvZG9zIGxvcyBjYW1wb3Mgc29uIHJlcXVlcmlkb3M6IG5hbWUsIGxhc3ROYW1lLCB1c2VyRW1haWwsIHVzZXJQYXNzd29yZCwgcm9sbCcsXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICAvLyBWYWxpZGFyIGVtYWlsXG4gICAgaWYgKCF2YWxpZGFyRW1haWwodXNlckVtYWlsKSkge1xuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5qc29uKHtcbiAgICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICAgIG1lc3NhZ2U6ICdFbCBmb3JtYXRvIGRlbCBlbWFpbCBubyBlcyB2w6FsaWRvJyxcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIC8vIFZhbGlkYXIgY29udHJhc2XDsWFcbiAgICBpZiAoIXZhbGlkYXJQYXNzd29yZCh1c2VyUGFzc3dvcmQpKSB7XG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDApLmpzb24oe1xuICAgICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgICAgbWVzc2FnZTogJ0xhIGNvbnRyYXNlw7FhIGRlYmUgY29udGVuZXIgbWF5w7pzY3VsYXMsIG1pbsO6c2N1bGFzLCBuw7ptZXJvcyB5IGNhcmFjdGVyZXMgZXNwZWNpYWxlcycsXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICAvLyBWYWxpZGFyIHJvbFxuICAgIGlmICghWydtdXNpY28nLCAnZXZlbnRDcmVhdG9yJ10uaW5jbHVkZXMocm9sbCkpIHtcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuanNvbih7XG4gICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICBtZXNzYWdlOiAnRWwgcm9sIGRlYmUgc2VyIFwibXVzaWNvXCIgbyBcImV2ZW50Q3JlYXRvclwiJyxcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIC8vIFZlcmlmaWNhciBzaSBlbCB1c3VhcmlvIHlhIGV4aXN0ZVxuICAgIGNvbnN0IGV4aXN0aW5nVXNlciA9IGF3YWl0IGdldFVzZXJCeUVtYWlsTW9kZWwodXNlckVtYWlsKTtcbiAgICBpZiAoZXhpc3RpbmdVc2VyKSB7XG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDkpLmpzb24oe1xuICAgICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgICAgbWVzc2FnZTogJ1lhIGV4aXN0ZSB1biB1c3VhcmlvIGNvbiBlc3RlIGVtYWlsJyxcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIC8vIEdlbmVyYXIgY8OzZGlnbyBkZSB2ZXJpZmljYWNpw7NuXG4gICAgY29uc3QgdmVyaWZpY2F0aW9uQ29kZSA9IG51bWJlclJhbmRvbigpLnRvU3RyaW5nKCk7XG4gICAgY29uc3QgaGFzaGVkQ29kZSA9IGF3YWl0IGJjcnlwdC5oYXNoKHZlcmlmaWNhdGlvbkNvZGUsIDEwKTtcblxuICAgIC8vIEd1YXJkYXIgZGF0b3MgdGVtcG9yYWxtZW50ZSAoc2UgZ3VhcmRhcsOhbiBlbiBsYSBiYXNlIGRlIGRhdG9zIGRlc3B1w6lzIGRlIGxhIHZlcmlmaWNhY2nDs24pXG4gICAgY29uc3QgdGVtcFVzZXJEYXRhID0ge1xuICAgICAgbmFtZSxcbiAgICAgIGxhc3ROYW1lLFxuICAgICAgdXNlckVtYWlsOiB1c2VyRW1haWwudG9Mb3dlckNhc2UoKSxcbiAgICAgIHVzZXJQYXNzd29yZCxcbiAgICAgIHJvbGwsXG4gICAgICB2ZXJpZmljYXRpb25Db2RlOiBoYXNoZWRDb2RlLFxuICAgICAgZXhwaXJlc0F0OiBEYXRlLm5vdygpICsgMTUgKiA2MCAqIDEwMDAsIC8vIDE1IG1pbnV0b3NcbiAgICB9O1xuXG4gICAgLy8gR3VhcmRhciBlbiBtZW1vcmlhIHRlbXBvcmFsIChlbiBwcm9kdWNjacOzbiB1c2FyIFJlZGlzKVxuICAgIHZlcmlmaWNhdGlvbkNvZGVzLnNldCh1c2VyRW1haWwudG9Mb3dlckNhc2UoKSwge1xuICAgICAgY29kZTogdmVyaWZpY2F0aW9uQ29kZSxcbiAgICAgIHVzZXJEYXRhOiB0ZW1wVXNlckRhdGEsXG4gICAgICBleHBpcmVzQXQ6IERhdGUubm93KCkgKyAxNSAqIDYwICogMTAwMCxcbiAgICB9KTtcblxuICAgIC8vIEVudmlhciBlbWFpbCBkZSB2ZXJpZmljYWNpw7NuXG4gICAgY29uc3QgaHRtbCA9IGA8IURPQ1RZUEUgaHRtbD5cbiAgICA8aHRtbCBsYW5nPVwiZXNcIj5cbiAgICA8aGVhZD5cbiAgICAgIDxtZXRhIGNoYXJzZXQ9XCJVVEYtOFwiIC8+XG4gICAgICA8bWV0YSBuYW1lPVwidmlld3BvcnRcIiBjb250ZW50PVwid2lkdGg9ZGV2aWNlLXdpZHRoLCBpbml0aWFsLXNjYWxlPTEuMFwiLz5cbiAgICAgIDx0aXRsZT5WZXJpZmljYSB0dSBjdWVudGEgLSBNdXNpa09uPC90aXRsZT5cbiAgICA8L2hlYWQ+XG4gICAgPGJvZHkgc3R5bGU9XCJtYXJnaW46IDA7IHBhZGRpbmc6IDA7IGJhY2tncm91bmQtY29sb3I6ICNmNGY0ZjQ7IGZvbnQtZmFtaWx5OiAnU2Vnb2UgVUknLCBzYW5zLXNlcmlmO1wiPlxuICAgICAgPHRhYmxlIGFsaWduPVwiY2VudGVyXCIgd2lkdGg9XCIxMDAlXCIgY2VsbHBhZGRpbmc9XCIwXCIgY2VsbHNwYWNpbmc9XCIwXCIgc3R5bGU9XCJiYWNrZ3JvdW5kLWNvbG9yOiAjZjRmNGY0OyBwYWRkaW5nOiAyMHB4O1wiPlxuICAgICAgICA8dHI+XG4gICAgICAgICAgPHRkIGFsaWduPVwiY2VudGVyXCI+XG4gICAgICAgICAgICA8dGFibGUgd2lkdGg9XCI2MDBcIiBjZWxscGFkZGluZz1cIjBcIiBjZWxsc3BhY2luZz1cIjBcIiBzdHlsZT1cImJhY2tncm91bmQtY29sb3I6ICMwMDRhYWQ7IGJvcmRlci1yYWRpdXM6IDEwcHg7IG92ZXJmbG93OiBoaWRkZW47IGJveC1zaGFkb3c6IDAgNHB4IDEycHggcmdiYSgwLDAsMCwwLjEpO1wiPlxuICAgICAgICAgICAgICA8IS0tIExvZ28gLS0+XG4gICAgICAgICAgICAgIDx0cj5cbiAgICAgICAgICAgICAgICA8dGQgc3R5bGU9XCJwYWRkaW5nOiAzMHB4IDA7IHRleHQtYWxpZ246IGNlbnRlcjsgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcIj5cbiAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPVwiaHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTFNzNEI3VW1QNGJLTGIyNkctcHV5WWpDVVJWaDBRbmY5eUhEX3p4YkNmUkpUZDNERk9vdkJseTk1T3pKVFdrMzRobkJmMVJoaWdzZENuTTBXd2czVEtDZ3NKM3JzPXMyODgtYy1ub1wiIGFsdD1cIk11c2lrT24gTG9nb1wiIHdpZHRoPVwiMTIwXCIgc3R5bGU9XCJib3JkZXItcmFkaXVzOiA1MCU7XCIgLz5cbiAgICAgICAgICAgICAgICA8L3RkPlxuICAgICAgICAgICAgICA8L3RyPlxuXG4gICAgICAgICAgICAgIDwhLS0gVMOtdHVsbyAtLT5cbiAgICAgICAgICAgICAgPHRyPlxuICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT1cInBhZGRpbmc6IDMwcHg7IHRleHQtYWxpZ246IGNlbnRlcjtcIj5cbiAgICAgICAgICAgICAgICAgIDxoMiBzdHlsZT1cIm1hcmdpbjogMDsgZm9udC1zaXplOiAyNnB4OyBjb2xvcjogI2ZmZjtcIj7CoUJpZW52ZW5pZG8gYSA8c3BhbiBzdHlsZT1cImNvbG9yOiAjZjFmMWYxO1wiPk11c2lrT248L3NwYW4+ITwvaDI+XG4gICAgICAgICAgICAgICAgICA8cCBzdHlsZT1cImZvbnQtc2l6ZTogMTZweDsgY29sb3I6IGhzbCgyNDYsIDEwMCUsIDkyJSk7XCI+R3JhY2lhcyBwb3IgcmVnaXN0cmFydGUgY29tbyAke3JvbGwgPT09ICdtdXNpY28nID8gJ23DunNpY28nIDogJ2NyZWFkb3IgZGUgZXZlbnRvcyd9LiBTb2xvIGZhbHRhIHVuIHBhc28gcGFyYSBhY3RpdmFyIHR1IGN1ZW50YS48L3A+XG4gICAgICAgICAgICAgICAgPC90ZD5cbiAgICAgICAgICAgICAgPC90cj5cblxuICAgICAgICAgICAgICA8IS0tIEPDs2RpZ28gLS0+XG4gICAgICAgICAgICAgIDx0cj5cbiAgICAgICAgICAgICAgICA8dGQgc3R5bGU9XCJ0ZXh0LWFsaWduOiBjZW50ZXI7IHBhZGRpbmc6IDIwcHg7XCI+XG4gICAgICAgICAgICAgICAgICA8aDEgc3R5bGU9XCJkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IHBhZGRpbmc6IDE1cHggMzBweDsgYmFja2dyb3VuZC1jb2xvcjogIzAwNGFhZDsgY29sb3I6ICNmZmY7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgZm9udC13ZWlnaHQ6IGJvbGQ7IGJvcmRlci1yYWRpdXM6IDhweDsgZm9udC1zaXplOiA1MHB4O1wiPlxuICAgICAgICAgICAgICAgICAgICAke3ZlcmlmaWNhdGlvbkNvZGV9XG4gICAgICAgICAgICAgICAgICA8L2gxPlxuICAgICAgICAgICAgICAgIDwvdGQ+XG4gICAgICAgICAgICAgIDwvdHI+XG5cbiAgICAgICAgICAgICAgPCEtLSBJbnN0cnVjY2lvbmVzIC0tPlxuICAgICAgICAgICAgICA8dHI+XG4gICAgICAgICAgICAgICAgPHRkIHN0eWxlPVwicGFkZGluZzogMjBweCA0MHB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7IGZvbnQtc2l6ZTogMTRweDsgY29sb3I6ICNiNmM5ZmY7XCI+XG4gICAgICAgICAgICAgICAgICA8cD5JbmdyZXNhIGVzdGUgY8OzZGlnbyBlbiBsYSBhcGxpY2FjacOzbiBwYXJhIGNvbXBsZXRhciB0dSByZWdpc3Ryby48L3A+XG4gICAgICAgICAgICAgICAgICA8cD5Fc3RlIGPDs2RpZ28gZXhwaXJhIGVuIDE1IG1pbnV0b3MuPC9wPlxuICAgICAgICAgICAgICAgIDwvdGQ+XG4gICAgICAgICAgICAgIDwvdHI+XG5cbiAgICAgICAgICAgICAgPCEtLSBNZW5zYWplIGRlIHNvcG9ydGUgLS0+XG4gICAgICAgICAgICAgIDx0cj5cbiAgICAgICAgICAgICAgICA8dGQgc3R5bGU9XCJwYWRkaW5nOiAyMHB4IDQwcHg7IHRleHQtYWxpZ246IGNlbnRlcjsgZm9udC1zaXplOiAxNHB4OyBjb2xvcjogI2I2YzlmZjtcIj5cbiAgICAgICAgICAgICAgICAgIFNpIG5vIGNyZWFzdGUgZXN0YSBjdWVudGEsIHB1ZWRlcyBpZ25vcmFyIGVzdGUgbWVuc2FqZS4gU2kgdGllbmVzIGR1ZGFzLCBjb250w6FjdGFub3MgZW4gPGEgaHJlZj1cIm1haWx0bzphcHBtdXNpa29uQGdtYWlsLmNvbVwiIHN0eWxlPVwiY29sb3I6IGhzbCgyMTQsIDEwMCUsIDc3JSk7XCI+YXBwbXVzaWtvbkBnbWFpbC5jb208L2E+XG4gICAgICAgICAgICAgICAgPC90ZD5cbiAgICAgICAgICAgICAgPC90cj5cblxuICAgICAgICAgICAgICA8IS0tIEZvb3RlciAtLT5cbiAgICAgICAgICAgICAgPHRyPlxuICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT1cInRleHQtYWxpZ246IGNlbnRlcjsgcGFkZGluZzogMzBweDsgYmFja2dyb3VuZC1jb2xvcjogI2YwZjBmMDsgZm9udC1zaXplOiAxMnB4OyBjb2xvcjogIzAwNDFmMztcIj5cbiAgICAgICAgICAgICAgICAgICZjb3B5OyAyMDI1IE11c2lrT24uIFRvZG9zIGxvcyBkZXJlY2hvcyByZXNlcnZhZG9zLlxuICAgICAgICAgICAgICAgIDwvdGQ+XG4gICAgICAgICAgICAgIDwvdHI+XG4gICAgICAgICAgICA8L3RhYmxlPlxuICAgICAgICAgIDwvdGQ+XG4gICAgICAgIDwvdHI+XG4gICAgICA8L3RhYmxlPlxuICAgIDwvYm9keT5cbiAgICA8L2h0bWw+YDtcblxuICAgIGF3YWl0IHNlbmRFbWFpbCh1c2VyRW1haWwsICdWZXJpZmljYSB0dSBjdWVudGEgZW4gTXVzaWtPbicsIGh0bWwpO1xuXG4gICAgY29uc29sZS5sb2coXG4gICAgICAnW3NyYy9jb250cm9sbGVycy9hdXRoQ29udHJvbGxlci50czo0MjBdIEVtYWlsIGRlIHZlcmlmaWNhY2nDs24gZW52aWFkbzonLFxuICAgICAgdXNlckVtYWlsXG4gICAgKTtcblxuICAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuanNvbih7XG4gICAgICBzdWNjZXNzOiB0cnVlLFxuICAgICAgbWVzc2FnZTogJ0VtYWlsIGRlIHZlcmlmaWNhY2nDs24gZW52aWFkbyBleGl0b3NhbWVudGUuIFJldmlzYSB0dSBiYW5kZWphIGRlIGVudHJhZGEuJyxcbiAgICAgIGRhdGE6IHtcbiAgICAgICAgdXNlckVtYWlsLFxuICAgICAgICByb2xsLFxuICAgICAgICBleHBpcmVzSW46ICcxNSBtaW51dG9zJyxcbiAgICAgIH0sXG4gICAgfSk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcihcbiAgICAgICdbc3JjL2NvbnRyb2xsZXJzL2F1dGhDb250cm9sbGVyLnRzOjQ0MF0gRXJyb3IgZW4gcmVxdWVzdEVtYWlsVmVyaWZpY2F0aW9uQ29udHJvbGxlcjonLFxuICAgICAgZXJyb3JcbiAgICApO1xuICAgIHJldHVybiByZXMuc3RhdHVzKDUwMCkuanNvbih7XG4gICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgIG1lc3NhZ2U6ICdFcnJvciBpbnRlcm5vIGRlbCBzZXJ2aWRvcicsXG4gICAgICBlcnJvcjogZXJyb3IgaW5zdGFuY2VvZiBFcnJvciA/IGVycm9yLm1lc3NhZ2UgOiAnRXJyb3IgZGVzY29ub2NpZG8nLFxuICAgIH0pO1xuICB9XG59O1xuXG4vLyBDb250cm9sYWRvciBwYXJhIHZlcmlmaWNhciBjw7NkaWdvIHkgY29tcGxldGFyIHJlZ2lzdHJvXG5leHBvcnQgY29uc3QgdmVyaWZ5QW5kQ29tcGxldGVSZWdpc3RyYXRpb25Db250cm9sbGVyID0gYXN5bmMgKFxuICByZXE6IFJlcXVlc3QsXG4gIHJlczogUmVzcG9uc2VcbikgPT4ge1xuICB0cnkge1xuICAgIGNvbnN0IHsgdXNlckVtYWlsLCBjb2RlIH06IHtcbiAgICAgIHVzZXJFbWFpbDogc3RyaW5nO1xuICAgICAgY29kZTogc3RyaW5nO1xuICAgIH0gPSByZXEuYm9keTtcblxuICAgIGNvbnNvbGUubG9nKFxuICAgICAgJ1tzcmMvY29udHJvbGxlcnMvYXV0aENvbnRyb2xsZXIudHM6NDUwXSBWZXJpZmljYWNpw7NuIGRlIGPDs2RpZ28gcmVjaWJpZGE6JyxcbiAgICAgIHsgdXNlckVtYWlsLCBjb2RlIH1cbiAgICApO1xuXG4gICAgLy8gVmFsaWRhciBjYW1wb3MgcmVxdWVyaWRvc1xuICAgIGlmICghdXNlckVtYWlsIHx8ICFjb2RlKSB7XG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDApLmpzb24oe1xuICAgICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgICAgbWVzc2FnZTogJ0VtYWlsIHkgY8OzZGlnbyBzb24gcmVxdWVyaWRvcycsXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICAvLyBWYWxpZGFyIGVtYWlsXG4gICAgaWYgKCF2YWxpZGFyRW1haWwodXNlckVtYWlsKSkge1xuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5qc29uKHtcbiAgICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICAgIG1lc3NhZ2U6ICdFbWFpbCBpbnbDoWxpZG8nLFxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgLy8gQnVzY2FyIGRhdG9zIHRlbXBvcmFsZXNcbiAgICBjb25zdCBzdG9yZWREYXRhID0gdmVyaWZpY2F0aW9uQ29kZXMuZ2V0KHVzZXJFbWFpbC50b0xvd2VyQ2FzZSgpKTtcbiAgICBpZiAoIXN0b3JlZERhdGEpIHtcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuanNvbih7XG4gICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICBtZXNzYWdlOiAnQ8OzZGlnbyBubyBlbmNvbnRyYWRvIG8gZXhwaXJhZG8nLFxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgLy8gVmVyaWZpY2FyIGV4cGlyYWNpw7NuXG4gICAgaWYgKHN0b3JlZERhdGEuZXhwaXJlc0F0IDwgRGF0ZS5ub3coKSkge1xuICAgICAgdmVyaWZpY2F0aW9uQ29kZXMuZGVsZXRlKHVzZXJFbWFpbC50b0xvd2VyQ2FzZSgpKTtcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuanNvbih7XG4gICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICBtZXNzYWdlOiAnQ8OzZGlnbyBleHBpcmFkbycsXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICAvLyBWZXJpZmljYXIgcXVlIGV4aXN0YW4gbG9zIGRhdG9zIGRlbCB1c3VhcmlvXG4gICAgaWYgKCFzdG9yZWREYXRhLnVzZXJEYXRhKSB7XG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDApLmpzb24oe1xuICAgICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgICAgbWVzc2FnZTogJ0RhdG9zIGRlIHJlZ2lzdHJvIG5vIGVuY29udHJhZG9zJyxcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIC8vIFZlcmlmaWNhciBjw7NkaWdvXG4gICAgY29uc3QgaXNDb2RlVmFsaWQgPSBhd2FpdCBiY3J5cHQuY29tcGFyZShjb2RlLCBzdG9yZWREYXRhLnVzZXJEYXRhLnZlcmlmaWNhdGlvbkNvZGUpO1xuICAgIGlmICghaXNDb2RlVmFsaWQpIHtcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuanNvbih7XG4gICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICBtZXNzYWdlOiAnQ8OzZGlnbyBpbnbDoWxpZG8nLFxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgLy8gUmVnaXN0cmFyIHVzdWFyaW8gZW4gbGEgYmFzZSBkZSBkYXRvc1xuICAgIGNvbnN0IHsgbmFtZSwgbGFzdE5hbWUsIHVzZXJQYXNzd29yZCwgcm9sbCB9ID0gc3RvcmVkRGF0YS51c2VyRGF0YTtcbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCByZWdpc3Rlck1vZGVsKG5hbWUsIGxhc3ROYW1lLCByb2xsLCB1c2VyRW1haWwsIHVzZXJQYXNzd29yZCwgdHJ1ZSk7XG5cbiAgICBpZiAocmVzdWx0ID09PSBmYWxzZSkge1xuICAgICAgLy8gTGltcGlhciBkYXRvcyB0ZW1wb3JhbGVzXG4gICAgICB2ZXJpZmljYXRpb25Db2Rlcy5kZWxldGUodXNlckVtYWlsLnRvTG93ZXJDYXNlKCkpO1xuXG4gICAgICAvLyBHZW5lcmFyIHRva2VuIEpXVFxuICAgICAgY29uc3QgdG9rZW4gPSBjcmVhdGVUb2tlbihuYW1lLCBsYXN0TmFtZSwgdXNlckVtYWlsLCByb2xsKTtcblxuICAgICAgY29uc29sZS5sb2coXG4gICAgICAgICdbc3JjL2NvbnRyb2xsZXJzL2F1dGhDb250cm9sbGVyLnRzOjUwMF0gVXN1YXJpbyByZWdpc3RyYWRvIGV4aXRvc2FtZW50ZTonLFxuICAgICAgICB1c2VyRW1haWxcbiAgICAgICk7XG5cbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDIwMSkuanNvbih7XG4gICAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgICAgIG1lc3NhZ2U6IHJvbGwgPT09ICdtdXNpY28nIFxuICAgICAgICAgID8gJ03DunNpY28gcmVnaXN0cmFkbyBleGl0b3NhbWVudGUuIFN1IHBlcmZpbCBzZXLDoSBjb21wbGV0YWRvIHBvciB1biBhZG1pbmlzdHJhZG9yLidcbiAgICAgICAgICA6ICdDcmVhZG9yIGRlIGV2ZW50b3MgcmVnaXN0cmFkbyBleGl0b3NhbWVudGUuJyxcbiAgICAgICAgZGF0YToge1xuICAgICAgICAgIHVzZXJFbWFpbCxcbiAgICAgICAgICBuYW1lLFxuICAgICAgICAgIGxhc3ROYW1lLFxuICAgICAgICAgIHJvbGwsXG4gICAgICAgICAgc3RhdHVzOiByb2xsID09PSAnbXVzaWNvJyA/ICdwZW5kaW5nX2FwcHJvdmFsJyA6ICdhY3RpdmUnLFxuICAgICAgICAgIHRva2VuLFxuICAgICAgICB9LFxuICAgICAgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuanNvbih7XG4gICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICBtZXNzYWdlOiAnRXJyb3IgYWwgcmVnaXN0cmFyIGVsIHVzdWFyaW8nLFxuICAgICAgICBlcnJvcjogcmVzdWx0LFxuICAgICAgfSk7XG4gICAgfVxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoXG4gICAgICAnW3NyYy9jb250cm9sbGVycy9hdXRoQ29udHJvbGxlci50czo1MjBdIEVycm9yIGVuIHZlcmlmeUFuZENvbXBsZXRlUmVnaXN0cmF0aW9uQ29udHJvbGxlcjonLFxuICAgICAgZXJyb3JcbiAgICApO1xuICAgIHJldHVybiByZXMuc3RhdHVzKDUwMCkuanNvbih7XG4gICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgIG1lc3NhZ2U6ICdFcnJvciBpbnRlcm5vIGRlbCBzZXJ2aWRvcicsXG4gICAgICBlcnJvcjogZXJyb3IgaW5zdGFuY2VvZiBFcnJvciA/IGVycm9yLm1lc3NhZ2UgOiAnRXJyb3IgZGVzY29ub2NpZG8nLFxuICAgIH0pO1xuICB9XG59O1xuXG5leHBvcnQgY29uc3QgZGVsZXRlVXNlckJ5RW1haWxDb250cm9sbGVyID0gYXN5bmMgKFxuICByZXE6IFJlcXVlc3QsXG4gIHJlczogUmVzcG9uc2VcbikgPT4ge1xuICB0cnkge1xuICAgIGNvbnN0IHsgdXNlckVtYWlsIH0gPSByZXEuYm9keTtcbiAgICBjb25zb2xlLmxvZyhcbiAgICAgICdbc3JjL2NvbnRyb2xsZXJzL2F1dGhDb250cm9sbGVyLnRzOjI3MF0gW0RFTEVURV0gdXNlckVtYWlsIHJlY2liaWRvOicsXG4gICAgICB1c2VyRW1haWxcbiAgICApOyAvLyBMT0cgZGUgZGVwdXJhY2nDs25cbiAgICBpZiAoIXVzZXJFbWFpbCkge1xuICAgICAgcmVzLnN0YXR1cyg0MDApLmpzb24oeyBtZXNzYWdlOiAnRmFsdGEgZWwgZW1haWwnIH0pO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBkZWxldGVVc2VyQnlFbWFpbE1vZGVsKHVzZXJFbWFpbCk7XG4gICAgY29uc29sZS5sb2coXG4gICAgICAnW3NyYy9jb250cm9sbGVycy9hdXRoQ29udHJvbGxlci50czoyNzZdIFJlc3VsdGFkbyBkZSBkZWxldGVVc2VyQnlFbWFpbE1vZGVsOicsXG4gICAgICByZXN1bHRcbiAgICApO1xuICAgIGNvbnNvbGUubG9nKFxuICAgICAgJ1tzcmMvY29udHJvbGxlcnMvYXV0aENvbnRyb2xsZXIudHM6Mjc3XSBbREVMRVRFXSBSZXN1bHRhZG8gZGUgZGVsZXRlVXNlckJ5RW1haWxNb2RlbDonLFxuICAgICAgcmVzdWx0XG4gICAgKTsgLy8gTE9HIGRlIGRlcHVyYWNpw7NuXG4gICAgaWYgKHJlc3VsdCA9PT0gZmFsc2UpIHtcbiAgICAgIHJlcy5qc29uKHsgbWVzc2FnZTogJ1VzdWFyaW8gZWxpbWluYWRvIGNvcnJlY3RhbWVudGUnIH0pO1xuICAgIH0gZWxzZSBpZiAocmVzdWx0ID09PSAnRmFsdGEgZWwgZW1haWwnKSB7XG4gICAgICByZXMuc3RhdHVzKDQwMCkuanNvbih7IG1lc3NhZ2U6ICdGYWx0YSBlbCBlbWFpbCcgfSk7XG4gICAgfSBlbHNlIGlmIChyZXN1bHQgPT09ICdub3RfZm91bmQnKSB7XG4gICAgICByZXNcbiAgICAgICAgLnN0YXR1cyg0MDQpXG4gICAgICAgIC5qc29uKHsgbWVzc2FnZTogJ0VsIHVzdWFyaW8gbm8gZXhpc3RlIG8geWEgZnVlIGVsaW1pbmFkbycgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgbWVzc2FnZTogcmVzdWx0IH0pO1xuICAgIH1cbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmxvZyhcbiAgICAgICdbc3JjL2NvbnRyb2xsZXJzL2F1dGhDb250cm9sbGVyLnRzOjI4OF0gRXJyb3IgZW4gZGVsZXRlVXNlckJ5RW1haWxDb250cm9sbGVyJ1xuICAgICk7XG4gICAgY29uc29sZS5lcnJvcihcbiAgICAgICdbc3JjL2NvbnRyb2xsZXJzL2F1dGhDb250cm9sbGVyLnRzOjI4OV0gW0RFTEVURV0gRXJyb3IgYWwgZWxpbWluYXIgdXN1YXJpbzonLFxuICAgICAgZXJyb3JcbiAgICApOyAvLyBMT0cgZGUgZXJyb3JcbiAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7XG4gICAgICBtZXNzYWdlOiAnRXJyb3IgYWwgZWxpbWluYXIgdXN1YXJpbycsXG4gICAgICBlcnJvcjogKGVycm9yIGFzIEVycm9yKS5tZXNzYWdlLFxuICAgIH0pO1xuICB9XG59O1xuXG4vKipcbiAqIEBzd2FnZ2VyXG4gKiAvYXV0aC9mb3Jnb3QtcGFzc3dvcmQ6XG4gKiAgIHBvc3Q6XG4gKiAgICAgc3VtbWFyeTogU29saWNpdGFyIHJlY3VwZXJhY2nDs24gZGUgY29udHJhc2XDsWEgKHNvbG8gc3VwZXJhZG1pbilcbiAqICAgICB0YWdzOiBbQXV0aF1cbiAqICAgICByZXF1ZXN0Qm9keTpcbiAqICAgICAgIHJlcXVpcmVkOiB0cnVlXG4gKiAgICAgICBjb250ZW50OlxuICogICAgICAgICBhcHBsaWNhdGlvbi9qc29uOlxuICogICAgICAgICAgIHNjaGVtYTpcbiAqICAgICAgICAgICAgIHR5cGU6IG9iamVjdFxuICogICAgICAgICAgICAgcHJvcGVydGllczpcbiAqICAgICAgICAgICAgICAgdXNlckVtYWlsOlxuICogICAgICAgICAgICAgICAgIHR5cGU6IHN0cmluZ1xuICogICAgIHJlc3BvbnNlczpcbiAqICAgICAgIDIwMDpcbiAqICAgICAgICAgZGVzY3JpcHRpb246IEPDs2RpZ28gZGUgdmVyaWZpY2FjacOzbiBlbnZpYWRvXG4gKiAgICAgICA0MDQ6XG4gKiAgICAgICAgIGRlc2NyaXB0aW9uOiBVc3VhcmlvIG5vIGVuY29udHJhZG9cbiAqICAgICAgIDQwMzpcbiAqICAgICAgICAgZGVzY3JpcHRpb246IFNvbG8gc3VwZXJhZG1pbiBwdWVkZSByZWN1cGVyYXIgY29udHJhc2XDsWFcbiAqXG4gKiAvYXV0aC92ZXJpZnktY29kZTpcbiAqICAgcG9zdDpcbiAqICAgICBzdW1tYXJ5OiBWZXJpZmljYXIgY8OzZGlnbyBkZSByZWN1cGVyYWNpw7NuXG4gKiAgICAgdGFnczogW0F1dGhdXG4gKiAgICAgcmVxdWVzdEJvZHk6XG4gKiAgICAgICByZXF1aXJlZDogdHJ1ZVxuICogICAgICAgY29udGVudDpcbiAqICAgICAgICAgYXBwbGljYXRpb24vanNvbjpcbiAqICAgICAgICAgICBzY2hlbWE6XG4gKiAgICAgICAgICAgICB0eXBlOiBvYmplY3RcbiAqICAgICAgICAgICAgIHByb3BlcnRpZXM6XG4gKiAgICAgICAgICAgICAgIHVzZXJFbWFpbDpcbiAqICAgICAgICAgICAgICAgICB0eXBlOiBzdHJpbmdcbiAqICAgICAgICAgICAgICAgY29kZTpcbiAqICAgICAgICAgICAgICAgICB0eXBlOiBzdHJpbmdcbiAqICAgICByZXNwb25zZXM6XG4gKiAgICAgICAyMDA6XG4gKiAgICAgICAgIGRlc2NyaXB0aW9uOiBDw7NkaWdvIHZlcmlmaWNhZG8gY29ycmVjdGFtZW50ZVxuICogICAgICAgNDAwOlxuICogICAgICAgICBkZXNjcmlwdGlvbjogQ8OzZGlnbyBpbnbDoWxpZG8gbyBleHBpcmFkb1xuICpcbiAqIC9hdXRoL3Jlc2V0LXBhc3N3b3JkOlxuICogICBwb3N0OlxuICogICAgIHN1bW1hcnk6IFJlc3RhYmxlY2VyIGNvbnRyYXNlw7FhXG4gKiAgICAgdGFnczogW0F1dGhdXG4gKiAgICAgcmVxdWVzdEJvZHk6XG4gKiAgICAgICByZXF1aXJlZDogdHJ1ZVxuICogICAgICAgY29udGVudDpcbiAqICAgICAgICAgYXBwbGljYXRpb24vanNvbjpcbiAqICAgICAgICAgICBzY2hlbWE6XG4gKiAgICAgICAgICAgICB0eXBlOiBvYmplY3RcbiAqICAgICAgICAgICAgIHByb3BlcnRpZXM6XG4gKiAgICAgICAgICAgICAgIHVzZXJFbWFpbDpcbiAqICAgICAgICAgICAgICAgICB0eXBlOiBzdHJpbmdcbiAqICAgICAgICAgICAgICAgY29kZTpcbiAqICAgICAgICAgICAgICAgICB0eXBlOiBzdHJpbmdcbiAqICAgICAgICAgICAgICAgbmV3UGFzc3dvcmQ6XG4gKiAgICAgICAgICAgICAgICAgdHlwZTogc3RyaW5nXG4gKiAgICAgcmVzcG9uc2VzOlxuICogICAgICAgMjAwOlxuICogICAgICAgICBkZXNjcmlwdGlvbjogQ29udHJhc2XDsWEgYWN0dWFsaXphZGEgY29ycmVjdGFtZW50ZVxuICogICAgICAgNDAwOlxuICogICAgICAgICBkZXNjcmlwdGlvbjogQ8OzZGlnbyBpbnbDoWxpZG8gbyBjb250cmFzZcOxYSBkw6liaWxcbiAqL1xuXG4vLyBBbG1hY8OpbiB0ZW1wb3JhbCBwYXJhIGPDs2RpZ29zIGRlIHZlcmlmaWNhY2nDs24gKGVuIHByb2R1Y2Npw7NuIHVzYXIgUmVkaXMpXG5jb25zdCB2ZXJpZmljYXRpb25Db2RlcyA9IG5ldyBNYXA8XG4gIHN0cmluZyxcbiAgeyBcbiAgICBjb2RlOiBzdHJpbmc7IFxuICAgIGV4cGlyZXNBdDogbnVtYmVyO1xuICAgIHVzZXJEYXRhPzoge1xuICAgICAgbmFtZTogc3RyaW5nO1xuICAgICAgbGFzdE5hbWU6IHN0cmluZztcbiAgICAgIHVzZXJFbWFpbDogc3RyaW5nO1xuICAgICAgdXNlclBhc3N3b3JkOiBzdHJpbmc7XG4gICAgICByb2xsOiBzdHJpbmc7XG4gICAgICB2ZXJpZmljYXRpb25Db2RlOiBzdHJpbmc7XG4gICAgICBleHBpcmVzQXQ6IG51bWJlcjtcbiAgICB9O1xuICB9XG4+KCk7XG5cbi8vIEZ1bmNpw7NuIHBhcmEgZ2VuZXJhciBjw7NkaWdvIGRlIHZlcmlmaWNhY2nDs25cbmZ1bmN0aW9uIGdlbmVyYXRlVmVyaWZpY2F0aW9uQ29kZSgpOiBzdHJpbmcge1xuICByZXR1cm4gTWF0aC5mbG9vcigxMDAwMDAgKyBNYXRoLnJhbmRvbSgpICogOTAwMDAwKS50b1N0cmluZygpO1xufVxuXG4vLyBGdW5jacOzbiBwYXJhIGxpbXBpYXIgY8OzZGlnb3MgZXhwaXJhZG9zXG5mdW5jdGlvbiBjbGVhbnVwRXhwaXJlZENvZGVzKCkge1xuICBjb25zdCBub3cgPSBEYXRlLm5vdygpO1xuICBmb3IgKGNvbnN0IFtlbWFpbCwgZGF0YV0gb2YgdmVyaWZpY2F0aW9uQ29kZXMuZW50cmllcygpKSB7XG4gICAgaWYgKGRhdGEuZXhwaXJlc0F0IDwgbm93KSB7XG4gICAgICB2ZXJpZmljYXRpb25Db2Rlcy5kZWxldGUoZW1haWwpO1xuICAgIH1cbiAgfVxufVxuXG4vLyBFamVjdXRhciBsaW1waWV6YSBjYWRhIDUgbWludXRvcyBzb2xvIGVuIHByb2R1Y2Npw7NuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBzZXRJbnRlcnZhbChjbGVhbnVwRXhwaXJlZENvZGVzLCA1ICogNjAgKiAxMDAwKTtcbn1cblxuLy8gU29saWNpdGFyIHJlY3VwZXJhY2nDs24gZGUgY29udHJhc2XDsWEgKHNvbG8gc3VwZXJhZG1pbilcbmV4cG9ydCBjb25zdCBmb3Jnb3RQYXNzd29yZENvbnRyb2xsZXIgPSBhc3luYyAocmVxOiBSZXF1ZXN0LCByZXM6IFJlc3BvbnNlKSA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgeyB1c2VyRW1haWwgfSA9IHJlcS5ib2R5O1xuXG4gICAgaWYgKCF1c2VyRW1haWwpIHtcbiAgICAgIHJlcy5zdGF0dXMoNDAwKS5qc29uKHsgbXNnOiAnRW1haWwgZXMgcmVxdWVyaWRvJyB9KTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAoIXZhbGlkYXJFbWFpbCh1c2VyRW1haWwpKSB7XG4gICAgICByZXMuc3RhdHVzKDQwMCkuanNvbih7IG1zZzogJ0VtYWlsIGludsOhbGlkbycgfSk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgLy8gQnVzY2FyIHVzdWFyaW9cbiAgICBjb25zdCB1c2VyID0gYXdhaXQgZ2V0VXNlckJ5RW1haWxNb2RlbCh1c2VyRW1haWwpO1xuICAgIGlmICghdXNlcikge1xuICAgICAgcmVzLnN0YXR1cyg0MDQpLmpzb24oeyBtc2c6ICdVc3VhcmlvIG5vIGVuY29udHJhZG8nIH0pO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIC8vIFZlcmlmaWNhciBxdWUgc2VhIHN1cGVyYWRtaW5cbiAgICBpZiAodXNlci5yb2xsICE9PSAnc3VwZXJhZG1pbicpIHtcbiAgICAgIHJlc1xuICAgICAgICAuc3RhdHVzKDQwMylcbiAgICAgICAgLmpzb24oeyBtc2c6ICdTb2xvIHN1cGVyYWRtaW4gcHVlZGUgcmVjdXBlcmFyIGNvbnRyYXNlw7FhJyB9KTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICAvLyBHZW5lcmFyIGPDs2RpZ28gZGUgdmVyaWZpY2FjacOzblxuICAgIGNvbnN0IHZlcmlmaWNhdGlvbkNvZGUgPSBnZW5lcmF0ZVZlcmlmaWNhdGlvbkNvZGUoKTtcbiAgICBjb25zdCBleHBpcmVzQXQgPSBEYXRlLm5vdygpICsgMTAgKiA2MCAqIDEwMDA7IC8vIDEwIG1pbnV0b3NcblxuICAgIC8vIEd1YXJkYXIgY8OzZGlnbyB0ZW1wb3JhbG1lbnRlXG4gICAgdmVyaWZpY2F0aW9uQ29kZXMuc2V0KHVzZXJFbWFpbC50b0xvd2VyQ2FzZSgpLCB7XG4gICAgICBjb2RlOiB2ZXJpZmljYXRpb25Db2RlLFxuICAgICAgZXhwaXJlc0F0LFxuICAgIH0pO1xuXG4gICAgLy8gRW52aWFyIGVtYWlsIGNvbiBjw7NkaWdvXG4gICAgY29uc3QgaHRtbCA9IGA8IURPQ1RZUEUgaHRtbD5cbiAgICA8aHRtbCBsYW5nPVwiZXNcIj5cbiAgICA8aGVhZD5cbiAgICAgIDxtZXRhIGNoYXJzZXQ9XCJVVEYtOFwiIC8+XG4gICAgICA8bWV0YSBuYW1lPVwidmlld3BvcnRcIiBjb250ZW50PVwid2lkdGg9ZGV2aWNlLXdpZHRoLCBpbml0aWFsLXNjYWxlPTEuMFwiLz5cbiAgICAgIDx0aXRsZT5SZWN1cGVyYXIgQ29udHJhc2XDsWEgLSBNdXNpa09uPC90aXRsZT5cbiAgICA8L2hlYWQ+XG4gICAgPGJvZHkgc3R5bGU9XCJtYXJnaW46IDA7IHBhZGRpbmc6IDA7IGJhY2tncm91bmQtY29sb3I6ICNmNGY0ZjQ7IGZvbnQtZmFtaWx5OiAnU2Vnb2UgVUknLCBzYW5zLXNlcmlmO1wiPlxuICAgICAgPHRhYmxlIGFsaWduPVwiY2VudGVyXCIgd2lkdGg9XCIxMDAlXCIgY2VsbHBhZGRpbmc9XCIwXCIgY2VsbHNwYWNpbmc9XCIwXCIgc3R5bGU9XCJiYWNrZ3JvdW5kLWNvbG9yOiAjZjRmNGY0OyBwYWRkaW5nOiAyMHB4O1wiPlxuICAgICAgICA8dHI+XG4gICAgICAgICAgPHRkIGFsaWduPVwiY2VudGVyXCI+XG4gICAgICAgICAgICA8dGFibGUgd2lkdGg9XCI2MDBcIiBjZWxscGFkZGluZz1cIjBcIiBjZWxsc3BhY2luZz1cIjBcIiBzdHlsZT1cImJhY2tncm91bmQtY29sb3I6ICMwMDRhYWQ7IGJvcmRlci1yYWRpdXM6IDEwcHg7IG92ZXJmbG93OiBoaWRkZW47IGJveC1zaGFkb3c6IDAgNHB4IDEycHggcmdiYSgwLDAsMCwwLjEpO1wiPlxuICAgICAgICAgICAgICA8IS0tIExvZ28gLS0+XG4gICAgICAgICAgICAgIDx0cj5cbiAgICAgICAgICAgICAgICA8dGQgc3R5bGU9XCJwYWRkaW5nOiAzMHB4IDA7IHRleHQtYWxpZ246IGNlbnRlcjsgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcIj5cbiAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPVwiaHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTFNzNEI3VW1QNGJLTGIyNkctcHV5WWpDVVJWaDBRbmY5eUhEX3p4YkNmUkpUZDNERk9vdkJseTk1T3pKVFdrMzRobkJmMVJoaWdzZENuTTBXd2czVEtDZ3NKM3JzPXMyODgtYy1ub1wiIGFsdD1cIk11c2lrT24gTG9nb1wiIHdpZHRoPVwiMTIwXCIgc3R5bGU9XCJib3JkZXItcmFkaXVzOiA1MCU7XCIgLz5cbiAgICAgICAgICAgICAgICA8L3RkPlxuICAgICAgICAgICAgICA8L3RyPlxuXG4gICAgICAgICAgICAgIDwhLS0gVMOtdHVsbyAtLT5cbiAgICAgICAgICAgICAgPHRyPlxuICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT1cInBhZGRpbmc6IDMwcHg7IHRleHQtYWxpZ246IGNlbnRlcjtcIj5cbiAgICAgICAgICAgICAgICAgIDxoMiBzdHlsZT1cIm1hcmdpbjogMDsgZm9udC1zaXplOiAyNnB4OyBjb2xvcjogI2ZmZjtcIj5SZWN1cGVyYXIgQ29udHJhc2XDsWE8L2gyPlxuICAgICAgICAgICAgICAgICAgPHAgc3R5bGU9XCJmb250LXNpemU6IDE2cHg7IGNvbG9yOiBoc2woMjQ2LCAxMDAlLCA5MiUpO1wiPkhvbGEgJHt1c2VyLm5hbWV9LCBoYXMgc29saWNpdGFkbyByZXN0YWJsZWNlciB0dSBjb250cmFzZcOxYS48L3A+XG4gICAgICAgICAgICAgICAgPC90ZD5cbiAgICAgICAgICAgICAgPC90cj5cblxuICAgICAgICAgICAgICA8IS0tIEPDs2RpZ28gZGUgVmVyaWZpY2FjacOzbiAtLT5cbiAgICAgICAgICAgICAgPHRyPlxuICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT1cInRleHQtYWxpZ246IGNlbnRlcjsgcGFkZGluZzogMjBweDtcIj5cbiAgICAgICAgICAgICAgICAgIDxoMSBzdHlsZT1cImRpc3BsYXk6IGlubGluZS1ibG9jazsgcGFkZGluZzogMTVweCAzMHB4OyBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA0YWFkOyBjb2xvcjogI2ZmZjsgdGV4dC1kZWNvcmF0aW9uOiBub25lOyBmb250LXdlaWdodDogYm9sZDsgYm9yZGVyLXJhZGl1czogOHB4OyBmb250LXNpemU6IDUwcHg7XCI+XG4gICAgICAgICAgICAgICAgICAgICR7dmVyaWZpY2F0aW9uQ29kZX1cbiAgICAgICAgICAgICAgICAgIDwvaDE+XG4gICAgICAgICAgICAgICAgPC90ZD5cbiAgICAgICAgICAgICAgPC90cj5cblxuICAgICAgICAgICAgICA8IS0tIEluc3RydWNjaW9uZXMgLS0+XG4gICAgICAgICAgICAgIDx0cj5cbiAgICAgICAgICAgICAgICA8dGQgc3R5bGU9XCJwYWRkaW5nOiAyMHB4IDQwcHg7IHRleHQtYWxpZ246IGNlbnRlcjtcIj5cbiAgICAgICAgICAgICAgICAgIDxwIHN0eWxlPVwiZm9udC1zaXplOiAxNnB4OyBjb2xvcjogI2ZmZjsgbWFyZ2luLWJvdHRvbTogMTBweDtcIj5cbiAgICAgICAgICAgICAgICAgICAgPHN0cm9uZz5JbnN0cnVjY2lvbmVzOjwvc3Ryb25nPlxuICAgICAgICAgICAgICAgICAgPC9wPlxuICAgICAgICAgICAgICAgICAgPHAgc3R5bGU9XCJmb250LXNpemU6IDE0cHg7IGNvbG9yOiAjYjZjOWZmOyBtYXJnaW46IDVweCAwO1wiPlxuICAgICAgICAgICAgICAgICAgICAxLiBDb3BpYSBlbCBjw7NkaWdvIGRlIDYgZMOtZ2l0b3MgZGUgYXJyaWJhXG4gICAgICAgICAgICAgICAgICA8L3A+XG4gICAgICAgICAgICAgICAgICA8cCBzdHlsZT1cImZvbnQtc2l6ZTogMTRweDsgY29sb3I6ICNiNmM5ZmY7IG1hcmdpbjogNXB4IDA7XCI+XG4gICAgICAgICAgICAgICAgICAgIDIuIFZlIGEgbGEgcMOhZ2luYSBkZSByZWN1cGVyYWNpw7NuIGRlIGNvbnRyYXNlw7FhXG4gICAgICAgICAgICAgICAgICA8L3A+XG4gICAgICAgICAgICAgICAgICA8cCBzdHlsZT1cImZvbnQtc2l6ZTogMTRweDsgY29sb3I6ICNiNmM5ZmY7IG1hcmdpbjogNXB4IDA7XCI+XG4gICAgICAgICAgICAgICAgICAgIDMuIEluZ3Jlc2EgZWwgY8OzZGlnbyB5IHR1IG51ZXZhIGNvbnRyYXNlw7FhXG4gICAgICAgICAgICAgICAgICA8L3A+XG4gICAgICAgICAgICAgICAgICA8cCBzdHlsZT1cImZvbnQtc2l6ZTogMTRweDsgY29sb3I6ICNiNmM5ZmY7IG1hcmdpbjogNXB4IDA7XCI+XG4gICAgICAgICAgICAgICAgICAgIDQuIEVsIGPDs2RpZ28gZXhwaXJhIGVuIDEwIG1pbnV0b3NcbiAgICAgICAgICAgICAgICAgIDwvcD5cbiAgICAgICAgICAgICAgICA8L3RkPlxuICAgICAgICAgICAgICA8L3RyPlxuXG4gICAgICAgICAgICAgIDwhLS0gTWVuc2FqZSBkZSBzZWd1cmlkYWQgLS0+XG4gICAgICAgICAgICAgIDx0cj5cbiAgICAgICAgICAgICAgICA8dGQgc3R5bGU9XCJwYWRkaW5nOiAyMHB4IDQwcHg7IHRleHQtYWxpZ246IGNlbnRlcjsgZm9udC1zaXplOiAxNHB4OyBjb2xvcjogI2I2YzlmZjtcIj5cbiAgICAgICAgICAgICAgICAgIDxwIHN0eWxlPVwibWFyZ2luOiAwO1wiPlxuICAgICAgICAgICAgICAgICAgICA8c3Ryb25nPuKaoO+4jyBJbXBvcnRhbnRlOjwvc3Ryb25nPiBTaSBubyBzb2xpY2l0YXN0ZSBlc3RlIGNhbWJpbywgcHVlZGVzIGlnbm9yYXIgZXN0ZSBtZW5zYWplLiBcbiAgICAgICAgICAgICAgICAgICAgVHUgY29udHJhc2XDsWEgYWN0dWFsIHBlcm1hbmVjZXLDoSBzaW4gY2FtYmlvcy5cbiAgICAgICAgICAgICAgICAgIDwvcD5cbiAgICAgICAgICAgICAgICA8L3RkPlxuICAgICAgICAgICAgICA8L3RyPlxuXG4gICAgICAgICAgICAgIDwhLS0gRm9vdGVyIC0tPlxuICAgICAgICAgICAgICA8dHI+XG4gICAgICAgICAgICAgICAgPHRkIHN0eWxlPVwidGV4dC1hbGlnbjogY2VudGVyOyBwYWRkaW5nOiAzMHB4OyBiYWNrZ3JvdW5kLWNvbG9yOiAjZjBmMGYwOyBmb250LXNpemU6IDEycHg7IGNvbG9yOiAjMDA0MWYzO1wiPlxuICAgICAgICAgICAgICAgICAgJmNvcHk7IDIwMjUgTXVzaWtPbi4gVG9kb3MgbG9zIGRlcmVjaG9zIHJlc2VydmFkb3MuXG4gICAgICAgICAgICAgICAgPC90ZD5cbiAgICAgICAgICAgICAgPC90cj5cbiAgICAgICAgICAgIDwvdGFibGU+XG4gICAgICAgICAgPC90ZD5cbiAgICAgICAgPC90cj5cbiAgICAgIDwvdGFibGU+XG4gICAgPC9ib2R5PlxuICAgIDwvaHRtbD5gO1xuXG4gICAgdHJ5IHtcbiAgICAgIGF3YWl0IHNlbmRFbWFpbCh1c2VyRW1haWwsICdSZWN1cGVyYXIgQ29udHJhc2XDsWEgLSBNdXNpa09uJywgaHRtbCk7XG5cbiAgICAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKHtcbiAgICAgICAgbXNnOiAnQ8OzZGlnbyBkZSB2ZXJpZmljYWNpw7NuIGVudmlhZG8gYWwgZW1haWwnLFxuICAgICAgICB1c2VyRW1haWw6IHVzZXJFbWFpbCxcbiAgICAgIH0pO1xuICAgIH0gY2F0Y2ggKGVtYWlsRXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGFsIGVudmlhciBlbWFpbDonLCBlbWFpbEVycm9yKTtcbiAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgbXNnOiAnRXJyb3IgYWwgZW52aWFyIGVtYWlsIGRlIHZlcmlmaWNhY2nDs24nIH0pO1xuICAgIH1cbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciBlbiBmb3Jnb3RQYXNzd29yZENvbnRyb2xsZXI6JywgZXJyb3IpO1xuICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgbXNnOiAnRXJyb3IgaW50ZXJubyBkZWwgc2Vydmlkb3InIH0pO1xuICB9XG59O1xuXG4vLyBWZXJpZmljYXIgY8OzZGlnbyBkZSByZWN1cGVyYWNpw7NuXG5leHBvcnQgY29uc3QgdmVyaWZ5Q29kZUNvbnRyb2xsZXIgPSBhc3luYyAocmVxOiBSZXF1ZXN0LCByZXM6IFJlc3BvbnNlKSA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgeyB1c2VyRW1haWwsIGNvZGUgfSA9IHJlcS5ib2R5O1xuXG4gICAgaWYgKCF1c2VyRW1haWwgfHwgIWNvZGUpIHtcbiAgICAgIHJlcy5zdGF0dXMoNDAwKS5qc29uKHsgbXNnOiAnRW1haWwgeSBjw7NkaWdvIHNvbiByZXF1ZXJpZG9zJyB9KTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAoIXZhbGlkYXJFbWFpbCh1c2VyRW1haWwpKSB7XG4gICAgICByZXMuc3RhdHVzKDQwMCkuanNvbih7IG1zZzogJ0VtYWlsIGludsOhbGlkbycgfSk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgLy8gQnVzY2FyIHVzdWFyaW9cbiAgICBjb25zdCB1c2VyID0gYXdhaXQgZ2V0VXNlckJ5RW1haWxNb2RlbCh1c2VyRW1haWwpO1xuICAgIGlmICghdXNlcikge1xuICAgICAgcmVzLnN0YXR1cyg0MDQpLmpzb24oeyBtc2c6ICdVc3VhcmlvIG5vIGVuY29udHJhZG8nIH0pO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIC8vIFZlcmlmaWNhciBxdWUgc2VhIHN1cGVyYWRtaW5cbiAgICBpZiAodXNlci5yb2xsICE9PSAnc3VwZXJhZG1pbicpIHtcbiAgICAgIHJlc1xuICAgICAgICAuc3RhdHVzKDQwMylcbiAgICAgICAgLmpzb24oeyBtc2c6ICdTb2xvIHN1cGVyYWRtaW4gcHVlZGUgcmVjdXBlcmFyIGNvbnRyYXNlw7FhJyB9KTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICAvLyBWZXJpZmljYXIgY8OzZGlnb1xuICAgIGNvbnN0IHN0b3JlZERhdGEgPSB2ZXJpZmljYXRpb25Db2Rlcy5nZXQodXNlckVtYWlsLnRvTG93ZXJDYXNlKCkpO1xuICAgIGlmICghc3RvcmVkRGF0YSkge1xuICAgICAgcmVzLnN0YXR1cyg0MDApLmpzb24oeyBtc2c6ICdDw7NkaWdvIG5vIGVuY29udHJhZG8gbyBleHBpcmFkbycgfSk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgaWYgKHN0b3JlZERhdGEuZXhwaXJlc0F0IDwgRGF0ZS5ub3coKSkge1xuICAgICAgdmVyaWZpY2F0aW9uQ29kZXMuZGVsZXRlKHVzZXJFbWFpbC50b0xvd2VyQ2FzZSgpKTtcbiAgICAgIHJlcy5zdGF0dXMoNDAwKS5qc29uKHsgbXNnOiAnQ8OzZGlnbyBleHBpcmFkbycgfSk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgaWYgKHN0b3JlZERhdGEuY29kZSAhPT0gY29kZSkge1xuICAgICAgcmVzLnN0YXR1cyg0MDApLmpzb24oeyBtc2c6ICdDw7NkaWdvIGludsOhbGlkbycgfSk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgcmVzLnN0YXR1cygyMDApLmpzb24oe1xuICAgICAgbXNnOiAnQ8OzZGlnbyB2ZXJpZmljYWRvIGNvcnJlY3RhbWVudGUnLFxuICAgICAgdXNlckVtYWlsOiB1c2VyRW1haWwsXG4gICAgfSk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgZW4gdmVyaWZ5Q29kZUNvbnRyb2xsZXI6JywgZXJyb3IpO1xuICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgbXNnOiAnRXJyb3IgaW50ZXJubyBkZWwgc2Vydmlkb3InIH0pO1xuICB9XG59O1xuXG4vLyBSZXN0YWJsZWNlciBjb250cmFzZcOxYVxuZXhwb3J0IGNvbnN0IHJlc2V0UGFzc3dvcmRDb250cm9sbGVyID0gYXN5bmMgKHJlcTogUmVxdWVzdCwgcmVzOiBSZXNwb25zZSkgPT4ge1xuICB0cnkge1xuICAgIGNvbnN0IHsgdXNlckVtYWlsLCBjb2RlLCBuZXdQYXNzd29yZCB9ID0gcmVxLmJvZHk7XG5cbiAgICBpZiAoIXVzZXJFbWFpbCB8fCAhY29kZSB8fCAhbmV3UGFzc3dvcmQpIHtcbiAgICAgIHJlc1xuICAgICAgICAuc3RhdHVzKDQwMClcbiAgICAgICAgLmpzb24oeyBtc2c6ICdFbWFpbCwgY8OzZGlnbyB5IG51ZXZhIGNvbnRyYXNlw7FhIHNvbiByZXF1ZXJpZG9zJyB9KTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAoIXZhbGlkYXJFbWFpbCh1c2VyRW1haWwpKSB7XG4gICAgICByZXMuc3RhdHVzKDQwMCkuanNvbih7IG1zZzogJ0VtYWlsIGludsOhbGlkbycgfSk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgaWYgKCF2YWxpZGFyUGFzc3dvcmQobmV3UGFzc3dvcmQpKSB7XG4gICAgICByZXMuc3RhdHVzKDQwMCkuanNvbih7XG4gICAgICAgIG1zZzogJ0xhIGNvbnRyYXNlw7FhIG5vIGN1bXBsZSBjb24gbG9zIHJlcXVpc2l0b3MsIGRlYmUgZGUgY29udGVuZXIgTWF5w7pzY3VsYXMsIE1pbsO6c2N1bGFzLCBOw7ptZXJvcyB5IENhcsOhY3RlcmVzIGVzcGVjaWFsZXMnLFxuICAgICAgfSk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgLy8gQnVzY2FyIHVzdWFyaW9cbiAgICBjb25zdCB1c2VyID0gYXdhaXQgZ2V0VXNlckJ5RW1haWxNb2RlbCh1c2VyRW1haWwpO1xuICAgIGlmICghdXNlcikge1xuICAgICAgcmVzLnN0YXR1cyg0MDQpLmpzb24oeyBtc2c6ICdVc3VhcmlvIG5vIGVuY29udHJhZG8nIH0pO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIC8vIFZlcmlmaWNhciBxdWUgc2VhIHN1cGVyYWRtaW5cbiAgICBpZiAodXNlci5yb2xsICE9PSAnc3VwZXJhZG1pbicpIHtcbiAgICAgIHJlc1xuICAgICAgICAuc3RhdHVzKDQwMylcbiAgICAgICAgLmpzb24oeyBtc2c6ICdTb2xvIHN1cGVyYWRtaW4gcHVlZGUgcmVjdXBlcmFyIGNvbnRyYXNlw7FhJyB9KTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICAvLyBWZXJpZmljYXIgY8OzZGlnb1xuICAgIGNvbnN0IHN0b3JlZERhdGEgPSB2ZXJpZmljYXRpb25Db2Rlcy5nZXQodXNlckVtYWlsLnRvTG93ZXJDYXNlKCkpO1xuICAgIGlmICghc3RvcmVkRGF0YSkge1xuICAgICAgcmVzLnN0YXR1cyg0MDApLmpzb24oeyBtc2c6ICdDw7NkaWdvIG5vIGVuY29udHJhZG8gbyBleHBpcmFkbycgfSk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgaWYgKHN0b3JlZERhdGEuZXhwaXJlc0F0IDwgRGF0ZS5ub3coKSkge1xuICAgICAgdmVyaWZpY2F0aW9uQ29kZXMuZGVsZXRlKHVzZXJFbWFpbC50b0xvd2VyQ2FzZSgpKTtcbiAgICAgIHJlcy5zdGF0dXMoNDAwKS5qc29uKHsgbXNnOiAnQ8OzZGlnbyBleHBpcmFkbycgfSk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgaWYgKHN0b3JlZERhdGEuY29kZSAhPT0gY29kZSkge1xuICAgICAgcmVzLnN0YXR1cyg0MDApLmpzb24oeyBtc2c6ICdDw7NkaWdvIGludsOhbGlkbycgfSk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgLy8gSGFzaGVhciBudWV2YSBjb250cmFzZcOxYVxuICAgIGNvbnN0IGhhc2hlZFBhc3N3b3JkID0gYXdhaXQgYmNyeXB0Lmhhc2gobmV3UGFzc3dvcmQsIDEwKTtcblxuICAgIC8vIEFjdHVhbGl6YXIgY29udHJhc2XDsWEgZW4gbGEgYmFzZSBkZSBkYXRvc1xuICAgIGNvbnN0IHVwZGF0ZURhdGEgPSB7XG4gICAgICB1c2VyUGFzc3dvcmQ6IGhhc2hlZFBhc3N3b3JkLFxuICAgICAgdXBkYXRlX2F0OiBuZXcgRGF0ZSgpLnRvU3RyaW5nKCksXG4gICAgfTtcblxuICAgIGNvbnN0IHVwZGF0ZVJlc3VsdCA9IGF3YWl0IHVwZGF0ZVVzZXJCeUVtYWlsTW9kZWwodXNlckVtYWlsLCB1cGRhdGVEYXRhKTtcbiAgICBpZiAodXBkYXRlUmVzdWx0KSB7XG4gICAgICByZXMuc3RhdHVzKDQwMCkuanNvbih7IG1zZzogdXBkYXRlUmVzdWx0IH0pO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIC8vIEVsaW1pbmFyIGPDs2RpZ28gdXNhZG9cbiAgICB2ZXJpZmljYXRpb25Db2Rlcy5kZWxldGUodXNlckVtYWlsLnRvTG93ZXJDYXNlKCkpO1xuXG4gICAgcmVzLnN0YXR1cygyMDApLmpzb24oe1xuICAgICAgbXNnOiAnQ29udHJhc2XDsWEgYWN0dWFsaXphZGEgY29ycmVjdGFtZW50ZScsXG4gICAgICB1c2VyRW1haWw6IHVzZXJFbWFpbCxcbiAgICB9KTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciBlbiByZXNldFBhc3N3b3JkQ29udHJvbGxlcjonLCBlcnJvcik7XG4gICAgcmVzLnN0YXR1cyg1MDApLmpzb24oeyBtc2c6ICdFcnJvciBpbnRlcm5vIGRlbCBzZXJ2aWRvcicgfSk7XG4gIH1cbn07XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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