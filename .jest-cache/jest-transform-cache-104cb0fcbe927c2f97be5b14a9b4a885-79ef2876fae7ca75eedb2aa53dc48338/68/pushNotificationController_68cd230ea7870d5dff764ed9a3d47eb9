458e69a5af02f16f0a2d8e0ac3f8fae1
"use strict";

/* istanbul ignore next */
function cov_wyzfij6rm() {
  var path = "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\controllers\\pushNotificationController.ts";
  var hash = "4a12c91a1c45d24440fc5047c7e753cc85c9a250";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\controllers\\pushNotificationController.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 16
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 28
        },
        end: {
          line: 3,
          column: 110
        }
      },
      "2": {
        start: {
          line: 3,
          column: 91
        },
        end: {
          line: 3,
          column: 106
        }
      },
      "3": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "4": {
        start: {
          line: 5,
          column: 36
        },
        end: {
          line: 5,
          column: 97
        }
      },
      "5": {
        start: {
          line: 5,
          column: 42
        },
        end: {
          line: 5,
          column: 70
        }
      },
      "6": {
        start: {
          line: 5,
          column: 85
        },
        end: {
          line: 5,
          column: 95
        }
      },
      "7": {
        start: {
          line: 6,
          column: 35
        },
        end: {
          line: 6,
          column: 100
        }
      },
      "8": {
        start: {
          line: 6,
          column: 41
        },
        end: {
          line: 6,
          column: 73
        }
      },
      "9": {
        start: {
          line: 6,
          column: 88
        },
        end: {
          line: 6,
          column: 98
        }
      },
      "10": {
        start: {
          line: 7,
          column: 32
        },
        end: {
          line: 7,
          column: 116
        }
      },
      "11": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 78
        }
      },
      "12": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 62
        }
      },
      "13": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 434
        }
      },
      "14": {
        start: {
          line: 13,
          column: 23
        },
        end: {
          line: 13,
          column: 60
        }
      },
      "15": {
        start: {
          line: 14,
          column: 34
        },
        end: {
          line: 14,
          column: 80
        }
      },
      "16": {
        start: {
          line: 15,
          column: 24
        },
        end: {
          line: 15,
          column: 60
        }
      },
      "17": {
        start: {
          line: 19,
          column: 0
        },
        end: {
          line: 54,
          column: 4
        }
      },
      "18": {
        start: {
          line: 19,
          column: 78
        },
        end: {
          line: 54,
          column: 2
        }
      },
      "19": {
        start: {
          line: 21,
          column: 31
        },
        end: {
          line: 21,
          column: 39
        }
      },
      "20": {
        start: {
          line: 22,
          column: 19
        },
        end: {
          line: 22,
          column: 81
        }
      },
      "21": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 31,
          column: 5
        }
      },
      "22": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 30,
          column: 11
        }
      },
      "23": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 40,
          column: 5
        }
      },
      "24": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 39,
          column: 11
        }
      },
      "25": {
        start: {
          line: 41,
          column: 25
        },
        end: {
          line: 45,
          column: 6
        }
      },
      "26": {
        start: {
          line: 46,
          column: 4
        },
        end: {
          line: 48,
          column: 7
        }
      },
      "27": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 53,
          column: 7
        }
      },
      "28": {
        start: {
          line: 58,
          column: 0
        },
        end: {
          line: 76,
          column: 4
        }
      },
      "29": {
        start: {
          line: 58,
          column: 82
        },
        end: {
          line: 76,
          column: 2
        }
      },
      "30": {
        start: {
          line: 60,
          column: 19
        },
        end: {
          line: 60,
          column: 81
        }
      },
      "31": {
        start: {
          line: 61,
          column: 4
        },
        end: {
          line: 69,
          column: 5
        }
      },
      "32": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 68,
          column: 11
        }
      },
      "33": {
        start: {
          line: 70,
          column: 26
        },
        end: {
          line: 70,
          column: 104
        }
      },
      "34": {
        start: {
          line: 71,
          column: 4
        },
        end: {
          line: 75,
          column: 7
        }
      },
      "35": {
        start: {
          line: 80,
          column: 0
        },
        end: {
          line: 101,
          column: 4
        }
      },
      "36": {
        start: {
          line: 80,
          column: 80
        },
        end: {
          line: 101,
          column: 2
        }
      },
      "37": {
        start: {
          line: 82,
          column: 31
        },
        end: {
          line: 82,
          column: 41
        }
      },
      "38": {
        start: {
          line: 83,
          column: 19
        },
        end: {
          line: 83,
          column: 81
        }
      },
      "39": {
        start: {
          line: 84,
          column: 4
        },
        end: {
          line: 92,
          column: 5
        }
      },
      "40": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 91,
          column: 11
        }
      },
      "41": {
        start: {
          line: 93,
          column: 4
        },
        end: {
          line: 93,
          column: 95
        }
      },
      "42": {
        start: {
          line: 94,
          column: 4
        },
        end: {
          line: 96,
          column: 7
        }
      },
      "43": {
        start: {
          line: 97,
          column: 4
        },
        end: {
          line: 100,
          column: 7
        }
      },
      "44": {
        start: {
          line: 105,
          column: 0
        },
        end: {
          line: 125,
          column: 4
        }
      },
      "45": {
        start: {
          line: 105,
          column: 80
        },
        end: {
          line: 125,
          column: 2
        }
      },
      "46": {
        start: {
          line: 106,
          column: 23
        },
        end: {
          line: 106,
          column: 33
        }
      },
      "47": {
        start: {
          line: 107,
          column: 25
        },
        end: {
          line: 107,
          column: 33
        }
      },
      "48": {
        start: {
          line: 108,
          column: 4
        },
        end: {
          line: 116,
          column: 5
        }
      },
      "49": {
        start: {
          line: 109,
          column: 8
        },
        end: {
          line: 115,
          column: 11
        }
      },
      "50": {
        start: {
          line: 117,
          column: 4
        },
        end: {
          line: 117,
          column: 105
        }
      },
      "51": {
        start: {
          line: 118,
          column: 4
        },
        end: {
          line: 120,
          column: 7
        }
      },
      "52": {
        start: {
          line: 121,
          column: 4
        },
        end: {
          line: 124,
          column: 7
        }
      },
      "53": {
        start: {
          line: 129,
          column: 0
        },
        end: {
          line: 170,
          column: 4
        }
      },
      "54": {
        start: {
          line: 129,
          column: 78
        },
        end: {
          line: 170,
          column: 2
        }
      },
      "55": {
        start: {
          line: 130,
          column: 24
        },
        end: {
          line: 130,
          column: 32
        }
      },
      "56": {
        start: {
          line: 131,
          column: 4
        },
        end: {
          line: 139,
          column: 5
        }
      },
      "57": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 138,
          column: 11
        }
      },
      "58": {
        start: {
          line: 140,
          column: 4
        },
        end: {
          line: 148,
          column: 5
        }
      },
      "59": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 147,
          column: 11
        }
      },
      "60": {
        start: {
          line: 149,
          column: 19
        },
        end: {
          line: 149,
          column: 108
        }
      },
      "61": {
        start: {
          line: 150,
          column: 4
        },
        end: {
          line: 169,
          column: 5
        }
      },
      "62": {
        start: {
          line: 151,
          column: 8
        },
        end: {
          line: 153,
          column: 11
        }
      },
      "63": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 158,
          column: 11
        }
      },
      "64": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 161,
          column: 75
        }
      },
      "65": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 168,
          column: 11
        }
      },
      "66": {
        start: {
          line: 174,
          column: 0
        },
        end: {
          line: 209,
          column: 4
        }
      },
      "67": {
        start: {
          line: 174,
          column: 84
        },
        end: {
          line: 209,
          column: 2
        }
      },
      "68": {
        start: {
          line: 175,
          column: 21
        },
        end: {
          line: 175,
          column: 29
        }
      },
      "69": {
        start: {
          line: 176,
          column: 4
        },
        end: {
          line: 184,
          column: 5
        }
      },
      "70": {
        start: {
          line: 177,
          column: 8
        },
        end: {
          line: 183,
          column: 11
        }
      },
      "71": {
        start: {
          line: 185,
          column: 28
        },
        end: {
          line: 185,
          column: 120
        }
      },
      "72": {
        start: {
          line: 186,
          column: 4
        },
        end: {
          line: 208,
          column: 5
        }
      },
      "73": {
        start: {
          line: 187,
          column: 8
        },
        end: {
          line: 192,
          column: 11
        }
      },
      "74": {
        start: {
          line: 193,
          column: 8
        },
        end: {
          line: 197,
          column: 11
        }
      },
      "75": {
        start: {
          line: 200,
          column: 8
        },
        end: {
          line: 200,
          column: 79
        }
      },
      "76": {
        start: {
          line: 201,
          column: 8
        },
        end: {
          line: 207,
          column: 11
        }
      },
      "77": {
        start: {
          line: 213,
          column: 0
        },
        end: {
          line: 221,
          column: 4
        }
      },
      "78": {
        start: {
          line: 213,
          column: 81
        },
        end: {
          line: 221,
          column: 2
        }
      },
      "79": {
        start: {
          line: 214,
          column: 27
        },
        end: {
          line: 214,
          column: 37
        }
      },
      "80": {
        start: {
          line: 215,
          column: 21
        },
        end: {
          line: 215,
          column: 112
        }
      },
      "81": {
        start: {
          line: 216,
          column: 4
        },
        end: {
          line: 220,
          column: 7
        }
      },
      "82": {
        start: {
          line: 225,
          column: 0
        },
        end: {
          line: 232,
          column: 4
        }
      },
      "83": {
        start: {
          line: 225,
          column: 76
        },
        end: {
          line: 232,
          column: 2
        }
      },
      "84": {
        start: {
          line: 226,
          column: 22
        },
        end: {
          line: 226,
          column: 98
        }
      },
      "85": {
        start: {
          line: 227,
          column: 4
        },
        end: {
          line: 231,
          column: 7
        }
      },
      "86": {
        start: {
          line: 236,
          column: 0
        },
        end: {
          line: 248,
          column: 4
        }
      },
      "87": {
        start: {
          line: 236,
          column: 84
        },
        end: {
          line: 248,
          column: 2
        }
      },
      "88": {
        start: {
          line: 237,
          column: 27
        },
        end: {
          line: 237,
          column: 37
        }
      },
      "89": {
        start: {
          line: 238,
          column: 20
        },
        end: {
          line: 238,
          column: 28
        }
      },
      "90": {
        start: {
          line: 239,
          column: 28
        },
        end: {
          line: 239,
          column: 131
        }
      },
      "91": {
        start: {
          line: 240,
          column: 4
        },
        end: {
          line: 242,
          column: 7
        }
      },
      "92": {
        start: {
          line: 243,
          column: 4
        },
        end: {
          line: 247,
          column: 7
        }
      },
      "93": {
        start: {
          line: 252,
          column: 0
        },
        end: {
          line: 262,
          column: 4
        }
      },
      "94": {
        start: {
          line: 252,
          column: 84
        },
        end: {
          line: 262,
          column: 2
        }
      },
      "95": {
        start: {
          line: 253,
          column: 27
        },
        end: {
          line: 253,
          column: 37
        }
      },
      "96": {
        start: {
          line: 254,
          column: 4
        },
        end: {
          line: 254,
          column: 99
        }
      },
      "97": {
        start: {
          line: 255,
          column: 4
        },
        end: {
          line: 257,
          column: 7
        }
      },
      "98": {
        start: {
          line: 258,
          column: 4
        },
        end: {
          line: 261,
          column: 7
        }
      },
      "99": {
        start: {
          line: 266,
          column: 0
        },
        end: {
          line: 273,
          column: 4
        }
      },
      "100": {
        start: {
          line: 266,
          column: 78
        },
        end: {
          line: 273,
          column: 2
        }
      },
      "101": {
        start: {
          line: 267,
          column: 18
        },
        end: {
          line: 267,
          column: 96
        }
      },
      "102": {
        start: {
          line: 268,
          column: 4
        },
        end: {
          line: 272,
          column: 7
        }
      },
      "103": {
        start: {
          line: 277,
          column: 0
        },
        end: {
          line: 284,
          column: 4
        }
      },
      "104": {
        start: {
          line: 277,
          column: 75
        },
        end: {
          line: 284,
          column: 2
        }
      },
      "105": {
        start: {
          line: 278,
          column: 22
        },
        end: {
          line: 278,
          column: 91
        }
      },
      "106": {
        start: {
          line: 279,
          column: 4
        },
        end: {
          line: 283,
          column: 7
        }
      },
      "107": {
        start: {
          line: 288,
          column: 0
        },
        end: {
          line: 323,
          column: 4
        }
      },
      "108": {
        start: {
          line: 288,
          column: 78
        },
        end: {
          line: 323,
          column: 2
        }
      },
      "109": {
        start: {
          line: 290,
          column: 19
        },
        end: {
          line: 290,
          column: 81
        }
      },
      "110": {
        start: {
          line: 291,
          column: 4
        },
        end: {
          line: 299,
          column: 5
        }
      },
      "111": {
        start: {
          line: 292,
          column: 8
        },
        end: {
          line: 298,
          column: 11
        }
      },
      "112": {
        start: {
          line: 300,
          column: 29
        },
        end: {
          line: 314,
          column: 5
        }
      },
      "113": {
        start: {
          line: 315,
          column: 4
        },
        end: {
          line: 315,
          column: 109
        }
      },
      "114": {
        start: {
          line: 316,
          column: 4
        },
        end: {
          line: 318,
          column: 7
        }
      },
      "115": {
        start: {
          line: 319,
          column: 4
        },
        end: {
          line: 322,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 2,
            column: 45
          }
        },
        loc: {
          start: {
            line: 2,
            column: 89
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "adopt",
        decl: {
          start: {
            line: 3,
            column: 13
          },
          end: {
            line: 3,
            column: 18
          }
        },
        loc: {
          start: {
            line: 3,
            column: 26
          },
          end: {
            line: 3,
            column: 112
          }
        },
        line: 3
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 3,
            column: 70
          },
          end: {
            line: 3,
            column: 71
          }
        },
        loc: {
          start: {
            line: 3,
            column: 89
          },
          end: {
            line: 3,
            column: 108
          }
        },
        line: 3
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 4,
            column: 36
          },
          end: {
            line: 4,
            column: 37
          }
        },
        loc: {
          start: {
            line: 4,
            column: 63
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 4
      },
      "4": {
        name: "fulfilled",
        decl: {
          start: {
            line: 5,
            column: 17
          },
          end: {
            line: 5,
            column: 26
          }
        },
        loc: {
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 99
          }
        },
        line: 5
      },
      "5": {
        name: "rejected",
        decl: {
          start: {
            line: 6,
            column: 17
          },
          end: {
            line: 6,
            column: 25
          }
        },
        loc: {
          start: {
            line: 6,
            column: 33
          },
          end: {
            line: 6,
            column: 102
          }
        },
        line: 6
      },
      "6": {
        name: "step",
        decl: {
          start: {
            line: 7,
            column: 17
          },
          end: {
            line: 7,
            column: 21
          }
        },
        loc: {
          start: {
            line: 7,
            column: 30
          },
          end: {
            line: 7,
            column: 118
          }
        },
        line: 7
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 19,
            column: 64
          },
          end: {
            line: 19,
            column: 65
          }
        },
        loc: {
          start: {
            line: 19,
            column: 78
          },
          end: {
            line: 54,
            column: 2
          }
        },
        line: 19
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 19,
            column: 112
          },
          end: {
            line: 19,
            column: 113
          }
        },
        loc: {
          start: {
            line: 19,
            column: 125
          },
          end: {
            line: 54,
            column: 1
          }
        },
        line: 19
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 58,
            column: 68
          },
          end: {
            line: 58,
            column: 69
          }
        },
        loc: {
          start: {
            line: 58,
            column: 82
          },
          end: {
            line: 76,
            column: 2
          }
        },
        line: 58
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 58,
            column: 116
          },
          end: {
            line: 58,
            column: 117
          }
        },
        loc: {
          start: {
            line: 58,
            column: 129
          },
          end: {
            line: 76,
            column: 1
          }
        },
        line: 58
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 80,
            column: 66
          },
          end: {
            line: 80,
            column: 67
          }
        },
        loc: {
          start: {
            line: 80,
            column: 80
          },
          end: {
            line: 101,
            column: 2
          }
        },
        line: 80
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 80,
            column: 114
          },
          end: {
            line: 80,
            column: 115
          }
        },
        loc: {
          start: {
            line: 80,
            column: 127
          },
          end: {
            line: 101,
            column: 1
          }
        },
        line: 80
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 105,
            column: 66
          },
          end: {
            line: 105,
            column: 67
          }
        },
        loc: {
          start: {
            line: 105,
            column: 80
          },
          end: {
            line: 125,
            column: 2
          }
        },
        line: 105
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 105,
            column: 114
          },
          end: {
            line: 105,
            column: 115
          }
        },
        loc: {
          start: {
            line: 105,
            column: 127
          },
          end: {
            line: 125,
            column: 1
          }
        },
        line: 105
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 129,
            column: 64
          },
          end: {
            line: 129,
            column: 65
          }
        },
        loc: {
          start: {
            line: 129,
            column: 78
          },
          end: {
            line: 170,
            column: 2
          }
        },
        line: 129
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 129,
            column: 112
          },
          end: {
            line: 129,
            column: 113
          }
        },
        loc: {
          start: {
            line: 129,
            column: 125
          },
          end: {
            line: 170,
            column: 1
          }
        },
        line: 129
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 174,
            column: 70
          },
          end: {
            line: 174,
            column: 71
          }
        },
        loc: {
          start: {
            line: 174,
            column: 84
          },
          end: {
            line: 209,
            column: 2
          }
        },
        line: 174
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 174,
            column: 118
          },
          end: {
            line: 174,
            column: 119
          }
        },
        loc: {
          start: {
            line: 174,
            column: 131
          },
          end: {
            line: 209,
            column: 1
          }
        },
        line: 174
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 213,
            column: 67
          },
          end: {
            line: 213,
            column: 68
          }
        },
        loc: {
          start: {
            line: 213,
            column: 81
          },
          end: {
            line: 221,
            column: 2
          }
        },
        line: 213
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 213,
            column: 115
          },
          end: {
            line: 213,
            column: 116
          }
        },
        loc: {
          start: {
            line: 213,
            column: 128
          },
          end: {
            line: 221,
            column: 1
          }
        },
        line: 213
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 225,
            column: 62
          },
          end: {
            line: 225,
            column: 63
          }
        },
        loc: {
          start: {
            line: 225,
            column: 76
          },
          end: {
            line: 232,
            column: 2
          }
        },
        line: 225
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 225,
            column: 110
          },
          end: {
            line: 225,
            column: 111
          }
        },
        loc: {
          start: {
            line: 225,
            column: 123
          },
          end: {
            line: 232,
            column: 1
          }
        },
        line: 225
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 236,
            column: 70
          },
          end: {
            line: 236,
            column: 71
          }
        },
        loc: {
          start: {
            line: 236,
            column: 84
          },
          end: {
            line: 248,
            column: 2
          }
        },
        line: 236
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 236,
            column: 118
          },
          end: {
            line: 236,
            column: 119
          }
        },
        loc: {
          start: {
            line: 236,
            column: 131
          },
          end: {
            line: 248,
            column: 1
          }
        },
        line: 236
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 252,
            column: 70
          },
          end: {
            line: 252,
            column: 71
          }
        },
        loc: {
          start: {
            line: 252,
            column: 84
          },
          end: {
            line: 262,
            column: 2
          }
        },
        line: 252
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 252,
            column: 118
          },
          end: {
            line: 252,
            column: 119
          }
        },
        loc: {
          start: {
            line: 252,
            column: 131
          },
          end: {
            line: 262,
            column: 1
          }
        },
        line: 252
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 266,
            column: 64
          },
          end: {
            line: 266,
            column: 65
          }
        },
        loc: {
          start: {
            line: 266,
            column: 78
          },
          end: {
            line: 273,
            column: 2
          }
        },
        line: 266
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 266,
            column: 112
          },
          end: {
            line: 266,
            column: 113
          }
        },
        loc: {
          start: {
            line: 266,
            column: 125
          },
          end: {
            line: 273,
            column: 1
          }
        },
        line: 266
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 277,
            column: 61
          },
          end: {
            line: 277,
            column: 62
          }
        },
        loc: {
          start: {
            line: 277,
            column: 75
          },
          end: {
            line: 284,
            column: 2
          }
        },
        line: 277
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 277,
            column: 109
          },
          end: {
            line: 277,
            column: 110
          }
        },
        loc: {
          start: {
            line: 277,
            column: 122
          },
          end: {
            line: 284,
            column: 1
          }
        },
        line: 277
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 288,
            column: 64
          },
          end: {
            line: 288,
            column: 65
          }
        },
        loc: {
          start: {
            line: 288,
            column: 78
          },
          end: {
            line: 323,
            column: 2
          }
        },
        line: 288
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 288,
            column: 112
          },
          end: {
            line: 288,
            column: 113
          }
        },
        loc: {
          start: {
            line: 288,
            column: 125
          },
          end: {
            line: 323,
            column: 1
          }
        },
        line: 288
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 16
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 17
          },
          end: {
            line: 2,
            column: 21
          }
        }, {
          start: {
            line: 2,
            column: 25
          },
          end: {
            line: 2,
            column: 39
          }
        }, {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 35
          },
          end: {
            line: 3,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 56
          },
          end: {
            line: 3,
            column: 61
          }
        }, {
          start: {
            line: 3,
            column: 64
          },
          end: {
            line: 3,
            column: 109
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 17
          }
        }, {
          start: {
            line: 4,
            column: 22
          },
          end: {
            line: 4,
            column: 33
          }
        }],
        line: 4
      },
      "3": {
        loc: {
          start: {
            line: 7,
            column: 32
          },
          end: {
            line: 7,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 7,
            column: 46
          },
          end: {
            line: 7,
            column: 67
          }
        }, {
          start: {
            line: 7,
            column: 70
          },
          end: {
            line: 7,
            column: 115
          }
        }],
        line: 7
      },
      "4": {
        loc: {
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 61
          }
        }, {
          start: {
            line: 8,
            column: 65
          },
          end: {
            line: 8,
            column: 67
          }
        }],
        line: 8
      },
      "5": {
        loc: {
          start: {
            line: 22,
            column: 19
          },
          end: {
            line: 22,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 22,
            column: 63
          },
          end: {
            line: 22,
            column: 69
          }
        }, {
          start: {
            line: 22,
            column: 72
          },
          end: {
            line: 22,
            column: 81
          }
        }],
        line: 22
      },
      "6": {
        loc: {
          start: {
            line: 22,
            column: 19
          },
          end: {
            line: 22,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 22,
            column: 19
          },
          end: {
            line: 22,
            column: 43
          }
        }, {
          start: {
            line: 22,
            column: 47
          },
          end: {
            line: 22,
            column: 60
          }
        }],
        line: 22
      },
      "7": {
        loc: {
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 23
      },
      "8": {
        loc: {
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 32
      },
      "9": {
        loc: {
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 32,
            column: 26
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 32,
            column: 17
          }
        }, {
          start: {
            line: 32,
            column: 21
          },
          end: {
            line: 32,
            column: 26
          }
        }],
        line: 32
      },
      "10": {
        loc: {
          start: {
            line: 60,
            column: 19
          },
          end: {
            line: 60,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 60,
            column: 63
          },
          end: {
            line: 60,
            column: 69
          }
        }, {
          start: {
            line: 60,
            column: 72
          },
          end: {
            line: 60,
            column: 81
          }
        }],
        line: 60
      },
      "11": {
        loc: {
          start: {
            line: 60,
            column: 19
          },
          end: {
            line: 60,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 60,
            column: 19
          },
          end: {
            line: 60,
            column: 43
          }
        }, {
          start: {
            line: 60,
            column: 47
          },
          end: {
            line: 60,
            column: 60
          }
        }],
        line: 60
      },
      "12": {
        loc: {
          start: {
            line: 61,
            column: 4
          },
          end: {
            line: 69,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 61,
            column: 4
          },
          end: {
            line: 69,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 61
      },
      "13": {
        loc: {
          start: {
            line: 83,
            column: 19
          },
          end: {
            line: 83,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 83,
            column: 63
          },
          end: {
            line: 83,
            column: 69
          }
        }, {
          start: {
            line: 83,
            column: 72
          },
          end: {
            line: 83,
            column: 81
          }
        }],
        line: 83
      },
      "14": {
        loc: {
          start: {
            line: 83,
            column: 19
          },
          end: {
            line: 83,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 83,
            column: 19
          },
          end: {
            line: 83,
            column: 43
          }
        }, {
          start: {
            line: 83,
            column: 47
          },
          end: {
            line: 83,
            column: 60
          }
        }],
        line: 83
      },
      "15": {
        loc: {
          start: {
            line: 84,
            column: 4
          },
          end: {
            line: 92,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 84,
            column: 4
          },
          end: {
            line: 92,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 84
      },
      "16": {
        loc: {
          start: {
            line: 108,
            column: 4
          },
          end: {
            line: 116,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 108,
            column: 4
          },
          end: {
            line: 116,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 108
      },
      "17": {
        loc: {
          start: {
            line: 108,
            column: 8
          },
          end: {
            line: 108,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 108,
            column: 8
          },
          end: {
            line: 108,
            column: 27
          }
        }, {
          start: {
            line: 108,
            column: 31
          },
          end: {
            line: 108,
            column: 49
          }
        }],
        line: 108
      },
      "18": {
        loc: {
          start: {
            line: 131,
            column: 4
          },
          end: {
            line: 139,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 131,
            column: 4
          },
          end: {
            line: 139,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 131
      },
      "19": {
        loc: {
          start: {
            line: 131,
            column: 8
          },
          end: {
            line: 131,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 131,
            column: 8
          },
          end: {
            line: 131,
            column: 31
          }
        }, {
          start: {
            line: 131,
            column: 35
          },
          end: {
            line: 131,
            column: 66
          }
        }],
        line: 131
      },
      "20": {
        loc: {
          start: {
            line: 140,
            column: 4
          },
          end: {
            line: 148,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 140,
            column: 4
          },
          end: {
            line: 148,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 140
      },
      "21": {
        loc: {
          start: {
            line: 140,
            column: 8
          },
          end: {
            line: 140,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 140,
            column: 8
          },
          end: {
            line: 140,
            column: 28
          }
        }, {
          start: {
            line: 140,
            column: 32
          },
          end: {
            line: 140,
            column: 54
          }
        }],
        line: 140
      },
      "22": {
        loc: {
          start: {
            line: 150,
            column: 4
          },
          end: {
            line: 169,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 150,
            column: 4
          },
          end: {
            line: 169,
            column: 5
          }
        }, {
          start: {
            line: 160,
            column: 9
          },
          end: {
            line: 169,
            column: 5
          }
        }],
        line: 150
      },
      "23": {
        loc: {
          start: {
            line: 176,
            column: 4
          },
          end: {
            line: 184,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 176,
            column: 4
          },
          end: {
            line: 184,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 176
      },
      "24": {
        loc: {
          start: {
            line: 176,
            column: 8
          },
          end: {
            line: 176,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 176,
            column: 8
          },
          end: {
            line: 176,
            column: 22
          }
        }, {
          start: {
            line: 176,
            column: 26
          },
          end: {
            line: 176,
            column: 41
          }
        }, {
          start: {
            line: 176,
            column: 45
          },
          end: {
            line: 176,
            column: 59
          }
        }],
        line: 176
      },
      "25": {
        loc: {
          start: {
            line: 186,
            column: 4
          },
          end: {
            line: 208,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 186,
            column: 4
          },
          end: {
            line: 208,
            column: 5
          }
        }, {
          start: {
            line: 199,
            column: 9
          },
          end: {
            line: 208,
            column: 5
          }
        }],
        line: 186
      },
      "26": {
        loc: {
          start: {
            line: 290,
            column: 19
          },
          end: {
            line: 290,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 290,
            column: 63
          },
          end: {
            line: 290,
            column: 69
          }
        }, {
          start: {
            line: 290,
            column: 72
          },
          end: {
            line: 290,
            column: 81
          }
        }],
        line: 290
      },
      "27": {
        loc: {
          start: {
            line: 290,
            column: 19
          },
          end: {
            line: 290,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 290,
            column: 19
          },
          end: {
            line: 290,
            column: 43
          }
        }, {
          start: {
            line: 290,
            column: 47
          },
          end: {
            line: 290,
            column: 60
          }
        }],
        line: 290
      },
      "28": {
        loc: {
          start: {
            line: 291,
            column: 4
          },
          end: {
            line: 299,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 291,
            column: 4
          },
          end: {
            line: 299,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 291
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\controllers\\pushNotificationController.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\controllers\\pushNotificationController.ts"],
      sourcesContent: ["import { Request, Response } from 'express';\r\nimport { asyncHandler } from '../middleware/errorHandler';\r\nimport { pushNotificationService } from '../services/pushNotificationService';\r\nimport { logger } from '../services/loggerService';\r\nimport { requireRole } from '../middleware/requireRole';\r\n\r\n/**\r\n * Guardar suscripci\xF3n push de un usuario\r\n */\r\nexport const savePushSubscription = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const { endpoint, keys } = req.body;\r\n    const userId = req.user?.userId;\r\n\r\n    if (!userId) {\r\n      return res.status(401).json({\r\n        success: false,\r\n        error: {\r\n          message: 'Usuario no autenticado',\r\n          code: 'UNAUTHORIZED',\r\n        },\r\n      });\r\n    }\r\n\r\n    if (!endpoint || !keys) {\r\n      return res.status(400).json({\r\n        success: false,\r\n        error: {\r\n          message: 'Endpoint y keys son requeridos',\r\n          code: 'VALIDATION_ERROR',\r\n        },\r\n      });\r\n    }\r\n\r\n    const subscription = await pushNotificationService.saveSubscription(\r\n      userId,\r\n      {\r\n        endpoint,\r\n        keys,\r\n        isActive: true,\r\n      }\r\n    );\r\n\r\n    logger.info('Suscripci\xF3n push guardada', {\r\n      metadata: { userId, subscriptionId: subscription.id },\r\n    });\r\n\r\n    res.status(201).json({\r\n      success: true,\r\n      data: subscription,\r\n      message: 'Suscripci\xF3n push guardada exitosamente',\r\n    });\r\n  }\r\n);\r\n\r\n/**\r\n * Obtener suscripciones de un usuario\r\n */\r\nexport const getUserPushSubscriptions = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const userId = req.user?.userId;\r\n\r\n    if (!userId) {\r\n      return res.status(401).json({\r\n        success: false,\r\n        error: {\r\n          message: 'Usuario no autenticado',\r\n          code: 'UNAUTHORIZED',\r\n        },\r\n      });\r\n    }\r\n\r\n    const subscriptions = await pushNotificationService.getUserSubscriptions();\r\n\r\n    res.json({\r\n      success: true,\r\n      data: subscriptions,\r\n      message: 'Suscripciones obtenidas exitosamente',\r\n    });\r\n  }\r\n);\r\n\r\n/**\r\n * Eliminar suscripci\xF3n push\r\n */\r\nexport const deletePushSubscription = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const { subscriptionId } = req.params;\r\n    const userId = req.user?.userId;\r\n\r\n    if (!userId) {\r\n      return res.status(401).json({\r\n        success: false,\r\n        error: {\r\n          message: 'Usuario no autenticado',\r\n          code: 'UNAUTHORIZED',\r\n        },\r\n      });\r\n    }\r\n\r\n    await pushNotificationService.deleteSubscription(subscriptionId);\r\n\r\n    logger.info('Suscripci\xF3n push eliminada', {\r\n      metadata: { userId, subscriptionId },\r\n    });\r\n\r\n    res.json({\r\n      success: true,\r\n      message: 'Suscripci\xF3n push eliminada exitosamente',\r\n    });\r\n  }\r\n);\r\n\r\n/**\r\n * Enviar notificaci\xF3n push a un usuario espec\xEDfico\r\n */\r\nexport const sendNotificationToUser = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const { userId } = req.params;\r\n    const notification = req.body;\r\n\r\n    if (!notification.title || !notification.body) {\r\n      return res.status(400).json({\r\n        success: false,\r\n        error: {\r\n          message: 'T\xEDtulo y cuerpo de la notificaci\xF3n son requeridos',\r\n          code: 'VALIDATION_ERROR',\r\n        },\r\n      });\r\n    }\r\n\r\n    await pushNotificationService.sendNotificationToUser(userId, notification);\r\n\r\n    logger.info('Notificaci\xF3n push enviada a usuario', {\r\n      metadata: { userId, notificationTitle: notification.title },\r\n    });\r\n\r\n    res.json({\r\n      success: true,\r\n      message: 'Notificaci\xF3n push enviada exitosamente',\r\n    });\r\n  }\r\n);\r\n\r\n/**\r\n * Enviar notificaci\xF3n masiva\r\n */\r\nexport const sendBulkNotification = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const bulkRequest = req.body;\r\n\r\n    if (!bulkRequest.templateId && !bulkRequest.customNotification) {\r\n      return res.status(400).json({\r\n        success: false,\r\n        error: {\r\n          message: 'Debe especificar un template o notificaci\xF3n personalizada',\r\n          code: 'VALIDATION_ERROR',\r\n        },\r\n      });\r\n    }\r\n\r\n    if (!bulkRequest.userIds && !bulkRequest.userRoles) {\r\n      return res.status(400).json({\r\n        success: false,\r\n        error: {\r\n          message:\r\n            'Debe especificar usuarios o roles para enviar la notificaci\xF3n',\r\n          code: 'VALIDATION_ERROR',\r\n        },\r\n      });\r\n    }\r\n\r\n    const result =\r\n      await pushNotificationService.sendBulkNotification(bulkRequest);\r\n\r\n    if (result) {\r\n      logger.info('Notificaci\xF3n masiva enviada', {\r\n        metadata: { success: result.success, failed: result.failed },\r\n      });\r\n\r\n      res.json({\r\n        success: true,\r\n        data: result,\r\n        message: `Notificaci\xF3n masiva enviada: ${result.success} exitosas, ${result.failed} fallidas`,\r\n      });\r\n    } else {\r\n      logger.error('Error enviando notificaci\xF3n masiva');\r\n      res.status(500).json({\r\n        success: false,\r\n        error: {\r\n          message: 'Error enviando notificaci\xF3n masiva',\r\n          code: 'INTERNAL_ERROR',\r\n        },\r\n      });\r\n    }\r\n  }\r\n);\r\n\r\n/**\r\n * Crear template de notificaci\xF3n\r\n */\r\nexport const createNotificationTemplate = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const template = req.body;\r\n\r\n    if (!template.name || !template.title || !template.body) {\r\n      return res.status(400).json({\r\n        success: false,\r\n        error: {\r\n          message: 'Nombre, t\xEDtulo y cuerpo del template son requeridos',\r\n          code: 'VALIDATION_ERROR',\r\n        },\r\n      });\r\n    }\r\n\r\n    const createdTemplate =\r\n      await pushNotificationService.createNotificationTemplate(template);\r\n\r\n    if (createdTemplate) {\r\n      logger.info('Template de notificaci\xF3n creado', {\r\n        metadata: {\r\n          templateId: createdTemplate.id,\r\n          name: createdTemplate.name,\r\n        },\r\n      });\r\n\r\n      res.status(201).json({\r\n        success: true,\r\n        data: createdTemplate,\r\n        message: 'Template de notificaci\xF3n creado exitosamente',\r\n      });\r\n    } else {\r\n      logger.error('Error creando template de notificaci\xF3n');\r\n      res.status(500).json({\r\n        success: false,\r\n        error: {\r\n          message: 'Error creando template de notificaci\xF3n',\r\n          code: 'INTERNAL_ERROR',\r\n        },\r\n      });\r\n    }\r\n  }\r\n);\r\n\r\n/**\r\n * Obtener template de notificaci\xF3n\r\n */\r\nexport const getNotificationTemplate = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const { templateId } = req.params;\r\n\r\n    const template =\r\n      await pushNotificationService.getNotificationTemplate(templateId);\r\n\r\n    res.json({\r\n      success: true,\r\n      data: template,\r\n      message: 'Template obtenido exitosamente',\r\n    });\r\n  }\r\n);\r\n\r\n/**\r\n * Obtener todos los templates activos\r\n */\r\nexport const getActiveTemplates = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const templates = await pushNotificationService.getActiveTemplates();\r\n\r\n    res.json({\r\n      success: true,\r\n      data: templates,\r\n      message: 'Templates obtenidos exitosamente',\r\n    });\r\n  }\r\n);\r\n\r\n/**\r\n * Actualizar template de notificaci\xF3n\r\n */\r\nexport const updateNotificationTemplate = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const { templateId } = req.params;\r\n    const updates = req.body;\r\n\r\n    const updatedTemplate =\r\n      await pushNotificationService.updateNotificationTemplate(\r\n        templateId,\r\n        updates\r\n      );\r\n\r\n    logger.info('Template de notificaci\xF3n actualizado', {\r\n      metadata: { templateId },\r\n    });\r\n\r\n    res.json({\r\n      success: true,\r\n      data: updatedTemplate,\r\n      message: 'Template actualizado exitosamente',\r\n    });\r\n  }\r\n);\r\n\r\n/**\r\n * Eliminar template de notificaci\xF3n\r\n */\r\nexport const deleteNotificationTemplate = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const { templateId } = req.params;\r\n\r\n    await pushNotificationService.deleteNotificationTemplate(templateId);\r\n\r\n    logger.info('Template de notificaci\xF3n eliminado', {\r\n      metadata: { templateId },\r\n    });\r\n\r\n    res.json({\r\n      success: true,\r\n      message: 'Template eliminado exitosamente',\r\n    });\r\n  }\r\n);\r\n\r\n/**\r\n * Obtener estad\xEDsticas de notificaciones\r\n */\r\nexport const getNotificationStats = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const stats = await pushNotificationService.getNotificationStats();\r\n\r\n    res.json({\r\n      success: true,\r\n      data: stats,\r\n      message: 'Estad\xEDsticas obtenidas exitosamente',\r\n    });\r\n  }\r\n);\r\n\r\n/**\r\n * Obtener VAPID public key\r\n */\r\nexport const getVapidPublicKey = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const publicKey = pushNotificationService.getVapidPublicKey();\r\n\r\n    res.json({\r\n      success: true,\r\n      data: { publicKey },\r\n      message: 'VAPID public key obtenida exitosamente',\r\n    });\r\n  }\r\n);\r\n\r\n/**\r\n * Probar notificaci\xF3n push (solo para desarrollo)\r\n */\r\nexport const testPushNotification = asyncHandler(\r\n  async (req: Request, res: Response) => {\r\n    const userId = req.user?.userId;\r\n\r\n    if (!userId) {\r\n      return res.status(401).json({\r\n        success: false,\r\n        error: {\r\n          message: 'Usuario no autenticado',\r\n          code: 'UNAUTHORIZED',\r\n        },\r\n      });\r\n    }\r\n\r\n    const testNotification = {\r\n      title: '\uD83D\uDD14 Notificaci\xF3n de Prueba',\r\n      body: 'Esta es una notificaci\xF3n de prueba del sistema MussikOn',\r\n      icon: '/icon-192x192.png',\r\n      badge: '/badge-72x72.png',\r\n      tag: 'test-notification',\r\n      data: {\r\n        url: '/dashboard',\r\n        type: 'test',\r\n      },\r\n      requireInteraction: true,\r\n      priority: 'high' as const,\r\n      category: 'test',\r\n      type: 'test',\r\n    };\r\n\r\n    await pushNotificationService.sendNotificationToUser(\r\n      userId,\r\n      testNotification\r\n    );\r\n\r\n    logger.info('Notificaci\xF3n de prueba enviada', {\r\n      metadata: { userId },\r\n    });\r\n\r\n    res.json({\r\n      success: true,\r\n      message: 'Notificaci\xF3n de prueba enviada exitosamente',\r\n    });\r\n  }\r\n);\r\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "4a12c91a1c45d24440fc5047c7e753cc85c9a250"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_wyzfij6rm = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_wyzfij6rm();
var __awaiter =
/* istanbul ignore next */
(cov_wyzfij6rm().s[0]++,
/* istanbul ignore next */
(cov_wyzfij6rm().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_wyzfij6rm().b[0][1]++, this.__awaiter) ||
/* istanbul ignore next */
(cov_wyzfij6rm().b[0][2]++, function (thisArg, _arguments, P, generator) {
  /* istanbul ignore next */
  cov_wyzfij6rm().f[0]++;
  function adopt(value) {
    /* istanbul ignore next */
    cov_wyzfij6rm().f[1]++;
    cov_wyzfij6rm().s[1]++;
    return value instanceof P ?
    /* istanbul ignore next */
    (cov_wyzfij6rm().b[1][0]++, value) :
    /* istanbul ignore next */
    (cov_wyzfij6rm().b[1][1]++, new P(function (resolve) {
      /* istanbul ignore next */
      cov_wyzfij6rm().f[2]++;
      cov_wyzfij6rm().s[2]++;
      resolve(value);
    }));
  }
  /* istanbul ignore next */
  cov_wyzfij6rm().s[3]++;
  return new (
  /* istanbul ignore next */
  (cov_wyzfij6rm().b[2][0]++, P) ||
  /* istanbul ignore next */
  (cov_wyzfij6rm().b[2][1]++, P = Promise))(function (resolve, reject) {
    /* istanbul ignore next */
    cov_wyzfij6rm().f[3]++;
    function fulfilled(value) {
      /* istanbul ignore next */
      cov_wyzfij6rm().f[4]++;
      cov_wyzfij6rm().s[4]++;
      try {
        /* istanbul ignore next */
        cov_wyzfij6rm().s[5]++;
        step(generator.next(value));
      } catch (e) {
        /* istanbul ignore next */
        cov_wyzfij6rm().s[6]++;
        reject(e);
      }
    }
    function rejected(value) {
      /* istanbul ignore next */
      cov_wyzfij6rm().f[5]++;
      cov_wyzfij6rm().s[7]++;
      try {
        /* istanbul ignore next */
        cov_wyzfij6rm().s[8]++;
        step(generator["throw"](value));
      } catch (e) {
        /* istanbul ignore next */
        cov_wyzfij6rm().s[9]++;
        reject(e);
      }
    }
    function step(result) {
      /* istanbul ignore next */
      cov_wyzfij6rm().f[6]++;
      cov_wyzfij6rm().s[10]++;
      result.done ?
      /* istanbul ignore next */
      (cov_wyzfij6rm().b[3][0]++, resolve(result.value)) :
      /* istanbul ignore next */
      (cov_wyzfij6rm().b[3][1]++, adopt(result.value).then(fulfilled, rejected));
    }
    /* istanbul ignore next */
    cov_wyzfij6rm().s[11]++;
    step((generator = generator.apply(thisArg,
    /* istanbul ignore next */
    (cov_wyzfij6rm().b[4][0]++, _arguments) ||
    /* istanbul ignore next */
    (cov_wyzfij6rm().b[4][1]++, []))).next());
  });
}));
/* istanbul ignore next */
cov_wyzfij6rm().s[12]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_wyzfij6rm().s[13]++;
exports.testPushNotification = exports.getVapidPublicKey = exports.getNotificationStats = exports.deleteNotificationTemplate = exports.updateNotificationTemplate = exports.getActiveTemplates = exports.getNotificationTemplate = exports.createNotificationTemplate = exports.sendBulkNotification = exports.sendNotificationToUser = exports.deletePushSubscription = exports.getUserPushSubscriptions = exports.savePushSubscription = void 0;
const errorHandler_1 =
/* istanbul ignore next */
(cov_wyzfij6rm().s[14]++, require("../middleware/errorHandler"));
const pushNotificationService_1 =
/* istanbul ignore next */
(cov_wyzfij6rm().s[15]++, require("../services/pushNotificationService"));
const loggerService_1 =
/* istanbul ignore next */
(cov_wyzfij6rm().s[16]++, require("../services/loggerService"));
/**
 * Guardar suscripción push de un usuario
 */
/* istanbul ignore next */
cov_wyzfij6rm().s[17]++;
exports.savePushSubscription = (0, errorHandler_1.asyncHandler)((req, res) => {
  /* istanbul ignore next */
  cov_wyzfij6rm().f[7]++;
  cov_wyzfij6rm().s[18]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_wyzfij6rm().f[8]++;
    var _a;
    const {
      endpoint,
      keys
    } =
    /* istanbul ignore next */
    (cov_wyzfij6rm().s[19]++, req.body);
    const userId =
    /* istanbul ignore next */
    (cov_wyzfij6rm().s[20]++,
    /* istanbul ignore next */
    (cov_wyzfij6rm().b[6][0]++, (_a = req.user) === null) ||
    /* istanbul ignore next */
    (cov_wyzfij6rm().b[6][1]++, _a === void 0) ?
    /* istanbul ignore next */
    (cov_wyzfij6rm().b[5][0]++, void 0) :
    /* istanbul ignore next */
    (cov_wyzfij6rm().b[5][1]++, _a.userId));
    /* istanbul ignore next */
    cov_wyzfij6rm().s[21]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_wyzfij6rm().b[7][0]++;
      cov_wyzfij6rm().s[22]++;
      return res.status(401).json({
        success: false,
        error: {
          message: 'Usuario no autenticado',
          code: 'UNAUTHORIZED'
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_wyzfij6rm().b[7][1]++;
    }
    cov_wyzfij6rm().s[23]++;
    if (
    /* istanbul ignore next */
    (cov_wyzfij6rm().b[9][0]++, !endpoint) ||
    /* istanbul ignore next */
    (cov_wyzfij6rm().b[9][1]++, !keys)) {
      /* istanbul ignore next */
      cov_wyzfij6rm().b[8][0]++;
      cov_wyzfij6rm().s[24]++;
      return res.status(400).json({
        success: false,
        error: {
          message: 'Endpoint y keys son requeridos',
          code: 'VALIDATION_ERROR'
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_wyzfij6rm().b[8][1]++;
    }
    const subscription =
    /* istanbul ignore next */
    (cov_wyzfij6rm().s[25]++, yield pushNotificationService_1.pushNotificationService.saveSubscription(userId, {
      endpoint,
      keys,
      isActive: true
    }));
    /* istanbul ignore next */
    cov_wyzfij6rm().s[26]++;
    loggerService_1.logger.info('Suscripción push guardada', {
      metadata: {
        userId,
        subscriptionId: subscription.id
      }
    });
    /* istanbul ignore next */
    cov_wyzfij6rm().s[27]++;
    res.status(201).json({
      success: true,
      data: subscription,
      message: 'Suscripción push guardada exitosamente'
    });
  });
});
/**
 * Obtener suscripciones de un usuario
 */
/* istanbul ignore next */
cov_wyzfij6rm().s[28]++;
exports.getUserPushSubscriptions = (0, errorHandler_1.asyncHandler)((req, res) => {
  /* istanbul ignore next */
  cov_wyzfij6rm().f[9]++;
  cov_wyzfij6rm().s[29]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_wyzfij6rm().f[10]++;
    var _a;
    const userId =
    /* istanbul ignore next */
    (cov_wyzfij6rm().s[30]++,
    /* istanbul ignore next */
    (cov_wyzfij6rm().b[11][0]++, (_a = req.user) === null) ||
    /* istanbul ignore next */
    (cov_wyzfij6rm().b[11][1]++, _a === void 0) ?
    /* istanbul ignore next */
    (cov_wyzfij6rm().b[10][0]++, void 0) :
    /* istanbul ignore next */
    (cov_wyzfij6rm().b[10][1]++, _a.userId));
    /* istanbul ignore next */
    cov_wyzfij6rm().s[31]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_wyzfij6rm().b[12][0]++;
      cov_wyzfij6rm().s[32]++;
      return res.status(401).json({
        success: false,
        error: {
          message: 'Usuario no autenticado',
          code: 'UNAUTHORIZED'
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_wyzfij6rm().b[12][1]++;
    }
    const subscriptions =
    /* istanbul ignore next */
    (cov_wyzfij6rm().s[33]++, yield pushNotificationService_1.pushNotificationService.getUserSubscriptions());
    /* istanbul ignore next */
    cov_wyzfij6rm().s[34]++;
    res.json({
      success: true,
      data: subscriptions,
      message: 'Suscripciones obtenidas exitosamente'
    });
  });
});
/**
 * Eliminar suscripción push
 */
/* istanbul ignore next */
cov_wyzfij6rm().s[35]++;
exports.deletePushSubscription = (0, errorHandler_1.asyncHandler)((req, res) => {
  /* istanbul ignore next */
  cov_wyzfij6rm().f[11]++;
  cov_wyzfij6rm().s[36]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_wyzfij6rm().f[12]++;
    var _a;
    const {
      subscriptionId
    } =
    /* istanbul ignore next */
    (cov_wyzfij6rm().s[37]++, req.params);
    const userId =
    /* istanbul ignore next */
    (cov_wyzfij6rm().s[38]++,
    /* istanbul ignore next */
    (cov_wyzfij6rm().b[14][0]++, (_a = req.user) === null) ||
    /* istanbul ignore next */
    (cov_wyzfij6rm().b[14][1]++, _a === void 0) ?
    /* istanbul ignore next */
    (cov_wyzfij6rm().b[13][0]++, void 0) :
    /* istanbul ignore next */
    (cov_wyzfij6rm().b[13][1]++, _a.userId));
    /* istanbul ignore next */
    cov_wyzfij6rm().s[39]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_wyzfij6rm().b[15][0]++;
      cov_wyzfij6rm().s[40]++;
      return res.status(401).json({
        success: false,
        error: {
          message: 'Usuario no autenticado',
          code: 'UNAUTHORIZED'
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_wyzfij6rm().b[15][1]++;
    }
    cov_wyzfij6rm().s[41]++;
    yield pushNotificationService_1.pushNotificationService.deleteSubscription(subscriptionId);
    /* istanbul ignore next */
    cov_wyzfij6rm().s[42]++;
    loggerService_1.logger.info('Suscripción push eliminada', {
      metadata: {
        userId,
        subscriptionId
      }
    });
    /* istanbul ignore next */
    cov_wyzfij6rm().s[43]++;
    res.json({
      success: true,
      message: 'Suscripción push eliminada exitosamente'
    });
  });
});
/**
 * Enviar notificación push a un usuario específico
 */
/* istanbul ignore next */
cov_wyzfij6rm().s[44]++;
exports.sendNotificationToUser = (0, errorHandler_1.asyncHandler)((req, res) => {
  /* istanbul ignore next */
  cov_wyzfij6rm().f[13]++;
  cov_wyzfij6rm().s[45]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_wyzfij6rm().f[14]++;
    const {
      userId
    } =
    /* istanbul ignore next */
    (cov_wyzfij6rm().s[46]++, req.params);
    const notification =
    /* istanbul ignore next */
    (cov_wyzfij6rm().s[47]++, req.body);
    /* istanbul ignore next */
    cov_wyzfij6rm().s[48]++;
    if (
    /* istanbul ignore next */
    (cov_wyzfij6rm().b[17][0]++, !notification.title) ||
    /* istanbul ignore next */
    (cov_wyzfij6rm().b[17][1]++, !notification.body)) {
      /* istanbul ignore next */
      cov_wyzfij6rm().b[16][0]++;
      cov_wyzfij6rm().s[49]++;
      return res.status(400).json({
        success: false,
        error: {
          message: 'Título y cuerpo de la notificación son requeridos',
          code: 'VALIDATION_ERROR'
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_wyzfij6rm().b[16][1]++;
    }
    cov_wyzfij6rm().s[50]++;
    yield pushNotificationService_1.pushNotificationService.sendNotificationToUser(userId, notification);
    /* istanbul ignore next */
    cov_wyzfij6rm().s[51]++;
    loggerService_1.logger.info('Notificación push enviada a usuario', {
      metadata: {
        userId,
        notificationTitle: notification.title
      }
    });
    /* istanbul ignore next */
    cov_wyzfij6rm().s[52]++;
    res.json({
      success: true,
      message: 'Notificación push enviada exitosamente'
    });
  });
});
/**
 * Enviar notificación masiva
 */
/* istanbul ignore next */
cov_wyzfij6rm().s[53]++;
exports.sendBulkNotification = (0, errorHandler_1.asyncHandler)((req, res) => {
  /* istanbul ignore next */
  cov_wyzfij6rm().f[15]++;
  cov_wyzfij6rm().s[54]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_wyzfij6rm().f[16]++;
    const bulkRequest =
    /* istanbul ignore next */
    (cov_wyzfij6rm().s[55]++, req.body);
    /* istanbul ignore next */
    cov_wyzfij6rm().s[56]++;
    if (
    /* istanbul ignore next */
    (cov_wyzfij6rm().b[19][0]++, !bulkRequest.templateId) &&
    /* istanbul ignore next */
    (cov_wyzfij6rm().b[19][1]++, !bulkRequest.customNotification)) {
      /* istanbul ignore next */
      cov_wyzfij6rm().b[18][0]++;
      cov_wyzfij6rm().s[57]++;
      return res.status(400).json({
        success: false,
        error: {
          message: 'Debe especificar un template o notificación personalizada',
          code: 'VALIDATION_ERROR'
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_wyzfij6rm().b[18][1]++;
    }
    cov_wyzfij6rm().s[58]++;
    if (
    /* istanbul ignore next */
    (cov_wyzfij6rm().b[21][0]++, !bulkRequest.userIds) &&
    /* istanbul ignore next */
    (cov_wyzfij6rm().b[21][1]++, !bulkRequest.userRoles)) {
      /* istanbul ignore next */
      cov_wyzfij6rm().b[20][0]++;
      cov_wyzfij6rm().s[59]++;
      return res.status(400).json({
        success: false,
        error: {
          message: 'Debe especificar usuarios o roles para enviar la notificación',
          code: 'VALIDATION_ERROR'
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_wyzfij6rm().b[20][1]++;
    }
    const result =
    /* istanbul ignore next */
    (cov_wyzfij6rm().s[60]++, yield pushNotificationService_1.pushNotificationService.sendBulkNotification(bulkRequest));
    /* istanbul ignore next */
    cov_wyzfij6rm().s[61]++;
    if (result) {
      /* istanbul ignore next */
      cov_wyzfij6rm().b[22][0]++;
      cov_wyzfij6rm().s[62]++;
      loggerService_1.logger.info('Notificación masiva enviada', {
        metadata: {
          success: result.success,
          failed: result.failed
        }
      });
      /* istanbul ignore next */
      cov_wyzfij6rm().s[63]++;
      res.json({
        success: true,
        data: result,
        message: `Notificación masiva enviada: ${result.success} exitosas, ${result.failed} fallidas`
      });
    } else {
      /* istanbul ignore next */
      cov_wyzfij6rm().b[22][1]++;
      cov_wyzfij6rm().s[64]++;
      loggerService_1.logger.error('Error enviando notificación masiva');
      /* istanbul ignore next */
      cov_wyzfij6rm().s[65]++;
      res.status(500).json({
        success: false,
        error: {
          message: 'Error enviando notificación masiva',
          code: 'INTERNAL_ERROR'
        }
      });
    }
  });
});
/**
 * Crear template de notificación
 */
/* istanbul ignore next */
cov_wyzfij6rm().s[66]++;
exports.createNotificationTemplate = (0, errorHandler_1.asyncHandler)((req, res) => {
  /* istanbul ignore next */
  cov_wyzfij6rm().f[17]++;
  cov_wyzfij6rm().s[67]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_wyzfij6rm().f[18]++;
    const template =
    /* istanbul ignore next */
    (cov_wyzfij6rm().s[68]++, req.body);
    /* istanbul ignore next */
    cov_wyzfij6rm().s[69]++;
    if (
    /* istanbul ignore next */
    (cov_wyzfij6rm().b[24][0]++, !template.name) ||
    /* istanbul ignore next */
    (cov_wyzfij6rm().b[24][1]++, !template.title) ||
    /* istanbul ignore next */
    (cov_wyzfij6rm().b[24][2]++, !template.body)) {
      /* istanbul ignore next */
      cov_wyzfij6rm().b[23][0]++;
      cov_wyzfij6rm().s[70]++;
      return res.status(400).json({
        success: false,
        error: {
          message: 'Nombre, título y cuerpo del template son requeridos',
          code: 'VALIDATION_ERROR'
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_wyzfij6rm().b[23][1]++;
    }
    const createdTemplate =
    /* istanbul ignore next */
    (cov_wyzfij6rm().s[71]++, yield pushNotificationService_1.pushNotificationService.createNotificationTemplate(template));
    /* istanbul ignore next */
    cov_wyzfij6rm().s[72]++;
    if (createdTemplate) {
      /* istanbul ignore next */
      cov_wyzfij6rm().b[25][0]++;
      cov_wyzfij6rm().s[73]++;
      loggerService_1.logger.info('Template de notificación creado', {
        metadata: {
          templateId: createdTemplate.id,
          name: createdTemplate.name
        }
      });
      /* istanbul ignore next */
      cov_wyzfij6rm().s[74]++;
      res.status(201).json({
        success: true,
        data: createdTemplate,
        message: 'Template de notificación creado exitosamente'
      });
    } else {
      /* istanbul ignore next */
      cov_wyzfij6rm().b[25][1]++;
      cov_wyzfij6rm().s[75]++;
      loggerService_1.logger.error('Error creando template de notificación');
      /* istanbul ignore next */
      cov_wyzfij6rm().s[76]++;
      res.status(500).json({
        success: false,
        error: {
          message: 'Error creando template de notificación',
          code: 'INTERNAL_ERROR'
        }
      });
    }
  });
});
/**
 * Obtener template de notificación
 */
/* istanbul ignore next */
cov_wyzfij6rm().s[77]++;
exports.getNotificationTemplate = (0, errorHandler_1.asyncHandler)((req, res) => {
  /* istanbul ignore next */
  cov_wyzfij6rm().f[19]++;
  cov_wyzfij6rm().s[78]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_wyzfij6rm().f[20]++;
    const {
      templateId
    } =
    /* istanbul ignore next */
    (cov_wyzfij6rm().s[79]++, req.params);
    const template =
    /* istanbul ignore next */
    (cov_wyzfij6rm().s[80]++, yield pushNotificationService_1.pushNotificationService.getNotificationTemplate(templateId));
    /* istanbul ignore next */
    cov_wyzfij6rm().s[81]++;
    res.json({
      success: true,
      data: template,
      message: 'Template obtenido exitosamente'
    });
  });
});
/**
 * Obtener todos los templates activos
 */
/* istanbul ignore next */
cov_wyzfij6rm().s[82]++;
exports.getActiveTemplates = (0, errorHandler_1.asyncHandler)((req, res) => {
  /* istanbul ignore next */
  cov_wyzfij6rm().f[21]++;
  cov_wyzfij6rm().s[83]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_wyzfij6rm().f[22]++;
    const templates =
    /* istanbul ignore next */
    (cov_wyzfij6rm().s[84]++, yield pushNotificationService_1.pushNotificationService.getActiveTemplates());
    /* istanbul ignore next */
    cov_wyzfij6rm().s[85]++;
    res.json({
      success: true,
      data: templates,
      message: 'Templates obtenidos exitosamente'
    });
  });
});
/**
 * Actualizar template de notificación
 */
/* istanbul ignore next */
cov_wyzfij6rm().s[86]++;
exports.updateNotificationTemplate = (0, errorHandler_1.asyncHandler)((req, res) => {
  /* istanbul ignore next */
  cov_wyzfij6rm().f[23]++;
  cov_wyzfij6rm().s[87]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_wyzfij6rm().f[24]++;
    const {
      templateId
    } =
    /* istanbul ignore next */
    (cov_wyzfij6rm().s[88]++, req.params);
    const updates =
    /* istanbul ignore next */
    (cov_wyzfij6rm().s[89]++, req.body);
    const updatedTemplate =
    /* istanbul ignore next */
    (cov_wyzfij6rm().s[90]++, yield pushNotificationService_1.pushNotificationService.updateNotificationTemplate(templateId, updates));
    /* istanbul ignore next */
    cov_wyzfij6rm().s[91]++;
    loggerService_1.logger.info('Template de notificación actualizado', {
      metadata: {
        templateId
      }
    });
    /* istanbul ignore next */
    cov_wyzfij6rm().s[92]++;
    res.json({
      success: true,
      data: updatedTemplate,
      message: 'Template actualizado exitosamente'
    });
  });
});
/**
 * Eliminar template de notificación
 */
/* istanbul ignore next */
cov_wyzfij6rm().s[93]++;
exports.deleteNotificationTemplate = (0, errorHandler_1.asyncHandler)((req, res) => {
  /* istanbul ignore next */
  cov_wyzfij6rm().f[25]++;
  cov_wyzfij6rm().s[94]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_wyzfij6rm().f[26]++;
    const {
      templateId
    } =
    /* istanbul ignore next */
    (cov_wyzfij6rm().s[95]++, req.params);
    /* istanbul ignore next */
    cov_wyzfij6rm().s[96]++;
    yield pushNotificationService_1.pushNotificationService.deleteNotificationTemplate(templateId);
    /* istanbul ignore next */
    cov_wyzfij6rm().s[97]++;
    loggerService_1.logger.info('Template de notificación eliminado', {
      metadata: {
        templateId
      }
    });
    /* istanbul ignore next */
    cov_wyzfij6rm().s[98]++;
    res.json({
      success: true,
      message: 'Template eliminado exitosamente'
    });
  });
});
/**
 * Obtener estadísticas de notificaciones
 */
/* istanbul ignore next */
cov_wyzfij6rm().s[99]++;
exports.getNotificationStats = (0, errorHandler_1.asyncHandler)((req, res) => {
  /* istanbul ignore next */
  cov_wyzfij6rm().f[27]++;
  cov_wyzfij6rm().s[100]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_wyzfij6rm().f[28]++;
    const stats =
    /* istanbul ignore next */
    (cov_wyzfij6rm().s[101]++, yield pushNotificationService_1.pushNotificationService.getNotificationStats());
    /* istanbul ignore next */
    cov_wyzfij6rm().s[102]++;
    res.json({
      success: true,
      data: stats,
      message: 'Estadísticas obtenidas exitosamente'
    });
  });
});
/**
 * Obtener VAPID public key
 */
/* istanbul ignore next */
cov_wyzfij6rm().s[103]++;
exports.getVapidPublicKey = (0, errorHandler_1.asyncHandler)((req, res) => {
  /* istanbul ignore next */
  cov_wyzfij6rm().f[29]++;
  cov_wyzfij6rm().s[104]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_wyzfij6rm().f[30]++;
    const publicKey =
    /* istanbul ignore next */
    (cov_wyzfij6rm().s[105]++, pushNotificationService_1.pushNotificationService.getVapidPublicKey());
    /* istanbul ignore next */
    cov_wyzfij6rm().s[106]++;
    res.json({
      success: true,
      data: {
        publicKey
      },
      message: 'VAPID public key obtenida exitosamente'
    });
  });
});
/**
 * Probar notificación push (solo para desarrollo)
 */
/* istanbul ignore next */
cov_wyzfij6rm().s[107]++;
exports.testPushNotification = (0, errorHandler_1.asyncHandler)((req, res) => {
  /* istanbul ignore next */
  cov_wyzfij6rm().f[31]++;
  cov_wyzfij6rm().s[108]++;
  return __awaiter(void 0, void 0, void 0, function* () {
    /* istanbul ignore next */
    cov_wyzfij6rm().f[32]++;
    var _a;
    const userId =
    /* istanbul ignore next */
    (cov_wyzfij6rm().s[109]++,
    /* istanbul ignore next */
    (cov_wyzfij6rm().b[27][0]++, (_a = req.user) === null) ||
    /* istanbul ignore next */
    (cov_wyzfij6rm().b[27][1]++, _a === void 0) ?
    /* istanbul ignore next */
    (cov_wyzfij6rm().b[26][0]++, void 0) :
    /* istanbul ignore next */
    (cov_wyzfij6rm().b[26][1]++, _a.userId));
    /* istanbul ignore next */
    cov_wyzfij6rm().s[110]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_wyzfij6rm().b[28][0]++;
      cov_wyzfij6rm().s[111]++;
      return res.status(401).json({
        success: false,
        error: {
          message: 'Usuario no autenticado',
          code: 'UNAUTHORIZED'
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_wyzfij6rm().b[28][1]++;
    }
    const testNotification =
    /* istanbul ignore next */
    (cov_wyzfij6rm().s[112]++, {
      title: '🔔 Notificación de Prueba',
      body: 'Esta es una notificación de prueba del sistema MussikOn',
      icon: '/icon-192x192.png',
      badge: '/badge-72x72.png',
      tag: 'test-notification',
      data: {
        url: '/dashboard',
        type: 'test'
      },
      requireInteraction: true,
      priority: 'high',
      category: 'test',
      type: 'test'
    });
    /* istanbul ignore next */
    cov_wyzfij6rm().s[113]++;
    yield pushNotificationService_1.pushNotificationService.sendNotificationToUser(userId, testNotification);
    /* istanbul ignore next */
    cov_wyzfij6rm().s[114]++;
    loggerService_1.logger.info('Notificación de prueba enviada', {
      metadata: {
        userId
      }
    });
    /* istanbul ignore next */
    cov_wyzfij6rm().s[115]++;
    res.json({
      success: true,
      message: 'Notificación de prueba enviada exitosamente'
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,