91ea7a1e8282ba3a23646e4cf9764514
"use strict";

/* istanbul ignore next */
function cov_19681mud5a() {
  var path = "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\services\\paymentService.ts";
  var hash = "28ed5176c6236f440c1d9af77e166dd2378d6c81";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\services\\paymentService.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 16
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 28
        },
        end: {
          line: 3,
          column: 110
        }
      },
      "2": {
        start: {
          line: 3,
          column: 91
        },
        end: {
          line: 3,
          column: 106
        }
      },
      "3": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "4": {
        start: {
          line: 5,
          column: 36
        },
        end: {
          line: 5,
          column: 97
        }
      },
      "5": {
        start: {
          line: 5,
          column: 42
        },
        end: {
          line: 5,
          column: 70
        }
      },
      "6": {
        start: {
          line: 5,
          column: 85
        },
        end: {
          line: 5,
          column: 95
        }
      },
      "7": {
        start: {
          line: 6,
          column: 35
        },
        end: {
          line: 6,
          column: 100
        }
      },
      "8": {
        start: {
          line: 6,
          column: 41
        },
        end: {
          line: 6,
          column: 73
        }
      },
      "9": {
        start: {
          line: 6,
          column: 88
        },
        end: {
          line: 6,
          column: 98
        }
      },
      "10": {
        start: {
          line: 7,
          column: 32
        },
        end: {
          line: 7,
          column: 116
        }
      },
      "11": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 78
        }
      },
      "12": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 62
        }
      },
      "13": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 32
        }
      },
      "14": {
        start: {
          line: 13,
          column: 19
        },
        end: {
          line: 13,
          column: 47
        }
      },
      "15": {
        start: {
          line: 14,
          column: 24
        },
        end: {
          line: 14,
          column: 50
        }
      },
      "16": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 57
        }
      },
      "17": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 37
        }
      },
      "18": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 59,
          column: 11
        }
      },
      "19": {
        start: {
          line: 25,
          column: 12
        },
        end: {
          line: 58,
          column: 13
        }
      },
      "20": {
        start: {
          line: 26,
          column: 16
        },
        end: {
          line: 29,
          column: 19
        }
      },
      "21": {
        start: {
          line: 31,
          column: 38
        },
        end: {
          line: 40,
          column: 17
        }
      },
      "22": {
        start: {
          line: 41,
          column: 16
        },
        end: {
          line: 44,
          column: 40
        }
      },
      "23": {
        start: {
          line: 46,
          column: 16
        },
        end: {
          line: 48,
          column: 17
        }
      },
      "24": {
        start: {
          line: 47,
          column: 20
        },
        end: {
          line: 47,
          column: 84
        }
      },
      "25": {
        start: {
          line: 49,
          column: 16
        },
        end: {
          line: 52,
          column: 19
        }
      },
      "26": {
        start: {
          line: 53,
          column: 16
        },
        end: {
          line: 53,
          column: 37
        }
      },
      "27": {
        start: {
          line: 56,
          column: 16
        },
        end: {
          line: 56,
          column: 107
        }
      },
      "28": {
        start: {
          line: 57,
          column: 16
        },
        end: {
          line: 57,
          column: 28
        }
      },
      "29": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 84,
          column: 11
        }
      },
      "30": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 83,
          column: 13
        }
      },
      "31": {
        start: {
          line: 67,
          column: 33
        },
        end: {
          line: 71,
          column: 26
        }
      },
      "32": {
        start: {
          line: 72,
          column: 39
        },
        end: {
          line: 72,
          column: 41
        }
      },
      "33": {
        start: {
          line: 73,
          column: 16
        },
        end: {
          line: 75,
          column: 19
        }
      },
      "34": {
        start: {
          line: 74,
          column: 20
        },
        end: {
          line: 74,
          column: 83
        }
      },
      "35": {
        start: {
          line: 76,
          column: 16
        },
        end: {
          line: 76,
          column: 38
        }
      },
      "36": {
        start: {
          line: 79,
          column: 16
        },
        end: {
          line: 81,
          column: 19
        }
      },
      "37": {
        start: {
          line: 82,
          column: 16
        },
        end: {
          line: 82,
          column: 28
        }
      },
      "38": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 119,
          column: 11
        }
      },
      "39": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 118,
          column: 13
        }
      },
      "40": {
        start: {
          line: 92,
          column: 30
        },
        end: {
          line: 92,
          column: 51
        }
      },
      "41": {
        start: {
          line: 94,
          column: 33
        },
        end: {
          line: 98,
          column: 26
        }
      },
      "42": {
        start: {
          line: 99,
          column: 16
        },
        end: {
          line: 101,
          column: 19
        }
      },
      "43": {
        start: {
          line: 100,
          column: 20
        },
        end: {
          line: 100,
          column: 64
        }
      },
      "44": {
        start: {
          line: 103,
          column: 16
        },
        end: {
          line: 105,
          column: 19
        }
      },
      "45": {
        start: {
          line: 106,
          column: 16
        },
        end: {
          line: 106,
          column: 37
        }
      },
      "46": {
        start: {
          line: 107,
          column: 16
        },
        end: {
          line: 110,
          column: 19
        }
      },
      "47": {
        start: {
          line: 113,
          column: 16
        },
        end: {
          line: 116,
          column: 19
        }
      },
      "48": {
        start: {
          line: 117,
          column: 16
        },
        end: {
          line: 117,
          column: 28
        }
      },
      "49": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 162,
          column: 11
        }
      },
      "50": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 161,
          column: 13
        }
      },
      "51": {
        start: {
          line: 127,
          column: 16
        },
        end: {
          line: 130,
          column: 19
        }
      },
      "52": {
        start: {
          line: 131,
          column: 38
        },
        end: {
          line: 144,
          column: 17
        }
      },
      "53": {
        start: {
          line: 145,
          column: 16
        },
        end: {
          line: 148,
          column: 40
        }
      },
      "54": {
        start: {
          line: 149,
          column: 16
        },
        end: {
          line: 152,
          column: 19
        }
      },
      "55": {
        start: {
          line: 153,
          column: 16
        },
        end: {
          line: 153,
          column: 37
        }
      },
      "56": {
        start: {
          line: 156,
          column: 16
        },
        end: {
          line: 159,
          column: 19
        }
      },
      "57": {
        start: {
          line: 160,
          column: 16
        },
        end: {
          line: 160,
          column: 28
        }
      },
      "58": {
        start: {
          line: 168,
          column: 8
        },
        end: {
          line: 217,
          column: 11
        }
      },
      "59": {
        start: {
          line: 169,
          column: 12
        },
        end: {
          line: 216,
          column: 13
        }
      },
      "60": {
        start: {
          line: 170,
          column: 16
        },
        end: {
          line: 172,
          column: 19
        }
      },
      "61": {
        start: {
          line: 174,
          column: 32
        },
        end: {
          line: 174,
          column: 51
        }
      },
      "62": {
        start: {
          line: 175,
          column: 41
        },
        end: {
          line: 177,
          column: 41
        }
      },
      "63": {
        start: {
          line: 178,
          column: 41
        },
        end: {
          line: 178,
          column: 69
        }
      },
      "64": {
        start: {
          line: 179,
          column: 16
        },
        end: {
          line: 181,
          column: 17
        }
      },
      "65": {
        start: {
          line: 180,
          column: 20
        },
        end: {
          line: 180,
          column: 68
        }
      },
      "66": {
        start: {
          line: 182,
          column: 38
        },
        end: {
          line: 182,
          column: 61
        }
      },
      "67": {
        start: {
          line: 183,
          column: 16
        },
        end: {
          line: 208,
          column: 17
        }
      },
      "68": {
        start: {
          line: 185,
          column: 20
        },
        end: {
          line: 189,
          column: 23
        }
      },
      "69": {
        start: {
          line: 191,
          column: 20
        },
        end: {
          line: 191,
          column: 147
        }
      },
      "70": {
        start: {
          line: 192,
          column: 20
        },
        end: {
          line: 198,
          column: 23
        }
      },
      "71": {
        start: {
          line: 202,
          column: 20
        },
        end: {
          line: 206,
          column: 23
        }
      },
      "72": {
        start: {
          line: 207,
          column: 20
        },
        end: {
          line: 207,
          column: 99
        }
      },
      "73": {
        start: {
          line: 209,
          column: 16
        },
        end: {
          line: 209,
          column: 157
        }
      },
      "74": {
        start: {
          line: 212,
          column: 16
        },
        end: {
          line: 214,
          column: 19
        }
      },
      "75": {
        start: {
          line: 215,
          column: 16
        },
        end: {
          line: 215,
          column: 28
        }
      },
      "76": {
        start: {
          line: 223,
          column: 8
        },
        end: {
          line: 266,
          column: 11
        }
      },
      "77": {
        start: {
          line: 224,
          column: 12
        },
        end: {
          line: 265,
          column: 13
        }
      },
      "78": {
        start: {
          line: 225,
          column: 32
        },
        end: {
          line: 250,
          column: 17
        }
      },
      "79": {
        start: {
          line: 251,
          column: 16
        },
        end: {
          line: 251,
          column: 88
        }
      },
      "80": {
        start: {
          line: 252,
          column: 16
        },
        end: {
          line: 257,
          column: 19
        }
      },
      "81": {
        start: {
          line: 258,
          column: 16
        },
        end: {
          line: 258,
          column: 31
        }
      },
      "82": {
        start: {
          line: 261,
          column: 16
        },
        end: {
          line: 263,
          column: 19
        }
      },
      "83": {
        start: {
          line: 264,
          column: 16
        },
        end: {
          line: 264,
          column: 28
        }
      },
      "84": {
        start: {
          line: 272,
          column: 8
        },
        end: {
          line: 308,
          column: 11
        }
      },
      "85": {
        start: {
          line: 273,
          column: 12
        },
        end: {
          line: 307,
          column: 13
        }
      },
      "86": {
        start: {
          line: 274,
          column: 16
        },
        end: {
          line: 277,
          column: 19
        }
      },
      "87": {
        start: {
          line: 278,
          column: 33
        },
        end: {
          line: 278,
          column: 101
        }
      },
      "88": {
        start: {
          line: 278,
          column: 61
        },
        end: {
          line: 278,
          column: 97
        }
      },
      "89": {
        start: {
          line: 279,
          column: 28
        },
        end: {
          line: 279,
          column: 43
        }
      },
      "90": {
        start: {
          line: 280,
          column: 30
        },
        end: {
          line: 280,
          column: 44
        }
      },
      "91": {
        start: {
          line: 281,
          column: 32
        },
        end: {
          line: 296,
          column: 17
        }
      },
      "92": {
        start: {
          line: 290,
          column: 55
        },
        end: {
          line: 290,
          column: 171
        }
      },
      "93": {
        start: {
          line: 297,
          column: 16
        },
        end: {
          line: 297,
          column: 88
        }
      },
      "94": {
        start: {
          line: 298,
          column: 16
        },
        end: {
          line: 301,
          column: 19
        }
      },
      "95": {
        start: {
          line: 302,
          column: 16
        },
        end: {
          line: 302,
          column: 31
        }
      },
      "96": {
        start: {
          line: 305,
          column: 16
        },
        end: {
          line: 305,
          column: 107
        }
      },
      "97": {
        start: {
          line: 306,
          column: 16
        },
        end: {
          line: 306,
          column: 28
        }
      },
      "98": {
        start: {
          line: 314,
          column: 8
        },
        end: {
          line: 331,
          column: 11
        }
      },
      "99": {
        start: {
          line: 315,
          column: 12
        },
        end: {
          line: 330,
          column: 13
        }
      },
      "100": {
        start: {
          line: 316,
          column: 28
        },
        end: {
          line: 316,
          column: 106
        }
      },
      "101": {
        start: {
          line: 317,
          column: 16
        },
        end: {
          line: 319,
          column: 17
        }
      },
      "102": {
        start: {
          line: 318,
          column: 20
        },
        end: {
          line: 318,
          column: 64
        }
      },
      "103": {
        start: {
          line: 320,
          column: 33
        },
        end: {
          line: 320,
          column: 79
        }
      },
      "104": {
        start: {
          line: 321,
          column: 39
        },
        end: {
          line: 321,
          column: 41
        }
      },
      "105": {
        start: {
          line: 322,
          column: 16
        },
        end: {
          line: 324,
          column: 19
        }
      },
      "106": {
        start: {
          line: 323,
          column: 20
        },
        end: {
          line: 323,
          column: 83
        }
      },
      "107": {
        start: {
          line: 325,
          column: 16
        },
        end: {
          line: 325,
          column: 38
        }
      },
      "108": {
        start: {
          line: 328,
          column: 16
        },
        end: {
          line: 328,
          column: 111
        }
      },
      "109": {
        start: {
          line: 329,
          column: 16
        },
        end: {
          line: 329,
          column: 28
        }
      },
      "110": {
        start: {
          line: 337,
          column: 8
        },
        end: {
          line: 354,
          column: 11
        }
      },
      "111": {
        start: {
          line: 338,
          column: 12
        },
        end: {
          line: 353,
          column: 13
        }
      },
      "112": {
        start: {
          line: 339,
          column: 28
        },
        end: {
          line: 339,
          column: 100
        }
      },
      "113": {
        start: {
          line: 340,
          column: 16
        },
        end: {
          line: 342,
          column: 17
        }
      },
      "114": {
        start: {
          line: 341,
          column: 20
        },
        end: {
          line: 341,
          column: 64
        }
      },
      "115": {
        start: {
          line: 343,
          column: 33
        },
        end: {
          line: 343,
          column: 79
        }
      },
      "116": {
        start: {
          line: 344,
          column: 33
        },
        end: {
          line: 344,
          column: 35
        }
      },
      "117": {
        start: {
          line: 345,
          column: 16
        },
        end: {
          line: 347,
          column: 19
        }
      },
      "118": {
        start: {
          line: 346,
          column: 20
        },
        end: {
          line: 346,
          column: 77
        }
      },
      "119": {
        start: {
          line: 348,
          column: 16
        },
        end: {
          line: 348,
          column: 32
        }
      },
      "120": {
        start: {
          line: 351,
          column: 16
        },
        end: {
          line: 351,
          column: 104
        }
      },
      "121": {
        start: {
          line: 352,
          column: 16
        },
        end: {
          line: 352,
          column: 28
        }
      },
      "122": {
        start: {
          line: 360,
          column: 8
        },
        end: {
          line: 392,
          column: 11
        }
      },
      "123": {
        start: {
          line: 361,
          column: 12
        },
        end: {
          line: 391,
          column: 13
        }
      },
      "124": {
        start: {
          line: 362,
          column: 16
        },
        end: {
          line: 364,
          column: 19
        }
      },
      "125": {
        start: {
          line: 365,
          column: 35
        },
        end: {
          line: 365,
          column: 86
        }
      },
      "126": {
        start: {
          line: 366,
          column: 35
        },
        end: {
          line: 366,
          column: 57
        }
      },
      "127": {
        start: {
          line: 367,
          column: 16
        },
        end: {
          line: 369,
          column: 17
        }
      },
      "128": {
        start: {
          line: 368,
          column: 20
        },
        end: {
          line: 368,
          column: 61
        }
      },
      "129": {
        start: {
          line: 370,
          column: 32
        },
        end: {
          line: 370,
          column: 49
        }
      },
      "130": {
        start: {
          line: 372,
          column: 38
        },
        end: {
          line: 372,
          column: 172
        }
      },
      "131": {
        start: {
          line: 374,
          column: 31
        },
        end: {
          line: 374,
          column: 91
        }
      },
      "132": {
        start: {
          line: 375,
          column: 16
        },
        end: {
          line: 383,
          column: 17
        }
      },
      "133": {
        start: {
          line: 377,
          column: 20
        },
        end: {
          line: 381,
          column: 23
        }
      },
      "134": {
        start: {
          line: 382,
          column: 20
        },
        end: {
          line: 382,
          column: 108
        }
      },
      "135": {
        start: {
          line: 384,
          column: 16
        },
        end: {
          line: 384,
          column: 213
        }
      },
      "136": {
        start: {
          line: 387,
          column: 16
        },
        end: {
          line: 389,
          column: 19
        }
      },
      "137": {
        start: {
          line: 390,
          column: 16
        },
        end: {
          line: 390,
          column: 28
        }
      },
      "138": {
        start: {
          line: 398,
          column: 8
        },
        end: {
          line: 447,
          column: 11
        }
      },
      "139": {
        start: {
          line: 399,
          column: 12
        },
        end: {
          line: 446,
          column: 13
        }
      },
      "140": {
        start: {
          line: 400,
          column: 16
        },
        end: {
          line: 402,
          column: 19
        }
      },
      "141": {
        start: {
          line: 404,
          column: 41
        },
        end: {
          line: 407,
          column: 26
        }
      },
      "142": {
        start: {
          line: 408,
          column: 16
        },
        end: {
          line: 410,
          column: 17
        }
      },
      "143": {
        start: {
          line: 409,
          column: 20
        },
        end: {
          line: 409,
          column: 68
        }
      },
      "144": {
        start: {
          line: 411,
          column: 38
        },
        end: {
          line: 411,
          column: 61
        }
      },
      "145": {
        start: {
          line: 412,
          column: 16
        },
        end: {
          line: 414,
          column: 17
        }
      },
      "146": {
        start: {
          line: 413,
          column: 20
        },
        end: {
          line: 413,
          column: 80
        }
      },
      "147": {
        start: {
          line: 415,
          column: 16
        },
        end: {
          line: 417,
          column: 17
        }
      },
      "148": {
        start: {
          line: 416,
          column: 20
        },
        end: {
          line: 416,
          column: 98
        }
      },
      "149": {
        start: {
          line: 419,
          column: 32
        },
        end: {
          line: 419,
          column: 52
        }
      },
      "150": {
        start: {
          line: 420,
          column: 31
        },
        end: {
          line: 427,
          column: 17
        }
      },
      "151": {
        start: {
          line: 428,
          column: 16
        },
        end: {
          line: 428,
          column: 85
        }
      },
      "152": {
        start: {
          line: 429,
          column: 16
        },
        end: {
          line: 435,
          column: 17
        }
      },
      "153": {
        start: {
          line: 431,
          column: 20
        },
        end: {
          line: 434,
          column: 23
        }
      },
      "154": {
        start: {
          line: 436,
          column: 16
        },
        end: {
          line: 438,
          column: 19
        }
      },
      "155": {
        start: {
          line: 439,
          column: 16
        },
        end: {
          line: 439,
          column: 30
        }
      },
      "156": {
        start: {
          line: 442,
          column: 16
        },
        end: {
          line: 444,
          column: 19
        }
      },
      "157": {
        start: {
          line: 445,
          column: 16
        },
        end: {
          line: 445,
          column: 28
        }
      },
      "158": {
        start: {
          line: 453,
          column: 8
        },
        end: {
          line: 524,
          column: 11
        }
      },
      "159": {
        start: {
          line: 454,
          column: 12
        },
        end: {
          line: 523,
          column: 13
        }
      },
      "160": {
        start: {
          line: 455,
          column: 16
        },
        end: {
          line: 457,
          column: 19
        }
      },
      "161": {
        start: {
          line: 458,
          column: 28
        },
        end: {
          line: 458,
          column: 38
        }
      },
      "162": {
        start: {
          line: 459,
          column: 32
        },
        end: {
          line: 459,
          column: 78
        }
      },
      "163": {
        start: {
          line: 460,
          column: 16
        },
        end: {
          line: 468,
          column: 17
        }
      },
      "164": {
        start: {
          line: 461,
          column: 20
        },
        end: {
          line: 461,
          column: 82
        }
      },
      "165": {
        start: {
          line: 463,
          column: 21
        },
        end: {
          line: 468,
          column: 17
        }
      },
      "166": {
        start: {
          line: 464,
          column: 20
        },
        end: {
          line: 464,
          column: 95
        }
      },
      "167": {
        start: {
          line: 466,
          column: 21
        },
        end: {
          line: 468,
          column: 17
        }
      },
      "168": {
        start: {
          line: 467,
          column: 20
        },
        end: {
          line: 467,
          column: 66
        }
      },
      "169": {
        start: {
          line: 470,
          column: 35
        },
        end: {
          line: 472,
          column: 56
        }
      },
      "170": {
        start: {
          line: 473,
          column: 16
        },
        end: {
          line: 475,
          column: 17
        }
      },
      "171": {
        start: {
          line: 474,
          column: 20
        },
        end: {
          line: 474,
          column: 78
        }
      },
      "172": {
        start: {
          line: 476,
          column: 40
        },
        end: {
          line: 476,
          column: 64
        }
      },
      "173": {
        start: {
          line: 477,
          column: 33
        },
        end: {
          line: 477,
          column: 76
        }
      },
      "174": {
        start: {
          line: 477,
          column: 65
        },
        end: {
          line: 477,
          column: 75
        }
      },
      "175": {
        start: {
          line: 479,
          column: 35
        },
        end: {
          line: 481,
          column: 56
        }
      },
      "176": {
        start: {
          line: 482,
          column: 16
        },
        end: {
          line: 484,
          column: 17
        }
      },
      "177": {
        start: {
          line: 483,
          column: 20
        },
        end: {
          line: 483,
          column: 78
        }
      },
      "178": {
        start: {
          line: 485,
          column: 40
        },
        end: {
          line: 485,
          column: 64
        }
      },
      "179": {
        start: {
          line: 486,
          column: 33
        },
        end: {
          line: 486,
          column: 76
        }
      },
      "180": {
        start: {
          line: 486,
          column: 65
        },
        end: {
          line: 486,
          column: 75
        }
      },
      "181": {
        start: {
          line: 488,
          column: 36
        },
        end: {
          line: 490,
          column: 56
        }
      },
      "182": {
        start: {
          line: 491,
          column: 39
        },
        end: {
          line: 491,
          column: 62
        }
      },
      "183": {
        start: {
          line: 492,
          column: 32
        },
        end: {
          line: 492,
          column: 74
        }
      },
      "184": {
        start: {
          line: 492,
          column: 63
        },
        end: {
          line: 492,
          column: 73
        }
      },
      "185": {
        start: {
          line: 493,
          column: 30
        },
        end: {
          line: 516,
          column: 17
        }
      },
      "186": {
        start: {
          line: 495,
          column: 39
        },
        end: {
          line: 495,
          column: 63
        }
      },
      "187": {
        start: {
          line: 496,
          column: 44
        },
        end: {
          line: 496,
          column: 58
        }
      },
      "188": {
        start: {
          line: 498,
          column: 67
        },
        end: {
          line: 498,
          column: 91
        }
      },
      "189": {
        start: {
          line: 499,
          column: 63
        },
        end: {
          line: 499,
          column: 84
        }
      },
      "190": {
        start: {
          line: 502,
          column: 57
        },
        end: {
          line: 502,
          column: 76
        }
      },
      "191": {
        start: {
          line: 505,
          column: 39
        },
        end: {
          line: 505,
          column: 63
        }
      },
      "192": {
        start: {
          line: 506,
          column: 44
        },
        end: {
          line: 506,
          column: 58
        }
      },
      "193": {
        start: {
          line: 508,
          column: 54
        },
        end: {
          line: 508,
          column: 68
        }
      },
      "194": {
        start: {
          line: 512,
          column: 50
        },
        end: {
          line: 512,
          column: 74
        }
      },
      "195": {
        start: {
          line: 517,
          column: 16
        },
        end: {
          line: 517,
          column: 104
        }
      },
      "196": {
        start: {
          line: 518,
          column: 16
        },
        end: {
          line: 518,
          column: 29
        }
      },
      "197": {
        start: {
          line: 521,
          column: 16
        },
        end: {
          line: 521,
          column: 94
        }
      },
      "198": {
        start: {
          line: 522,
          column: 16
        },
        end: {
          line: 522,
          column: 28
        }
      },
      "199": {
        start: {
          line: 530,
          column: 8
        },
        end: {
          line: 562,
          column: 11
        }
      },
      "200": {
        start: {
          line: 531,
          column: 12
        },
        end: {
          line: 561,
          column: 13
        }
      },
      "201": {
        start: {
          line: 533,
          column: 16
        },
        end: {
          line: 538,
          column: 17
        }
      },
      "202": {
        start: {
          line: 537,
          column: 20
        },
        end: {
          line: 537,
          column: 33
        }
      },
      "203": {
        start: {
          line: 540,
          column: 35
        },
        end: {
          line: 540,
          column: 76
        }
      },
      "204": {
        start: {
          line: 541,
          column: 16
        },
        end: {
          line: 543,
          column: 17
        }
      },
      "205": {
        start: {
          line: 542,
          column: 20
        },
        end: {
          line: 542,
          column: 33
        }
      },
      "206": {
        start: {
          line: 545,
          column: 28
        },
        end: {
          line: 545,
          column: 38
        }
      },
      "207": {
        start: {
          line: 546,
          column: 35
        },
        end: {
          line: 546,
          column: 96
        }
      },
      "208": {
        start: {
          line: 547,
          column: 16
        },
        end: {
          line: 549,
          column: 17
        }
      },
      "209": {
        start: {
          line: 548,
          column: 20
        },
        end: {
          line: 548,
          column: 33
        }
      },
      "210": {
        start: {
          line: 551,
          column: 16
        },
        end: {
          line: 553,
          column: 17
        }
      },
      "211": {
        start: {
          line: 552,
          column: 20
        },
        end: {
          line: 552,
          column: 33
        }
      },
      "212": {
        start: {
          line: 554,
          column: 16
        },
        end: {
          line: 554,
          column: 28
        }
      },
      "213": {
        start: {
          line: 557,
          column: 16
        },
        end: {
          line: 559,
          column: 19
        }
      },
      "214": {
        start: {
          line: 560,
          column: 16
        },
        end: {
          line: 560,
          column: 29
        }
      },
      "215": {
        start: {
          line: 568,
          column: 8
        },
        end: {
          line: 602,
          column: 11
        }
      },
      "216": {
        start: {
          line: 569,
          column: 12
        },
        end: {
          line: 601,
          column: 13
        }
      },
      "217": {
        start: {
          line: 570,
          column: 33
        },
        end: {
          line: 595,
          column: 17
        }
      },
      "218": {
        start: {
          line: 596,
          column: 16
        },
        end: {
          line: 596,
          column: 68
        }
      },
      "219": {
        start: {
          line: 596,
          column: 50
        },
        end: {
          line: 596,
          column: 66
        }
      },
      "220": {
        start: {
          line: 599,
          column: 16
        },
        end: {
          line: 599,
          column: 90
        }
      },
      "221": {
        start: {
          line: 600,
          column: 16
        },
        end: {
          line: 600,
          column: 28
        }
      },
      "222": {
        start: {
          line: 605,
          column: 0
        },
        end: {
          line: 605,
          column: 40
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 2,
            column: 45
          }
        },
        loc: {
          start: {
            line: 2,
            column: 89
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "adopt",
        decl: {
          start: {
            line: 3,
            column: 13
          },
          end: {
            line: 3,
            column: 18
          }
        },
        loc: {
          start: {
            line: 3,
            column: 26
          },
          end: {
            line: 3,
            column: 112
          }
        },
        line: 3
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 3,
            column: 70
          },
          end: {
            line: 3,
            column: 71
          }
        },
        loc: {
          start: {
            line: 3,
            column: 89
          },
          end: {
            line: 3,
            column: 108
          }
        },
        line: 3
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 4,
            column: 36
          },
          end: {
            line: 4,
            column: 37
          }
        },
        loc: {
          start: {
            line: 4,
            column: 63
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 4
      },
      "4": {
        name: "fulfilled",
        decl: {
          start: {
            line: 5,
            column: 17
          },
          end: {
            line: 5,
            column: 26
          }
        },
        loc: {
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 99
          }
        },
        line: 5
      },
      "5": {
        name: "rejected",
        decl: {
          start: {
            line: 6,
            column: 17
          },
          end: {
            line: 6,
            column: 25
          }
        },
        loc: {
          start: {
            line: 6,
            column: 33
          },
          end: {
            line: 6,
            column: 102
          }
        },
        line: 6
      },
      "6": {
        name: "step",
        decl: {
          start: {
            line: 7,
            column: 17
          },
          end: {
            line: 7,
            column: 21
          }
        },
        loc: {
          start: {
            line: 7,
            column: 30
          },
          end: {
            line: 7,
            column: 118
          }
        },
        line: 7
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 18
          },
          end: {
            line: 19,
            column: 5
          }
        },
        line: 16
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 23,
            column: 5
          }
        },
        loc: {
          start: {
            line: 23,
            column: 48
          },
          end: {
            line: 60,
            column: 5
          }
        },
        line: 23
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 24,
            column: 47
          },
          end: {
            line: 24,
            column: 48
          }
        },
        loc: {
          start: {
            line: 24,
            column: 60
          },
          end: {
            line: 59,
            column: 9
          }
        },
        line: 24
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 64,
            column: 4
          },
          end: {
            line: 64,
            column: 5
          }
        },
        loc: {
          start: {
            line: 64,
            column: 33
          },
          end: {
            line: 85,
            column: 5
          }
        },
        line: 64
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 65,
            column: 47
          },
          end: {
            line: 65,
            column: 48
          }
        },
        loc: {
          start: {
            line: 65,
            column: 60
          },
          end: {
            line: 84,
            column: 9
          }
        },
        line: 65
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 73,
            column: 33
          },
          end: {
            line: 73,
            column: 34
          }
        },
        loc: {
          start: {
            line: 73,
            column: 42
          },
          end: {
            line: 75,
            column: 17
          }
        },
        line: 73
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 89,
            column: 4
          },
          end: {
            line: 89,
            column: 5
          }
        },
        loc: {
          start: {
            line: 89,
            column: 56
          },
          end: {
            line: 120,
            column: 5
          }
        },
        line: 89
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 90,
            column: 47
          },
          end: {
            line: 90,
            column: 48
          }
        },
        loc: {
          start: {
            line: 90,
            column: 60
          },
          end: {
            line: 119,
            column: 9
          }
        },
        line: 90
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 99,
            column: 33
          },
          end: {
            line: 99,
            column: 34
          }
        },
        loc: {
          start: {
            line: 99,
            column: 42
          },
          end: {
            line: 101,
            column: 17
          }
        },
        line: 99
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 124,
            column: 4
          },
          end: {
            line: 124,
            column: 5
          }
        },
        loc: {
          start: {
            line: 124,
            column: 47
          },
          end: {
            line: 163,
            column: 5
          }
        },
        line: 124
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 125,
            column: 50
          },
          end: {
            line: 125,
            column: 51
          }
        },
        loc: {
          start: {
            line: 125,
            column: 126
          },
          end: {
            line: 162,
            column: 9
          }
        },
        line: 125
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 167,
            column: 4
          },
          end: {
            line: 167,
            column: 5
          }
        },
        loc: {
          start: {
            line: 167,
            column: 53
          },
          end: {
            line: 218,
            column: 5
          }
        },
        line: 167
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 168,
            column: 47
          },
          end: {
            line: 168,
            column: 48
          }
        },
        loc: {
          start: {
            line: 168,
            column: 60
          },
          end: {
            line: 217,
            column: 9
          }
        },
        line: 168
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 222,
            column: 4
          },
          end: {
            line: 222,
            column: 5
          }
        },
        loc: {
          start: {
            line: 222,
            column: 44
          },
          end: {
            line: 267,
            column: 5
          }
        },
        line: 222
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 223,
            column: 47
          },
          end: {
            line: 223,
            column: 48
          }
        },
        loc: {
          start: {
            line: 223,
            column: 60
          },
          end: {
            line: 266,
            column: 9
          }
        },
        line: 223
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 271,
            column: 4
          },
          end: {
            line: 271,
            column: 5
          }
        },
        loc: {
          start: {
            line: 271,
            column: 54
          },
          end: {
            line: 309,
            column: 5
          }
        },
        line: 271
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 272,
            column: 47
          },
          end: {
            line: 272,
            column: 48
          }
        },
        loc: {
          start: {
            line: 272,
            column: 60
          },
          end: {
            line: 308,
            column: 9
          }
        },
        line: 272
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 278,
            column: 46
          },
          end: {
            line: 278,
            column: 47
          }
        },
        loc: {
          start: {
            line: 278,
            column: 61
          },
          end: {
            line: 278,
            column: 97
          }
        },
        line: 278
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 290,
            column: 37
          },
          end: {
            line: 290,
            column: 38
          }
        },
        loc: {
          start: {
            line: 290,
            column: 55
          },
          end: {
            line: 290,
            column: 171
          }
        },
        line: 290
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 313,
            column: 4
          },
          end: {
            line: 313,
            column: 5
          }
        },
        loc: {
          start: {
            line: 313,
            column: 41
          },
          end: {
            line: 332,
            column: 5
          }
        },
        line: 313
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 314,
            column: 47
          },
          end: {
            line: 314,
            column: 48
          }
        },
        loc: {
          start: {
            line: 314,
            column: 60
          },
          end: {
            line: 331,
            column: 9
          }
        },
        line: 314
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 322,
            column: 33
          },
          end: {
            line: 322,
            column: 34
          }
        },
        loc: {
          start: {
            line: 322,
            column: 42
          },
          end: {
            line: 324,
            column: 17
          }
        },
        line: 322
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 336,
            column: 4
          },
          end: {
            line: 336,
            column: 5
          }
        },
        loc: {
          start: {
            line: 336,
            column: 35
          },
          end: {
            line: 355,
            column: 5
          }
        },
        line: 336
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 337,
            column: 47
          },
          end: {
            line: 337,
            column: 48
          }
        },
        loc: {
          start: {
            line: 337,
            column: 60
          },
          end: {
            line: 354,
            column: 9
          }
        },
        line: 337
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 345,
            column: 33
          },
          end: {
            line: 345,
            column: 34
          }
        },
        loc: {
          start: {
            line: 345,
            column: 42
          },
          end: {
            line: 347,
            column: 17
          }
        },
        line: 345
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 359,
            column: 4
          },
          end: {
            line: 359,
            column: 5
          }
        },
        loc: {
          start: {
            line: 359,
            column: 50
          },
          end: {
            line: 393,
            column: 5
          }
        },
        line: 359
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 360,
            column: 47
          },
          end: {
            line: 360,
            column: 48
          }
        },
        loc: {
          start: {
            line: 360,
            column: 60
          },
          end: {
            line: 392,
            column: 9
          }
        },
        line: 360
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 397,
            column: 4
          },
          end: {
            line: 397,
            column: 5
          }
        },
        loc: {
          start: {
            line: 397,
            column: 51
          },
          end: {
            line: 448,
            column: 5
          }
        },
        line: 397
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 398,
            column: 47
          },
          end: {
            line: 398,
            column: 48
          }
        },
        loc: {
          start: {
            line: 398,
            column: 60
          },
          end: {
            line: 447,
            column: 9
          }
        },
        line: 398
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 452,
            column: 4
          },
          end: {
            line: 452,
            column: 5
          }
        },
        loc: {
          start: {
            line: 452,
            column: 36
          },
          end: {
            line: 525,
            column: 5
          }
        },
        line: 452
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 453,
            column: 47
          },
          end: {
            line: 453,
            column: 48
          }
        },
        loc: {
          start: {
            line: 453,
            column: 60
          },
          end: {
            line: 524,
            column: 9
          }
        },
        line: 453
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 477,
            column: 58
          },
          end: {
            line: 477,
            column: 59
          }
        },
        loc: {
          start: {
            line: 477,
            column: 65
          },
          end: {
            line: 477,
            column: 75
          }
        },
        line: 477
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 486,
            column: 58
          },
          end: {
            line: 486,
            column: 59
          }
        },
        loc: {
          start: {
            line: 486,
            column: 65
          },
          end: {
            line: 486,
            column: 75
          }
        },
        line: 486
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 492,
            column: 56
          },
          end: {
            line: 492,
            column: 57
          }
        },
        loc: {
          start: {
            line: 492,
            column: 63
          },
          end: {
            line: 492,
            column: 73
          }
        },
        line: 492
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 495,
            column: 32
          },
          end: {
            line: 495,
            column: 33
          }
        },
        loc: {
          start: {
            line: 495,
            column: 39
          },
          end: {
            line: 495,
            column: 63
          }
        },
        line: 495
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 496,
            column: 32
          },
          end: {
            line: 496,
            column: 33
          }
        },
        loc: {
          start: {
            line: 496,
            column: 44
          },
          end: {
            line: 496,
            column: 58
          }
        },
        line: 496
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 498,
            column: 60
          },
          end: {
            line: 498,
            column: 61
          }
        },
        loc: {
          start: {
            line: 498,
            column: 67
          },
          end: {
            line: 498,
            column: 91
          }
        },
        line: 498
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 499,
            column: 56
          },
          end: {
            line: 499,
            column: 57
          }
        },
        loc: {
          start: {
            line: 499,
            column: 63
          },
          end: {
            line: 499,
            column: 84
          }
        },
        line: 499
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 502,
            column: 50
          },
          end: {
            line: 502,
            column: 51
          }
        },
        loc: {
          start: {
            line: 502,
            column: 57
          },
          end: {
            line: 502,
            column: 76
          }
        },
        line: 502
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 505,
            column: 32
          },
          end: {
            line: 505,
            column: 33
          }
        },
        loc: {
          start: {
            line: 505,
            column: 39
          },
          end: {
            line: 505,
            column: 63
          }
        },
        line: 505
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 506,
            column: 32
          },
          end: {
            line: 506,
            column: 33
          }
        },
        loc: {
          start: {
            line: 506,
            column: 44
          },
          end: {
            line: 506,
            column: 58
          }
        },
        line: 506
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 508,
            column: 42
          },
          end: {
            line: 508,
            column: 43
          }
        },
        loc: {
          start: {
            line: 508,
            column: 54
          },
          end: {
            line: 508,
            column: 68
          }
        },
        line: 508
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 512,
            column: 43
          },
          end: {
            line: 512,
            column: 44
          }
        },
        loc: {
          start: {
            line: 512,
            column: 50
          },
          end: {
            line: 512,
            column: 74
          }
        },
        line: 512
      },
      "50": {
        name: "(anonymous_50)",
        decl: {
          start: {
            line: 529,
            column: 4
          },
          end: {
            line: 529,
            column: 5
          }
        },
        loc: {
          start: {
            line: 529,
            column: 39
          },
          end: {
            line: 563,
            column: 5
          }
        },
        line: 529
      },
      "51": {
        name: "(anonymous_51)",
        decl: {
          start: {
            line: 530,
            column: 47
          },
          end: {
            line: 530,
            column: 48
          }
        },
        loc: {
          start: {
            line: 530,
            column: 60
          },
          end: {
            line: 562,
            column: 9
          }
        },
        line: 530
      },
      "52": {
        name: "(anonymous_52)",
        decl: {
          start: {
            line: 567,
            column: 4
          },
          end: {
            line: 567,
            column: 5
          }
        },
        loc: {
          start: {
            line: 567,
            column: 25
          },
          end: {
            line: 603,
            column: 5
          }
        },
        line: 567
      },
      "53": {
        name: "(anonymous_53)",
        decl: {
          start: {
            line: 568,
            column: 47
          },
          end: {
            line: 568,
            column: 48
          }
        },
        loc: {
          start: {
            line: 568,
            column: 60
          },
          end: {
            line: 602,
            column: 9
          }
        },
        line: 568
      },
      "54": {
        name: "(anonymous_54)",
        decl: {
          start: {
            line: 596,
            column: 39
          },
          end: {
            line: 596,
            column: 40
          }
        },
        loc: {
          start: {
            line: 596,
            column: 50
          },
          end: {
            line: 596,
            column: 66
          }
        },
        line: 596
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 16
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 17
          },
          end: {
            line: 2,
            column: 21
          }
        }, {
          start: {
            line: 2,
            column: 25
          },
          end: {
            line: 2,
            column: 39
          }
        }, {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 35
          },
          end: {
            line: 3,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 56
          },
          end: {
            line: 3,
            column: 61
          }
        }, {
          start: {
            line: 3,
            column: 64
          },
          end: {
            line: 3,
            column: 109
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 17
          }
        }, {
          start: {
            line: 4,
            column: 22
          },
          end: {
            line: 4,
            column: 33
          }
        }],
        line: 4
      },
      "3": {
        loc: {
          start: {
            line: 7,
            column: 32
          },
          end: {
            line: 7,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 7,
            column: 46
          },
          end: {
            line: 7,
            column: 67
          }
        }, {
          start: {
            line: 7,
            column: 70
          },
          end: {
            line: 7,
            column: 115
          }
        }],
        line: 7
      },
      "4": {
        loc: {
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 61
          }
        }, {
          start: {
            line: 8,
            column: 65
          },
          end: {
            line: 8,
            column: 67
          }
        }],
        line: 8
      },
      "5": {
        loc: {
          start: {
            line: 38,
            column: 31
          },
          end: {
            line: 38,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 31
          },
          end: {
            line: 38,
            column: 52
          }
        }, {
          start: {
            line: 38,
            column: 56
          },
          end: {
            line: 38,
            column: 61
          }
        }],
        line: 38
      },
      "6": {
        loc: {
          start: {
            line: 46,
            column: 16
          },
          end: {
            line: 48,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 16
          },
          end: {
            line: 48,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 46
      },
      "7": {
        loc: {
          start: {
            line: 125,
            column: 80
          },
          end: {
            line: 125,
            column: 96
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 125,
            column: 91
          },
          end: {
            line: 125,
            column: 96
          }
        }],
        line: 125
      },
      "8": {
        loc: {
          start: {
            line: 125,
            column: 111
          },
          end: {
            line: 125,
            column: 124
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 125,
            column: 122
          },
          end: {
            line: 125,
            column: 124
          }
        }],
        line: 125
      },
      "9": {
        loc: {
          start: {
            line: 134,
            column: 30
          },
          end: {
            line: 136,
            column: 46
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 135,
            column: 26
          },
          end: {
            line: 135,
            column: 34
          }
        }, {
          start: {
            line: 136,
            column: 26
          },
          end: {
            line: 136,
            column: 46
          }
        }],
        line: 134
      },
      "10": {
        loc: {
          start: {
            line: 179,
            column: 16
          },
          end: {
            line: 181,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 179,
            column: 16
          },
          end: {
            line: 181,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 179
      },
      "11": {
        loc: {
          start: {
            line: 183,
            column: 16
          },
          end: {
            line: 208,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 183,
            column: 16
          },
          end: {
            line: 208,
            column: 17
          }
        }, {
          start: {
            line: 200,
            column: 21
          },
          end: {
            line: 208,
            column: 17
          }
        }],
        line: 183
      },
      "12": {
        loc: {
          start: {
            line: 209,
            column: 81
          },
          end: {
            line: 209,
            column: 113
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 209,
            column: 91
          },
          end: {
            line: 209,
            column: 102
          }
        }, {
          start: {
            line: 209,
            column: 105
          },
          end: {
            line: 209,
            column: 113
          }
        }],
        line: 209
      },
      "13": {
        loc: {
          start: {
            line: 317,
            column: 16
          },
          end: {
            line: 319,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 317,
            column: 16
          },
          end: {
            line: 319,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 317
      },
      "14": {
        loc: {
          start: {
            line: 340,
            column: 16
          },
          end: {
            line: 342,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 340,
            column: 16
          },
          end: {
            line: 342,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 340
      },
      "15": {
        loc: {
          start: {
            line: 367,
            column: 16
          },
          end: {
            line: 369,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 367,
            column: 16
          },
          end: {
            line: 369,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 367
      },
      "16": {
        loc: {
          start: {
            line: 375,
            column: 16
          },
          end: {
            line: 383,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 375,
            column: 16
          },
          end: {
            line: 383,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 375
      },
      "17": {
        loc: {
          start: {
            line: 384,
            column: 75
          },
          end: {
            line: 384,
            column: 122
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 384,
            column: 107
          },
          end: {
            line: 384,
            column: 113
          }
        }, {
          start: {
            line: 384,
            column: 116
          },
          end: {
            line: 384,
            column: 122
          }
        }],
        line: 384
      },
      "18": {
        loc: {
          start: {
            line: 384,
            column: 132
          },
          end: {
            line: 384,
            column: 186
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 384,
            column: 164
          },
          end: {
            line: 384,
            column: 174
          }
        }, {
          start: {
            line: 384,
            column: 177
          },
          end: {
            line: 384,
            column: 186
          }
        }],
        line: 384
      },
      "19": {
        loc: {
          start: {
            line: 408,
            column: 16
          },
          end: {
            line: 410,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 408,
            column: 16
          },
          end: {
            line: 410,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 408
      },
      "20": {
        loc: {
          start: {
            line: 412,
            column: 16
          },
          end: {
            line: 414,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 412,
            column: 16
          },
          end: {
            line: 414,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 412
      },
      "21": {
        loc: {
          start: {
            line: 415,
            column: 16
          },
          end: {
            line: 417,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 415,
            column: 16
          },
          end: {
            line: 417,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 415
      },
      "22": {
        loc: {
          start: {
            line: 425,
            column: 28
          },
          end: {
            line: 425,
            column: 60
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 425,
            column: 38
          },
          end: {
            line: 425,
            column: 49
          }
        }, {
          start: {
            line: 425,
            column: 52
          },
          end: {
            line: 425,
            column: 60
          }
        }],
        line: 425
      },
      "23": {
        loc: {
          start: {
            line: 429,
            column: 16
          },
          end: {
            line: 435,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 429,
            column: 16
          },
          end: {
            line: 435,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 429
      },
      "24": {
        loc: {
          start: {
            line: 460,
            column: 16
          },
          end: {
            line: 468,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 460,
            column: 16
          },
          end: {
            line: 468,
            column: 17
          }
        }, {
          start: {
            line: 463,
            column: 21
          },
          end: {
            line: 468,
            column: 17
          }
        }],
        line: 460
      },
      "25": {
        loc: {
          start: {
            line: 463,
            column: 21
          },
          end: {
            line: 468,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 463,
            column: 21
          },
          end: {
            line: 468,
            column: 17
          }
        }, {
          start: {
            line: 466,
            column: 21
          },
          end: {
            line: 468,
            column: 17
          }
        }],
        line: 463
      },
      "26": {
        loc: {
          start: {
            line: 466,
            column: 21
          },
          end: {
            line: 468,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 466,
            column: 21
          },
          end: {
            line: 468,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 466
      },
      "27": {
        loc: {
          start: {
            line: 473,
            column: 16
          },
          end: {
            line: 475,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 473,
            column: 16
          },
          end: {
            line: 475,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 473
      },
      "28": {
        loc: {
          start: {
            line: 482,
            column: 16
          },
          end: {
            line: 484,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 482,
            column: 16
          },
          end: {
            line: 484,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 482
      },
      "29": {
        loc: {
          start: {
            line: 507,
            column: 40
          },
          end: {
            line: 510,
            column: 27
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 508,
            column: 26
          },
          end: {
            line: 509,
            column: 43
          }
        }, {
          start: {
            line: 510,
            column: 26
          },
          end: {
            line: 510,
            column: 27
          }
        }],
        line: 507
      },
      "30": {
        loc: {
          start: {
            line: 511,
            column: 33
          },
          end: {
            line: 515,
            column: 27
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 512,
            column: 26
          },
          end: {
            line: 514,
            column: 31
          }
        }, {
          start: {
            line: 515,
            column: 26
          },
          end: {
            line: 515,
            column: 27
          }
        }],
        line: 511
      },
      "31": {
        loc: {
          start: {
            line: 533,
            column: 16
          },
          end: {
            line: 538,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 533,
            column: 16
          },
          end: {
            line: 538,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 533
      },
      "32": {
        loc: {
          start: {
            line: 533,
            column: 20
          },
          end: {
            line: 536,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 533,
            column: 20
          },
          end: {
            line: 533,
            column: 43
          }
        }, {
          start: {
            line: 534,
            column: 20
          },
          end: {
            line: 534,
            column: 44
          }
        }, {
          start: {
            line: 535,
            column: 20
          },
          end: {
            line: 535,
            column: 43
          }
        }, {
          start: {
            line: 536,
            column: 20
          },
          end: {
            line: 536,
            column: 36
          }
        }],
        line: 533
      },
      "33": {
        loc: {
          start: {
            line: 541,
            column: 16
          },
          end: {
            line: 543,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 541,
            column: 16
          },
          end: {
            line: 543,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 541
      },
      "34": {
        loc: {
          start: {
            line: 547,
            column: 16
          },
          end: {
            line: 549,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 547,
            column: 16
          },
          end: {
            line: 549,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 547
      },
      "35": {
        loc: {
          start: {
            line: 551,
            column: 16
          },
          end: {
            line: 553,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 551,
            column: 16
          },
          end: {
            line: 553,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 551
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0],
      "8": [0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0, 0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\services\\paymentService.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\services\\paymentService.ts"],
      sourcesContent: ["import { db } from '../utils/firebase';\r\nimport { logger } from './loggerService';\r\nimport { FieldValue } from 'firebase-admin/firestore';\r\n\r\n// Interfaces para el sistema de pagos\r\nexport interface PaymentMethod {\r\n  id: string;\r\n  type: 'card' | 'bank_transfer' | 'paypal' | 'stripe';\r\n  last4?: string;\r\n  brand?: string;\r\n  expiryMonth?: number;\r\n  expiryYear?: number;\r\n  isDefault: boolean;\r\n  userEmail: string;\r\n}\r\n\r\nexport interface PaymentIntent {\r\n  id: string;\r\n  amount: number; // en centavos\r\n  currency: string;\r\n  status: 'pending' | 'processing' | 'succeeded' | 'failed' | 'cancelled';\r\n  paymentMethodId: string;\r\n  userEmail: string;\r\n  eventId?: string;\r\n  description: string;\r\n  metadata: Record<string, any>;\r\n  createdAt: Date;\r\n  updatedAt: Date;\r\n}\r\n\r\nexport interface Invoice {\r\n  id: string;\r\n  number: string;\r\n  amount: number;\r\n  currency: string;\r\n  status: 'draft' | 'sent' | 'paid' | 'overdue' | 'cancelled';\r\n  dueDate: Date;\r\n  paidAt?: Date;\r\n  userEmail: string;\r\n  eventId?: string;\r\n  items: InvoiceItem[];\r\n  subtotal: number;\r\n  tax: number;\r\n  total: number;\r\n  createdAt: Date;\r\n  updatedAt: Date;\r\n}\r\n\r\nexport interface InvoiceItem {\r\n  id: string;\r\n  description: string;\r\n  quantity: number;\r\n  unitPrice: number;\r\n  total: number;\r\n  type: 'service' | 'product' | 'fee';\r\n}\r\n\r\nexport interface PaymentGateway {\r\n  name: string;\r\n  isActive: boolean;\r\n  config: Record<string, any>;\r\n}\r\n\r\nexport interface Refund {\r\n  id: string;\r\n  paymentIntentId: string;\r\n  amount: number;\r\n  reason: string;\r\n  status: 'pending' | 'succeeded' | 'failed';\r\n  createdAt: Date;\r\n}\r\n\r\nexport class PaymentService {\r\n  private readonly supportedCurrencies = ['EUR', 'USD', 'GBP'];\r\n  private readonly defaultCurrency = 'EUR';\r\n\r\n  /**\r\n   * Crear un m\xE9todo de pago\r\n   */\r\n  async createPaymentMethod(\r\n    userEmail: string,\r\n    paymentData: any\r\n  ): Promise<PaymentMethod> {\r\n    try {\r\n      logger.info('Creando m\xE9todo de pago', {\r\n        userId: userEmail,\r\n        metadata: { paymentData },\r\n      });\r\n\r\n      // En producci\xF3n, esto se integrar\xEDa con Stripe/PayPal\r\n      const paymentMethod: PaymentMethod = {\r\n        id: `pm_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\r\n        type: paymentData.type,\r\n        last4: paymentData.last4,\r\n        brand: paymentData.brand,\r\n        expiryMonth: paymentData.expiryMonth,\r\n        expiryYear: paymentData.expiryYear,\r\n        isDefault: paymentData.isDefault || false,\r\n        userEmail,\r\n      };\r\n\r\n      await db\r\n        .collection('paymentMethods')\r\n        .doc(paymentMethod.id)\r\n        .set(paymentMethod);\r\n\r\n      // Si es el m\xE9todo por defecto, actualizar otros m\xE9todos\r\n      if (paymentMethod.isDefault) {\r\n        await this.setDefaultPaymentMethod(userEmail, paymentMethod.id);\r\n      }\r\n\r\n      logger.info('M\xE9todo de pago creado', {\r\n        userId: userEmail,\r\n        metadata: { paymentMethodId: paymentMethod.id },\r\n      });\r\n\r\n      return paymentMethod;\r\n    } catch (error) {\r\n      logger.error('Error creando m\xE9todo de pago', error as Error, { userId: userEmail });\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Obtener m\xE9todos de pago de un usuario\r\n   */\r\n  async getPaymentMethods(userEmail: string): Promise<PaymentMethod[]> {\r\n    try {\r\n      const snapshot = await db\r\n        .collection('paymentMethods')\r\n        .where('userEmail', '==', userEmail)\r\n        .orderBy('isDefault', 'desc')\r\n        .get();\r\n\r\n      const paymentMethods: PaymentMethod[] = [];\r\n      snapshot.forEach((doc: any) => {\r\n        paymentMethods.push({ id: doc.id, ...doc.data() });\r\n      });\r\n\r\n      return paymentMethods;\r\n    } catch (error) {\r\n      logger.error('Error obteniendo m\xE9todos de pago', error as Error, {\r\n        userId: userEmail,\r\n      });\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Establecer m\xE9todo de pago por defecto\r\n   */\r\n  async setDefaultPaymentMethod(\r\n    userEmail: string,\r\n    paymentMethodId: string\r\n  ): Promise<void> {\r\n    try {\r\n      const batch = db.batch();\r\n\r\n      // Remover default de otros m\xE9todos\r\n      const snapshot = await db\r\n        .collection('paymentMethods')\r\n        .where('userEmail', '==', userEmail)\r\n        .where('isDefault', '==', true)\r\n        .get();\r\n\r\n      snapshot.forEach((doc: any) => {\r\n        batch.update(doc.ref, { isDefault: false });\r\n      });\r\n\r\n      // Establecer nuevo m\xE9todo por defecto\r\n      batch.update(db.collection('paymentMethods').doc(paymentMethodId), {\r\n        isDefault: true,\r\n      });\r\n\r\n      await batch.commit();\r\n\r\n      logger.info('M\xE9todo de pago por defecto actualizado', {\r\n        userId: userEmail,\r\n        metadata: { paymentMethodId },\r\n      });\r\n    } catch (error) {\r\n      logger.error('Error estableciendo m\xE9todo por defecto', error as Error, {\r\n        userId: userEmail,\r\n        metadata: { paymentMethodId },\r\n      });\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Crear intento de pago\r\n   */\r\n  async createPaymentIntent(\r\n    userEmail: string,\r\n    amount: number,\r\n    currency: string = 'EUR',\r\n    description: string,\r\n    metadata: Record<string, any> = {}\r\n  ): Promise<PaymentIntent> {\r\n    try {\r\n      logger.info('Creando intento de pago', {\r\n        userId: userEmail,\r\n        metadata: { amount, currency, description },\r\n      });\r\n\r\n      const paymentIntent: PaymentIntent = {\r\n        id: `pi_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\r\n        amount,\r\n        currency: this.supportedCurrencies.includes(currency)\r\n          ? currency\r\n          : this.defaultCurrency,\r\n        status: 'pending',\r\n        paymentMethodId: '',\r\n        userEmail,\r\n        description,\r\n        metadata,\r\n        createdAt: new Date(),\r\n        updatedAt: new Date(),\r\n      };\r\n\r\n      await db\r\n        .collection('paymentIntents')\r\n        .doc(paymentIntent.id)\r\n        .set(paymentIntent);\r\n\r\n      logger.info('Intento de pago creado', {\r\n        userId: userEmail,\r\n        metadata: { paymentIntentId: paymentIntent.id },\r\n      });\r\n\r\n      return paymentIntent;\r\n    } catch (error) {\r\n      logger.error('Error creando intento de pago', error as Error, {\r\n        userId: userEmail,\r\n        metadata: { amount },\r\n      });\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Procesar pago\r\n   */\r\n  async processPayment(\r\n    paymentIntentId: string,\r\n    paymentMethodId: string\r\n  ): Promise<PaymentIntent> {\r\n    try {\r\n      logger.info('Procesando pago', {\r\n        metadata: { paymentIntentId, paymentMethodId },\r\n      });\r\n\r\n      // Simular procesamiento de pago\r\n      const success = Math.random() > 0.1; // 90% de \xE9xito\r\n\r\n      const paymentIntentRef = db\r\n        .collection('paymentIntents')\r\n        .doc(paymentIntentId);\r\n      const paymentIntentDoc = await paymentIntentRef.get();\r\n\r\n      if (!paymentIntentDoc.exists) {\r\n        throw new Error('Payment intent no encontrado');\r\n      }\r\n\r\n      const paymentIntent = paymentIntentDoc.data() as PaymentIntent;\r\n\r\n      if (success) {\r\n        // Pago exitoso\r\n        await paymentIntentRef.update({\r\n          status: 'succeeded',\r\n          paymentMethodId,\r\n          updatedAt: new Date(),\r\n        });\r\n\r\n        // Crear factura autom\xE1ticamente\r\n        await this.createInvoiceFromPayment({\r\n          ...paymentIntent,\r\n          status: 'succeeded',\r\n          paymentMethodId,\r\n        });\r\n\r\n        logger.info('Pago procesado exitosamente', {\r\n          metadata: {\r\n            paymentIntentId,\r\n            amount: paymentIntent.amount,\r\n            currency: paymentIntent.currency,\r\n          },\r\n        });\r\n      } else {\r\n        // Pago fallido\r\n        await paymentIntentRef.update({\r\n          status: 'failed',\r\n          paymentMethodId,\r\n          updatedAt: new Date(),\r\n        });\r\n\r\n        logger.info('Pago fallido', { metadata: { paymentIntentId } });\r\n      }\r\n\r\n      return {\r\n        ...paymentIntent,\r\n        status: success ? 'succeeded' : 'failed',\r\n        paymentMethodId,\r\n        updatedAt: new Date(),\r\n      };\r\n    } catch (error) {\r\n      logger.error('Error procesando pago', error as Error, {\r\n        metadata: { paymentIntentId },\r\n      });\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Crear factura desde un pago\r\n   */\r\n  async createInvoiceFromPayment(\r\n    paymentIntent: PaymentIntent\r\n  ): Promise<Invoice> {\r\n    try {\r\n      const invoice: Invoice = {\r\n        id: `inv_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\r\n        number: `INV-${Date.now()}`,\r\n        amount: paymentIntent.amount,\r\n        currency: paymentIntent.currency,\r\n        status: 'paid',\r\n        dueDate: new Date(),\r\n        paidAt: new Date(),\r\n        userEmail: paymentIntent.userEmail,\r\n        eventId: paymentIntent.eventId,\r\n        items: [\r\n          {\r\n            id: `item_${Date.now()}`,\r\n            description: paymentIntent.description,\r\n            quantity: 1,\r\n            unitPrice: paymentIntent.amount,\r\n            total: paymentIntent.amount,\r\n            type: 'service',\r\n          },\r\n        ],\r\n        subtotal: paymentIntent.amount,\r\n        tax: 0,\r\n        total: paymentIntent.amount,\r\n        createdAt: new Date(),\r\n        updatedAt: new Date(),\r\n      };\r\n\r\n      await db.collection('invoices').doc(invoice.id).set(invoice);\r\n\r\n      logger.info('Factura creada desde pago', {\r\n        metadata: {\r\n          invoiceId: invoice.id,\r\n          paymentIntentId: paymentIntent.id,\r\n        },\r\n      });\r\n\r\n      return invoice;\r\n    } catch (error) {\r\n      logger.error('Error creando factura desde pago', error as Error, {\r\n        metadata: { paymentIntent },\r\n      });\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Crear factura manual\r\n   */\r\n  async createInvoice(\r\n    userEmail: string,\r\n    items: Omit<InvoiceItem, 'id'>[],\r\n    dueDate: Date,\r\n    eventId?: string\r\n  ): Promise<Invoice> {\r\n    try {\r\n      logger.info('Creando factura manual', {\r\n        userId: userEmail,\r\n        metadata: { items, dueDate },\r\n      });\r\n\r\n      const subtotal = items.reduce(\r\n        (sum, item) => sum + item.quantity * item.unitPrice,\r\n        0\r\n      );\r\n      const tax = subtotal * 0.16; // 16% IVA\r\n      const total = subtotal + tax;\r\n\r\n      const invoice: Invoice = {\r\n        id: `inv_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\r\n        number: `INV-${Date.now()}`,\r\n        amount: total,\r\n        currency: this.defaultCurrency,\r\n        status: 'draft',\r\n        dueDate,\r\n        userEmail,\r\n        eventId,\r\n        items: items.map((item, index) => ({\r\n          id: `item_${Date.now()}_${index}`,\r\n          ...item,\r\n          total: item.quantity * item.unitPrice,\r\n        })),\r\n        subtotal,\r\n        tax,\r\n        total,\r\n        createdAt: new Date(),\r\n        updatedAt: new Date(),\r\n      };\r\n\r\n      await db.collection('invoices').doc(invoice.id).set(invoice);\r\n\r\n      logger.info('Factura manual creada', {\r\n        userId: userEmail,\r\n        metadata: { invoiceId: invoice.id },\r\n      });\r\n\r\n      return invoice;\r\n    } catch (error) {\r\n      logger.error('Error creando factura manual', error as Error, { userId: userEmail });\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Obtener payment intents de un usuario\r\n   */\r\n  async getPaymentIntents(userEmail: string, status?: string): Promise<PaymentIntent[]> {\r\n    try {\r\n      let query = db.collection('paymentIntents').where('userEmail', '==', userEmail);\r\n\r\n      if (status) {\r\n        query = query.where('status', '==', status);\r\n      }\r\n\r\n      const snapshot = await query.orderBy('createdAt', 'desc').get();\r\n\r\n      const paymentIntents: PaymentIntent[] = [];\r\n      snapshot.forEach((doc: any) => {\r\n        paymentIntents.push({ id: doc.id, ...doc.data() });\r\n      });\r\n\r\n      return paymentIntents;\r\n    } catch (error) {\r\n      logger.error('Error obteniendo payment intents', error as Error, { userId: userEmail });\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Obtener facturas de un usuario\r\n   */\r\n  async getInvoices(userEmail: string, status?: string): Promise<Invoice[]> {\r\n    try {\r\n      let query = db.collection('invoices').where('userEmail', '==', userEmail);\r\n\r\n      if (status) {\r\n        query = query.where('status', '==', status);\r\n      }\r\n\r\n      const snapshot = await query.orderBy('createdAt', 'desc').get();\r\n\r\n      const invoices: Invoice[] = [];\r\n      snapshot.forEach((doc: any) => {\r\n        invoices.push({ id: doc.id, ...doc.data() });\r\n      });\r\n\r\n      return invoices;\r\n    } catch (error) {\r\n      logger.error('Error obteniendo facturas', error as Error, { userId: userEmail });\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Marcar factura como pagada\r\n   */\r\n  async markInvoiceAsPaid(\r\n    invoiceId: string,\r\n    paymentMethodId: string\r\n  ): Promise<Invoice> {\r\n    try {\r\n      logger.info('Marcando factura como pagada', {\r\n        metadata: { invoiceId, paymentMethodId },\r\n      });\r\n\r\n      const invoiceRef = db.collection('invoices').doc(invoiceId);\r\n      const invoiceDoc = await invoiceRef.get();\r\n\r\n      if (!invoiceDoc.exists) {\r\n        throw new Error('Factura no encontrada');\r\n      }\r\n\r\n      const invoice = invoiceDoc.data() as Invoice;\r\n\r\n      // Crear payment intent para la factura\r\n      const paymentIntent = await this.createPaymentIntent(\r\n        invoice.userEmail,\r\n        invoice.total,\r\n        invoice.currency,\r\n        `Pago de factura ${invoice.number}`,\r\n        { invoiceId }\r\n      );\r\n\r\n      // Procesar el pago\r\n      const result = await this.processPayment(\r\n        paymentIntent.id,\r\n        paymentMethodId\r\n      );\r\n\r\n      if (result.status === 'succeeded') {\r\n        // Actualizar factura como pagada\r\n        await invoiceRef.update({\r\n          status: 'paid',\r\n          paidAt: new Date(),\r\n          updatedAt: new Date(),\r\n        });\r\n\r\n        logger.info('Factura marcada como pagada', { metadata: { invoiceId } });\r\n      }\r\n\r\n      return {\r\n        ...invoice,\r\n        status: result.status === 'succeeded' ? 'paid' : 'sent',\r\n        paidAt: result.status === 'succeeded' ? new Date() : undefined,\r\n        updatedAt: new Date(),\r\n      };\r\n    } catch (error) {\r\n      logger.error('Error marcando factura como pagada', error as Error, {\r\n        metadata: { invoiceId },\r\n      });\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Procesar reembolso\r\n   */\r\n  async processRefund(\r\n    paymentIntentId: string,\r\n    amount: number,\r\n    reason: string\r\n  ): Promise<Refund> {\r\n    try {\r\n      logger.info('Procesando reembolso', {\r\n        metadata: { paymentIntentId, amount, reason },\r\n      });\r\n\r\n      // Verificar que el payment intent existe y fue exitoso\r\n      const paymentIntentDoc = await db\r\n        .collection('paymentIntents')\r\n        .doc(paymentIntentId)\r\n        .get();\r\n\r\n      if (!paymentIntentDoc.exists) {\r\n        throw new Error('Payment intent no encontrado');\r\n      }\r\n\r\n      const paymentIntent = paymentIntentDoc.data() as PaymentIntent;\r\n\r\n      if (paymentIntent.status !== 'succeeded') {\r\n        throw new Error('Solo se pueden reembolsar pagos exitosos');\r\n      }\r\n\r\n      if (amount > paymentIntent.amount) {\r\n        throw new Error(\r\n          'El monto del reembolso no puede ser mayor al pago original'\r\n        );\r\n      }\r\n\r\n      // Simular procesamiento de reembolso\r\n      const success = Math.random() > 0.05; // 95% de \xE9xito\r\n\r\n      const refund: Refund = {\r\n        id: `ref_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\r\n        paymentIntentId,\r\n        amount,\r\n        reason,\r\n        status: success ? 'succeeded' : 'failed',\r\n        createdAt: new Date(),\r\n      };\r\n\r\n      await db.collection('refunds').doc(refund.id).set(refund);\r\n\r\n      if (success) {\r\n        // Actualizar payment intent\r\n        await db.collection('paymentIntents').doc(paymentIntentId).update({\r\n          status: 'cancelled',\r\n          updatedAt: new Date(),\r\n        });\r\n      }\r\n\r\n      logger.info('Reembolso procesado', {\r\n        metadata: { refundId: refund.id, amount },\r\n      });\r\n\r\n      return refund;\r\n    } catch (error) {\r\n      logger.error('Error procesando reembolso', error as Error, {\r\n        metadata: { paymentIntentId },\r\n      });\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Obtener estad\xEDsticas de pagos\r\n   */\r\n  async getPaymentStats(userId?: string, period?: string): Promise<any> {\r\n    try {\r\n      logger.info('Obteniendo estad\xEDsticas de pagos', {\r\n        metadata: { userId, period },\r\n      });\r\n\r\n      const now = new Date();\r\n      let startDate = new Date(now.getFullYear(), now.getMonth(), 1); // Inicio del mes\r\n\r\n      if (period === 'week') {\r\n        startDate = new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000);\r\n      } else if (period === 'month') {\r\n        startDate = new Date(\r\n          now.getFullYear(),\r\n          now.getMonth() - 1,\r\n          now.getDate()\r\n        );\r\n      } else if (period === 'year') {\r\n        startDate = new Date(now.getFullYear(), 0, 1);\r\n      }\r\n\r\n      // Estad\xEDsticas de payment intents\r\n      let paymentQuery = db\r\n        .collection('paymentIntents')\r\n        .where('createdAt', '>=', startDate);\r\n\r\n      if (userId) {\r\n        paymentQuery = paymentQuery.where('userId', '==', userId);\r\n      }\r\n\r\n      const paymentSnapshot = await paymentQuery.get();\r\n      const payments = paymentSnapshot.docs.map(doc => doc.data());\r\n\r\n      // Estad\xEDsticas de facturas\r\n      let invoiceQuery = db\r\n        .collection('invoices')\r\n        .where('createdAt', '>=', startDate);\r\n\r\n      if (userId) {\r\n        invoiceQuery = invoiceQuery.where('userId', '==', userId);\r\n      }\r\n\r\n      const invoiceSnapshot = await invoiceQuery.get();\r\n      const invoices = invoiceSnapshot.docs.map(doc => doc.data());\r\n\r\n      // Estad\xEDsticas de reembolsos\r\n      const refundQuery = db\r\n        .collection('refunds')\r\n        .where('createdAt', '>=', startDate);\r\n\r\n      const refundSnapshot = await refundQuery.get();\r\n      const refunds = refundSnapshot.docs.map(doc => doc.data());\r\n\r\n      const stats = {\r\n        totalRevenue: payments\r\n          .filter((p: any) => p.status === 'succeeded')\r\n          .reduce((sum: number, p: any) => sum + p.amount, 0),\r\n        totalTransactions: payments.length,\r\n        successfulTransactions: payments.filter(\r\n          (p: any) => p.status === 'succeeded'\r\n        ).length,\r\n        failedTransactions: payments.filter((p: any) => p.status === 'failed')\r\n          .length,\r\n        totalInvoices: invoices.length,\r\n        paidInvoices: invoices.filter((i: any) => i.status === 'paid').length,\r\n        totalRefunds: refunds.length,\r\n        refundAmount: refunds\r\n          .filter((r: any) => r.status === 'succeeded')\r\n          .reduce((sum: number, r: any) => sum + r.amount, 0),\r\n        averageTransaction:\r\n          payments.length > 0\r\n            ? payments.reduce((sum: number, p: any) => sum + p.amount, 0) /\r\n              payments.length\r\n            : 0,\r\n        successRate:\r\n          payments.length > 0\r\n            ? (payments.filter((p: any) => p.status === 'succeeded').length /\r\n                payments.length) *\r\n              100\r\n            : 0,\r\n      };\r\n\r\n      logger.info('Estad\xEDsticas de pagos obtenidas', { metadata: { stats } });\r\n\r\n      return stats;\r\n    } catch (error) {\r\n      logger.error('Error obteniendo estad\xEDsticas de pagos', error as Error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Validar m\xE9todo de pago\r\n   */\r\n  async validatePaymentMethod(paymentData: any): Promise<boolean> {\r\n    try {\r\n      // Validaciones b\xE1sicas\r\n      if (\r\n        !paymentData.cardNumber ||\r\n        !paymentData.expiryMonth ||\r\n        !paymentData.expiryYear ||\r\n        !paymentData.cvc\r\n      ) {\r\n        return false;\r\n      }\r\n\r\n      // Validar formato de tarjeta (Luhn algorithm)\r\n      const cardNumber = paymentData.cardNumber.replace(/\\s/g, '');\r\n      if (!/^\\d{13,19}$/.test(cardNumber)) {\r\n        return false;\r\n      }\r\n\r\n      // Validar fecha de expiraci\xF3n\r\n      const now = new Date();\r\n      const expiryDate = new Date(\r\n        paymentData.expiryYear,\r\n        paymentData.expiryMonth - 1\r\n      );\r\n      if (expiryDate <= now) {\r\n        return false;\r\n      }\r\n\r\n      // Validar CVC\r\n      if (!/^\\d{3,4}$/.test(paymentData.cvc)) {\r\n        return false;\r\n      }\r\n\r\n      return true;\r\n    } catch (error) {\r\n      logger.error('Error validando m\xE9todo de pago', error as Error, {\r\n        metadata: { paymentData },\r\n      });\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Obtener gateways de pago disponibles\r\n   */\r\n  async getPaymentGateways(): Promise<PaymentGateway[]> {\r\n    try {\r\n      const gateways: PaymentGateway[] = [\r\n        {\r\n          name: 'Stripe',\r\n          isActive: true,\r\n          config: {\r\n            supportedCurrencies: ['USD', 'EUR', 'GBP'],\r\n            fees: { percentage: 2.9, fixed: 30 },\r\n          },\r\n        },\r\n        {\r\n          name: 'PayPal',\r\n          isActive: true,\r\n          config: {\r\n            supportedCurrencies: ['USD', 'EUR', 'GBP'],\r\n            fees: { percentage: 3.5, fixed: 0 },\r\n          },\r\n        },\r\n        {\r\n          name: 'MercadoPago',\r\n          isActive: false,\r\n          config: {\r\n            supportedCurrencies: ['USD', 'ARS', 'BRL'],\r\n            fees: { percentage: 3.5, fixed: 0 },\r\n          },\r\n        },\r\n      ];\r\n\r\n      return gateways.filter(gateway => gateway.isActive);\r\n    } catch (error) {\r\n      logger.error('Error obteniendo pasarelas de pago', error as Error);\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "28ed5176c6236f440c1d9af77e166dd2378d6c81"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_19681mud5a = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_19681mud5a();
var __awaiter =
/* istanbul ignore next */
(cov_19681mud5a().s[0]++,
/* istanbul ignore next */
(cov_19681mud5a().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_19681mud5a().b[0][1]++, this.__awaiter) ||
/* istanbul ignore next */
(cov_19681mud5a().b[0][2]++, function (thisArg, _arguments, P, generator) {
  /* istanbul ignore next */
  cov_19681mud5a().f[0]++;
  function adopt(value) {
    /* istanbul ignore next */
    cov_19681mud5a().f[1]++;
    cov_19681mud5a().s[1]++;
    return value instanceof P ?
    /* istanbul ignore next */
    (cov_19681mud5a().b[1][0]++, value) :
    /* istanbul ignore next */
    (cov_19681mud5a().b[1][1]++, new P(function (resolve) {
      /* istanbul ignore next */
      cov_19681mud5a().f[2]++;
      cov_19681mud5a().s[2]++;
      resolve(value);
    }));
  }
  /* istanbul ignore next */
  cov_19681mud5a().s[3]++;
  return new (
  /* istanbul ignore next */
  (cov_19681mud5a().b[2][0]++, P) ||
  /* istanbul ignore next */
  (cov_19681mud5a().b[2][1]++, P = Promise))(function (resolve, reject) {
    /* istanbul ignore next */
    cov_19681mud5a().f[3]++;
    function fulfilled(value) {
      /* istanbul ignore next */
      cov_19681mud5a().f[4]++;
      cov_19681mud5a().s[4]++;
      try {
        /* istanbul ignore next */
        cov_19681mud5a().s[5]++;
        step(generator.next(value));
      } catch (e) {
        /* istanbul ignore next */
        cov_19681mud5a().s[6]++;
        reject(e);
      }
    }
    function rejected(value) {
      /* istanbul ignore next */
      cov_19681mud5a().f[5]++;
      cov_19681mud5a().s[7]++;
      try {
        /* istanbul ignore next */
        cov_19681mud5a().s[8]++;
        step(generator["throw"](value));
      } catch (e) {
        /* istanbul ignore next */
        cov_19681mud5a().s[9]++;
        reject(e);
      }
    }
    function step(result) {
      /* istanbul ignore next */
      cov_19681mud5a().f[6]++;
      cov_19681mud5a().s[10]++;
      result.done ?
      /* istanbul ignore next */
      (cov_19681mud5a().b[3][0]++, resolve(result.value)) :
      /* istanbul ignore next */
      (cov_19681mud5a().b[3][1]++, adopt(result.value).then(fulfilled, rejected));
    }
    /* istanbul ignore next */
    cov_19681mud5a().s[11]++;
    step((generator = generator.apply(thisArg,
    /* istanbul ignore next */
    (cov_19681mud5a().b[4][0]++, _arguments) ||
    /* istanbul ignore next */
    (cov_19681mud5a().b[4][1]++, []))).next());
  });
}));
/* istanbul ignore next */
cov_19681mud5a().s[12]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_19681mud5a().s[13]++;
exports.PaymentService = void 0;
const firebase_1 =
/* istanbul ignore next */
(cov_19681mud5a().s[14]++, require("../utils/firebase"));
const loggerService_1 =
/* istanbul ignore next */
(cov_19681mud5a().s[15]++, require("./loggerService"));
class PaymentService {
  constructor() {
    /* istanbul ignore next */
    cov_19681mud5a().f[7]++;
    cov_19681mud5a().s[16]++;
    this.supportedCurrencies = ['EUR', 'USD', 'GBP'];
    /* istanbul ignore next */
    cov_19681mud5a().s[17]++;
    this.defaultCurrency = 'EUR';
  }
  /**
   * Crear un método de pago
   */
  createPaymentMethod(userEmail, paymentData) {
    /* istanbul ignore next */
    cov_19681mud5a().f[8]++;
    cov_19681mud5a().s[18]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_19681mud5a().f[9]++;
      cov_19681mud5a().s[19]++;
      try {
        /* istanbul ignore next */
        cov_19681mud5a().s[20]++;
        loggerService_1.logger.info('Creando método de pago', {
          userId: userEmail,
          metadata: {
            paymentData
          }
        });
        // En producción, esto se integraría con Stripe/PayPal
        const paymentMethod =
        /* istanbul ignore next */
        (cov_19681mud5a().s[21]++, {
          id: `pm_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,
          type: paymentData.type,
          last4: paymentData.last4,
          brand: paymentData.brand,
          expiryMonth: paymentData.expiryMonth,
          expiryYear: paymentData.expiryYear,
          isDefault:
          /* istanbul ignore next */
          (cov_19681mud5a().b[5][0]++, paymentData.isDefault) ||
          /* istanbul ignore next */
          (cov_19681mud5a().b[5][1]++, false),
          userEmail
        });
        /* istanbul ignore next */
        cov_19681mud5a().s[22]++;
        yield firebase_1.db.collection('paymentMethods').doc(paymentMethod.id).set(paymentMethod);
        // Si es el método por defecto, actualizar otros métodos
        /* istanbul ignore next */
        cov_19681mud5a().s[23]++;
        if (paymentMethod.isDefault) {
          /* istanbul ignore next */
          cov_19681mud5a().b[6][0]++;
          cov_19681mud5a().s[24]++;
          yield this.setDefaultPaymentMethod(userEmail, paymentMethod.id);
        } else
        /* istanbul ignore next */
        {
          cov_19681mud5a().b[6][1]++;
        }
        cov_19681mud5a().s[25]++;
        loggerService_1.logger.info('Método de pago creado', {
          userId: userEmail,
          metadata: {
            paymentMethodId: paymentMethod.id
          }
        });
        /* istanbul ignore next */
        cov_19681mud5a().s[26]++;
        return paymentMethod;
      } catch (error) {
        /* istanbul ignore next */
        cov_19681mud5a().s[27]++;
        loggerService_1.logger.error('Error creando método de pago', error, {
          userId: userEmail
        });
        /* istanbul ignore next */
        cov_19681mud5a().s[28]++;
        throw error;
      }
    });
  }
  /**
   * Obtener métodos de pago de un usuario
   */
  getPaymentMethods(userEmail) {
    /* istanbul ignore next */
    cov_19681mud5a().f[10]++;
    cov_19681mud5a().s[29]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_19681mud5a().f[11]++;
      cov_19681mud5a().s[30]++;
      try {
        const snapshot =
        /* istanbul ignore next */
        (cov_19681mud5a().s[31]++, yield firebase_1.db.collection('paymentMethods').where('userEmail', '==', userEmail).orderBy('isDefault', 'desc').get());
        const paymentMethods =
        /* istanbul ignore next */
        (cov_19681mud5a().s[32]++, []);
        /* istanbul ignore next */
        cov_19681mud5a().s[33]++;
        snapshot.forEach(doc => {
          /* istanbul ignore next */
          cov_19681mud5a().f[12]++;
          cov_19681mud5a().s[34]++;
          paymentMethods.push(Object.assign({
            id: doc.id
          }, doc.data()));
        });
        /* istanbul ignore next */
        cov_19681mud5a().s[35]++;
        return paymentMethods;
      } catch (error) {
        /* istanbul ignore next */
        cov_19681mud5a().s[36]++;
        loggerService_1.logger.error('Error obteniendo métodos de pago', error, {
          userId: userEmail
        });
        /* istanbul ignore next */
        cov_19681mud5a().s[37]++;
        throw error;
      }
    });
  }
  /**
   * Establecer método de pago por defecto
   */
  setDefaultPaymentMethod(userEmail, paymentMethodId) {
    /* istanbul ignore next */
    cov_19681mud5a().f[13]++;
    cov_19681mud5a().s[38]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_19681mud5a().f[14]++;
      cov_19681mud5a().s[39]++;
      try {
        const batch =
        /* istanbul ignore next */
        (cov_19681mud5a().s[40]++, firebase_1.db.batch());
        // Remover default de otros métodos
        const snapshot =
        /* istanbul ignore next */
        (cov_19681mud5a().s[41]++, yield firebase_1.db.collection('paymentMethods').where('userEmail', '==', userEmail).where('isDefault', '==', true).get());
        /* istanbul ignore next */
        cov_19681mud5a().s[42]++;
        snapshot.forEach(doc => {
          /* istanbul ignore next */
          cov_19681mud5a().f[15]++;
          cov_19681mud5a().s[43]++;
          batch.update(doc.ref, {
            isDefault: false
          });
        });
        // Establecer nuevo método por defecto
        /* istanbul ignore next */
        cov_19681mud5a().s[44]++;
        batch.update(firebase_1.db.collection('paymentMethods').doc(paymentMethodId), {
          isDefault: true
        });
        /* istanbul ignore next */
        cov_19681mud5a().s[45]++;
        yield batch.commit();
        /* istanbul ignore next */
        cov_19681mud5a().s[46]++;
        loggerService_1.logger.info('Método de pago por defecto actualizado', {
          userId: userEmail,
          metadata: {
            paymentMethodId
          }
        });
      } catch (error) {
        /* istanbul ignore next */
        cov_19681mud5a().s[47]++;
        loggerService_1.logger.error('Error estableciendo método por defecto', error, {
          userId: userEmail,
          metadata: {
            paymentMethodId
          }
        });
        /* istanbul ignore next */
        cov_19681mud5a().s[48]++;
        throw error;
      }
    });
  }
  /**
   * Crear intento de pago
   */
  createPaymentIntent(userEmail_1, amount_1) {
    /* istanbul ignore next */
    cov_19681mud5a().f[16]++;
    cov_19681mud5a().s[49]++;
    return __awaiter(this, arguments, void 0, function* (userEmail, amount, currency =
    /* istanbul ignore next */
    (cov_19681mud5a().b[7][0]++, 'EUR'), description, metadata =
    /* istanbul ignore next */
    (cov_19681mud5a().b[8][0]++, {})) {
      /* istanbul ignore next */
      cov_19681mud5a().f[17]++;
      cov_19681mud5a().s[50]++;
      try {
        /* istanbul ignore next */
        cov_19681mud5a().s[51]++;
        loggerService_1.logger.info('Creando intento de pago', {
          userId: userEmail,
          metadata: {
            amount,
            currency,
            description
          }
        });
        const paymentIntent =
        /* istanbul ignore next */
        (cov_19681mud5a().s[52]++, {
          id: `pi_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,
          amount,
          currency: this.supportedCurrencies.includes(currency) ?
          /* istanbul ignore next */
          (cov_19681mud5a().b[9][0]++, currency) :
          /* istanbul ignore next */
          (cov_19681mud5a().b[9][1]++, this.defaultCurrency),
          status: 'pending',
          paymentMethodId: '',
          userEmail,
          description,
          metadata,
          createdAt: new Date(),
          updatedAt: new Date()
        });
        /* istanbul ignore next */
        cov_19681mud5a().s[53]++;
        yield firebase_1.db.collection('paymentIntents').doc(paymentIntent.id).set(paymentIntent);
        /* istanbul ignore next */
        cov_19681mud5a().s[54]++;
        loggerService_1.logger.info('Intento de pago creado', {
          userId: userEmail,
          metadata: {
            paymentIntentId: paymentIntent.id
          }
        });
        /* istanbul ignore next */
        cov_19681mud5a().s[55]++;
        return paymentIntent;
      } catch (error) {
        /* istanbul ignore next */
        cov_19681mud5a().s[56]++;
        loggerService_1.logger.error('Error creando intento de pago', error, {
          userId: userEmail,
          metadata: {
            amount
          }
        });
        /* istanbul ignore next */
        cov_19681mud5a().s[57]++;
        throw error;
      }
    });
  }
  /**
   * Procesar pago
   */
  processPayment(paymentIntentId, paymentMethodId) {
    /* istanbul ignore next */
    cov_19681mud5a().f[18]++;
    cov_19681mud5a().s[58]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_19681mud5a().f[19]++;
      cov_19681mud5a().s[59]++;
      try {
        /* istanbul ignore next */
        cov_19681mud5a().s[60]++;
        loggerService_1.logger.info('Procesando pago', {
          metadata: {
            paymentIntentId,
            paymentMethodId
          }
        });
        // Simular procesamiento de pago
        const success =
        /* istanbul ignore next */
        (cov_19681mud5a().s[61]++, Math.random() > 0.1); // 90% de éxito
        const paymentIntentRef =
        /* istanbul ignore next */
        (cov_19681mud5a().s[62]++, firebase_1.db.collection('paymentIntents').doc(paymentIntentId));
        const paymentIntentDoc =
        /* istanbul ignore next */
        (cov_19681mud5a().s[63]++, yield paymentIntentRef.get());
        /* istanbul ignore next */
        cov_19681mud5a().s[64]++;
        if (!paymentIntentDoc.exists) {
          /* istanbul ignore next */
          cov_19681mud5a().b[10][0]++;
          cov_19681mud5a().s[65]++;
          throw new Error('Payment intent no encontrado');
        } else
        /* istanbul ignore next */
        {
          cov_19681mud5a().b[10][1]++;
        }
        const paymentIntent =
        /* istanbul ignore next */
        (cov_19681mud5a().s[66]++, paymentIntentDoc.data());
        /* istanbul ignore next */
        cov_19681mud5a().s[67]++;
        if (success) {
          /* istanbul ignore next */
          cov_19681mud5a().b[11][0]++;
          cov_19681mud5a().s[68]++;
          // Pago exitoso
          yield paymentIntentRef.update({
            status: 'succeeded',
            paymentMethodId,
            updatedAt: new Date()
          });
          // Crear factura automáticamente
          /* istanbul ignore next */
          cov_19681mud5a().s[69]++;
          yield this.createInvoiceFromPayment(Object.assign(Object.assign({}, paymentIntent), {
            status: 'succeeded',
            paymentMethodId
          }));
          /* istanbul ignore next */
          cov_19681mud5a().s[70]++;
          loggerService_1.logger.info('Pago procesado exitosamente', {
            metadata: {
              paymentIntentId,
              amount: paymentIntent.amount,
              currency: paymentIntent.currency
            }
          });
        } else {
          /* istanbul ignore next */
          cov_19681mud5a().b[11][1]++;
          cov_19681mud5a().s[71]++;
          // Pago fallido
          yield paymentIntentRef.update({
            status: 'failed',
            paymentMethodId,
            updatedAt: new Date()
          });
          /* istanbul ignore next */
          cov_19681mud5a().s[72]++;
          loggerService_1.logger.info('Pago fallido', {
            metadata: {
              paymentIntentId
            }
          });
        }
        /* istanbul ignore next */
        cov_19681mud5a().s[73]++;
        return Object.assign(Object.assign({}, paymentIntent), {
          status: success ?
          /* istanbul ignore next */
          (cov_19681mud5a().b[12][0]++, 'succeeded') :
          /* istanbul ignore next */
          (cov_19681mud5a().b[12][1]++, 'failed'),
          paymentMethodId,
          updatedAt: new Date()
        });
      } catch (error) {
        /* istanbul ignore next */
        cov_19681mud5a().s[74]++;
        loggerService_1.logger.error('Error procesando pago', error, {
          metadata: {
            paymentIntentId
          }
        });
        /* istanbul ignore next */
        cov_19681mud5a().s[75]++;
        throw error;
      }
    });
  }
  /**
   * Crear factura desde un pago
   */
  createInvoiceFromPayment(paymentIntent) {
    /* istanbul ignore next */
    cov_19681mud5a().f[20]++;
    cov_19681mud5a().s[76]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_19681mud5a().f[21]++;
      cov_19681mud5a().s[77]++;
      try {
        const invoice =
        /* istanbul ignore next */
        (cov_19681mud5a().s[78]++, {
          id: `inv_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,
          number: `INV-${Date.now()}`,
          amount: paymentIntent.amount,
          currency: paymentIntent.currency,
          status: 'paid',
          dueDate: new Date(),
          paidAt: new Date(),
          userEmail: paymentIntent.userEmail,
          eventId: paymentIntent.eventId,
          items: [{
            id: `item_${Date.now()}`,
            description: paymentIntent.description,
            quantity: 1,
            unitPrice: paymentIntent.amount,
            total: paymentIntent.amount,
            type: 'service'
          }],
          subtotal: paymentIntent.amount,
          tax: 0,
          total: paymentIntent.amount,
          createdAt: new Date(),
          updatedAt: new Date()
        });
        /* istanbul ignore next */
        cov_19681mud5a().s[79]++;
        yield firebase_1.db.collection('invoices').doc(invoice.id).set(invoice);
        /* istanbul ignore next */
        cov_19681mud5a().s[80]++;
        loggerService_1.logger.info('Factura creada desde pago', {
          metadata: {
            invoiceId: invoice.id,
            paymentIntentId: paymentIntent.id
          }
        });
        /* istanbul ignore next */
        cov_19681mud5a().s[81]++;
        return invoice;
      } catch (error) {
        /* istanbul ignore next */
        cov_19681mud5a().s[82]++;
        loggerService_1.logger.error('Error creando factura desde pago', error, {
          metadata: {
            paymentIntent
          }
        });
        /* istanbul ignore next */
        cov_19681mud5a().s[83]++;
        throw error;
      }
    });
  }
  /**
   * Crear factura manual
   */
  createInvoice(userEmail, items, dueDate, eventId) {
    /* istanbul ignore next */
    cov_19681mud5a().f[22]++;
    cov_19681mud5a().s[84]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_19681mud5a().f[23]++;
      cov_19681mud5a().s[85]++;
      try {
        /* istanbul ignore next */
        cov_19681mud5a().s[86]++;
        loggerService_1.logger.info('Creando factura manual', {
          userId: userEmail,
          metadata: {
            items,
            dueDate
          }
        });
        const subtotal =
        /* istanbul ignore next */
        (cov_19681mud5a().s[87]++, items.reduce((sum, item) => {
          /* istanbul ignore next */
          cov_19681mud5a().f[24]++;
          cov_19681mud5a().s[88]++;
          return sum + item.quantity * item.unitPrice;
        }, 0));
        const tax =
        /* istanbul ignore next */
        (cov_19681mud5a().s[89]++, subtotal * 0.16); // 16% IVA
        const total =
        /* istanbul ignore next */
        (cov_19681mud5a().s[90]++, subtotal + tax);
        const invoice =
        /* istanbul ignore next */
        (cov_19681mud5a().s[91]++, {
          id: `inv_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,
          number: `INV-${Date.now()}`,
          amount: total,
          currency: this.defaultCurrency,
          status: 'draft',
          dueDate,
          userEmail,
          eventId,
          items: items.map((item, index) => {
            /* istanbul ignore next */
            cov_19681mud5a().f[25]++;
            cov_19681mud5a().s[92]++;
            return Object.assign(Object.assign({
              id: `item_${Date.now()}_${index}`
            }, item), {
              total: item.quantity * item.unitPrice
            });
          }),
          subtotal,
          tax,
          total,
          createdAt: new Date(),
          updatedAt: new Date()
        });
        /* istanbul ignore next */
        cov_19681mud5a().s[93]++;
        yield firebase_1.db.collection('invoices').doc(invoice.id).set(invoice);
        /* istanbul ignore next */
        cov_19681mud5a().s[94]++;
        loggerService_1.logger.info('Factura manual creada', {
          userId: userEmail,
          metadata: {
            invoiceId: invoice.id
          }
        });
        /* istanbul ignore next */
        cov_19681mud5a().s[95]++;
        return invoice;
      } catch (error) {
        /* istanbul ignore next */
        cov_19681mud5a().s[96]++;
        loggerService_1.logger.error('Error creando factura manual', error, {
          userId: userEmail
        });
        /* istanbul ignore next */
        cov_19681mud5a().s[97]++;
        throw error;
      }
    });
  }
  /**
   * Obtener payment intents de un usuario
   */
  getPaymentIntents(userEmail, status) {
    /* istanbul ignore next */
    cov_19681mud5a().f[26]++;
    cov_19681mud5a().s[98]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_19681mud5a().f[27]++;
      cov_19681mud5a().s[99]++;
      try {
        let query =
        /* istanbul ignore next */
        (cov_19681mud5a().s[100]++, firebase_1.db.collection('paymentIntents').where('userEmail', '==', userEmail));
        /* istanbul ignore next */
        cov_19681mud5a().s[101]++;
        if (status) {
          /* istanbul ignore next */
          cov_19681mud5a().b[13][0]++;
          cov_19681mud5a().s[102]++;
          query = query.where('status', '==', status);
        } else
        /* istanbul ignore next */
        {
          cov_19681mud5a().b[13][1]++;
        }
        const snapshot =
        /* istanbul ignore next */
        (cov_19681mud5a().s[103]++, yield query.orderBy('createdAt', 'desc').get());
        const paymentIntents =
        /* istanbul ignore next */
        (cov_19681mud5a().s[104]++, []);
        /* istanbul ignore next */
        cov_19681mud5a().s[105]++;
        snapshot.forEach(doc => {
          /* istanbul ignore next */
          cov_19681mud5a().f[28]++;
          cov_19681mud5a().s[106]++;
          paymentIntents.push(Object.assign({
            id: doc.id
          }, doc.data()));
        });
        /* istanbul ignore next */
        cov_19681mud5a().s[107]++;
        return paymentIntents;
      } catch (error) {
        /* istanbul ignore next */
        cov_19681mud5a().s[108]++;
        loggerService_1.logger.error('Error obteniendo payment intents', error, {
          userId: userEmail
        });
        /* istanbul ignore next */
        cov_19681mud5a().s[109]++;
        throw error;
      }
    });
  }
  /**
   * Obtener facturas de un usuario
   */
  getInvoices(userEmail, status) {
    /* istanbul ignore next */
    cov_19681mud5a().f[29]++;
    cov_19681mud5a().s[110]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_19681mud5a().f[30]++;
      cov_19681mud5a().s[111]++;
      try {
        let query =
        /* istanbul ignore next */
        (cov_19681mud5a().s[112]++, firebase_1.db.collection('invoices').where('userEmail', '==', userEmail));
        /* istanbul ignore next */
        cov_19681mud5a().s[113]++;
        if (status) {
          /* istanbul ignore next */
          cov_19681mud5a().b[14][0]++;
          cov_19681mud5a().s[114]++;
          query = query.where('status', '==', status);
        } else
        /* istanbul ignore next */
        {
          cov_19681mud5a().b[14][1]++;
        }
        const snapshot =
        /* istanbul ignore next */
        (cov_19681mud5a().s[115]++, yield query.orderBy('createdAt', 'desc').get());
        const invoices =
        /* istanbul ignore next */
        (cov_19681mud5a().s[116]++, []);
        /* istanbul ignore next */
        cov_19681mud5a().s[117]++;
        snapshot.forEach(doc => {
          /* istanbul ignore next */
          cov_19681mud5a().f[31]++;
          cov_19681mud5a().s[118]++;
          invoices.push(Object.assign({
            id: doc.id
          }, doc.data()));
        });
        /* istanbul ignore next */
        cov_19681mud5a().s[119]++;
        return invoices;
      } catch (error) {
        /* istanbul ignore next */
        cov_19681mud5a().s[120]++;
        loggerService_1.logger.error('Error obteniendo facturas', error, {
          userId: userEmail
        });
        /* istanbul ignore next */
        cov_19681mud5a().s[121]++;
        throw error;
      }
    });
  }
  /**
   * Marcar factura como pagada
   */
  markInvoiceAsPaid(invoiceId, paymentMethodId) {
    /* istanbul ignore next */
    cov_19681mud5a().f[32]++;
    cov_19681mud5a().s[122]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_19681mud5a().f[33]++;
      cov_19681mud5a().s[123]++;
      try {
        /* istanbul ignore next */
        cov_19681mud5a().s[124]++;
        loggerService_1.logger.info('Marcando factura como pagada', {
          metadata: {
            invoiceId,
            paymentMethodId
          }
        });
        const invoiceRef =
        /* istanbul ignore next */
        (cov_19681mud5a().s[125]++, firebase_1.db.collection('invoices').doc(invoiceId));
        const invoiceDoc =
        /* istanbul ignore next */
        (cov_19681mud5a().s[126]++, yield invoiceRef.get());
        /* istanbul ignore next */
        cov_19681mud5a().s[127]++;
        if (!invoiceDoc.exists) {
          /* istanbul ignore next */
          cov_19681mud5a().b[15][0]++;
          cov_19681mud5a().s[128]++;
          throw new Error('Factura no encontrada');
        } else
        /* istanbul ignore next */
        {
          cov_19681mud5a().b[15][1]++;
        }
        const invoice =
        /* istanbul ignore next */
        (cov_19681mud5a().s[129]++, invoiceDoc.data());
        // Crear payment intent para la factura
        const paymentIntent =
        /* istanbul ignore next */
        (cov_19681mud5a().s[130]++, yield this.createPaymentIntent(invoice.userEmail, invoice.total, invoice.currency, `Pago de factura ${invoice.number}`, {
          invoiceId
        }));
        // Procesar el pago
        const result =
        /* istanbul ignore next */
        (cov_19681mud5a().s[131]++, yield this.processPayment(paymentIntent.id, paymentMethodId));
        /* istanbul ignore next */
        cov_19681mud5a().s[132]++;
        if (result.status === 'succeeded') {
          /* istanbul ignore next */
          cov_19681mud5a().b[16][0]++;
          cov_19681mud5a().s[133]++;
          // Actualizar factura como pagada
          yield invoiceRef.update({
            status: 'paid',
            paidAt: new Date(),
            updatedAt: new Date()
          });
          /* istanbul ignore next */
          cov_19681mud5a().s[134]++;
          loggerService_1.logger.info('Factura marcada como pagada', {
            metadata: {
              invoiceId
            }
          });
        } else
        /* istanbul ignore next */
        {
          cov_19681mud5a().b[16][1]++;
        }
        cov_19681mud5a().s[135]++;
        return Object.assign(Object.assign({}, invoice), {
          status: result.status === 'succeeded' ?
          /* istanbul ignore next */
          (cov_19681mud5a().b[17][0]++, 'paid') :
          /* istanbul ignore next */
          (cov_19681mud5a().b[17][1]++, 'sent'),
          paidAt: result.status === 'succeeded' ?
          /* istanbul ignore next */
          (cov_19681mud5a().b[18][0]++, new Date()) :
          /* istanbul ignore next */
          (cov_19681mud5a().b[18][1]++, undefined),
          updatedAt: new Date()
        });
      } catch (error) {
        /* istanbul ignore next */
        cov_19681mud5a().s[136]++;
        loggerService_1.logger.error('Error marcando factura como pagada', error, {
          metadata: {
            invoiceId
          }
        });
        /* istanbul ignore next */
        cov_19681mud5a().s[137]++;
        throw error;
      }
    });
  }
  /**
   * Procesar reembolso
   */
  processRefund(paymentIntentId, amount, reason) {
    /* istanbul ignore next */
    cov_19681mud5a().f[34]++;
    cov_19681mud5a().s[138]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_19681mud5a().f[35]++;
      cov_19681mud5a().s[139]++;
      try {
        /* istanbul ignore next */
        cov_19681mud5a().s[140]++;
        loggerService_1.logger.info('Procesando reembolso', {
          metadata: {
            paymentIntentId,
            amount,
            reason
          }
        });
        // Verificar que el payment intent existe y fue exitoso
        const paymentIntentDoc =
        /* istanbul ignore next */
        (cov_19681mud5a().s[141]++, yield firebase_1.db.collection('paymentIntents').doc(paymentIntentId).get());
        /* istanbul ignore next */
        cov_19681mud5a().s[142]++;
        if (!paymentIntentDoc.exists) {
          /* istanbul ignore next */
          cov_19681mud5a().b[19][0]++;
          cov_19681mud5a().s[143]++;
          throw new Error('Payment intent no encontrado');
        } else
        /* istanbul ignore next */
        {
          cov_19681mud5a().b[19][1]++;
        }
        const paymentIntent =
        /* istanbul ignore next */
        (cov_19681mud5a().s[144]++, paymentIntentDoc.data());
        /* istanbul ignore next */
        cov_19681mud5a().s[145]++;
        if (paymentIntent.status !== 'succeeded') {
          /* istanbul ignore next */
          cov_19681mud5a().b[20][0]++;
          cov_19681mud5a().s[146]++;
          throw new Error('Solo se pueden reembolsar pagos exitosos');
        } else
        /* istanbul ignore next */
        {
          cov_19681mud5a().b[20][1]++;
        }
        cov_19681mud5a().s[147]++;
        if (amount > paymentIntent.amount) {
          /* istanbul ignore next */
          cov_19681mud5a().b[21][0]++;
          cov_19681mud5a().s[148]++;
          throw new Error('El monto del reembolso no puede ser mayor al pago original');
        } else
        /* istanbul ignore next */
        {
          cov_19681mud5a().b[21][1]++;
        }
        // Simular procesamiento de reembolso
        const success =
        /* istanbul ignore next */
        (cov_19681mud5a().s[149]++, Math.random() > 0.05); // 95% de éxito
        const refund =
        /* istanbul ignore next */
        (cov_19681mud5a().s[150]++, {
          id: `ref_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,
          paymentIntentId,
          amount,
          reason,
          status: success ?
          /* istanbul ignore next */
          (cov_19681mud5a().b[22][0]++, 'succeeded') :
          /* istanbul ignore next */
          (cov_19681mud5a().b[22][1]++, 'failed'),
          createdAt: new Date()
        });
        /* istanbul ignore next */
        cov_19681mud5a().s[151]++;
        yield firebase_1.db.collection('refunds').doc(refund.id).set(refund);
        /* istanbul ignore next */
        cov_19681mud5a().s[152]++;
        if (success) {
          /* istanbul ignore next */
          cov_19681mud5a().b[23][0]++;
          cov_19681mud5a().s[153]++;
          // Actualizar payment intent
          yield firebase_1.db.collection('paymentIntents').doc(paymentIntentId).update({
            status: 'cancelled',
            updatedAt: new Date()
          });
        } else
        /* istanbul ignore next */
        {
          cov_19681mud5a().b[23][1]++;
        }
        cov_19681mud5a().s[154]++;
        loggerService_1.logger.info('Reembolso procesado', {
          metadata: {
            refundId: refund.id,
            amount
          }
        });
        /* istanbul ignore next */
        cov_19681mud5a().s[155]++;
        return refund;
      } catch (error) {
        /* istanbul ignore next */
        cov_19681mud5a().s[156]++;
        loggerService_1.logger.error('Error procesando reembolso', error, {
          metadata: {
            paymentIntentId
          }
        });
        /* istanbul ignore next */
        cov_19681mud5a().s[157]++;
        throw error;
      }
    });
  }
  /**
   * Obtener estadísticas de pagos
   */
  getPaymentStats(userId, period) {
    /* istanbul ignore next */
    cov_19681mud5a().f[36]++;
    cov_19681mud5a().s[158]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_19681mud5a().f[37]++;
      cov_19681mud5a().s[159]++;
      try {
        /* istanbul ignore next */
        cov_19681mud5a().s[160]++;
        loggerService_1.logger.info('Obteniendo estadísticas de pagos', {
          metadata: {
            userId,
            period
          }
        });
        const now =
        /* istanbul ignore next */
        (cov_19681mud5a().s[161]++, new Date());
        let startDate =
        /* istanbul ignore next */
        (cov_19681mud5a().s[162]++, new Date(now.getFullYear(), now.getMonth(), 1)); // Inicio del mes
        /* istanbul ignore next */
        cov_19681mud5a().s[163]++;
        if (period === 'week') {
          /* istanbul ignore next */
          cov_19681mud5a().b[24][0]++;
          cov_19681mud5a().s[164]++;
          startDate = new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000);
        } else {
          /* istanbul ignore next */
          cov_19681mud5a().b[24][1]++;
          cov_19681mud5a().s[165]++;
          if (period === 'month') {
            /* istanbul ignore next */
            cov_19681mud5a().b[25][0]++;
            cov_19681mud5a().s[166]++;
            startDate = new Date(now.getFullYear(), now.getMonth() - 1, now.getDate());
          } else {
            /* istanbul ignore next */
            cov_19681mud5a().b[25][1]++;
            cov_19681mud5a().s[167]++;
            if (period === 'year') {
              /* istanbul ignore next */
              cov_19681mud5a().b[26][0]++;
              cov_19681mud5a().s[168]++;
              startDate = new Date(now.getFullYear(), 0, 1);
            } else
            /* istanbul ignore next */
            {
              cov_19681mud5a().b[26][1]++;
            }
          }
        }
        // Estadísticas de payment intents
        let paymentQuery =
        /* istanbul ignore next */
        (cov_19681mud5a().s[169]++, firebase_1.db.collection('paymentIntents').where('createdAt', '>=', startDate));
        /* istanbul ignore next */
        cov_19681mud5a().s[170]++;
        if (userId) {
          /* istanbul ignore next */
          cov_19681mud5a().b[27][0]++;
          cov_19681mud5a().s[171]++;
          paymentQuery = paymentQuery.where('userId', '==', userId);
        } else
        /* istanbul ignore next */
        {
          cov_19681mud5a().b[27][1]++;
        }
        const paymentSnapshot =
        /* istanbul ignore next */
        (cov_19681mud5a().s[172]++, yield paymentQuery.get());
        const payments =
        /* istanbul ignore next */
        (cov_19681mud5a().s[173]++, paymentSnapshot.docs.map(doc => {
          /* istanbul ignore next */
          cov_19681mud5a().f[38]++;
          cov_19681mud5a().s[174]++;
          return doc.data();
        }));
        // Estadísticas de facturas
        let invoiceQuery =
        /* istanbul ignore next */
        (cov_19681mud5a().s[175]++, firebase_1.db.collection('invoices').where('createdAt', '>=', startDate));
        /* istanbul ignore next */
        cov_19681mud5a().s[176]++;
        if (userId) {
          /* istanbul ignore next */
          cov_19681mud5a().b[28][0]++;
          cov_19681mud5a().s[177]++;
          invoiceQuery = invoiceQuery.where('userId', '==', userId);
        } else
        /* istanbul ignore next */
        {
          cov_19681mud5a().b[28][1]++;
        }
        const invoiceSnapshot =
        /* istanbul ignore next */
        (cov_19681mud5a().s[178]++, yield invoiceQuery.get());
        const invoices =
        /* istanbul ignore next */
        (cov_19681mud5a().s[179]++, invoiceSnapshot.docs.map(doc => {
          /* istanbul ignore next */
          cov_19681mud5a().f[39]++;
          cov_19681mud5a().s[180]++;
          return doc.data();
        }));
        // Estadísticas de reembolsos
        const refundQuery =
        /* istanbul ignore next */
        (cov_19681mud5a().s[181]++, firebase_1.db.collection('refunds').where('createdAt', '>=', startDate));
        const refundSnapshot =
        /* istanbul ignore next */
        (cov_19681mud5a().s[182]++, yield refundQuery.get());
        const refunds =
        /* istanbul ignore next */
        (cov_19681mud5a().s[183]++, refundSnapshot.docs.map(doc => {
          /* istanbul ignore next */
          cov_19681mud5a().f[40]++;
          cov_19681mud5a().s[184]++;
          return doc.data();
        }));
        const stats =
        /* istanbul ignore next */
        (cov_19681mud5a().s[185]++, {
          totalRevenue: payments.filter(p => {
            /* istanbul ignore next */
            cov_19681mud5a().f[41]++;
            cov_19681mud5a().s[186]++;
            return p.status === 'succeeded';
          }).reduce((sum, p) => {
            /* istanbul ignore next */
            cov_19681mud5a().f[42]++;
            cov_19681mud5a().s[187]++;
            return sum + p.amount;
          }, 0),
          totalTransactions: payments.length,
          successfulTransactions: payments.filter(p => {
            /* istanbul ignore next */
            cov_19681mud5a().f[43]++;
            cov_19681mud5a().s[188]++;
            return p.status === 'succeeded';
          }).length,
          failedTransactions: payments.filter(p => {
            /* istanbul ignore next */
            cov_19681mud5a().f[44]++;
            cov_19681mud5a().s[189]++;
            return p.status === 'failed';
          }).length,
          totalInvoices: invoices.length,
          paidInvoices: invoices.filter(i => {
            /* istanbul ignore next */
            cov_19681mud5a().f[45]++;
            cov_19681mud5a().s[190]++;
            return i.status === 'paid';
          }).length,
          totalRefunds: refunds.length,
          refundAmount: refunds.filter(r => {
            /* istanbul ignore next */
            cov_19681mud5a().f[46]++;
            cov_19681mud5a().s[191]++;
            return r.status === 'succeeded';
          }).reduce((sum, r) => {
            /* istanbul ignore next */
            cov_19681mud5a().f[47]++;
            cov_19681mud5a().s[192]++;
            return sum + r.amount;
          }, 0),
          averageTransaction: payments.length > 0 ?
          /* istanbul ignore next */
          (cov_19681mud5a().b[29][0]++, payments.reduce((sum, p) => {
            /* istanbul ignore next */
            cov_19681mud5a().f[48]++;
            cov_19681mud5a().s[193]++;
            return sum + p.amount;
          }, 0) / payments.length) :
          /* istanbul ignore next */
          (cov_19681mud5a().b[29][1]++, 0),
          successRate: payments.length > 0 ?
          /* istanbul ignore next */
          (cov_19681mud5a().b[30][0]++, payments.filter(p => {
            /* istanbul ignore next */
            cov_19681mud5a().f[49]++;
            cov_19681mud5a().s[194]++;
            return p.status === 'succeeded';
          }).length / payments.length * 100) :
          /* istanbul ignore next */
          (cov_19681mud5a().b[30][1]++, 0)
        });
        /* istanbul ignore next */
        cov_19681mud5a().s[195]++;
        loggerService_1.logger.info('Estadísticas de pagos obtenidas', {
          metadata: {
            stats
          }
        });
        /* istanbul ignore next */
        cov_19681mud5a().s[196]++;
        return stats;
      } catch (error) {
        /* istanbul ignore next */
        cov_19681mud5a().s[197]++;
        loggerService_1.logger.error('Error obteniendo estadísticas de pagos', error);
        /* istanbul ignore next */
        cov_19681mud5a().s[198]++;
        throw error;
      }
    });
  }
  /**
   * Validar método de pago
   */
  validatePaymentMethod(paymentData) {
    /* istanbul ignore next */
    cov_19681mud5a().f[50]++;
    cov_19681mud5a().s[199]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_19681mud5a().f[51]++;
      cov_19681mud5a().s[200]++;
      try {
        /* istanbul ignore next */
        cov_19681mud5a().s[201]++;
        // Validaciones básicas
        if (
        /* istanbul ignore next */
        (cov_19681mud5a().b[32][0]++, !paymentData.cardNumber) ||
        /* istanbul ignore next */
        (cov_19681mud5a().b[32][1]++, !paymentData.expiryMonth) ||
        /* istanbul ignore next */
        (cov_19681mud5a().b[32][2]++, !paymentData.expiryYear) ||
        /* istanbul ignore next */
        (cov_19681mud5a().b[32][3]++, !paymentData.cvc)) {
          /* istanbul ignore next */
          cov_19681mud5a().b[31][0]++;
          cov_19681mud5a().s[202]++;
          return false;
        } else
        /* istanbul ignore next */
        {
          cov_19681mud5a().b[31][1]++;
        }
        // Validar formato de tarjeta (Luhn algorithm)
        const cardNumber =
        /* istanbul ignore next */
        (cov_19681mud5a().s[203]++, paymentData.cardNumber.replace(/\s/g, ''));
        /* istanbul ignore next */
        cov_19681mud5a().s[204]++;
        if (!/^\d{13,19}$/.test(cardNumber)) {
          /* istanbul ignore next */
          cov_19681mud5a().b[33][0]++;
          cov_19681mud5a().s[205]++;
          return false;
        } else
        /* istanbul ignore next */
        {
          cov_19681mud5a().b[33][1]++;
        }
        // Validar fecha de expiración
        const now =
        /* istanbul ignore next */
        (cov_19681mud5a().s[206]++, new Date());
        const expiryDate =
        /* istanbul ignore next */
        (cov_19681mud5a().s[207]++, new Date(paymentData.expiryYear, paymentData.expiryMonth - 1));
        /* istanbul ignore next */
        cov_19681mud5a().s[208]++;
        if (expiryDate <= now) {
          /* istanbul ignore next */
          cov_19681mud5a().b[34][0]++;
          cov_19681mud5a().s[209]++;
          return false;
        } else
        /* istanbul ignore next */
        {
          cov_19681mud5a().b[34][1]++;
        }
        // Validar CVC
        cov_19681mud5a().s[210]++;
        if (!/^\d{3,4}$/.test(paymentData.cvc)) {
          /* istanbul ignore next */
          cov_19681mud5a().b[35][0]++;
          cov_19681mud5a().s[211]++;
          return false;
        } else
        /* istanbul ignore next */
        {
          cov_19681mud5a().b[35][1]++;
        }
        cov_19681mud5a().s[212]++;
        return true;
      } catch (error) {
        /* istanbul ignore next */
        cov_19681mud5a().s[213]++;
        loggerService_1.logger.error('Error validando método de pago', error, {
          metadata: {
            paymentData
          }
        });
        /* istanbul ignore next */
        cov_19681mud5a().s[214]++;
        return false;
      }
    });
  }
  /**
   * Obtener gateways de pago disponibles
   */
  getPaymentGateways() {
    /* istanbul ignore next */
    cov_19681mud5a().f[52]++;
    cov_19681mud5a().s[215]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_19681mud5a().f[53]++;
      cov_19681mud5a().s[216]++;
      try {
        const gateways =
        /* istanbul ignore next */
        (cov_19681mud5a().s[217]++, [{
          name: 'Stripe',
          isActive: true,
          config: {
            supportedCurrencies: ['USD', 'EUR', 'GBP'],
            fees: {
              percentage: 2.9,
              fixed: 30
            }
          }
        }, {
          name: 'PayPal',
          isActive: true,
          config: {
            supportedCurrencies: ['USD', 'EUR', 'GBP'],
            fees: {
              percentage: 3.5,
              fixed: 0
            }
          }
        }, {
          name: 'MercadoPago',
          isActive: false,
          config: {
            supportedCurrencies: ['USD', 'ARS', 'BRL'],
            fees: {
              percentage: 3.5,
              fixed: 0
            }
          }
        }]);
        /* istanbul ignore next */
        cov_19681mud5a().s[218]++;
        return gateways.filter(gateway => {
          /* istanbul ignore next */
          cov_19681mud5a().f[54]++;
          cov_19681mud5a().s[219]++;
          return gateway.isActive;
        });
      } catch (error) {
        /* istanbul ignore next */
        cov_19681mud5a().s[220]++;
        loggerService_1.logger.error('Error obteniendo pasarelas de pago', error);
        /* istanbul ignore next */
        cov_19681mud5a().s[221]++;
        throw error;
      }
    });
  }
}
/* istanbul ignore next */
cov_19681mud5a().s[222]++;
exports.PaymentService = PaymentService;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,