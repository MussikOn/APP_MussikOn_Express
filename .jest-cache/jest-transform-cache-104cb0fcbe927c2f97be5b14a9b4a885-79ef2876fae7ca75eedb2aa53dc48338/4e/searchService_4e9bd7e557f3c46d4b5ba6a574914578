fba633bc30ceea897ef7a6f5c7e5fec9
"use strict";

/* istanbul ignore next */
function cov_1snnq0w0d9() {
  var path = "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\services\\searchService.ts";
  var hash = "cfed54752291cc65b88bd728a374cd0fde544f83";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\services\\searchService.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 16
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 28
        },
        end: {
          line: 3,
          column: 110
        }
      },
      "2": {
        start: {
          line: 3,
          column: 91
        },
        end: {
          line: 3,
          column: 106
        }
      },
      "3": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "4": {
        start: {
          line: 5,
          column: 36
        },
        end: {
          line: 5,
          column: 97
        }
      },
      "5": {
        start: {
          line: 5,
          column: 42
        },
        end: {
          line: 5,
          column: 70
        }
      },
      "6": {
        start: {
          line: 5,
          column: 85
        },
        end: {
          line: 5,
          column: 95
        }
      },
      "7": {
        start: {
          line: 6,
          column: 35
        },
        end: {
          line: 6,
          column: 100
        }
      },
      "8": {
        start: {
          line: 6,
          column: 41
        },
        end: {
          line: 6,
          column: 73
        }
      },
      "9": {
        start: {
          line: 6,
          column: 88
        },
        end: {
          line: 6,
          column: 98
        }
      },
      "10": {
        start: {
          line: 7,
          column: 32
        },
        end: {
          line: 7,
          column: 116
        }
      },
      "11": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 78
        }
      },
      "12": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 62
        }
      },
      "13": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 55
        }
      },
      "14": {
        start: {
          line: 13,
          column: 19
        },
        end: {
          line: 13,
          column: 47
        }
      },
      "15": {
        start: {
          line: 14,
          column: 24
        },
        end: {
          line: 14,
          column: 60
        }
      },
      "16": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 84,
          column: 11
        }
      },
      "17": {
        start: {
          line: 21,
          column: 12
        },
        end: {
          line: 83,
          column: 13
        }
      },
      "18": {
        start: {
          line: 22,
          column: 28
        },
        end: {
          line: 22,
          column: 62
        }
      },
      "19": {
        start: {
          line: 24,
          column: 16
        },
        end: {
          line: 26,
          column: 17
        }
      },
      "20": {
        start: {
          line: 25,
          column: 20
        },
        end: {
          line: 25,
          column: 72
        }
      },
      "21": {
        start: {
          line: 27,
          column: 16
        },
        end: {
          line: 29,
          column: 17
        }
      },
      "22": {
        start: {
          line: 28,
          column: 20
        },
        end: {
          line: 28,
          column: 78
        }
      },
      "23": {
        start: {
          line: 30,
          column: 16
        },
        end: {
          line: 32,
          column: 17
        }
      },
      "24": {
        start: {
          line: 31,
          column: 20
        },
        end: {
          line: 31,
          column: 80
        }
      },
      "25": {
        start: {
          line: 33,
          column: 16
        },
        end: {
          line: 35,
          column: 17
        }
      },
      "26": {
        start: {
          line: 34,
          column: 20
        },
        end: {
          line: 34,
          column: 72
        }
      },
      "27": {
        start: {
          line: 36,
          column: 16
        },
        end: {
          line: 38,
          column: 17
        }
      },
      "28": {
        start: {
          line: 37,
          column: 20
        },
        end: {
          line: 37,
          column: 70
        }
      },
      "29": {
        start: {
          line: 40,
          column: 30
        },
        end: {
          line: 40,
          column: 49
        }
      },
      "30": {
        start: {
          line: 41,
          column: 16
        },
        end: {
          line: 41,
          column: 43
        }
      },
      "31": {
        start: {
          line: 42,
          column: 16
        },
        end: {
          line: 45,
          column: 17
        }
      },
      "32": {
        start: {
          line: 43,
          column: 34
        },
        end: {
          line: 43,
          column: 78
        }
      },
      "33": {
        start: {
          line: 44,
          column: 20
        },
        end: {
          line: 44,
          column: 65
        }
      },
      "34": {
        start: {
          line: 46,
          column: 33
        },
        end: {
          line: 46,
          column: 50
        }
      },
      "35": {
        start: {
          line: 47,
          column: 31
        },
        end: {
          line: 47,
          column: 69
        }
      },
      "36": {
        start: {
          line: 47,
          column: 58
        },
        end: {
          line: 47,
          column: 68
        }
      },
      "37": {
        start: {
          line: 49,
          column: 37
        },
        end: {
          line: 49,
          column: 43
        }
      },
      "38": {
        start: {
          line: 50,
          column: 16
        },
        end: {
          line: 61,
          column: 17
        }
      },
      "39": {
        start: {
          line: 51,
          column: 39
        },
        end: {
          line: 51,
          column: 66
        }
      },
      "40": {
        start: {
          line: 52,
          column: 20
        },
        end: {
          line: 60,
          column: 23
        }
      },
      "41": {
        start: {
          line: 54,
          column: 46
        },
        end: {
          line: 56,
          column: 25
        }
      },
      "42": {
        start: {
          line: 55,
          column: 28
        },
        end: {
          line: 55,
          column: 105
        }
      },
      "43": {
        start: {
          line: 57,
          column: 24
        },
        end: {
          line: 59,
          column: 58
        }
      },
      "44": {
        start: {
          line: 63,
          column: 16
        },
        end: {
          line: 71,
          column: 17
        }
      },
      "45": {
        start: {
          line: 64,
          column: 20
        },
        end: {
          line: 70,
          column: 23
        }
      },
      "46": {
        start: {
          line: 66,
          column: 44
        },
        end: {
          line: 66,
          column: 75
        }
      },
      "47": {
        start: {
          line: 67,
          column: 42
        },
        end: {
          line: 67,
          column: 114
        }
      },
      "48": {
        start: {
          line: 68,
          column: 42
        },
        end: {
          line: 68,
          column: 121
        }
      },
      "49": {
        start: {
          line: 69,
          column: 24
        },
        end: {
          line: 69,
          column: 84
        }
      },
      "50": {
        start: {
          line: 72,
          column: 16
        },
        end: {
          line: 78,
          column: 18
        }
      },
      "51": {
        start: {
          line: 81,
          column: 16
        },
        end: {
          line: 81,
          column: 85
        }
      },
      "52": {
        start: {
          line: 82,
          column: 16
        },
        end: {
          line: 82,
          column: 59
        }
      },
      "53": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 154,
          column: 11
        }
      },
      "54": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 153,
          column: 13
        }
      },
      "55": {
        start: {
          line: 92,
          column: 28
        },
        end: {
          line: 92,
          column: 72
        }
      },
      "56": {
        start: {
          line: 94,
          column: 16
        },
        end: {
          line: 96,
          column: 17
        }
      },
      "57": {
        start: {
          line: 95,
          column: 20
        },
        end: {
          line: 95,
          column: 72
        }
      },
      "58": {
        start: {
          line: 97,
          column: 16
        },
        end: {
          line: 99,
          column: 17
        }
      },
      "59": {
        start: {
          line: 98,
          column: 20
        },
        end: {
          line: 98,
          column: 78
        }
      },
      "60": {
        start: {
          line: 100,
          column: 16
        },
        end: {
          line: 102,
          column: 17
        }
      },
      "61": {
        start: {
          line: 101,
          column: 20
        },
        end: {
          line: 101,
          column: 80
        }
      },
      "62": {
        start: {
          line: 103,
          column: 16
        },
        end: {
          line: 105,
          column: 17
        }
      },
      "63": {
        start: {
          line: 104,
          column: 20
        },
        end: {
          line: 104,
          column: 72
        }
      },
      "64": {
        start: {
          line: 106,
          column: 16
        },
        end: {
          line: 108,
          column: 17
        }
      },
      "65": {
        start: {
          line: 107,
          column: 20
        },
        end: {
          line: 107,
          column: 70
        }
      },
      "66": {
        start: {
          line: 110,
          column: 30
        },
        end: {
          line: 110,
          column: 49
        }
      },
      "67": {
        start: {
          line: 111,
          column: 16
        },
        end: {
          line: 111,
          column: 43
        }
      },
      "68": {
        start: {
          line: 112,
          column: 16
        },
        end: {
          line: 115,
          column: 17
        }
      },
      "69": {
        start: {
          line: 113,
          column: 34
        },
        end: {
          line: 113,
          column: 78
        }
      },
      "70": {
        start: {
          line: 114,
          column: 20
        },
        end: {
          line: 114,
          column: 65
        }
      },
      "71": {
        start: {
          line: 116,
          column: 33
        },
        end: {
          line: 116,
          column: 50
        }
      },
      "72": {
        start: {
          line: 117,
          column: 33
        },
        end: {
          line: 117,
          column: 71
        }
      },
      "73": {
        start: {
          line: 117,
          column: 60
        },
        end: {
          line: 117,
          column: 70
        }
      },
      "74": {
        start: {
          line: 119,
          column: 39
        },
        end: {
          line: 119,
          column: 47
        }
      },
      "75": {
        start: {
          line: 120,
          column: 16
        },
        end: {
          line: 131,
          column: 17
        }
      },
      "76": {
        start: {
          line: 121,
          column: 39
        },
        end: {
          line: 121,
          column: 66
        }
      },
      "77": {
        start: {
          line: 122,
          column: 20
        },
        end: {
          line: 130,
          column: 23
        }
      },
      "78": {
        start: {
          line: 124,
          column: 46
        },
        end: {
          line: 126,
          column: 25
        }
      },
      "79": {
        start: {
          line: 125,
          column: 28
        },
        end: {
          line: 125,
          column: 105
        }
      },
      "80": {
        start: {
          line: 127,
          column: 24
        },
        end: {
          line: 129,
          column: 65
        }
      },
      "81": {
        start: {
          line: 133,
          column: 16
        },
        end: {
          line: 141,
          column: 17
        }
      },
      "82": {
        start: {
          line: 134,
          column: 20
        },
        end: {
          line: 140,
          column: 23
        }
      },
      "83": {
        start: {
          line: 136,
          column: 46
        },
        end: {
          line: 136,
          column: 65
        }
      },
      "84": {
        start: {
          line: 137,
          column: 42
        },
        end: {
          line: 137,
          column: 114
        }
      },
      "85": {
        start: {
          line: 138,
          column: 42
        },
        end: {
          line: 138,
          column: 121
        }
      },
      "86": {
        start: {
          line: 139,
          column: 24
        },
        end: {
          line: 139,
          column: 88
        }
      },
      "87": {
        start: {
          line: 142,
          column: 16
        },
        end: {
          line: 148,
          column: 18
        }
      },
      "88": {
        start: {
          line: 151,
          column: 16
        },
        end: {
          line: 151,
          column: 89
        }
      },
      "89": {
        start: {
          line: 152,
          column: 16
        },
        end: {
          line: 152,
          column: 74
        }
      },
      "90": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 202,
          column: 11
        }
      },
      "91": {
        start: {
          line: 161,
          column: 12
        },
        end: {
          line: 201,
          column: 13
        }
      },
      "92": {
        start: {
          line: 162,
          column: 28
        },
        end: {
          line: 162,
          column: 61
        }
      },
      "93": {
        start: {
          line: 164,
          column: 16
        },
        end: {
          line: 166,
          column: 17
        }
      },
      "94": {
        start: {
          line: 165,
          column: 20
        },
        end: {
          line: 165,
          column: 72
        }
      },
      "95": {
        start: {
          line: 168,
          column: 30
        },
        end: {
          line: 168,
          column: 49
        }
      },
      "96": {
        start: {
          line: 169,
          column: 16
        },
        end: {
          line: 169,
          column: 43
        }
      },
      "97": {
        start: {
          line: 170,
          column: 16
        },
        end: {
          line: 173,
          column: 17
        }
      },
      "98": {
        start: {
          line: 171,
          column: 34
        },
        end: {
          line: 171,
          column: 78
        }
      },
      "99": {
        start: {
          line: 172,
          column: 20
        },
        end: {
          line: 172,
          column: 65
        }
      },
      "100": {
        start: {
          line: 174,
          column: 33
        },
        end: {
          line: 174,
          column: 50
        }
      },
      "101": {
        start: {
          line: 175,
          column: 30
        },
        end: {
          line: 175,
          column: 68
        }
      },
      "102": {
        start: {
          line: 175,
          column: 57
        },
        end: {
          line: 175,
          column: 67
        }
      },
      "103": {
        start: {
          line: 177,
          column: 36
        },
        end: {
          line: 177,
          column: 41
        }
      },
      "104": {
        start: {
          line: 178,
          column: 16
        },
        end: {
          line: 189,
          column: 17
        }
      },
      "105": {
        start: {
          line: 179,
          column: 39
        },
        end: {
          line: 179,
          column: 66
        }
      },
      "106": {
        start: {
          line: 180,
          column: 20
        },
        end: {
          line: 188,
          column: 23
        }
      },
      "107": {
        start: {
          line: 182,
          column: 46
        },
        end: {
          line: 184,
          column: 25
        }
      },
      "108": {
        start: {
          line: 183,
          column: 28
        },
        end: {
          line: 183,
          column: 105
        }
      },
      "109": {
        start: {
          line: 185,
          column: 24
        },
        end: {
          line: 187,
          column: 59
        }
      },
      "110": {
        start: {
          line: 190,
          column: 16
        },
        end: {
          line: 196,
          column: 18
        }
      },
      "111": {
        start: {
          line: 199,
          column: 16
        },
        end: {
          line: 199,
          column: 86
        }
      },
      "112": {
        start: {
          line: 200,
          column: 16
        },
        end: {
          line: 200,
          column: 60
        }
      },
      "113": {
        start: {
          line: 208,
          column: 8
        },
        end: {
          line: 225,
          column: 11
        }
      },
      "114": {
        start: {
          line: 209,
          column: 12
        },
        end: {
          line: 224,
          column: 13
        }
      },
      "115": {
        start: {
          line: 210,
          column: 68
        },
        end: {
          line: 214,
          column: 18
        }
      },
      "116": {
        start: {
          line: 215,
          column: 16
        },
        end: {
          line: 219,
          column: 18
        }
      },
      "117": {
        start: {
          line: 222,
          column: 16
        },
        end: {
          line: 222,
          column: 81
        }
      },
      "118": {
        start: {
          line: 223,
          column: 16
        },
        end: {
          line: 223,
          column: 69
        }
      },
      "119": {
        start: {
          line: 231,
          column: 8
        },
        end: {
          line: 245,
          column: 11
        }
      },
      "120": {
        start: {
          line: 232,
          column: 12
        },
        end: {
          line: 244,
          column: 13
        }
      },
      "121": {
        start: {
          line: 234,
          column: 37
        },
        end: {
          line: 234,
          column: 74
        }
      },
      "122": {
        start: {
          line: 235,
          column: 39
        },
        end: {
          line: 235,
          column: 86
        }
      },
      "123": {
        start: {
          line: 236,
          column: 16
        },
        end: {
          line: 239,
          column: 18
        }
      },
      "124": {
        start: {
          line: 242,
          column: 16
        },
        end: {
          line: 242,
          column: 88
        }
      },
      "125": {
        start: {
          line: 243,
          column: 16
        },
        end: {
          line: 243,
          column: 65
        }
      },
      "126": {
        start: {
          line: 251,
          column: 8
        },
        end: {
          line: 267,
          column: 11
        }
      },
      "127": {
        start: {
          line: 252,
          column: 12
        },
        end: {
          line: 266,
          column: 13
        }
      },
      "128": {
        start: {
          line: 253,
          column: 41
        },
        end: {
          line: 253,
          column: 114
        }
      },
      "129": {
        start: {
          line: 254,
          column: 31
        },
        end: {
          line: 254,
          column: 72
        }
      },
      "130": {
        start: {
          line: 256,
          column: 39
        },
        end: {
          line: 260,
          column: 18
        }
      },
      "131": {
        start: {
          line: 258,
          column: 20
        },
        end: {
          line: 259,
          column: 121
        }
      },
      "132": {
        start: {
          line: 261,
          column: 16
        },
        end: {
          line: 261,
          column: 120
        }
      },
      "133": {
        start: {
          line: 264,
          column: 16
        },
        end: {
          line: 264,
          column: 97
        }
      },
      "134": {
        start: {
          line: 265,
          column: 16
        },
        end: {
          line: 265,
          column: 71
        }
      },
      "135": {
        start: {
          line: 273,
          column: 8
        },
        end: {
          line: 285,
          column: 11
        }
      },
      "136": {
        start: {
          line: 274,
          column: 12
        },
        end: {
          line: 284,
          column: 13
        }
      },
      "137": {
        start: {
          line: 275,
          column: 40
        },
        end: {
          line: 275,
          column: 105
        }
      },
      "138": {
        start: {
          line: 276,
          column: 31
        },
        end: {
          line: 276,
          column: 70
        }
      },
      "139": {
        start: {
          line: 279,
          column: 16
        },
        end: {
          line: 279,
          column: 30
        }
      },
      "140": {
        start: {
          line: 282,
          column: 16
        },
        end: {
          line: 282,
          column: 97
        }
      },
      "141": {
        start: {
          line: 283,
          column: 16
        },
        end: {
          line: 283,
          column: 71
        }
      },
      "142": {
        start: {
          line: 288,
          column: 0
        },
        end: {
          line: 288,
          column: 38
        }
      },
      "143": {
        start: {
          line: 289,
          column: 0
        },
        end: {
          line: 289,
          column: 44
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 2,
            column: 45
          }
        },
        loc: {
          start: {
            line: 2,
            column: 89
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "adopt",
        decl: {
          start: {
            line: 3,
            column: 13
          },
          end: {
            line: 3,
            column: 18
          }
        },
        loc: {
          start: {
            line: 3,
            column: 26
          },
          end: {
            line: 3,
            column: 112
          }
        },
        line: 3
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 3,
            column: 70
          },
          end: {
            line: 3,
            column: 71
          }
        },
        loc: {
          start: {
            line: 3,
            column: 89
          },
          end: {
            line: 3,
            column: 108
          }
        },
        line: 3
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 4,
            column: 36
          },
          end: {
            line: 4,
            column: 37
          }
        },
        loc: {
          start: {
            line: 4,
            column: 63
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 4
      },
      "4": {
        name: "fulfilled",
        decl: {
          start: {
            line: 5,
            column: 17
          },
          end: {
            line: 5,
            column: 26
          }
        },
        loc: {
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 99
          }
        },
        line: 5
      },
      "5": {
        name: "rejected",
        decl: {
          start: {
            line: 6,
            column: 17
          },
          end: {
            line: 6,
            column: 25
          }
        },
        loc: {
          start: {
            line: 6,
            column: 33
          },
          end: {
            line: 6,
            column: 102
          }
        },
        line: 6
      },
      "6": {
        name: "step",
        decl: {
          start: {
            line: 7,
            column: 17
          },
          end: {
            line: 7,
            column: 21
          }
        },
        loc: {
          start: {
            line: 7,
            column: 30
          },
          end: {
            line: 7,
            column: 118
          }
        },
        line: 7
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 26
          },
          end: {
            line: 85,
            column: 5
          }
        },
        line: 19
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 20,
            column: 47
          },
          end: {
            line: 20,
            column: 48
          }
        },
        loc: {
          start: {
            line: 20,
            column: 60
          },
          end: {
            line: 84,
            column: 9
          }
        },
        line: 20
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 47,
            column: 49
          },
          end: {
            line: 47,
            column: 50
          }
        },
        loc: {
          start: {
            line: 47,
            column: 58
          },
          end: {
            line: 47,
            column: 68
          }
        },
        line: 47
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 52,
            column: 51
          },
          end: {
            line: 52,
            column: 52
          }
        },
        loc: {
          start: {
            line: 52,
            column: 62
          },
          end: {
            line: 60,
            column: 21
          }
        },
        line: 52
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 54,
            column: 46
          },
          end: {
            line: 54,
            column: 47
          }
        },
        loc: {
          start: {
            line: 54,
            column: 57
          },
          end: {
            line: 56,
            column: 25
          }
        },
        line: 54
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 64,
            column: 59
          },
          end: {
            line: 64,
            column: 60
          }
        },
        loc: {
          start: {
            line: 64,
            column: 70
          },
          end: {
            line: 70,
            column: 21
          }
        },
        line: 64
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 89,
            column: 4
          },
          end: {
            line: 89,
            column: 5
          }
        },
        loc: {
          start: {
            line: 89,
            column: 36
          },
          end: {
            line: 155,
            column: 5
          }
        },
        line: 89
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 90,
            column: 47
          },
          end: {
            line: 90,
            column: 48
          }
        },
        loc: {
          start: {
            line: 90,
            column: 60
          },
          end: {
            line: 154,
            column: 9
          }
        },
        line: 90
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 117,
            column: 51
          },
          end: {
            line: 117,
            column: 52
          }
        },
        loc: {
          start: {
            line: 117,
            column: 60
          },
          end: {
            line: 117,
            column: 70
          }
        },
        line: 117
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 122,
            column: 55
          },
          end: {
            line: 122,
            column: 56
          }
        },
        loc: {
          start: {
            line: 122,
            column: 68
          },
          end: {
            line: 130,
            column: 21
          }
        },
        line: 122
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 124,
            column: 46
          },
          end: {
            line: 124,
            column: 47
          }
        },
        loc: {
          start: {
            line: 124,
            column: 57
          },
          end: {
            line: 126,
            column: 25
          }
        },
        line: 124
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 134,
            column: 63
          },
          end: {
            line: 134,
            column: 64
          }
        },
        loc: {
          start: {
            line: 134,
            column: 76
          },
          end: {
            line: 140,
            column: 21
          }
        },
        line: 134
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 159,
            column: 4
          },
          end: {
            line: 159,
            column: 5
          }
        },
        loc: {
          start: {
            line: 159,
            column: 25
          },
          end: {
            line: 203,
            column: 5
          }
        },
        line: 159
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 160,
            column: 47
          },
          end: {
            line: 160,
            column: 48
          }
        },
        loc: {
          start: {
            line: 160,
            column: 60
          },
          end: {
            line: 202,
            column: 9
          }
        },
        line: 160
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 175,
            column: 48
          },
          end: {
            line: 175,
            column: 49
          }
        },
        loc: {
          start: {
            line: 175,
            column: 57
          },
          end: {
            line: 175,
            column: 67
          }
        },
        line: 175
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 180,
            column: 49
          },
          end: {
            line: 180,
            column: 50
          }
        },
        loc: {
          start: {
            line: 180,
            column: 59
          },
          end: {
            line: 188,
            column: 21
          }
        },
        line: 180
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 182,
            column: 46
          },
          end: {
            line: 182,
            column: 47
          }
        },
        loc: {
          start: {
            line: 182,
            column: 57
          },
          end: {
            line: 184,
            column: 25
          }
        },
        line: 182
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 207,
            column: 4
          },
          end: {
            line: 207,
            column: 5
          }
        },
        loc: {
          start: {
            line: 207,
            column: 26
          },
          end: {
            line: 226,
            column: 5
          }
        },
        line: 207
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 208,
            column: 47
          },
          end: {
            line: 208,
            column: 48
          }
        },
        loc: {
          start: {
            line: 208,
            column: 60
          },
          end: {
            line: 225,
            column: 9
          }
        },
        line: 208
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 230,
            column: 4
          },
          end: {
            line: 230,
            column: 5
          }
        },
        loc: {
          start: {
            line: 230,
            column: 33
          },
          end: {
            line: 246,
            column: 5
          }
        },
        line: 230
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 231,
            column: 50
          },
          end: {
            line: 231,
            column: 51
          }
        },
        loc: {
          start: {
            line: 231,
            column: 84
          },
          end: {
            line: 245,
            column: 9
          }
        },
        line: 231
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 250,
            column: 4
          },
          end: {
            line: 250,
            column: 5
          }
        },
        loc: {
          start: {
            line: 250,
            column: 58
          },
          end: {
            line: 268,
            column: 5
          }
        },
        line: 250
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 251,
            column: 47
          },
          end: {
            line: 251,
            column: 48
          }
        },
        loc: {
          start: {
            line: 251,
            column: 60
          },
          end: {
            line: 267,
            column: 9
          }
        },
        line: 251
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 256,
            column: 58
          },
          end: {
            line: 256,
            column: 59
          }
        },
        loc: {
          start: {
            line: 256,
            column: 67
          },
          end: {
            line: 260,
            column: 17
          }
        },
        line: 256
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 272,
            column: 4
          },
          end: {
            line: 272,
            column: 5
          }
        },
        loc: {
          start: {
            line: 272,
            column: 55
          },
          end: {
            line: 286,
            column: 5
          }
        },
        line: 272
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 273,
            column: 47
          },
          end: {
            line: 273,
            column: 48
          }
        },
        loc: {
          start: {
            line: 273,
            column: 60
          },
          end: {
            line: 285,
            column: 9
          }
        },
        line: 273
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 16
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 17
          },
          end: {
            line: 2,
            column: 21
          }
        }, {
          start: {
            line: 2,
            column: 25
          },
          end: {
            line: 2,
            column: 39
          }
        }, {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 35
          },
          end: {
            line: 3,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 56
          },
          end: {
            line: 3,
            column: 61
          }
        }, {
          start: {
            line: 3,
            column: 64
          },
          end: {
            line: 3,
            column: 109
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 17
          }
        }, {
          start: {
            line: 4,
            column: 22
          },
          end: {
            line: 4,
            column: 33
          }
        }],
        line: 4
      },
      "3": {
        loc: {
          start: {
            line: 7,
            column: 32
          },
          end: {
            line: 7,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 7,
            column: 46
          },
          end: {
            line: 7,
            column: 67
          }
        }, {
          start: {
            line: 7,
            column: 70
          },
          end: {
            line: 7,
            column: 115
          }
        }],
        line: 7
      },
      "4": {
        loc: {
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 61
          }
        }, {
          start: {
            line: 8,
            column: 65
          },
          end: {
            line: 8,
            column: 67
          }
        }],
        line: 8
      },
      "5": {
        loc: {
          start: {
            line: 24,
            column: 16
          },
          end: {
            line: 26,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 24,
            column: 16
          },
          end: {
            line: 26,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 24
      },
      "6": {
        loc: {
          start: {
            line: 27,
            column: 16
          },
          end: {
            line: 29,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 16
          },
          end: {
            line: 29,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 27
      },
      "7": {
        loc: {
          start: {
            line: 30,
            column: 16
          },
          end: {
            line: 32,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 16
          },
          end: {
            line: 32,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "8": {
        loc: {
          start: {
            line: 33,
            column: 16
          },
          end: {
            line: 35,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 16
          },
          end: {
            line: 35,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "9": {
        loc: {
          start: {
            line: 36,
            column: 16
          },
          end: {
            line: 38,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 16
          },
          end: {
            line: 38,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "10": {
        loc: {
          start: {
            line: 40,
            column: 30
          },
          end: {
            line: 40,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 40,
            column: 30
          },
          end: {
            line: 40,
            column: 43
          }
        }, {
          start: {
            line: 40,
            column: 47
          },
          end: {
            line: 40,
            column: 49
          }
        }],
        line: 40
      },
      "11": {
        loc: {
          start: {
            line: 42,
            column: 16
          },
          end: {
            line: 45,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 16
          },
          end: {
            line: 45,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "12": {
        loc: {
          start: {
            line: 43,
            column: 34
          },
          end: {
            line: 43,
            column: 78
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 43,
            column: 64
          },
          end: {
            line: 43,
            column: 69
          }
        }, {
          start: {
            line: 43,
            column: 72
          },
          end: {
            line: 43,
            column: 78
          }
        }],
        line: 43
      },
      "13": {
        loc: {
          start: {
            line: 50,
            column: 16
          },
          end: {
            line: 61,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 16
          },
          end: {
            line: 61,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 50
      },
      "14": {
        loc: {
          start: {
            line: 55,
            column: 35
          },
          end: {
            line: 55,
            column: 104
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 55,
            column: 35
          },
          end: {
            line: 55,
            column: 60
          }
        }, {
          start: {
            line: 55,
            column: 64
          },
          end: {
            line: 55,
            column: 104
          }
        }],
        line: 55
      },
      "15": {
        loc: {
          start: {
            line: 57,
            column: 32
          },
          end: {
            line: 59,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 57,
            column: 32
          },
          end: {
            line: 57,
            column: 62
          }
        }, {
          start: {
            line: 58,
            column: 28
          },
          end: {
            line: 58,
            column: 57
          }
        }, {
          start: {
            line: 59,
            column: 28
          },
          end: {
            line: 59,
            column: 56
          }
        }],
        line: 57
      },
      "16": {
        loc: {
          start: {
            line: 63,
            column: 16
          },
          end: {
            line: 71,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 16
          },
          end: {
            line: 71,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 63
      },
      "17": {
        loc: {
          start: {
            line: 66,
            column: 55
          },
          end: {
            line: 66,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 66,
            column: 55
          },
          end: {
            line: 66,
            column: 67
          }
        }, {
          start: {
            line: 66,
            column: 71
          },
          end: {
            line: 66,
            column: 74
          }
        }],
        line: 66
      },
      "18": {
        loc: {
          start: {
            line: 67,
            column: 42
          },
          end: {
            line: 67,
            column: 114
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 67,
            column: 43
          },
          end: {
            line: 67,
            column: 108
          }
        }, {
          start: {
            line: 67,
            column: 113
          },
          end: {
            line: 67,
            column: 114
          }
        }],
        line: 67
      },
      "19": {
        loc: {
          start: {
            line: 67,
            column: 43
          },
          end: {
            line: 67,
            column: 108
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 67,
            column: 93
          },
          end: {
            line: 67,
            column: 99
          }
        }, {
          start: {
            line: 67,
            column: 102
          },
          end: {
            line: 67,
            column: 108
          }
        }],
        line: 67
      },
      "20": {
        loc: {
          start: {
            line: 67,
            column: 43
          },
          end: {
            line: 67,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 67,
            column: 43
          },
          end: {
            line: 67,
            column: 73
          }
        }, {
          start: {
            line: 67,
            column: 77
          },
          end: {
            line: 67,
            column: 90
          }
        }],
        line: 67
      },
      "21": {
        loc: {
          start: {
            line: 68,
            column: 42
          },
          end: {
            line: 68,
            column: 121
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 68,
            column: 43
          },
          end: {
            line: 68,
            column: 108
          }
        }, {
          start: {
            line: 68,
            column: 113
          },
          end: {
            line: 68,
            column: 121
          }
        }],
        line: 68
      },
      "22": {
        loc: {
          start: {
            line: 68,
            column: 43
          },
          end: {
            line: 68,
            column: 108
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 68,
            column: 93
          },
          end: {
            line: 68,
            column: 99
          }
        }, {
          start: {
            line: 68,
            column: 102
          },
          end: {
            line: 68,
            column: 108
          }
        }],
        line: 68
      },
      "23": {
        loc: {
          start: {
            line: 68,
            column: 43
          },
          end: {
            line: 68,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 68,
            column: 43
          },
          end: {
            line: 68,
            column: 73
          }
        }, {
          start: {
            line: 68,
            column: 77
          },
          end: {
            line: 68,
            column: 90
          }
        }],
        line: 68
      },
      "24": {
        loc: {
          start: {
            line: 69,
            column: 31
          },
          end: {
            line: 69,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 69,
            column: 31
          },
          end: {
            line: 69,
            column: 55
          }
        }, {
          start: {
            line: 69,
            column: 59
          },
          end: {
            line: 69,
            column: 83
          }
        }],
        line: 69
      },
      "25": {
        loc: {
          start: {
            line: 75,
            column: 38
          },
          end: {
            line: 75,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 75,
            column: 38
          },
          end: {
            line: 75,
            column: 52
          }
        }, {
          start: {
            line: 75,
            column: 56
          },
          end: {
            line: 75,
            column: 57
          }
        }],
        line: 75
      },
      "26": {
        loc: {
          start: {
            line: 94,
            column: 16
          },
          end: {
            line: 96,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 94,
            column: 16
          },
          end: {
            line: 96,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 94
      },
      "27": {
        loc: {
          start: {
            line: 97,
            column: 16
          },
          end: {
            line: 99,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 97,
            column: 16
          },
          end: {
            line: 99,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 97
      },
      "28": {
        loc: {
          start: {
            line: 100,
            column: 16
          },
          end: {
            line: 102,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 100,
            column: 16
          },
          end: {
            line: 102,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 100
      },
      "29": {
        loc: {
          start: {
            line: 103,
            column: 16
          },
          end: {
            line: 105,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 103,
            column: 16
          },
          end: {
            line: 105,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 103
      },
      "30": {
        loc: {
          start: {
            line: 106,
            column: 16
          },
          end: {
            line: 108,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 106,
            column: 16
          },
          end: {
            line: 108,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 106
      },
      "31": {
        loc: {
          start: {
            line: 110,
            column: 30
          },
          end: {
            line: 110,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 110,
            column: 30
          },
          end: {
            line: 110,
            column: 43
          }
        }, {
          start: {
            line: 110,
            column: 47
          },
          end: {
            line: 110,
            column: 49
          }
        }],
        line: 110
      },
      "32": {
        loc: {
          start: {
            line: 112,
            column: 16
          },
          end: {
            line: 115,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 112,
            column: 16
          },
          end: {
            line: 115,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 112
      },
      "33": {
        loc: {
          start: {
            line: 113,
            column: 34
          },
          end: {
            line: 113,
            column: 78
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 113,
            column: 64
          },
          end: {
            line: 113,
            column: 69
          }
        }, {
          start: {
            line: 113,
            column: 72
          },
          end: {
            line: 113,
            column: 78
          }
        }],
        line: 113
      },
      "34": {
        loc: {
          start: {
            line: 120,
            column: 16
          },
          end: {
            line: 131,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 120,
            column: 16
          },
          end: {
            line: 131,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 120
      },
      "35": {
        loc: {
          start: {
            line: 125,
            column: 35
          },
          end: {
            line: 125,
            column: 104
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 125,
            column: 35
          },
          end: {
            line: 125,
            column: 60
          }
        }, {
          start: {
            line: 125,
            column: 64
          },
          end: {
            line: 125,
            column: 104
          }
        }],
        line: 125
      },
      "36": {
        loc: {
          start: {
            line: 127,
            column: 32
          },
          end: {
            line: 129,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 127,
            column: 32
          },
          end: {
            line: 127,
            column: 66
          }
        }, {
          start: {
            line: 128,
            column: 28
          },
          end: {
            line: 128,
            column: 59
          }
        }, {
          start: {
            line: 129,
            column: 28
          },
          end: {
            line: 129,
            column: 63
          }
        }],
        line: 127
      },
      "37": {
        loc: {
          start: {
            line: 133,
            column: 16
          },
          end: {
            line: 141,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 133,
            column: 16
          },
          end: {
            line: 141,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 133
      },
      "38": {
        loc: {
          start: {
            line: 136,
            column: 46
          },
          end: {
            line: 136,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 136,
            column: 46
          },
          end: {
            line: 136,
            column: 60
          }
        }, {
          start: {
            line: 136,
            column: 64
          },
          end: {
            line: 136,
            column: 65
          }
        }],
        line: 136
      },
      "39": {
        loc: {
          start: {
            line: 137,
            column: 42
          },
          end: {
            line: 137,
            column: 114
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 137,
            column: 43
          },
          end: {
            line: 137,
            column: 108
          }
        }, {
          start: {
            line: 137,
            column: 113
          },
          end: {
            line: 137,
            column: 114
          }
        }],
        line: 137
      },
      "40": {
        loc: {
          start: {
            line: 137,
            column: 43
          },
          end: {
            line: 137,
            column: 108
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 137,
            column: 93
          },
          end: {
            line: 137,
            column: 99
          }
        }, {
          start: {
            line: 137,
            column: 102
          },
          end: {
            line: 137,
            column: 108
          }
        }],
        line: 137
      },
      "41": {
        loc: {
          start: {
            line: 137,
            column: 43
          },
          end: {
            line: 137,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 137,
            column: 43
          },
          end: {
            line: 137,
            column: 73
          }
        }, {
          start: {
            line: 137,
            column: 77
          },
          end: {
            line: 137,
            column: 90
          }
        }],
        line: 137
      },
      "42": {
        loc: {
          start: {
            line: 138,
            column: 42
          },
          end: {
            line: 138,
            column: 121
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 138,
            column: 43
          },
          end: {
            line: 138,
            column: 108
          }
        }, {
          start: {
            line: 138,
            column: 113
          },
          end: {
            line: 138,
            column: 121
          }
        }],
        line: 138
      },
      "43": {
        loc: {
          start: {
            line: 138,
            column: 43
          },
          end: {
            line: 138,
            column: 108
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 138,
            column: 93
          },
          end: {
            line: 138,
            column: 99
          }
        }, {
          start: {
            line: 138,
            column: 102
          },
          end: {
            line: 138,
            column: 108
          }
        }],
        line: 138
      },
      "44": {
        loc: {
          start: {
            line: 138,
            column: 43
          },
          end: {
            line: 138,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 138,
            column: 43
          },
          end: {
            line: 138,
            column: 73
          }
        }, {
          start: {
            line: 138,
            column: 77
          },
          end: {
            line: 138,
            column: 90
          }
        }],
        line: 138
      },
      "45": {
        loc: {
          start: {
            line: 139,
            column: 31
          },
          end: {
            line: 139,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 139,
            column: 31
          },
          end: {
            line: 139,
            column: 57
          }
        }, {
          start: {
            line: 139,
            column: 61
          },
          end: {
            line: 139,
            column: 87
          }
        }],
        line: 139
      },
      "46": {
        loc: {
          start: {
            line: 145,
            column: 38
          },
          end: {
            line: 145,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 145,
            column: 38
          },
          end: {
            line: 145,
            column: 52
          }
        }, {
          start: {
            line: 145,
            column: 56
          },
          end: {
            line: 145,
            column: 57
          }
        }],
        line: 145
      },
      "47": {
        loc: {
          start: {
            line: 164,
            column: 16
          },
          end: {
            line: 166,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 164,
            column: 16
          },
          end: {
            line: 166,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 164
      },
      "48": {
        loc: {
          start: {
            line: 168,
            column: 30
          },
          end: {
            line: 168,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 168,
            column: 30
          },
          end: {
            line: 168,
            column: 43
          }
        }, {
          start: {
            line: 168,
            column: 47
          },
          end: {
            line: 168,
            column: 49
          }
        }],
        line: 168
      },
      "49": {
        loc: {
          start: {
            line: 170,
            column: 16
          },
          end: {
            line: 173,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 170,
            column: 16
          },
          end: {
            line: 173,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 170
      },
      "50": {
        loc: {
          start: {
            line: 171,
            column: 34
          },
          end: {
            line: 171,
            column: 78
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 171,
            column: 64
          },
          end: {
            line: 171,
            column: 69
          }
        }, {
          start: {
            line: 171,
            column: 72
          },
          end: {
            line: 171,
            column: 78
          }
        }],
        line: 171
      },
      "51": {
        loc: {
          start: {
            line: 178,
            column: 16
          },
          end: {
            line: 189,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 178,
            column: 16
          },
          end: {
            line: 189,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 178
      },
      "52": {
        loc: {
          start: {
            line: 183,
            column: 35
          },
          end: {
            line: 183,
            column: 104
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 183,
            column: 35
          },
          end: {
            line: 183,
            column: 60
          }
        }, {
          start: {
            line: 183,
            column: 64
          },
          end: {
            line: 183,
            column: 104
          }
        }],
        line: 183
      },
      "53": {
        loc: {
          start: {
            line: 185,
            column: 32
          },
          end: {
            line: 187,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 185,
            column: 32
          },
          end: {
            line: 185,
            column: 56
          }
        }, {
          start: {
            line: 186,
            column: 28
          },
          end: {
            line: 186,
            column: 56
          }
        }, {
          start: {
            line: 187,
            column: 28
          },
          end: {
            line: 187,
            column: 57
          }
        }],
        line: 185
      },
      "54": {
        loc: {
          start: {
            line: 193,
            column: 38
          },
          end: {
            line: 193,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 193,
            column: 38
          },
          end: {
            line: 193,
            column: 52
          }
        }, {
          start: {
            line: 193,
            column: 56
          },
          end: {
            line: 193,
            column: 57
          }
        }],
        line: 193
      },
      "55": {
        loc: {
          start: {
            line: 231,
            column: 71
          },
          end: {
            line: 231,
            column: 82
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 231,
            column: 80
          },
          end: {
            line: 231,
            column: 82
          }
        }],
        line: 231
      },
      "56": {
        loc: {
          start: {
            line: 258,
            column: 27
          },
          end: {
            line: 259,
            column: 120
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 258,
            column: 27
          },
          end: {
            line: 258,
            column: 66
          }
        }, {
          start: {
            line: 259,
            column: 24
          },
          end: {
            line: 259,
            column: 120
          }
        }],
        line: 258
      },
      "57": {
        loc: {
          start: {
            line: 259,
            column: 26
          },
          end: {
            line: 259,
            column: 119
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 259,
            column: 87
          },
          end: {
            line: 259,
            column: 93
          }
        }, {
          start: {
            line: 259,
            column: 96
          },
          end: {
            line: 259,
            column: 119
          }
        }],
        line: 259
      },
      "58": {
        loc: {
          start: {
            line: 259,
            column: 26
          },
          end: {
            line: 259,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 259,
            column: 26
          },
          end: {
            line: 259,
            column: 67
          }
        }, {
          start: {
            line: 259,
            column: 71
          },
          end: {
            line: 259,
            column: 84
          }
        }],
        line: 259
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0, 0],
      "54": [0, 0],
      "55": [0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\services\\searchService.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\services\\searchService.ts"],
      sourcesContent: ["import { db } from '../utils/firebase';\r\nimport { Event, User } from '../utils/DataTypes';\r\nimport { logger } from '../services/loggerService';\r\n\r\n// Definir tipo para MusicianRequest ya que no existe en DataTypes\r\nexport interface MusicianRequest {\r\n  id: string;\r\n  user: string;\r\n  eventName: string;\r\n  eventType: string;\r\n  date: string;\r\n  time: string;\r\n  location: string;\r\n  duration: string;\r\n  instrument: string;\r\n  bringInstrument: boolean;\r\n  comment: string;\r\n  budget: string;\r\n  flyerUrl?: string;\r\n  songs: string[];\r\n  recommendations: string[];\r\n  mapsLink: string;\r\n  status: 'pendiente' | 'asignada' | 'cancelada' | 'completada' | 'no_asignada';\r\n  assignedMusicianId?: string;\r\n  interestedMusicians?: string[];\r\n  createdAt: string;\r\n  updatedAt: string;\r\n  description?: string;\r\n  requirements?: string;\r\n}\r\n\r\nexport interface SearchFilters {\r\n  query?: string;\r\n  status?: string;\r\n  eventType?: string;\r\n  instrument?: string;\r\n  dateFrom?: string;\r\n  dateTo?: string;\r\n  location?: string;\r\n  budget?: {\r\n    min?: number;\r\n    max?: number;\r\n  };\r\n  userRole?: string;\r\n  limit?: number;\r\n  offset?: number;\r\n  sortBy?: string;\r\n  sortOrder?: 'asc' | 'desc';\r\n}\r\n\r\nexport interface SearchResult<T> {\r\n  data: T[];\r\n  total: number;\r\n  page: number;\r\n  limit: number;\r\n  hasMore: boolean;\r\n}\r\n\r\nexport class SearchService {\r\n  /**\r\n   * B\xFAsqueda avanzada de eventos\r\n   */\r\n  async searchEvents(filters: SearchFilters): Promise<SearchResult<Event>> {\r\n    try {\r\n      let query: any = db.collection('events');\r\n\r\n      // Aplicar filtros\r\n      if (filters.status) {\r\n        query = query.where('status', '==', filters.status);\r\n      }\r\n\r\n      if (filters.eventType) {\r\n        query = query.where('eventType', '==', filters.eventType);\r\n      }\r\n\r\n      if (filters.instrument) {\r\n        query = query.where('instrument', '==', filters.instrument);\r\n      }\r\n\r\n      if (filters.dateFrom) {\r\n        query = query.where('date', '>=', filters.dateFrom);\r\n      }\r\n\r\n      if (filters.dateTo) {\r\n        query = query.where('date', '<=', filters.dateTo);\r\n      }\r\n\r\n      // Aplicar l\xEDmites y ordenamiento\r\n      const limit = filters.limit || 20;\r\n      query = query.limit(limit);\r\n\r\n      if (filters.sortBy) {\r\n        const order = filters.sortOrder === 'asc' ? 'asc' : 'desc';\r\n        query = query.orderBy(filters.sortBy, order);\r\n      }\r\n\r\n      const snapshot = await query.get();\r\n      const events = snapshot.docs.map((doc: any) => doc.data() as Event);\r\n\r\n      // Filtrado por texto si se especifica\r\n      let filteredEvents = events;\r\n      if (filters.query) {\r\n        const searchTerm = filters.query.toLowerCase();\r\n        filteredEvents = events.filter(\r\n          (event: any) => {\r\n            // Funci\xF3n auxiliar para verificar si un valor es string y hacer b\xFAsqueda\r\n            const searchInField = (field: any): boolean => {\r\n              return typeof field === 'string' && field.toLowerCase().includes(searchTerm);\r\n            };\r\n            \r\n            return (\r\n              searchInField(event.eventName) ||\r\n              searchInField(event.location) ||\r\n              searchInField(event.comment)\r\n            );\r\n          }\r\n        );\r\n      }\r\n\r\n      // Filtrado por presupuesto si se especifica\r\n      if (filters.budget) {\r\n        filteredEvents = filteredEvents.filter((event: any) => {\r\n          const eventBudget = parseFloat(event.budget || '0');\r\n          const minBudget = filters.budget?.min || 0;\r\n          const maxBudget = filters.budget?.max || Infinity;\r\n          return eventBudget >= minBudget && eventBudget <= maxBudget;\r\n        });\r\n      }\r\n\r\n      return {\r\n        data: filteredEvents,\r\n        total: filteredEvents.length,\r\n        page: Math.floor((filters.offset || 0) / limit) + 1,\r\n        limit,\r\n        hasMore: filteredEvents.length === limit,\r\n      };\r\n    } catch (error) {\r\n      logger.error('Error en b\xFAsqueda de eventos:', error as Error);\r\n      throw new Error('Error al buscar eventos');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * B\xFAsqueda avanzada de solicitudes de m\xFAsicos\r\n   */\r\n  async searchMusicianRequests(\r\n    filters: SearchFilters\r\n  ): Promise<SearchResult<MusicianRequest>> {\r\n    try {\r\n      let query: any = db.collection('musicianRequests');\r\n\r\n      // Aplicar filtros\r\n      if (filters.status) {\r\n        query = query.where('status', '==', filters.status);\r\n      }\r\n\r\n      if (filters.eventType) {\r\n        query = query.where('eventType', '==', filters.eventType);\r\n      }\r\n\r\n      if (filters.instrument) {\r\n        query = query.where('instrument', '==', filters.instrument);\r\n      }\r\n\r\n      if (filters.dateFrom) {\r\n        query = query.where('date', '>=', filters.dateFrom);\r\n      }\r\n\r\n      if (filters.dateTo) {\r\n        query = query.where('date', '<=', filters.dateTo);\r\n      }\r\n\r\n      // Aplicar l\xEDmites y ordenamiento\r\n      const limit = filters.limit || 20;\r\n      query = query.limit(limit);\r\n\r\n      if (filters.sortBy) {\r\n        const order = filters.sortOrder === 'asc' ? 'asc' : 'desc';\r\n        query = query.orderBy(filters.sortBy, order);\r\n      }\r\n\r\n      const snapshot = await query.get();\r\n      const requests = snapshot.docs.map(\r\n        (doc: any) => doc.data() as MusicianRequest\r\n      );\r\n\r\n      // Filtrado por texto si se especifica\r\n      let filteredRequests = requests;\r\n      if (filters.query) {\r\n        const searchTerm = filters.query.toLowerCase();\r\n        filteredRequests = requests.filter(\r\n          (request: any) => {\r\n            // Funci\xF3n auxiliar para verificar si un valor es string y hacer b\xFAsqueda\r\n            const searchInField = (field: any): boolean => {\r\n              return typeof field === 'string' && field.toLowerCase().includes(searchTerm);\r\n            };\r\n            \r\n            return (\r\n              searchInField(request.description) ||\r\n              searchInField(request.location) ||\r\n              searchInField(request.requirements)\r\n            );\r\n          }\r\n        );\r\n      }\r\n\r\n      // Filtrado por presupuesto si se especifica\r\n      if (filters.budget) {\r\n        filteredRequests = filteredRequests.filter((request: any) => {\r\n          const requestBudget = request.budget || 0;\r\n          const minBudget = filters.budget?.min || 0;\r\n          const maxBudget = filters.budget?.max || Infinity;\r\n          return requestBudget >= minBudget && requestBudget <= maxBudget;\r\n        });\r\n      }\r\n\r\n      return {\r\n        data: filteredRequests,\r\n        total: filteredRequests.length,\r\n        page: Math.floor((filters.offset || 0) / limit) + 1,\r\n        limit,\r\n        hasMore: filteredRequests.length === limit,\r\n      };\r\n    } catch (error) {\r\n      logger.error('Error en b\xFAsqueda de solicitudes:', error as Error);\r\n      throw new Error('Error al buscar solicitudes de m\xFAsicos');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * B\xFAsqueda avanzada de usuarios\r\n   */\r\n  async searchUsers(filters: SearchFilters): Promise<SearchResult<User>> {\r\n    try {\r\n      let query: any = db.collection('users');\r\n\r\n      // Aplicar filtros\r\n      if (filters.userRole) {\r\n        query = query.where('roll', '==', filters.userRole);\r\n      }\r\n\r\n      // Aplicar l\xEDmites y ordenamiento\r\n      const limit = filters.limit || 20;\r\n      query = query.limit(limit);\r\n\r\n      if (filters.sortBy) {\r\n        const order = filters.sortOrder === 'asc' ? 'asc' : 'desc';\r\n        query = query.orderBy(filters.sortBy, order);\r\n      }\r\n\r\n      const snapshot = await query.get();\r\n      const users = snapshot.docs.map((doc: any) => doc.data() as User);\r\n\r\n      // Filtrado por texto si se especifica\r\n      let filteredUsers = users;\r\n      if (filters.query) {\r\n        const searchTerm = filters.query.toLowerCase();\r\n        filteredUsers = users.filter(\r\n          (user: any) => {\r\n            // Funci\xF3n auxiliar para verificar si un valor es string y hacer b\xFAsqueda\r\n            const searchInField = (field: any): boolean => {\r\n              return typeof field === 'string' && field.toLowerCase().includes(searchTerm);\r\n            };\r\n            \r\n            return (\r\n              searchInField(user.name) ||\r\n              searchInField(user.lastName) ||\r\n              searchInField(user.userEmail)\r\n            );\r\n          }\r\n        );\r\n      }\r\n\r\n      return {\r\n        data: filteredUsers,\r\n        total: filteredUsers.length,\r\n        page: Math.floor((filters.offset || 0) / limit) + 1,\r\n        limit,\r\n        hasMore: filteredUsers.length === limit,\r\n      };\r\n    } catch (error) {\r\n      logger.error('Error en b\xFAsqueda de usuarios:', error as Error);\r\n      throw new Error('Error al buscar usuarios');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * B\xFAsqueda global en todas las colecciones\r\n   */\r\n  async globalSearch(filters: SearchFilters): Promise<{\r\n    events: Event[];\r\n    requests: MusicianRequest[];\r\n    users: User[];\r\n  }> {\r\n    try {\r\n      const [eventsResult, requestsResult, usersResult] = await Promise.all([\r\n        this.searchEvents(filters),\r\n        this.searchMusicianRequests(filters),\r\n        this.searchUsers(filters),\r\n      ]);\r\n\r\n      return {\r\n        events: eventsResult.data,\r\n        requests: requestsResult.data,\r\n        users: usersResult.data,\r\n      };\r\n    } catch (error) {\r\n      logger.error('Error en b\xFAsqueda global:', error as Error);\r\n      throw new Error('Error al realizar b\xFAsqueda global');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * B\xFAsqueda por proximidad geogr\xE1fica\r\n   */\r\n  async searchByLocation(\r\n    location: string,\r\n    radius: number = 50\r\n  ): Promise<{\r\n    events: Event[];\r\n    requests: MusicianRequest[];\r\n  }> {\r\n    try {\r\n      // Implementaci\xF3n b\xE1sica - en producci\xF3n usar servicios de geolocalizaci\xF3n\r\n      const eventsResult = await this.searchEvents({ location });\r\n      const requestsResult = await this.searchMusicianRequests({ location });\r\n\r\n      return {\r\n        events: eventsResult.data,\r\n        requests: requestsResult.data,\r\n      };\r\n    } catch (error) {\r\n      logger.error('Error en b\xFAsqueda por ubicaci\xF3n:', error as Error);\r\n      throw new Error('Error al buscar por ubicaci\xF3n');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * B\xFAsqueda de eventos disponibles para m\xFAsicos\r\n   */\r\n  async searchAvailableEventsForMusician(\r\n    musicianId: string,\r\n    filters: SearchFilters\r\n  ): Promise<SearchResult<Event>> {\r\n    try {\r\n      const availableFilters = {\r\n        ...filters,\r\n        status: 'pending_musician',\r\n      };\r\n\r\n      const result = await this.searchEvents(availableFilters);\r\n\r\n      // Filtrar eventos donde el m\xFAsico no est\xE9 ya asignado o interesado\r\n      const filteredEvents = result.data.filter(\r\n        event =>\r\n          event.assignedMusicianId !== musicianId &&\r\n          !event.interestedMusicians?.includes(musicianId)\r\n      );\r\n\r\n      return {\r\n        ...result,\r\n        data: filteredEvents,\r\n        total: filteredEvents.length,\r\n      };\r\n    } catch (error) {\r\n      logger.error('Error en b\xFAsqueda de eventos disponibles:', error as Error);\r\n      throw new Error('Error al buscar eventos disponibles');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * B\xFAsqueda de m\xFAsicos disponibles para un evento\r\n   */\r\n  async searchAvailableMusiciansForEvent(\r\n    eventId: string,\r\n    filters: SearchFilters\r\n  ): Promise<SearchResult<User>> {\r\n    try {\r\n      const musicianFilters = {\r\n        ...filters,\r\n        userRole: 'musico',\r\n      };\r\n\r\n      const result = await this.searchUsers(musicianFilters);\r\n\r\n      // Aqu\xED se podr\xEDa implementar l\xF3gica adicional para filtrar m\xFAsicos\r\n      // que est\xE9n disponibles en la fecha del evento, tengan el instrumento requerido, etc.\r\n\r\n      return result;\r\n    } catch (error) {\r\n      logger.error('Error en b\xFAsqueda de m\xFAsicos disponibles:', error as Error);\r\n      throw new Error('Error al buscar m\xFAsicos disponibles');\r\n    }\r\n  }\r\n}\r\n\r\nexport const searchService = new SearchService();\r\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "cfed54752291cc65b88bd728a374cd0fde544f83"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1snnq0w0d9 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1snnq0w0d9();
var __awaiter =
/* istanbul ignore next */
(cov_1snnq0w0d9().s[0]++,
/* istanbul ignore next */
(cov_1snnq0w0d9().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1snnq0w0d9().b[0][1]++, this.__awaiter) ||
/* istanbul ignore next */
(cov_1snnq0w0d9().b[0][2]++, function (thisArg, _arguments, P, generator) {
  /* istanbul ignore next */
  cov_1snnq0w0d9().f[0]++;
  function adopt(value) {
    /* istanbul ignore next */
    cov_1snnq0w0d9().f[1]++;
    cov_1snnq0w0d9().s[1]++;
    return value instanceof P ?
    /* istanbul ignore next */
    (cov_1snnq0w0d9().b[1][0]++, value) :
    /* istanbul ignore next */
    (cov_1snnq0w0d9().b[1][1]++, new P(function (resolve) {
      /* istanbul ignore next */
      cov_1snnq0w0d9().f[2]++;
      cov_1snnq0w0d9().s[2]++;
      resolve(value);
    }));
  }
  /* istanbul ignore next */
  cov_1snnq0w0d9().s[3]++;
  return new (
  /* istanbul ignore next */
  (cov_1snnq0w0d9().b[2][0]++, P) ||
  /* istanbul ignore next */
  (cov_1snnq0w0d9().b[2][1]++, P = Promise))(function (resolve, reject) {
    /* istanbul ignore next */
    cov_1snnq0w0d9().f[3]++;
    function fulfilled(value) {
      /* istanbul ignore next */
      cov_1snnq0w0d9().f[4]++;
      cov_1snnq0w0d9().s[4]++;
      try {
        /* istanbul ignore next */
        cov_1snnq0w0d9().s[5]++;
        step(generator.next(value));
      } catch (e) {
        /* istanbul ignore next */
        cov_1snnq0w0d9().s[6]++;
        reject(e);
      }
    }
    function rejected(value) {
      /* istanbul ignore next */
      cov_1snnq0w0d9().f[5]++;
      cov_1snnq0w0d9().s[7]++;
      try {
        /* istanbul ignore next */
        cov_1snnq0w0d9().s[8]++;
        step(generator["throw"](value));
      } catch (e) {
        /* istanbul ignore next */
        cov_1snnq0w0d9().s[9]++;
        reject(e);
      }
    }
    function step(result) {
      /* istanbul ignore next */
      cov_1snnq0w0d9().f[6]++;
      cov_1snnq0w0d9().s[10]++;
      result.done ?
      /* istanbul ignore next */
      (cov_1snnq0w0d9().b[3][0]++, resolve(result.value)) :
      /* istanbul ignore next */
      (cov_1snnq0w0d9().b[3][1]++, adopt(result.value).then(fulfilled, rejected));
    }
    /* istanbul ignore next */
    cov_1snnq0w0d9().s[11]++;
    step((generator = generator.apply(thisArg,
    /* istanbul ignore next */
    (cov_1snnq0w0d9().b[4][0]++, _arguments) ||
    /* istanbul ignore next */
    (cov_1snnq0w0d9().b[4][1]++, []))).next());
  });
}));
/* istanbul ignore next */
cov_1snnq0w0d9().s[12]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1snnq0w0d9().s[13]++;
exports.searchService = exports.SearchService = void 0;
const firebase_1 =
/* istanbul ignore next */
(cov_1snnq0w0d9().s[14]++, require("../utils/firebase"));
const loggerService_1 =
/* istanbul ignore next */
(cov_1snnq0w0d9().s[15]++, require("../services/loggerService"));
class SearchService {
  /**
   * Búsqueda avanzada de eventos
   */
  searchEvents(filters) {
    /* istanbul ignore next */
    cov_1snnq0w0d9().f[7]++;
    cov_1snnq0w0d9().s[16]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1snnq0w0d9().f[8]++;
      cov_1snnq0w0d9().s[17]++;
      try {
        let query =
        /* istanbul ignore next */
        (cov_1snnq0w0d9().s[18]++, firebase_1.db.collection('events'));
        // Aplicar filtros
        /* istanbul ignore next */
        cov_1snnq0w0d9().s[19]++;
        if (filters.status) {
          /* istanbul ignore next */
          cov_1snnq0w0d9().b[5][0]++;
          cov_1snnq0w0d9().s[20]++;
          query = query.where('status', '==', filters.status);
        } else
        /* istanbul ignore next */
        {
          cov_1snnq0w0d9().b[5][1]++;
        }
        cov_1snnq0w0d9().s[21]++;
        if (filters.eventType) {
          /* istanbul ignore next */
          cov_1snnq0w0d9().b[6][0]++;
          cov_1snnq0w0d9().s[22]++;
          query = query.where('eventType', '==', filters.eventType);
        } else
        /* istanbul ignore next */
        {
          cov_1snnq0w0d9().b[6][1]++;
        }
        cov_1snnq0w0d9().s[23]++;
        if (filters.instrument) {
          /* istanbul ignore next */
          cov_1snnq0w0d9().b[7][0]++;
          cov_1snnq0w0d9().s[24]++;
          query = query.where('instrument', '==', filters.instrument);
        } else
        /* istanbul ignore next */
        {
          cov_1snnq0w0d9().b[7][1]++;
        }
        cov_1snnq0w0d9().s[25]++;
        if (filters.dateFrom) {
          /* istanbul ignore next */
          cov_1snnq0w0d9().b[8][0]++;
          cov_1snnq0w0d9().s[26]++;
          query = query.where('date', '>=', filters.dateFrom);
        } else
        /* istanbul ignore next */
        {
          cov_1snnq0w0d9().b[8][1]++;
        }
        cov_1snnq0w0d9().s[27]++;
        if (filters.dateTo) {
          /* istanbul ignore next */
          cov_1snnq0w0d9().b[9][0]++;
          cov_1snnq0w0d9().s[28]++;
          query = query.where('date', '<=', filters.dateTo);
        } else
        /* istanbul ignore next */
        {
          cov_1snnq0w0d9().b[9][1]++;
        }
        // Aplicar límites y ordenamiento
        const limit =
        /* istanbul ignore next */
        (cov_1snnq0w0d9().s[29]++,
        /* istanbul ignore next */
        (cov_1snnq0w0d9().b[10][0]++, filters.limit) ||
        /* istanbul ignore next */
        (cov_1snnq0w0d9().b[10][1]++, 20));
        /* istanbul ignore next */
        cov_1snnq0w0d9().s[30]++;
        query = query.limit(limit);
        /* istanbul ignore next */
        cov_1snnq0w0d9().s[31]++;
        if (filters.sortBy) {
          /* istanbul ignore next */
          cov_1snnq0w0d9().b[11][0]++;
          const order =
          /* istanbul ignore next */
          (cov_1snnq0w0d9().s[32]++, filters.sortOrder === 'asc' ?
          /* istanbul ignore next */
          (cov_1snnq0w0d9().b[12][0]++, 'asc') :
          /* istanbul ignore next */
          (cov_1snnq0w0d9().b[12][1]++, 'desc'));
          /* istanbul ignore next */
          cov_1snnq0w0d9().s[33]++;
          query = query.orderBy(filters.sortBy, order);
        } else
        /* istanbul ignore next */
        {
          cov_1snnq0w0d9().b[11][1]++;
        }
        const snapshot =
        /* istanbul ignore next */
        (cov_1snnq0w0d9().s[34]++, yield query.get());
        const events =
        /* istanbul ignore next */
        (cov_1snnq0w0d9().s[35]++, snapshot.docs.map(doc => {
          /* istanbul ignore next */
          cov_1snnq0w0d9().f[9]++;
          cov_1snnq0w0d9().s[36]++;
          return doc.data();
        }));
        // Filtrado por texto si se especifica
        let filteredEvents =
        /* istanbul ignore next */
        (cov_1snnq0w0d9().s[37]++, events);
        /* istanbul ignore next */
        cov_1snnq0w0d9().s[38]++;
        if (filters.query) {
          /* istanbul ignore next */
          cov_1snnq0w0d9().b[13][0]++;
          const searchTerm =
          /* istanbul ignore next */
          (cov_1snnq0w0d9().s[39]++, filters.query.toLowerCase());
          /* istanbul ignore next */
          cov_1snnq0w0d9().s[40]++;
          filteredEvents = events.filter(event => {
            /* istanbul ignore next */
            cov_1snnq0w0d9().f[10]++;
            cov_1snnq0w0d9().s[41]++;
            // Función auxiliar para verificar si un valor es string y hacer búsqueda
            const searchInField = field => {
              /* istanbul ignore next */
              cov_1snnq0w0d9().f[11]++;
              cov_1snnq0w0d9().s[42]++;
              return /* istanbul ignore next */(cov_1snnq0w0d9().b[14][0]++, typeof field === 'string') &&
              /* istanbul ignore next */
              (cov_1snnq0w0d9().b[14][1]++, field.toLowerCase().includes(searchTerm));
            };
            /* istanbul ignore next */
            cov_1snnq0w0d9().s[43]++;
            return /* istanbul ignore next */(cov_1snnq0w0d9().b[15][0]++, searchInField(event.eventName)) ||
            /* istanbul ignore next */
            (cov_1snnq0w0d9().b[15][1]++, searchInField(event.location)) ||
            /* istanbul ignore next */
            (cov_1snnq0w0d9().b[15][2]++, searchInField(event.comment));
          });
        } else
        /* istanbul ignore next */
        {
          cov_1snnq0w0d9().b[13][1]++;
        }
        // Filtrado por presupuesto si se especifica
        cov_1snnq0w0d9().s[44]++;
        if (filters.budget) {
          /* istanbul ignore next */
          cov_1snnq0w0d9().b[16][0]++;
          cov_1snnq0w0d9().s[45]++;
          filteredEvents = filteredEvents.filter(event => {
            /* istanbul ignore next */
            cov_1snnq0w0d9().f[12]++;
            var _a, _b;
            const eventBudget =
            /* istanbul ignore next */
            (cov_1snnq0w0d9().s[46]++, parseFloat(
            /* istanbul ignore next */
            (cov_1snnq0w0d9().b[17][0]++, event.budget) ||
            /* istanbul ignore next */
            (cov_1snnq0w0d9().b[17][1]++, '0')));
            const minBudget =
            /* istanbul ignore next */
            (cov_1snnq0w0d9().s[47]++,
            /* istanbul ignore next */
            (cov_1snnq0w0d9().b[18][0]++,
            /* istanbul ignore next */
            (cov_1snnq0w0d9().b[20][0]++, (_a = filters.budget) === null) ||
            /* istanbul ignore next */
            (cov_1snnq0w0d9().b[20][1]++, _a === void 0) ?
            /* istanbul ignore next */
            (cov_1snnq0w0d9().b[19][0]++, void 0) :
            /* istanbul ignore next */
            (cov_1snnq0w0d9().b[19][1]++, _a.min)) ||
            /* istanbul ignore next */
            (cov_1snnq0w0d9().b[18][1]++, 0));
            const maxBudget =
            /* istanbul ignore next */
            (cov_1snnq0w0d9().s[48]++,
            /* istanbul ignore next */
            (cov_1snnq0w0d9().b[21][0]++,
            /* istanbul ignore next */
            (cov_1snnq0w0d9().b[23][0]++, (_b = filters.budget) === null) ||
            /* istanbul ignore next */
            (cov_1snnq0w0d9().b[23][1]++, _b === void 0) ?
            /* istanbul ignore next */
            (cov_1snnq0w0d9().b[22][0]++, void 0) :
            /* istanbul ignore next */
            (cov_1snnq0w0d9().b[22][1]++, _b.max)) ||
            /* istanbul ignore next */
            (cov_1snnq0w0d9().b[21][1]++, Infinity));
            /* istanbul ignore next */
            cov_1snnq0w0d9().s[49]++;
            return /* istanbul ignore next */(cov_1snnq0w0d9().b[24][0]++, eventBudget >= minBudget) &&
            /* istanbul ignore next */
            (cov_1snnq0w0d9().b[24][1]++, eventBudget <= maxBudget);
          });
        } else
        /* istanbul ignore next */
        {
          cov_1snnq0w0d9().b[16][1]++;
        }
        cov_1snnq0w0d9().s[50]++;
        return {
          data: filteredEvents,
          total: filteredEvents.length,
          page: Math.floor((
          /* istanbul ignore next */
          (cov_1snnq0w0d9().b[25][0]++, filters.offset) ||
          /* istanbul ignore next */
          (cov_1snnq0w0d9().b[25][1]++, 0)) / limit) + 1,
          limit,
          hasMore: filteredEvents.length === limit
        };
      } catch (error) {
        /* istanbul ignore next */
        cov_1snnq0w0d9().s[51]++;
        loggerService_1.logger.error('Error en búsqueda de eventos:', error);
        /* istanbul ignore next */
        cov_1snnq0w0d9().s[52]++;
        throw new Error('Error al buscar eventos');
      }
    });
  }
  /**
   * Búsqueda avanzada de solicitudes de músicos
   */
  searchMusicianRequests(filters) {
    /* istanbul ignore next */
    cov_1snnq0w0d9().f[13]++;
    cov_1snnq0w0d9().s[53]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1snnq0w0d9().f[14]++;
      cov_1snnq0w0d9().s[54]++;
      try {
        let query =
        /* istanbul ignore next */
        (cov_1snnq0w0d9().s[55]++, firebase_1.db.collection('musicianRequests'));
        // Aplicar filtros
        /* istanbul ignore next */
        cov_1snnq0w0d9().s[56]++;
        if (filters.status) {
          /* istanbul ignore next */
          cov_1snnq0w0d9().b[26][0]++;
          cov_1snnq0w0d9().s[57]++;
          query = query.where('status', '==', filters.status);
        } else
        /* istanbul ignore next */
        {
          cov_1snnq0w0d9().b[26][1]++;
        }
        cov_1snnq0w0d9().s[58]++;
        if (filters.eventType) {
          /* istanbul ignore next */
          cov_1snnq0w0d9().b[27][0]++;
          cov_1snnq0w0d9().s[59]++;
          query = query.where('eventType', '==', filters.eventType);
        } else
        /* istanbul ignore next */
        {
          cov_1snnq0w0d9().b[27][1]++;
        }
        cov_1snnq0w0d9().s[60]++;
        if (filters.instrument) {
          /* istanbul ignore next */
          cov_1snnq0w0d9().b[28][0]++;
          cov_1snnq0w0d9().s[61]++;
          query = query.where('instrument', '==', filters.instrument);
        } else
        /* istanbul ignore next */
        {
          cov_1snnq0w0d9().b[28][1]++;
        }
        cov_1snnq0w0d9().s[62]++;
        if (filters.dateFrom) {
          /* istanbul ignore next */
          cov_1snnq0w0d9().b[29][0]++;
          cov_1snnq0w0d9().s[63]++;
          query = query.where('date', '>=', filters.dateFrom);
        } else
        /* istanbul ignore next */
        {
          cov_1snnq0w0d9().b[29][1]++;
        }
        cov_1snnq0w0d9().s[64]++;
        if (filters.dateTo) {
          /* istanbul ignore next */
          cov_1snnq0w0d9().b[30][0]++;
          cov_1snnq0w0d9().s[65]++;
          query = query.where('date', '<=', filters.dateTo);
        } else
        /* istanbul ignore next */
        {
          cov_1snnq0w0d9().b[30][1]++;
        }
        // Aplicar límites y ordenamiento
        const limit =
        /* istanbul ignore next */
        (cov_1snnq0w0d9().s[66]++,
        /* istanbul ignore next */
        (cov_1snnq0w0d9().b[31][0]++, filters.limit) ||
        /* istanbul ignore next */
        (cov_1snnq0w0d9().b[31][1]++, 20));
        /* istanbul ignore next */
        cov_1snnq0w0d9().s[67]++;
        query = query.limit(limit);
        /* istanbul ignore next */
        cov_1snnq0w0d9().s[68]++;
        if (filters.sortBy) {
          /* istanbul ignore next */
          cov_1snnq0w0d9().b[32][0]++;
          const order =
          /* istanbul ignore next */
          (cov_1snnq0w0d9().s[69]++, filters.sortOrder === 'asc' ?
          /* istanbul ignore next */
          (cov_1snnq0w0d9().b[33][0]++, 'asc') :
          /* istanbul ignore next */
          (cov_1snnq0w0d9().b[33][1]++, 'desc'));
          /* istanbul ignore next */
          cov_1snnq0w0d9().s[70]++;
          query = query.orderBy(filters.sortBy, order);
        } else
        /* istanbul ignore next */
        {
          cov_1snnq0w0d9().b[32][1]++;
        }
        const snapshot =
        /* istanbul ignore next */
        (cov_1snnq0w0d9().s[71]++, yield query.get());
        const requests =
        /* istanbul ignore next */
        (cov_1snnq0w0d9().s[72]++, snapshot.docs.map(doc => {
          /* istanbul ignore next */
          cov_1snnq0w0d9().f[15]++;
          cov_1snnq0w0d9().s[73]++;
          return doc.data();
        }));
        // Filtrado por texto si se especifica
        let filteredRequests =
        /* istanbul ignore next */
        (cov_1snnq0w0d9().s[74]++, requests);
        /* istanbul ignore next */
        cov_1snnq0w0d9().s[75]++;
        if (filters.query) {
          /* istanbul ignore next */
          cov_1snnq0w0d9().b[34][0]++;
          const searchTerm =
          /* istanbul ignore next */
          (cov_1snnq0w0d9().s[76]++, filters.query.toLowerCase());
          /* istanbul ignore next */
          cov_1snnq0w0d9().s[77]++;
          filteredRequests = requests.filter(request => {
            /* istanbul ignore next */
            cov_1snnq0w0d9().f[16]++;
            cov_1snnq0w0d9().s[78]++;
            // Función auxiliar para verificar si un valor es string y hacer búsqueda
            const searchInField = field => {
              /* istanbul ignore next */
              cov_1snnq0w0d9().f[17]++;
              cov_1snnq0w0d9().s[79]++;
              return /* istanbul ignore next */(cov_1snnq0w0d9().b[35][0]++, typeof field === 'string') &&
              /* istanbul ignore next */
              (cov_1snnq0w0d9().b[35][1]++, field.toLowerCase().includes(searchTerm));
            };
            /* istanbul ignore next */
            cov_1snnq0w0d9().s[80]++;
            return /* istanbul ignore next */(cov_1snnq0w0d9().b[36][0]++, searchInField(request.description)) ||
            /* istanbul ignore next */
            (cov_1snnq0w0d9().b[36][1]++, searchInField(request.location)) ||
            /* istanbul ignore next */
            (cov_1snnq0w0d9().b[36][2]++, searchInField(request.requirements));
          });
        } else
        /* istanbul ignore next */
        {
          cov_1snnq0w0d9().b[34][1]++;
        }
        // Filtrado por presupuesto si se especifica
        cov_1snnq0w0d9().s[81]++;
        if (filters.budget) {
          /* istanbul ignore next */
          cov_1snnq0w0d9().b[37][0]++;
          cov_1snnq0w0d9().s[82]++;
          filteredRequests = filteredRequests.filter(request => {
            /* istanbul ignore next */
            cov_1snnq0w0d9().f[18]++;
            var _a, _b;
            const requestBudget =
            /* istanbul ignore next */
            (cov_1snnq0w0d9().s[83]++,
            /* istanbul ignore next */
            (cov_1snnq0w0d9().b[38][0]++, request.budget) ||
            /* istanbul ignore next */
            (cov_1snnq0w0d9().b[38][1]++, 0));
            const minBudget =
            /* istanbul ignore next */
            (cov_1snnq0w0d9().s[84]++,
            /* istanbul ignore next */
            (cov_1snnq0w0d9().b[39][0]++,
            /* istanbul ignore next */
            (cov_1snnq0w0d9().b[41][0]++, (_a = filters.budget) === null) ||
            /* istanbul ignore next */
            (cov_1snnq0w0d9().b[41][1]++, _a === void 0) ?
            /* istanbul ignore next */
            (cov_1snnq0w0d9().b[40][0]++, void 0) :
            /* istanbul ignore next */
            (cov_1snnq0w0d9().b[40][1]++, _a.min)) ||
            /* istanbul ignore next */
            (cov_1snnq0w0d9().b[39][1]++, 0));
            const maxBudget =
            /* istanbul ignore next */
            (cov_1snnq0w0d9().s[85]++,
            /* istanbul ignore next */
            (cov_1snnq0w0d9().b[42][0]++,
            /* istanbul ignore next */
            (cov_1snnq0w0d9().b[44][0]++, (_b = filters.budget) === null) ||
            /* istanbul ignore next */
            (cov_1snnq0w0d9().b[44][1]++, _b === void 0) ?
            /* istanbul ignore next */
            (cov_1snnq0w0d9().b[43][0]++, void 0) :
            /* istanbul ignore next */
            (cov_1snnq0w0d9().b[43][1]++, _b.max)) ||
            /* istanbul ignore next */
            (cov_1snnq0w0d9().b[42][1]++, Infinity));
            /* istanbul ignore next */
            cov_1snnq0w0d9().s[86]++;
            return /* istanbul ignore next */(cov_1snnq0w0d9().b[45][0]++, requestBudget >= minBudget) &&
            /* istanbul ignore next */
            (cov_1snnq0w0d9().b[45][1]++, requestBudget <= maxBudget);
          });
        } else
        /* istanbul ignore next */
        {
          cov_1snnq0w0d9().b[37][1]++;
        }
        cov_1snnq0w0d9().s[87]++;
        return {
          data: filteredRequests,
          total: filteredRequests.length,
          page: Math.floor((
          /* istanbul ignore next */
          (cov_1snnq0w0d9().b[46][0]++, filters.offset) ||
          /* istanbul ignore next */
          (cov_1snnq0w0d9().b[46][1]++, 0)) / limit) + 1,
          limit,
          hasMore: filteredRequests.length === limit
        };
      } catch (error) {
        /* istanbul ignore next */
        cov_1snnq0w0d9().s[88]++;
        loggerService_1.logger.error('Error en búsqueda de solicitudes:', error);
        /* istanbul ignore next */
        cov_1snnq0w0d9().s[89]++;
        throw new Error('Error al buscar solicitudes de músicos');
      }
    });
  }
  /**
   * Búsqueda avanzada de usuarios
   */
  searchUsers(filters) {
    /* istanbul ignore next */
    cov_1snnq0w0d9().f[19]++;
    cov_1snnq0w0d9().s[90]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1snnq0w0d9().f[20]++;
      cov_1snnq0w0d9().s[91]++;
      try {
        let query =
        /* istanbul ignore next */
        (cov_1snnq0w0d9().s[92]++, firebase_1.db.collection('users'));
        // Aplicar filtros
        /* istanbul ignore next */
        cov_1snnq0w0d9().s[93]++;
        if (filters.userRole) {
          /* istanbul ignore next */
          cov_1snnq0w0d9().b[47][0]++;
          cov_1snnq0w0d9().s[94]++;
          query = query.where('roll', '==', filters.userRole);
        } else
        /* istanbul ignore next */
        {
          cov_1snnq0w0d9().b[47][1]++;
        }
        // Aplicar límites y ordenamiento
        const limit =
        /* istanbul ignore next */
        (cov_1snnq0w0d9().s[95]++,
        /* istanbul ignore next */
        (cov_1snnq0w0d9().b[48][0]++, filters.limit) ||
        /* istanbul ignore next */
        (cov_1snnq0w0d9().b[48][1]++, 20));
        /* istanbul ignore next */
        cov_1snnq0w0d9().s[96]++;
        query = query.limit(limit);
        /* istanbul ignore next */
        cov_1snnq0w0d9().s[97]++;
        if (filters.sortBy) {
          /* istanbul ignore next */
          cov_1snnq0w0d9().b[49][0]++;
          const order =
          /* istanbul ignore next */
          (cov_1snnq0w0d9().s[98]++, filters.sortOrder === 'asc' ?
          /* istanbul ignore next */
          (cov_1snnq0w0d9().b[50][0]++, 'asc') :
          /* istanbul ignore next */
          (cov_1snnq0w0d9().b[50][1]++, 'desc'));
          /* istanbul ignore next */
          cov_1snnq0w0d9().s[99]++;
          query = query.orderBy(filters.sortBy, order);
        } else
        /* istanbul ignore next */
        {
          cov_1snnq0w0d9().b[49][1]++;
        }
        const snapshot =
        /* istanbul ignore next */
        (cov_1snnq0w0d9().s[100]++, yield query.get());
        const users =
        /* istanbul ignore next */
        (cov_1snnq0w0d9().s[101]++, snapshot.docs.map(doc => {
          /* istanbul ignore next */
          cov_1snnq0w0d9().f[21]++;
          cov_1snnq0w0d9().s[102]++;
          return doc.data();
        }));
        // Filtrado por texto si se especifica
        let filteredUsers =
        /* istanbul ignore next */
        (cov_1snnq0w0d9().s[103]++, users);
        /* istanbul ignore next */
        cov_1snnq0w0d9().s[104]++;
        if (filters.query) {
          /* istanbul ignore next */
          cov_1snnq0w0d9().b[51][0]++;
          const searchTerm =
          /* istanbul ignore next */
          (cov_1snnq0w0d9().s[105]++, filters.query.toLowerCase());
          /* istanbul ignore next */
          cov_1snnq0w0d9().s[106]++;
          filteredUsers = users.filter(user => {
            /* istanbul ignore next */
            cov_1snnq0w0d9().f[22]++;
            cov_1snnq0w0d9().s[107]++;
            // Función auxiliar para verificar si un valor es string y hacer búsqueda
            const searchInField = field => {
              /* istanbul ignore next */
              cov_1snnq0w0d9().f[23]++;
              cov_1snnq0w0d9().s[108]++;
              return /* istanbul ignore next */(cov_1snnq0w0d9().b[52][0]++, typeof field === 'string') &&
              /* istanbul ignore next */
              (cov_1snnq0w0d9().b[52][1]++, field.toLowerCase().includes(searchTerm));
            };
            /* istanbul ignore next */
            cov_1snnq0w0d9().s[109]++;
            return /* istanbul ignore next */(cov_1snnq0w0d9().b[53][0]++, searchInField(user.name)) ||
            /* istanbul ignore next */
            (cov_1snnq0w0d9().b[53][1]++, searchInField(user.lastName)) ||
            /* istanbul ignore next */
            (cov_1snnq0w0d9().b[53][2]++, searchInField(user.userEmail));
          });
        } else
        /* istanbul ignore next */
        {
          cov_1snnq0w0d9().b[51][1]++;
        }
        cov_1snnq0w0d9().s[110]++;
        return {
          data: filteredUsers,
          total: filteredUsers.length,
          page: Math.floor((
          /* istanbul ignore next */
          (cov_1snnq0w0d9().b[54][0]++, filters.offset) ||
          /* istanbul ignore next */
          (cov_1snnq0w0d9().b[54][1]++, 0)) / limit) + 1,
          limit,
          hasMore: filteredUsers.length === limit
        };
      } catch (error) {
        /* istanbul ignore next */
        cov_1snnq0w0d9().s[111]++;
        loggerService_1.logger.error('Error en búsqueda de usuarios:', error);
        /* istanbul ignore next */
        cov_1snnq0w0d9().s[112]++;
        throw new Error('Error al buscar usuarios');
      }
    });
  }
  /**
   * Búsqueda global en todas las colecciones
   */
  globalSearch(filters) {
    /* istanbul ignore next */
    cov_1snnq0w0d9().f[24]++;
    cov_1snnq0w0d9().s[113]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1snnq0w0d9().f[25]++;
      cov_1snnq0w0d9().s[114]++;
      try {
        const [eventsResult, requestsResult, usersResult] =
        /* istanbul ignore next */
        (cov_1snnq0w0d9().s[115]++, yield Promise.all([this.searchEvents(filters), this.searchMusicianRequests(filters), this.searchUsers(filters)]));
        /* istanbul ignore next */
        cov_1snnq0w0d9().s[116]++;
        return {
          events: eventsResult.data,
          requests: requestsResult.data,
          users: usersResult.data
        };
      } catch (error) {
        /* istanbul ignore next */
        cov_1snnq0w0d9().s[117]++;
        loggerService_1.logger.error('Error en búsqueda global:', error);
        /* istanbul ignore next */
        cov_1snnq0w0d9().s[118]++;
        throw new Error('Error al realizar búsqueda global');
      }
    });
  }
  /**
   * Búsqueda por proximidad geográfica
   */
  searchByLocation(location_1) {
    /* istanbul ignore next */
    cov_1snnq0w0d9().f[26]++;
    cov_1snnq0w0d9().s[119]++;
    return __awaiter(this, arguments, void 0, function* (location, radius =
    /* istanbul ignore next */
    (cov_1snnq0w0d9().b[55][0]++, 50)) {
      /* istanbul ignore next */
      cov_1snnq0w0d9().f[27]++;
      cov_1snnq0w0d9().s[120]++;
      try {
        // Implementación básica - en producción usar servicios de geolocalización
        const eventsResult =
        /* istanbul ignore next */
        (cov_1snnq0w0d9().s[121]++, yield this.searchEvents({
          location
        }));
        const requestsResult =
        /* istanbul ignore next */
        (cov_1snnq0w0d9().s[122]++, yield this.searchMusicianRequests({
          location
        }));
        /* istanbul ignore next */
        cov_1snnq0w0d9().s[123]++;
        return {
          events: eventsResult.data,
          requests: requestsResult.data
        };
      } catch (error) {
        /* istanbul ignore next */
        cov_1snnq0w0d9().s[124]++;
        loggerService_1.logger.error('Error en búsqueda por ubicación:', error);
        /* istanbul ignore next */
        cov_1snnq0w0d9().s[125]++;
        throw new Error('Error al buscar por ubicación');
      }
    });
  }
  /**
   * Búsqueda de eventos disponibles para músicos
   */
  searchAvailableEventsForMusician(musicianId, filters) {
    /* istanbul ignore next */
    cov_1snnq0w0d9().f[28]++;
    cov_1snnq0w0d9().s[126]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1snnq0w0d9().f[29]++;
      cov_1snnq0w0d9().s[127]++;
      try {
        const availableFilters =
        /* istanbul ignore next */
        (cov_1snnq0w0d9().s[128]++, Object.assign(Object.assign({}, filters), {
          status: 'pending_musician'
        }));
        const result =
        /* istanbul ignore next */
        (cov_1snnq0w0d9().s[129]++, yield this.searchEvents(availableFilters));
        // Filtrar eventos donde el músico no esté ya asignado o interesado
        const filteredEvents =
        /* istanbul ignore next */
        (cov_1snnq0w0d9().s[130]++, result.data.filter(event => {
          /* istanbul ignore next */
          cov_1snnq0w0d9().f[30]++;
          var _a;
          /* istanbul ignore next */
          cov_1snnq0w0d9().s[131]++;
          return /* istanbul ignore next */(cov_1snnq0w0d9().b[56][0]++, event.assignedMusicianId !== musicianId) &&
          /* istanbul ignore next */
          (cov_1snnq0w0d9().b[56][1]++, !(
          /* istanbul ignore next */
          (cov_1snnq0w0d9().b[58][0]++, (_a = event.interestedMusicians) === null) ||
          /* istanbul ignore next */
          (cov_1snnq0w0d9().b[58][1]++, _a === void 0) ?
          /* istanbul ignore next */
          (cov_1snnq0w0d9().b[57][0]++, void 0) :
          /* istanbul ignore next */
          (cov_1snnq0w0d9().b[57][1]++, _a.includes(musicianId))));
        }));
        /* istanbul ignore next */
        cov_1snnq0w0d9().s[132]++;
        return Object.assign(Object.assign({}, result), {
          data: filteredEvents,
          total: filteredEvents.length
        });
      } catch (error) {
        /* istanbul ignore next */
        cov_1snnq0w0d9().s[133]++;
        loggerService_1.logger.error('Error en búsqueda de eventos disponibles:', error);
        /* istanbul ignore next */
        cov_1snnq0w0d9().s[134]++;
        throw new Error('Error al buscar eventos disponibles');
      }
    });
  }
  /**
   * Búsqueda de músicos disponibles para un evento
   */
  searchAvailableMusiciansForEvent(eventId, filters) {
    /* istanbul ignore next */
    cov_1snnq0w0d9().f[31]++;
    cov_1snnq0w0d9().s[135]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1snnq0w0d9().f[32]++;
      cov_1snnq0w0d9().s[136]++;
      try {
        const musicianFilters =
        /* istanbul ignore next */
        (cov_1snnq0w0d9().s[137]++, Object.assign(Object.assign({}, filters), {
          userRole: 'musico'
        }));
        const result =
        /* istanbul ignore next */
        (cov_1snnq0w0d9().s[138]++, yield this.searchUsers(musicianFilters));
        // Aquí se podría implementar lógica adicional para filtrar músicos
        // que estén disponibles en la fecha del evento, tengan el instrumento requerido, etc.
        /* istanbul ignore next */
        cov_1snnq0w0d9().s[139]++;
        return result;
      } catch (error) {
        /* istanbul ignore next */
        cov_1snnq0w0d9().s[140]++;
        loggerService_1.logger.error('Error en búsqueda de músicos disponibles:', error);
        /* istanbul ignore next */
        cov_1snnq0w0d9().s[141]++;
        throw new Error('Error al buscar músicos disponibles');
      }
    });
  }
}
/* istanbul ignore next */
cov_1snnq0w0d9().s[142]++;
exports.SearchService = SearchService;
/* istanbul ignore next */
cov_1snnq0w0d9().s[143]++;
exports.searchService = new SearchService();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,