{"version":3,"names":["cov_1hzrf74vqw","actualCoverage","firebase_1","s","require","io","users","setSocketInstance","_io","_users","f","exports","createRequest","req","res","__awaiter","userId","eventType","date","startTime","endTime","location","instrument","budget","comments","body","newRequest","time","docRef","db","collection","add","Object","assign","status","createdAt","Date","updatedAt","b","emit","id","json","err","error","details","acceptRequest","requestId","musicianId","doc","get","exists","data","update","assignedMusicianId","musician","success","cancelRequest","getRequestStatus","params","getRequestById","updateRequest","updateData","message","deleteRequest","delete"],"sources":["C:\\src\\APP_MussikOn\\APP_MussikOn_Express\\src\\controllers\\musicianRequestController.ts"],"sourcesContent":["import { Request, Response } from 'express';\r\nimport { db } from '../utils/firebase';\r\nimport { MusicianRequest } from '../models/musicianRequestModel';\r\nimport { Server } from 'socket.io';\r\n\r\n// Asume que tienes acceso a la instancia de io y users (mapa de usuarios conectados)\r\nlet io: Server;\r\nlet users: Record<string, string>;\r\nexport const setSocketInstance = (\r\n  _io: Server,\r\n  _users: Record<string, string>\r\n) => {\r\n  io = _io;\r\n  users = _users;\r\n};\r\n\r\n// Crear solicitud de músico\r\nexport const createRequest = async (req: Request, res: Response) => {\r\n  try {\r\n    const {\r\n      userId,\r\n      eventType,\r\n      date,\r\n      startTime,\r\n      endTime,\r\n      location,\r\n      instrument,\r\n      budget,\r\n      comments,\r\n    } = req.body;\r\n    const newRequest: Omit<\r\n      MusicianRequest,\r\n      'id' | 'status' | 'createdAt' | 'updatedAt'\r\n    > = {\r\n      userId,\r\n      eventType,\r\n      date,\r\n      time: `${startTime} - ${endTime}`,\r\n      location,\r\n      instrument,\r\n      budget,\r\n      comments,\r\n    };\r\n    const docRef = await db.collection('musicianRequests').add({\r\n      ...newRequest,\r\n      status: 'pendiente',\r\n      createdAt: new Date(),\r\n      updatedAt: new Date(),\r\n    });\r\n    // Emitir evento socket a músicos conectados\r\n    if (io) io.emit('new_event_request', { id: docRef.id, ...newRequest });\r\n    res.status(201).json({ id: docRef.id, ...newRequest, status: 'pendiente' });\r\n  } catch (err) {\r\n    res.status(500).json({ error: 'Error al crear solicitud', details: err });\r\n  }\r\n};\r\n\r\n// Aceptar solicitud (solo el primero la toma)\r\nexport const acceptRequest = async (req: Request, res: Response) => {\r\n  try {\r\n    const { requestId, musicianId } = req.body;\r\n    const docRef = db.collection('musicianRequests').doc(requestId);\r\n    const doc = await docRef.get();\r\n    if (!doc.exists) {\r\n      res.status(404).json({ error: 'Solicitud no encontrada' });\r\n      return;\r\n    }\r\n    const data = doc.data() as MusicianRequest;\r\n    if (data.status !== 'pendiente') {\r\n      res.status(400).json({ error: 'Solicitud ya tomada o no disponible' });\r\n      return;\r\n    }\r\n    await docRef.update({\r\n      status: 'asignada',\r\n      assignedMusicianId: musicianId,\r\n      updatedAt: new Date(),\r\n    });\r\n    // Emitir evento a usuario y músicos\r\n    if (io) {\r\n      io.emit('musician_accepted', { requestId, musician: { id: musicianId } });\r\n      io.emit('musician_request_taken', { requestId });\r\n    }\r\n    res.json({ success: true });\r\n  } catch (err) {\r\n    res.status(500).json({ error: 'Error al aceptar solicitud', details: err });\r\n  }\r\n};\r\n\r\n// Cancelar solicitud\r\nexport const cancelRequest = async (req: Request, res: Response) => {\r\n  try {\r\n    const { requestId } = req.body;\r\n    const docRef = db.collection('musicianRequests').doc(requestId);\r\n    const doc = await docRef.get();\r\n    if (!doc.exists) {\r\n      res.status(404).json({ error: 'Solicitud no encontrada' });\r\n      return;\r\n    }\r\n    await docRef.update({ status: 'cancelada', updatedAt: new Date() });\r\n    if (io) io.emit('request_cancelled', { requestId });\r\n    res.json({ success: true });\r\n  } catch (err) {\r\n    res\r\n      .status(500)\r\n      .json({ error: 'Error al cancelar solicitud', details: err });\r\n  }\r\n};\r\n\r\n// Consultar estado de solicitud\r\nexport const getRequestStatus = async (req: Request, res: Response) => {\r\n  try {\r\n    const { id } = req.params;\r\n    const doc = await db.collection('musicianRequests').doc(id).get();\r\n    if (!doc.exists) {\r\n      res.status(404).json({ error: 'Solicitud no encontrada' });\r\n      return;\r\n    }\r\n    res.json(doc.data());\r\n  } catch (err) {\r\n    res.status(500).json({ error: 'Error al consultar estado', details: err });\r\n  }\r\n};\r\n\r\n// Obtener solicitud por ID\r\nexport const getRequestById = async (req: Request, res: Response) => {\r\n  try {\r\n    const { id } = req.params;\r\n    const doc = await db.collection('musicianRequests').doc(id).get();\r\n    if (!doc.exists) {\r\n      res.status(404).json({ error: 'Solicitud no encontrada' });\r\n      return;\r\n    }\r\n    res.status(200).json({ id: doc.id, ...doc.data() });\r\n  } catch (err) {\r\n    res.status(500).json({ error: 'Error al obtener solicitud', details: err });\r\n  }\r\n};\r\n\r\n// Actualizar solicitud\r\nexport const updateRequest = async (req: Request, res: Response) => {\r\n  try {\r\n    const { id } = req.params;\r\n    const updateData = req.body;\r\n    const docRef = db.collection('musicianRequests').doc(id);\r\n    const doc = await docRef.get();\r\n    if (!doc.exists) {\r\n      res.status(404).json({ error: 'Solicitud no encontrada' });\r\n      return;\r\n    }\r\n    await docRef.update({ ...updateData, updatedAt: new Date() });\r\n    res\r\n      .status(200)\r\n      .json({ success: true, message: 'Solicitud actualizada correctamente' });\r\n  } catch (err) {\r\n    res\r\n      .status(500)\r\n      .json({ error: 'Error al actualizar solicitud', details: err });\r\n  }\r\n};\r\n\r\n// Eliminar solicitud\r\nexport const deleteRequest = async (req: Request, res: Response) => {\r\n  try {\r\n    const { id } = req.params;\r\n    const docRef = db.collection('musicianRequests').doc(id);\r\n    const doc = await docRef.get();\r\n    if (!doc.exists) {\r\n      res.status(404).json({ error: 'Solicitud no encontrada' });\r\n      return;\r\n    }\r\n    await docRef.delete();\r\n    res\r\n      .status(200)\r\n      .json({ success: true, message: 'Solicitud eliminada correctamente' });\r\n  } catch (err) {\r\n    res\r\n      .status(500)\r\n      .json({ error: 'Error al eliminar solicitud', details: err });\r\n  }\r\n};\r\n"],"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","ignoreList":[]}